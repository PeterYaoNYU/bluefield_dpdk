/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/lib/x86_64-linux-gnu/ld-2.31.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .plt:
               :
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/lib/x86_64-linux-gnu/libbsd.so.0.10.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .init:
               :
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/lib/x86_64-linux-gnu/libc-2.31.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .plt:
               :
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/lib/x86_64-linux-gnu/libibverbs.so.1.14.44.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .init:
               :
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/lib/x86_64-linux-gnu/libmlx5.so.1.24.44.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .init:
               :
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/lib/x86_64-linux-gnu/libnl-3.so.200.26.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .init:
               :
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/lib/x86_64-linux-gnu/libpthread-2.31.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000000c8c0 <__pthread_mutex_cond_lock_full>: /* __pthread_mutex_cond_lock_full total:     42  0.0012 */
               :    c8c0:	push   %r15
               :    c8c2:	push   %r14
               :    c8c4:	push   %r13
               :    c8c6:	push   %r12
               :    c8c8:	push   %rbp
               :    c8c9:	mov    %rdi,%rbp
               :    c8cc:	push   %rbx
               :    c8cd:	sub    $0x28,%rsp
               :    c8d1:	mov    %fs:0x28,%rax
               :    c8da:	mov    %rax,0x18(%rsp)
               :    c8df:	xor    %eax,%eax
               :    c8e1:	mov    %fs:0x2d0,%r12d
               :    c8ea:	mov    0x10(%rdi),%edx
               :    c8ed:	lea    0x10(%rdi),%r13
               :    c8f1:	mov    %edx,%eax
               :    c8f3:	and    $0x7f,%eax
               :    c8f6:	cmp    $0x33,%eax
               :    c8f9:	jg     cae8 <__pthread_mutex_cond_lock_full+0x228>
               :    c8ff:	cmp    $0x2f,%eax
               :    c902:	jg     c9eb <__pthread_mutex_cond_lock_full+0x12b>
               :    c908:	cmp    $0x13,%eax
               :    c90b:	jg     c9e3 <__pthread_mutex_cond_lock_full+0x123>
               :    c911:	and    $0x70,%edx
               :    c914:	je     c9b7 <__pthread_mutex_cond_lock_full+0xf7>
               :    c91a:	lea    0x20(%rdi),%r8
               :    c91e:	mov    %r8,%fs:0x2f0
               :    c927:	mov    %r12d,%r9d
               :    c92a:	mov    (%rdi),%edx
               :    c92c:	mov    $0xca,%ebx
               :    c931:	or     $0x80000000,%r9d
               :    c938:	test   %edx,%edx
               :    c93a:	jne    cc8a <__pthread_mutex_cond_lock_full+0x3ca>
               :    c940:	mov    %edx,%eax
               :    c942:	lock cmpxchg %r9d,0x0(%rbp)
               :    c948:	mov    %eax,%edx
               :    c94a:	test   %eax,%eax
               :    c94c:	jne    cc8a <__pthread_mutex_cond_lock_full+0x3ca>
               :    c952:	cmpl   $0x7ffffffe,0x8(%rbp)
               :    c959:	je     cfa5 <__pthread_mutex_cond_lock_full+0x6e5>
               :    c95f:	movl   $0x1,0x4(%rbp)
               :    c966:	mov    %fs:0x2e0,%rax
               :    c96f:	and    $0xfffffffffffffffe,%rax
               :    c973:	mov    %r8,-0x8(%rax)
               :    c977:	mov    %fs:0x2e0,%rax
               :    c980:	mov    %rax,0x20(%rbp)
               :    c984:	mov    %fs:0x10,%rax
               :    c98d:	add    $0x2e0,%rax
               :    c993:	mov    %rax,0x18(%rbp)
               :    c997:	mov    %r8,%fs:0x2e0
               :    c9a0:	movq   $0x0,%fs:0x2f0
               :    c9ad:	mov    %r12d,0x8(%rbp)
               :    c9b1:	nop
               :    c9b2:	xor    %r15d,%r15d
               :    c9b5:	jmp    c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    c9b7:	mov    $0x16,%r15d
               :    c9bd:	mov    0x18(%rsp),%rax
               :    c9c2:	xor    %fs:0x28,%rax
               :    c9cb:	jne    cfd0 <__pthread_mutex_cond_lock_full+0x710>
               :    c9d1:	add    $0x28,%rsp
               :    c9d5:	mov    %r15d,%eax
               :    c9d8:	pop    %rbx
               :    c9d9:	pop    %rbp
               :    c9da:	pop    %r12
               :    c9dc:	pop    %r13
               :    c9de:	pop    %r14
               :    c9e0:	pop    %r15
               :    c9e2:	retq   
               :    c9e3:	sub    $0x20,%eax
               :    c9e6:	cmp    $0x3,%eax
               :    c9e9:	ja     c9b7 <__pthread_mutex_cond_lock_full+0xf7>
               :    c9eb:	mov    0x10(%rbp),%r8d
               :    c9ef:	mov    %r8d,%r9d
               :    c9f2:	and    $0x3,%r9d
               :    c9f6:	and    $0x10,%r8d
               :    c9fa:	jne    cc45 <__pthread_mutex_cond_lock_full+0x385>
               :    ca00:	mov    0x0(%rbp),%eax
               :    ca03:	and    $0x3fffffff,%eax
               :    ca08:	cmp    %eax,%r12d
               :    ca0b:	je     cdda <__pthread_mutex_cond_lock_full+0x51a>
               :    ca11:	mov    %r12d,%edx
               :    ca14:	xor    %eax,%eax
               :    ca16:	or     $0x80000000,%edx
               :    ca1c:	lock cmpxchg %edx,0x0(%rbp)
               :    ca21:	test   %eax,%eax
               :    ca23:	je     cbd7 <__pthread_mutex_cond_lock_full+0x317>
               :    ca29:	mov    $0x6,%esi
               :    ca2e:	mov    $0x80,%ebx
               :    ca33:	test   %r8d,%r8d
               :    ca36:	je     cd10 <__pthread_mutex_cond_lock_full+0x450>
               :    ca3c:	xor    %r10d,%r10d
               :    ca3f:	xor    %edx,%edx
               :    ca41:	mov    %rbp,%rdi
               :    ca44:	mov    $0xca,%eax
               :    ca49:	syscall 
               :    ca4b:	cmp    $0xfffffffffffff000,%rax
               :    ca51:	ja     ce4d <__pthread_mutex_cond_lock_full+0x58d>
               :    ca57:	mov    0x0(%rbp),%eax
               :    ca5a:	and    $0x40000000,%eax
               :    ca5f:	test   %r8d,%r8d
               :    ca62:	je     cce2 <__pthread_mutex_cond_lock_full+0x422>
               :    ca68:	test   %eax,%eax
               :    ca6a:	je     cbdc <__pthread_mutex_cond_lock_full+0x31c>
               :    ca70:	lock andl $0xbfffffff,0x0(%rbp)
               :    ca78:	movabs $0x7fffffff00000001,%rax
               :    ca82:	mov    %rax,0x4(%rbp)
               :    ca86:	mov    %fs:0x2e0,%rdx
               :    ca8f:	lea    0x20(%rbp),%rax
               :    ca93:	and    $0xfffffffffffffffe,%rdx
               :    ca97:	mov    %rax,-0x8(%rdx)
               :    ca9b:	mov    %fs:0x2e0,%rdx
               :    caa4:	mov    %rdx,0x20(%rbp)
               :    caa8:	mov    %fs:0x10,%rdx
               :    cab1:	add    $0x2e0,%rdx
               :    cab8:	mov    %rdx,0x18(%rbp)
               :    cabc:	or     $0x1,%rax
               :    cac0:	mov    %rax,%fs:0x2e0
               :    cac9:	movq   $0x0,%fs:0x2f0
               :    cad6:	mov    $0x82,%r15d
               :    cadc:	subl   $0x1,0xc(%rbp)
               :    cae0:	jmpq   c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    cae5:	nopl   (%rax)
               :    cae8:	sub    $0x40,%eax
               :    caeb:	cmp    $0x3,%eax
               :    caee:	ja     c9b7 <__pthread_mutex_cond_lock_full+0xf7>
               :    caf4:	mov    0x10(%rdi),%eax
               :    caf7:	mov    (%rdi),%esi
               :    caf9:	mov    $0xffffffff,%edi
               :    cafe:	cmp    0x8(%rbp),%r12d
               :    cb02:	je     cc5b <__pthread_mutex_cond_lock_full+0x39b>
               :    cb08:	mov    $0xca,%ebx
               :    cb0d:	shr    $0x13,%esi
               :    cb10:	mov    %edi,0xc(%rsp)
               :    cb14:	mov    %esi,%r14d
               :    cb17:	callq  15210 <__pthread_current_priority>
               :    cb1c:	mov    0xc(%rsp),%edi
               :    cb20:	cmp    %r14d,%eax
               :    cb23:	jg     ccc4 <__pthread_mutex_cond_lock_full+0x404>
               :    cb29:	mov    %r14d,%esi
               :    cb2c:	callq  14e00 <__pthread_tpp_change_priority>
               :    cb31:	mov    %eax,%r15d
               :    cb34:	test   %eax,%eax
               :    cb36:	jne    c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    cb3c:	mov    %r14d,%r8d
               :    cb3f:	shl    $0x13,%r8d
               :    cb43:	mov    %r8d,%edx
               :    cb46:	mov    %r8d,%eax
               :    cb49:	or     $0x2,%edx
               :    cb4c:	lock cmpxchg %edx,0x0(%rbp)
               :    cb51:	cmp    %eax,%r8d
               :    cb54:	je     cb9f <__pthread_mutex_cond_lock_full+0x2df>
               :    cb56:	mov    %r8d,%r9d
               :    cb59:	or     $0x1,%r9d
               :    cb5d:	nopl   (%rax)
               :    cb60:	mov    %r9d,%eax
               :    cb63:	lock cmpxchg %edx,0x0(%rbp)
               :    cb68:	mov    %eax,%ecx
               :    cb6a:	mov    %eax,%esi
               :    cb6c:	and    $0xfff80000,%ecx
               :    cb72:	cmp    %ecx,%r8d
               :    cb75:	jne    cbcf <__pthread_mutex_cond_lock_full+0x30f>
               :    cb77:	cmp    %eax,%r8d
               :    cb7a:	je     cbc0 <__pthread_mutex_cond_lock_full+0x300>
               :    cb7c:	mov    0x0(%r13),%esi
               :    cb80:	xor    %r10d,%r10d
               :    cb83:	mov    %rbp,%rdi
               :    cb86:	mov    %ebx,%eax
               :    cb88:	not    %esi
               :    cb8a:	and    $0x80,%esi
               :    cb90:	syscall 
               :    cb92:	mov    %r8d,%eax
               :    cb95:	lock cmpxchg %edx,0x0(%rbp)
               :    cb9a:	cmp    %r8d,%eax
               :    cb9d:	jne    cb60 <__pthread_mutex_cond_lock_full+0x2a0>
               :    cb9f:	mov    0x8(%rbp),%eax
               :    cba2:	test   %eax,%eax
               :    cba4:	jne    cf5b <__pthread_mutex_cond_lock_full+0x69b>
               :    cbaa:	movl   $0x1,0x4(%rbp)
               :    cbb1:	jmpq   c9ad <__pthread_mutex_cond_lock_full+0xed>
               :    cbb6:	nopw   %cs:0x0(%rax,%rax,1)
               :    cbc0:	mov    %r8d,%eax
               :    cbc3:	lock cmpxchg %edx,0x0(%rbp)
               :    cbc8:	cmp    %eax,%r8d
               :    cbcb:	jne    cb60 <__pthread_mutex_cond_lock_full+0x2a0>
               :    cbcd:	jmp    cb9f <__pthread_mutex_cond_lock_full+0x2df>
               :    cbcf:	mov    %r14d,%edi
               :    cbd2:	jmpq   cb0d <__pthread_mutex_cond_lock_full+0x24d>
               :    cbd7:	test   %r8d,%r8d
               :    cbda:	je     cbaa <__pthread_mutex_cond_lock_full+0x2ea>
               :    cbdc:	cmpl   $0x7ffffffe,0x8(%rbp)
               :    cbe3:	je     cf20 <__pthread_mutex_cond_lock_full+0x660>
               :    cbe9:	movl   $0x1,0x4(%rbp)
               :    cbf0:	mov    %fs:0x2e0,%rdx
               :    cbf9:	lea    0x20(%rbp),%rax
               :    cbfd:	and    $0xfffffffffffffffe,%rdx
               :    cc01:	mov    %rax,-0x8(%rdx)
               :    cc05:	mov    %fs:0x2e0,%rdx
               :    cc0e:	mov    %rdx,0x20(%rbp)
               :    cc12:	mov    %fs:0x10,%rdx
               :    cc1b:	add    $0x2e0,%rdx
               :    cc22:	mov    %rdx,0x18(%rbp)
               :    cc26:	or     $0x1,%rax
               :    cc2a:	mov    %rax,%fs:0x2e0
               :    cc33:	movq   $0x0,%fs:0x2f0
               :    cc40:	jmpq   c9ad <__pthread_mutex_cond_lock_full+0xed>
               :    cc45:	lea    0x20(%rbp),%rax
               :    cc49:	or     $0x1,%rax
               :    cc4d:	mov    %rax,%fs:0x2f0
               :    cc56:	jmpq   ca00 <__pthread_mutex_cond_lock_full+0x140>
               :    cc5b:	and    $0x3,%eax
               :    cc5e:	cmp    $0x2,%eax
               :    cc61:	je     ce26 <__pthread_mutex_cond_lock_full+0x566>
               :    cc67:	cmp    $0x1,%eax
               :    cc6a:	jne    cb08 <__pthread_mutex_cond_lock_full+0x248>
               :    cc70:	mov    0x4(%rbp),%eax
               :    cc73:	cmp    $0xffffffff,%eax
               :    cc76:	je     ce03 <__pthread_mutex_cond_lock_full+0x543>
               :    cc7c:	add    $0x1,%eax
               :    cc7f:	xor    %r15d,%r15d
               :    cc82:	mov    %eax,0x4(%rbp)
               :    cc85:	jmpq   c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    cc8a:	mov    %edx,%r15d
               :    cc8d:	mov    %edx,%eax
               :    cc8f:	and    $0x40000000,%r15d
               :    cc96:	jne    cd68 <__pthread_mutex_cond_lock_full+0x4a8>
               :    cc9c:	and    $0x3fffffff,%eax
               :    cca1:	cmp    %eax,%r12d
               :    cca4:	je     cd24 <__pthread_mutex_cond_lock_full+0x464>
               :    cca6:	test   %edx,%edx
               :    cca8:	jns    ce31 <__pthread_mutex_cond_lock_full+0x571>
    20 5.9e-04 :    ccae:	xor    %r10d,%r10d
               :    ccb1:	xor    %esi,%esi
               :    ccb3:	mov    %rbp,%rdi
               :    ccb6:	mov    %ebx,%eax
               :    ccb8:	syscall 
               :    ccba:	mov    0x0(%rbp),%eax
               :    ccbd:	mov    %eax,%edx
               :    ccbf:	jmpq   c938 <__pthread_mutex_cond_lock_full+0x78>
               :    ccc4:	mov    $0x16,%r15d
               :    ccca:	cmp    $0xffffffff,%edi
               :    cccd:	je     c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    ccd3:	mov    $0xffffffff,%esi
               :    ccd8:	callq  14e00 <__pthread_tpp_change_priority>
    11 3.3e-04 :    ccdd:	jmpq   c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    cce2:	test   %eax,%eax
               :    cce4:	je     cbaa <__pthread_mutex_cond_lock_full+0x2ea>
               :    ccea:	lea    0xb2df(%rip),%rcx        # 17fd0 <__PRETTY_FUNCTION__.10365>
               :    ccf1:	mov    $0x1b6,%edx
               :    ccf6:	lea    0xa8fd(%rip),%rsi        # 175fa <_thread_db_pthread_list+0x18a>
               :    ccfd:	lea    0xa88c(%rip),%rdi        # 17590 <_thread_db_pthread_list+0x120>
               :    cd04:	callq  6730 <__assert_fail@plt>
               :    cd09:	nopl   0x0(%rax)
               :    cd10:	mov    0x10(%rbp),%ebx
               :    cd13:	and    $0x80,%ebx
               :    cd19:	mov    %ebx,%esi
               :    cd1b:	xor    $0x86,%sil
    10 3.0e-04 :    cd1f:	jmpq   ca3c <__pthread_mutex_cond_lock_full+0x17c>
               :    cd24:	mov    0x0(%r13),%eax
               :    cd28:	and    $0x7f,%eax
               :    cd2b:	cmp    $0x12,%eax
               :    cd2e:	je     ce0e <__pthread_mutex_cond_lock_full+0x54e>
               :    cd34:	cmp    $0x11,%eax
     1 3.0e-05 :    cd37:	jne    cca6 <__pthread_mutex_cond_lock_full+0x3e6>
               :    cd3d:	movq   $0x0,%fs:0x2f0
               :    cd4a:	mov    0x4(%rbp),%eax
               :    cd4d:	cmp    $0xffffffff,%eax
               :    cd50:	je     ce03 <__pthread_mutex_cond_lock_full+0x543>
               :    cd56:	add    $0x1,%eax
               :    cd59:	mov    %eax,0x4(%rbp)
               :    cd5c:	jmpq   c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    cd61:	nopl   0x0(%rax)
               :    cd68:	lock cmpxchg %r9d,0x0(%rbp)
               :    cd6e:	cmp    %eax,%edx
               :    cd70:	jne    ccbd <__pthread_mutex_cond_lock_full+0x3fd>
               :    cd76:	movabs $0x7fffffff00000001,%rax
               :    cd80:	mov    %rax,0x4(%rbp)
               :    cd84:	mov    %fs:0x2e0,%rax
               :    cd8d:	and    $0xfffffffffffffffe,%rax
               :    cd91:	mov    %r8,-0x8(%rax)
               :    cd95:	mov    %fs:0x2e0,%rax
               :    cd9e:	mov    %rax,0x20(%rbp)
               :    cda2:	mov    %fs:0x10,%rax
               :    cdab:	add    $0x2e0,%rax
               :    cdb1:	mov    %rax,0x18(%rbp)
               :    cdb5:	mov    %r8,%fs:0x2e0
               :    cdbe:	movq   $0x0,%fs:0x2f0
               :    cdcb:	mov    $0x82,%r15d
               :    cdd1:	subl   $0x1,0xc(%rbp)
               :    cdd5:	jmpq   c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    cdda:	cmp    $0x2,%r9d
               :    cdde:	je     ce0e <__pthread_mutex_cond_lock_full+0x54e>
               :    cde0:	cmp    $0x1,%r9d
               :    cde4:	jne    ca11 <__pthread_mutex_cond_lock_full+0x151>
               :    cdea:	movq   $0x0,%fs:0x2f0
               :    cdf7:	mov    0x4(%rbp),%eax
               :    cdfa:	cmp    $0xffffffff,%eax
               :    cdfd:	jne    cc7c <__pthread_mutex_cond_lock_full+0x3bc>
               :    ce03:	mov    $0xb,%r15d
               :    ce09:	jmpq   c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    ce0e:	movq   $0x0,%fs:0x2f0
               :    ce1b:	mov    $0x23,%r15d
               :    ce21:	jmpq   c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    ce26:	mov    $0x23,%r15d
               :    ce2c:	jmpq   c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    ce31:	mov    %edx,%ecx
               :    ce33:	mov    %edx,%eax
               :    ce35:	or     $0x80000000,%ecx
               :    ce3b:	lock cmpxchg %ecx,0x0(%rbp)
               :    ce40:	jne    ccba <__pthread_mutex_cond_lock_full+0x3fa>
               :    ce46:	mov    %ecx,%edx
               :    ce48:	jmpq   ccae <__pthread_mutex_cond_lock_full+0x3ee>
               :    ce4d:	cmp    $0xffffff92,%eax
               :    ce50:	je     ca57 <__pthread_mutex_cond_lock_full+0x197>
               :    ce56:	lea    0x23(%rax),%edx
               :    ce59:	cmp    $0x23,%edx
               :    ce5c:	ja     cebb <__pthread_mutex_cond_lock_full+0x5fb>
               :    ce5e:	cmp    $0x20,%edx
               :    ce61:	ja     cebb <__pthread_mutex_cond_lock_full+0x5fb>
               :    ce63:	lea    0xb006(%rip),%rcx        # 17e70 <__PRETTY_FUNCTION__.8996+0xc0>
               :    ce6a:	movslq (%rcx,%rdx,4),%rdx
               :    ce6e:	add    %rcx,%rdx
               :    ce71:	notrack jmpq *%rdx
               :    ce74:	mov    %eax,%edx
               :    ce76:	and    $0xffffffdf,%edx
               :    ce79:	cmp    $0xffffffdd,%edx
               :    ce7c:	jne    ca57 <__pthread_mutex_cond_lock_full+0x197>
               :    ce82:	cmp    $0xffffffdd,%eax
               :    ce85:	jne    ced0 <__pthread_mutex_cond_lock_full+0x610>
               :    ce87:	sub    $0x1,%r9d
               :    ce8b:	cmp    $0x1,%r9d
               :    ce8f:	jbe    cef9 <__pthread_mutex_cond_lock_full+0x639>
               :    ce91:	lea    0x14(%rsp),%rbp
               :    ce96:	nopw   %cs:0x0(%rax,%rax,1)
               :    cea0:	mov    %ebx,%r8d
               :    cea3:	xor    %ecx,%ecx
               :    cea5:	xor    %edx,%edx
               :    cea7:	xor    %esi,%esi
               :    cea9:	mov    %rbp,%rdi
               :    ceac:	movl   $0x0,0x14(%rsp)
               :    ceb4:	callq  13180 <__lll_clocklock_wait>
               :    ceb9:	jmp    cea0 <__pthread_mutex_cond_lock_full+0x5e0>
               :    cebb:	lea    0xa13e(%rip),%rdi        # 17000 <_fini+0xac8>
               :    cec2:	callq  6630 <__libc_fatal@plt>
               :    cec7:	nopw   0x0(%rax,%rax,1)
               :    ced0:	cmp    $0xfffffffd,%eax
               :    ced3:	jne    ce91 <__pthread_mutex_cond_lock_full+0x5d1>
               :    ced5:	test   %r8d,%r8d
               :    ced8:	je     ce91 <__pthread_mutex_cond_lock_full+0x5d1>
               :    ceda:	lea    0xb0ef(%rip),%rcx        # 17fd0 <__PRETTY_FUNCTION__.10365>
               :    cee1:	mov    $0x1ac,%edx
               :    cee6:	lea    0xa70d(%rip),%rsi        # 175fa <_thread_db_pthread_list+0x18a>
               :    ceed:	lea    0xa723(%rip),%rdi        # 17617 <_thread_db_pthread_list+0x1a7>
               :    cef4:	callq  6730 <__assert_fail@plt>
               :    cef9:	lea    0xb0d0(%rip),%rcx        # 17fd0 <__PRETTY_FUNCTION__.10365>
               :    cf00:	mov    $0x1a7,%edx
               :    cf05:	lea    0xa6ee(%rip),%rsi        # 175fa <_thread_db_pthread_list+0x18a>
               :    cf0c:	lea    0xa61d(%rip),%rdi        # 17530 <_thread_db_pthread_list+0xc0>
               :    cf13:	callq  6730 <__assert_fail@plt>
               :    cf18:	nopl   0x0(%rax,%rax,1)
               :    cf20:	movl   $0x0,0x4(%rbp)
               :    cf27:	xor    %r10d,%r10d
               :    cf2a:	xor    %edx,%edx
               :    cf2c:	mov    %rbp,%rdi
               :    cf2f:	mov    $0x7,%esi
               :    cf34:	mov    $0xca,%eax
               :    cf39:	syscall 
               :    cf3b:	cmp    $0xfffffffffffff000,%rax
               :    cf41:	ja     cf7a <__pthread_mutex_cond_lock_full+0x6ba>
               :    cf43:	movq   $0x0,%fs:0x2f0
               :    cf50:	mov    $0x83,%r15d
               :    cf56:	jmpq   c9bd <__pthread_mutex_cond_lock_full+0xfd>
               :    cf5b:	lea    0xb06e(%rip),%rcx        # 17fd0 <__PRETTY_FUNCTION__.10365>
               :    cf62:	mov    $0x248,%edx
               :    cf67:	lea    0xa68c(%rip),%rsi        # 175fa <_thread_db_pthread_list+0x18a>
               :    cf6e:	lea    0xa6b8(%rip),%rdi        # 1762d <_thread_db_pthread_list+0x1bd>
               :    cf75:	callq  6730 <__assert_fail@plt>
               :    cf7a:	cmp    $0xffffff92,%eax
               :    cf7d:	je     cf43 <__pthread_mutex_cond_lock_full+0x683>
               :    cf7f:	add    $0x26,%eax
               :    cf82:	cmp    $0x26,%eax
               :    cf85:	ja     cebb <__pthread_mutex_cond_lock_full+0x5fb>
               :    cf8b:	cmp    $0x25,%eax
               :    cf8e:	ja     cebb <__pthread_mutex_cond_lock_full+0x5fb>
               :    cf94:	lea    0xaf59(%rip),%rdx        # 17ef4 <__PRETTY_FUNCTION__.8996+0x144>
               :    cf9b:	movslq (%rdx,%rax,4),%rax
               :    cf9f:	add    %rdx,%rax
               :    cfa2:	notrack jmpq *%rax
               :    cfa5:	movl   $0x0,0x4(%rbp)
               :    cfac:	xchg   %edx,0x0(%rbp)
               :    cfaf:	cmp    $0x1,%edx
               :    cfb2:	jle    cf43 <__pthread_mutex_cond_lock_full+0x683>
               :    cfb4:	xor    %r10d,%r10d
               :    cfb7:	mov    $0x1,%edx
               :    cfbc:	mov    $0x1,%esi
               :    cfc1:	mov    %rbp,%rdi
               :    cfc4:	mov    $0xca,%eax
               :    cfc9:	syscall 
               :    cfcb:	jmpq   cf43 <__pthread_mutex_cond_lock_full+0x683>
               :    cfd0:	callq  66d0 <__stack_chk_fail@plt>
               :    cfd5:	data16 nopw %cs:0x0(%rax,%rax,1)
               :
               :/usr/lib/x86_64-linux-gnu/libpthread-2.31.so:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000000a8a0 <__pthread_mutex_lock_full>: /* __pthread_mutex_lock_full total:      2 5.9e-05 */
               :    a8a0:	push   %r15
               :    a8a2:	push   %r14
               :    a8a4:	push   %r13
               :    a8a6:	push   %r12
               :    a8a8:	push   %rbp
               :    a8a9:	mov    %rdi,%rbp
               :    a8ac:	push   %rbx
               :    a8ad:	sub    $0x28,%rsp
               :    a8b1:	mov    %fs:0x28,%rax
               :    a8ba:	mov    %rax,0x18(%rsp)
               :    a8bf:	xor    %eax,%eax
               :    a8c1:	mov    %fs:0x2d0,%r12d
               :    a8ca:	mov    0x10(%rdi),%edx
               :    a8cd:	lea    0x10(%rdi),%r13
               :    a8d1:	mov    %edx,%eax
               :    a8d3:	and    $0x7f,%eax
     2 5.9e-05 :    a8d6:	cmp    $0x33,%eax
               :    a8d9:	jg     aac0 <__pthread_mutex_lock_full+0x220>
               :    a8df:	cmp    $0x2f,%eax
               :    a8e2:	jg     a9cc <__pthread_mutex_lock_full+0x12c>
               :    a8e8:	cmp    $0x13,%eax
               :    a8eb:	jg     a9c4 <__pthread_mutex_lock_full+0x124>
               :    a8f1:	and    $0x70,%edx
               :    a8f4:	je     a998 <__pthread_mutex_lock_full+0xf8>
               :    a8fa:	lea    0x20(%rdi),%r8
               :    a8fe:	mov    %r8,%fs:0x2f0
               :    a907:	mov    (%rdi),%edx
               :    a909:	xor    %ecx,%ecx
               :    a90b:	mov    $0xca,%r9d
               :    a911:	test   %edx,%edx
               :    a913:	jne    ac6a <__pthread_mutex_lock_full+0x3ca>
               :    a919:	mov    %r12d,%esi
               :    a91c:	mov    %edx,%eax
               :    a91e:	or     %ecx,%esi
               :    a920:	lock cmpxchg %esi,0x0(%rbp)
               :    a925:	mov    %eax,%edx
               :    a927:	test   %eax,%eax
               :    a929:	jne    ac6a <__pthread_mutex_lock_full+0x3ca>
               :    a92f:	cmpl   $0x7ffffffe,0x8(%rbp)
               :    a936:	je     af8d <__pthread_mutex_lock_full+0x6ed>
               :    a93c:	movl   $0x1,0x4(%rbp)
               :    a943:	mov    %fs:0x2e0,%rax
               :    a94c:	and    $0xfffffffffffffffe,%rax
               :    a950:	mov    %r8,-0x8(%rax)
               :    a954:	mov    %fs:0x2e0,%rax
               :    a95d:	mov    %rax,0x20(%rbp)
               :    a961:	mov    %fs:0x10,%rax
               :    a96a:	add    $0x2e0,%rax
               :    a970:	mov    %rax,0x18(%rbp)
               :    a974:	mov    %r8,%fs:0x2e0
               :    a97d:	movq   $0x0,%fs:0x2f0
               :    a98a:	addl   $0x1,0xc(%rbp)
               :    a98e:	mov    %r12d,0x8(%rbp)
               :    a992:	nop
               :    a993:	xor    %r15d,%r15d
               :    a996:	jmp    a99e <__pthread_mutex_lock_full+0xfe>
               :    a998:	mov    $0x16,%r15d
               :    a99e:	mov    0x18(%rsp),%rax
               :    a9a3:	xor    %fs:0x28,%rax
               :    a9ac:	jne    afb8 <__pthread_mutex_lock_full+0x718>
               :    a9b2:	add    $0x28,%rsp
               :    a9b6:	mov    %r15d,%eax
               :    a9b9:	pop    %rbx
               :    a9ba:	pop    %rbp
               :    a9bb:	pop    %r12
               :    a9bd:	pop    %r13
               :    a9bf:	pop    %r14
               :    a9c1:	pop    %r15
               :    a9c3:	retq   
               :    a9c4:	sub    $0x20,%eax
               :    a9c7:	cmp    $0x3,%eax
               :    a9ca:	ja     a998 <__pthread_mutex_lock_full+0xf8>
               :    a9cc:	mov    0x10(%rbp),%r8d
               :    a9d0:	mov    %r8d,%r9d
               :    a9d3:	and    $0x3,%r9d
               :    a9d7:	and    $0x10,%r8d
               :    a9db:	jne    ac25 <__pthread_mutex_lock_full+0x385>
               :    a9e1:	mov    0x0(%rbp),%eax
               :    a9e4:	and    $0x3fffffff,%eax
               :    a9e9:	cmp    %eax,%r12d
               :    a9ec:	je     adc6 <__pthread_mutex_lock_full+0x526>
               :    a9f2:	xor    %eax,%eax
               :    a9f4:	lock cmpxchg %r12d,0x0(%rbp)
               :    a9fa:	test   %eax,%eax
               :    a9fc:	je     abb7 <__pthread_mutex_lock_full+0x317>
               :    aa02:	mov    $0x6,%esi
               :    aa07:	mov    $0x80,%ebx
               :    aa0c:	test   %r8d,%r8d
               :    aa0f:	je     acf0 <__pthread_mutex_lock_full+0x450>
               :    aa15:	xor    %r10d,%r10d
               :    aa18:	xor    %edx,%edx
               :    aa1a:	mov    %rbp,%rdi
               :    aa1d:	mov    $0xca,%eax
               :    aa22:	syscall 
               :    aa24:	cmp    $0xfffffffffffff000,%rax
               :    aa2a:	ja     ae39 <__pthread_mutex_lock_full+0x599>
               :    aa30:	mov    0x0(%rbp),%eax
               :    aa33:	and    $0x40000000,%eax
               :    aa38:	test   %r8d,%r8d
               :    aa3b:	je     acc8 <__pthread_mutex_lock_full+0x428>
               :    aa41:	test   %eax,%eax
               :    aa43:	je     abbc <__pthread_mutex_lock_full+0x31c>
               :    aa49:	lock andl $0xbfffffff,0x0(%rbp)
               :    aa51:	movabs $0x7fffffff00000001,%rax
               :    aa5b:	mov    %rax,0x4(%rbp)
               :    aa5f:	mov    %fs:0x2e0,%rdx
               :    aa68:	lea    0x20(%rbp),%rax
               :    aa6c:	and    $0xfffffffffffffffe,%rdx
               :    aa70:	mov    %rax,-0x8(%rdx)
               :    aa74:	mov    %fs:0x2e0,%rdx
               :    aa7d:	mov    %rdx,0x20(%rbp)
               :    aa81:	mov    %fs:0x10,%rdx
               :    aa8a:	add    $0x2e0,%rdx
               :    aa91:	mov    %rdx,0x18(%rbp)
               :    aa95:	or     $0x1,%rax
               :    aa99:	mov    %rax,%fs:0x2e0
               :    aaa2:	movq   $0x0,%fs:0x2f0
               :    aaaf:	mov    $0x82,%r15d
               :    aab5:	jmpq   a99e <__pthread_mutex_lock_full+0xfe>
               :    aaba:	nopw   0x0(%rax,%rax,1)
               :    aac0:	sub    $0x40,%eax
               :    aac3:	cmp    $0x3,%eax
               :    aac6:	ja     a998 <__pthread_mutex_lock_full+0xf8>
               :    aacc:	mov    0x10(%rdi),%eax
               :    aacf:	mov    (%rdi),%esi
               :    aad1:	mov    $0xffffffff,%edi
               :    aad6:	cmp    0x8(%rbp),%r12d
               :    aada:	je     ac3b <__pthread_mutex_lock_full+0x39b>
               :    aae0:	mov    $0xca,%ebx
               :    aae5:	shr    $0x13,%esi
               :    aae8:	mov    %edi,0xc(%rsp)
               :    aaec:	mov    %esi,%r14d
               :    aaef:	callq  15210 <__pthread_current_priority>
               :    aaf4:	mov    0xc(%rsp),%edi
               :    aaf8:	cmp    %r14d,%eax
               :    aafb:	jg     acaa <__pthread_mutex_lock_full+0x40a>
               :    ab01:	mov    %r14d,%esi
               :    ab04:	callq  14e00 <__pthread_tpp_change_priority>
               :    ab09:	mov    %eax,%r15d
               :    ab0c:	test   %eax,%eax
               :    ab0e:	jne    a99e <__pthread_mutex_lock_full+0xfe>
               :    ab14:	mov    %r14d,%r8d
               :    ab17:	shl    $0x13,%r8d
               :    ab1b:	mov    %r8d,%r9d
               :    ab1e:	mov    %r8d,%eax
               :    ab21:	or     $0x1,%r9d
               :    ab25:	lock cmpxchg %r9d,0x0(%rbp)
               :    ab2b:	cmp    %eax,%r8d
               :    ab2e:	je     ab7f <__pthread_mutex_lock_full+0x2df>
               :    ab30:	mov    %r8d,%edx
               :    ab33:	or     $0x2,%edx
               :    ab36:	nopw   %cs:0x0(%rax,%rax,1)
               :    ab40:	mov    %r9d,%eax
               :    ab43:	lock cmpxchg %edx,0x0(%rbp)
               :    ab48:	mov    %eax,%ecx
               :    ab4a:	mov    %eax,%esi
               :    ab4c:	and    $0xfff80000,%ecx
               :    ab52:	cmp    %ecx,%r8d
               :    ab55:	jne    abaf <__pthread_mutex_lock_full+0x30f>
               :    ab57:	cmp    %eax,%r8d
               :    ab5a:	je     aba0 <__pthread_mutex_lock_full+0x300>
               :    ab5c:	mov    0x0(%r13),%esi
               :    ab60:	xor    %r10d,%r10d
               :    ab63:	mov    %rbp,%rdi
               :    ab66:	mov    %ebx,%eax
               :    ab68:	not    %esi
               :    ab6a:	and    $0x80,%esi
               :    ab70:	syscall 
               :    ab72:	mov    %r8d,%eax
               :    ab75:	lock cmpxchg %edx,0x0(%rbp)
               :    ab7a:	cmp    %r8d,%eax
               :    ab7d:	jne    ab40 <__pthread_mutex_lock_full+0x2a0>
               :    ab7f:	mov    0x8(%rbp),%eax
               :    ab82:	test   %eax,%eax
               :    ab84:	jne    af43 <__pthread_mutex_lock_full+0x6a3>
               :    ab8a:	movl   $0x1,0x4(%rbp)
               :    ab91:	jmpq   a98a <__pthread_mutex_lock_full+0xea>
               :    ab96:	nopw   %cs:0x0(%rax,%rax,1)
               :    aba0:	mov    %r8d,%eax
               :    aba3:	lock cmpxchg %edx,0x0(%rbp)
               :    aba8:	cmp    %eax,%r8d
               :    abab:	jne    ab40 <__pthread_mutex_lock_full+0x2a0>
               :    abad:	jmp    ab7f <__pthread_mutex_lock_full+0x2df>
               :    abaf:	mov    %r14d,%edi
               :    abb2:	jmpq   aae5 <__pthread_mutex_lock_full+0x245>
               :    abb7:	test   %r8d,%r8d
               :    abba:	je     ab8a <__pthread_mutex_lock_full+0x2ea>
               :    abbc:	cmpl   $0x7ffffffe,0x8(%rbp)
               :    abc3:	je     af08 <__pthread_mutex_lock_full+0x668>
               :    abc9:	movl   $0x1,0x4(%rbp)
               :    abd0:	mov    %fs:0x2e0,%rdx
               :    abd9:	lea    0x20(%rbp),%rax
               :    abdd:	and    $0xfffffffffffffffe,%rdx
               :    abe1:	mov    %rax,-0x8(%rdx)
               :    abe5:	mov    %fs:0x2e0,%rdx
               :    abee:	mov    %rdx,0x20(%rbp)
               :    abf2:	mov    %fs:0x10,%rdx
               :    abfb:	add    $0x2e0,%rdx
               :    ac02:	mov    %rdx,0x18(%rbp)
               :    ac06:	or     $0x1,%rax
               :    ac0a:	mov    %rax,%fs:0x2e0
               :    ac13:	movq   $0x0,%fs:0x2f0
               :    ac20:	jmpq   a98a <__pthread_mutex_lock_full+0xea>
               :    ac25:	lea    0x20(%rbp),%rax
               :    ac29:	or     $0x1,%rax
               :    ac2d:	mov    %rax,%fs:0x2f0
               :    ac36:	jmpq   a9e1 <__pthread_mutex_lock_full+0x141>
               :    ac3b:	and    $0x3,%eax
               :    ac3e:	cmp    $0x2,%eax
               :    ac41:	je     ae12 <__pthread_mutex_lock_full+0x572>
               :    ac47:	cmp    $0x1,%eax
               :    ac4a:	jne    aae0 <__pthread_mutex_lock_full+0x240>
               :    ac50:	mov    0x4(%rbp),%eax
               :    ac53:	cmp    $0xffffffff,%eax
               :    ac56:	je     adef <__pthread_mutex_lock_full+0x54f>
               :    ac5c:	add    $0x1,%eax
               :    ac5f:	xor    %r15d,%r15d
               :    ac62:	mov    %eax,0x4(%rbp)
               :    ac65:	jmpq   a99e <__pthread_mutex_lock_full+0xfe>
               :    ac6a:	mov    %edx,%r15d
               :    ac6d:	and    $0x40000000,%r15d
               :    ac74:	jne    ad48 <__pthread_mutex_lock_full+0x4a8>
               :    ac7a:	mov    %edx,%eax
               :    ac7c:	and    $0x3fffffff,%eax
               :    ac81:	cmp    %eax,%r12d
               :    ac84:	je     ad04 <__pthread_mutex_lock_full+0x464>
               :    ac86:	test   %edx,%edx
               :    ac88:	jns    ae1d <__pthread_mutex_lock_full+0x57d>
               :    ac8e:	xor    %r10d,%r10d
               :    ac91:	xor    %esi,%esi
               :    ac93:	mov    %rbp,%rdi
               :    ac96:	mov    %r9d,%eax
               :    ac99:	syscall 
               :    ac9b:	mov    0x0(%rbp),%eax
               :    ac9e:	mov    $0x80000000,%ecx
               :    aca3:	mov    %eax,%edx
               :    aca5:	jmpq   a911 <__pthread_mutex_lock_full+0x71>
               :    acaa:	mov    $0x16,%r15d
               :    acb0:	cmp    $0xffffffff,%edi
               :    acb3:	je     a99e <__pthread_mutex_lock_full+0xfe>
               :    acb9:	mov    $0xffffffff,%esi
               :    acbe:	callq  14e00 <__pthread_tpp_change_priority>
               :    acc3:	jmpq   a99e <__pthread_mutex_lock_full+0xfe>
               :    acc8:	test   %eax,%eax
               :    acca:	je     ab8a <__pthread_mutex_lock_full+0x2ea>
               :    acd0:	lea    0xca99(%rip),%rcx        # 17770 <__PRETTY_FUNCTION__.10367>
               :    acd7:	mov    $0x1b6,%edx
               :    acdc:	lea    0xc917(%rip),%rsi        # 175fa <_thread_db_pthread_list+0x18a>
               :    ace3:	lea    0xc8a6(%rip),%rdi        # 17590 <_thread_db_pthread_list+0x120>
               :    acea:	callq  6730 <__assert_fail@plt>
               :    acef:	nop
               :    acf0:	mov    0x10(%rbp),%ebx
               :    acf3:	and    $0x80,%ebx
               :    acf9:	mov    %ebx,%esi
               :    acfb:	xor    $0x86,%sil
               :    acff:	jmpq   aa15 <__pthread_mutex_lock_full+0x175>
               :    ad04:	mov    0x0(%r13),%eax
               :    ad08:	and    $0x7f,%eax
               :    ad0b:	cmp    $0x12,%eax
               :    ad0e:	je     adfa <__pthread_mutex_lock_full+0x55a>
               :    ad14:	cmp    $0x11,%eax
               :    ad17:	jne    ac86 <__pthread_mutex_lock_full+0x3e6>
               :    ad1d:	movq   $0x0,%fs:0x2f0
               :    ad2a:	mov    0x4(%rbp),%eax
               :    ad2d:	cmp    $0xffffffff,%eax
               :    ad30:	je     adef <__pthread_mutex_lock_full+0x54f>
               :    ad36:	add    $0x1,%eax
               :    ad39:	mov    %eax,0x4(%rbp)
               :    ad3c:	jmpq   a99e <__pthread_mutex_lock_full+0xfe>
               :    ad41:	nopl   0x0(%rax)
               :    ad48:	mov    %edx,%esi
               :    ad4a:	mov    %r12d,%eax
               :    ad4d:	or     %ecx,%eax
               :    ad4f:	and    $0x80000000,%esi
               :    ad55:	or     %eax,%esi
               :    ad57:	mov    %edx,%eax
               :    ad59:	lock cmpxchg %esi,0x0(%rbp)
               :    ad5e:	cmp    %eax,%edx
               :    ad60:	jne    aca3 <__pthread_mutex_lock_full+0x403>
               :    ad66:	movabs $0x7fffffff00000001,%rax
               :    ad70:	mov    %rax,0x4(%rbp)
               :    ad74:	mov    %fs:0x2e0,%rax
               :    ad7d:	and    $0xfffffffffffffffe,%rax
               :    ad81:	mov    %r8,-0x8(%rax)
               :    ad85:	mov    %fs:0x2e0,%rax
               :    ad8e:	mov    %rax,0x20(%rbp)
               :    ad92:	mov    %fs:0x10,%rax
               :    ad9b:	add    $0x2e0,%rax
               :    ada1:	mov    %rax,0x18(%rbp)
               :    ada5:	mov    %r8,%fs:0x2e0
               :    adae:	movq   $0x0,%fs:0x2f0
               :    adbb:	mov    $0x82,%r15d
               :    adc1:	jmpq   a99e <__pthread_mutex_lock_full+0xfe>
               :    adc6:	cmp    $0x2,%r9d
               :    adca:	je     adfa <__pthread_mutex_lock_full+0x55a>
               :    adcc:	cmp    $0x1,%r9d
               :    add0:	jne    a9f2 <__pthread_mutex_lock_full+0x152>
               :    add6:	movq   $0x0,%fs:0x2f0
               :    ade3:	mov    0x4(%rbp),%eax
               :    ade6:	cmp    $0xffffffff,%eax
               :    ade9:	jne    ac5c <__pthread_mutex_lock_full+0x3bc>
               :    adef:	mov    $0xb,%r15d
               :    adf5:	jmpq   a99e <__pthread_mutex_lock_full+0xfe>
               :    adfa:	movq   $0x0,%fs:0x2f0
               :    ae07:	mov    $0x23,%r15d
               :    ae0d:	jmpq   a99e <__pthread_mutex_lock_full+0xfe>
               :    ae12:	mov    $0x23,%r15d
               :    ae18:	jmpq   a99e <__pthread_mutex_lock_full+0xfe>
               :    ae1d:	mov    %edx,%esi
               :    ae1f:	mov    %edx,%eax
               :    ae21:	or     $0x80000000,%esi
               :    ae27:	lock cmpxchg %esi,0x0(%rbp)
               :    ae2c:	jne    aed9 <__pthread_mutex_lock_full+0x639>
               :    ae32:	mov    %esi,%edx
               :    ae34:	jmpq   ac8e <__pthread_mutex_lock_full+0x3ee>
               :    ae39:	cmp    $0xffffff92,%eax
               :    ae3c:	je     aa30 <__pthread_mutex_lock_full+0x190>
               :    ae42:	lea    0x23(%rax),%edx
               :    ae45:	cmp    $0x23,%edx
               :    ae48:	ja     aea3 <__pthread_mutex_lock_full+0x603>
               :    ae4a:	cmp    $0x20,%edx
               :    ae4d:	ja     aea3 <__pthread_mutex_lock_full+0x603>
               :    ae4f:	lea    0xc7f2(%rip),%rcx        # 17648 <_thread_db_pthread_list+0x1d8>
               :    ae56:	movslq (%rcx,%rdx,4),%rdx
               :    ae5a:	add    %rcx,%rdx
               :    ae5d:	notrack jmpq *%rdx
               :    ae60:	mov    %eax,%edx
               :    ae62:	and    $0xffffffdf,%edx
               :    ae65:	cmp    $0xffffffdd,%edx
               :    ae68:	jne    aa30 <__pthread_mutex_lock_full+0x190>
               :    ae6e:	cmp    $0xffffffdd,%eax
               :    ae71:	jne    aeb0 <__pthread_mutex_lock_full+0x610>
               :    ae73:	sub    $0x1,%r9d
               :    ae77:	cmp    $0x1,%r9d
               :    ae7b:	jbe    aee3 <__pthread_mutex_lock_full+0x643>
               :    ae7d:	lea    0x14(%rsp),%rbp
               :    ae82:	nopw   0x0(%rax,%rax,1)
               :    ae88:	mov    %ebx,%r8d
               :    ae8b:	xor    %ecx,%ecx
               :    ae8d:	xor    %edx,%edx
               :    ae8f:	xor    %esi,%esi
               :    ae91:	mov    %rbp,%rdi
               :    ae94:	movl   $0x0,0x14(%rsp)
               :    ae9c:	callq  13180 <__lll_clocklock_wait>
               :    aea1:	jmp    ae88 <__pthread_mutex_lock_full+0x5e8>
               :    aea3:	lea    0xc156(%rip),%rdi        # 17000 <_fini+0xac8>
               :    aeaa:	callq  6630 <__libc_fatal@plt>
               :    aeaf:	nop
               :    aeb0:	cmp    $0xfffffffd,%eax
               :    aeb3:	jne    ae7d <__pthread_mutex_lock_full+0x5dd>
               :    aeb5:	test   %r8d,%r8d
               :    aeb8:	je     ae7d <__pthread_mutex_lock_full+0x5dd>
               :    aeba:	lea    0xc8af(%rip),%rcx        # 17770 <__PRETTY_FUNCTION__.10367>
               :    aec1:	mov    $0x1ac,%edx
               :    aec6:	lea    0xc72d(%rip),%rsi        # 175fa <_thread_db_pthread_list+0x18a>
               :    aecd:	lea    0xc743(%rip),%rdi        # 17617 <_thread_db_pthread_list+0x1a7>
               :    aed4:	callq  6730 <__assert_fail@plt>
               :    aed9:	mov    0x0(%rbp),%eax
               :    aedc:	mov    %eax,%edx
               :    aede:	jmpq   a911 <__pthread_mutex_lock_full+0x71>
               :    aee3:	lea    0xc886(%rip),%rcx        # 17770 <__PRETTY_FUNCTION__.10367>
               :    aeea:	mov    $0x1a7,%edx
               :    aeef:	lea    0xc704(%rip),%rsi        # 175fa <_thread_db_pthread_list+0x18a>
               :    aef6:	lea    0xc633(%rip),%rdi        # 17530 <_thread_db_pthread_list+0xc0>
               :    aefd:	callq  6730 <__assert_fail@plt>
               :    af02:	nopw   0x0(%rax,%rax,1)
               :    af08:	movl   $0x0,0x4(%rbp)
               :    af0f:	xor    %r10d,%r10d
               :    af12:	xor    %edx,%edx
               :    af14:	mov    %rbp,%rdi
               :    af17:	mov    $0x7,%esi
               :    af1c:	mov    $0xca,%eax
               :    af21:	syscall 
               :    af23:	cmp    $0xfffffffffffff000,%rax
               :    af29:	ja     af62 <__pthread_mutex_lock_full+0x6c2>
               :    af2b:	movq   $0x0,%fs:0x2f0
               :    af38:	mov    $0x83,%r15d
               :    af3e:	jmpq   a99e <__pthread_mutex_lock_full+0xfe>
               :    af43:	lea    0xc826(%rip),%rcx        # 17770 <__PRETTY_FUNCTION__.10367>
               :    af4a:	mov    $0x248,%edx
               :    af4f:	lea    0xc6a4(%rip),%rsi        # 175fa <_thread_db_pthread_list+0x18a>
               :    af56:	lea    0xc6d0(%rip),%rdi        # 1762d <_thread_db_pthread_list+0x1bd>
               :    af5d:	callq  6730 <__assert_fail@plt>
               :    af62:	cmp    $0xffffff92,%eax
               :    af65:	je     af2b <__pthread_mutex_lock_full+0x68b>
               :    af67:	add    $0x26,%eax
               :    af6a:	cmp    $0x26,%eax
               :    af6d:	ja     aea3 <__pthread_mutex_lock_full+0x603>
               :    af73:	cmp    $0x25,%eax
               :    af76:	ja     aea3 <__pthread_mutex_lock_full+0x603>
               :    af7c:	lea    0xc749(%rip),%rdx        # 176cc <_thread_db_pthread_list+0x25c>
               :    af83:	movslq (%rdx,%rax,4),%rax
               :    af87:	add    %rdx,%rax
               :    af8a:	notrack jmpq *%rax
               :    af8d:	movl   $0x0,0x4(%rbp)
               :    af94:	xchg   %edx,0x0(%rbp)
               :    af97:	cmp    $0x1,%edx
               :    af9a:	jle    af2b <__pthread_mutex_lock_full+0x68b>
               :    af9c:	xor    %r10d,%r10d
               :    af9f:	mov    $0x1,%edx
               :    afa4:	mov    $0x1,%esi
               :    afa9:	mov    %rbp,%rdi
               :    afac:	mov    $0xca,%eax
               :    afb1:	syscall 
               :    afb3:	jmpq   af2b <__pthread_mutex_lock_full+0x68b>
               :    afb8:	callq  66d0 <__stack_chk_fail@plt>
               :    afbd:	nopl   (%rax)
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_bus_dpaa.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000000e660 <qman_portal_dequeue>: /* qman_portal_dequeue total:      1 3.0e-05 */
               :    e660:	endbr64 
               :    e664:	push   %r15
               :    e666:	push   %r14
               :    e668:	movabs $0xff00000000,%r14
               :    e672:	push   %r13
               :    e674:	push   %r12
               :    e676:	xor    %r12d,%r12d
               :    e679:	push   %rbp
               :    e67a:	mov    %rdi,%rbp
               :    e67d:	push   %rbx
               :    e67e:	mov    %rdx,%rbx
               :    e681:	sub    $0x18,%rsp
               :    e685:	mov    %esi,0xc(%rsp)
               :    e689:	lea    0xb4e0(%rip),%rdi        # 19b70 <.got>
               :    e690:	callq  4710 <__tls_get_addr@plt>
               :    e695:	movzbl 0x83a(%rax),%r15d
               :    e69d:	lea    0xb4cc(%rip),%rdi        # 19b70 <.got>
               :    e6a4:	callq  4710 <__tls_get_addr@plt>
               :    e6a9:	movzbl 0x838(%rax),%ecx
     1 3.0e-05 :    e6b0:	mov    %rcx,%rdx
               :    e6b3:	shl    $0x6,%rdx
               :    e6b7:	and    $0x3fc0,%edx
               :    e6bd:	add    0x828(%rax),%rdx
               :    e6c4:	movzbl (%rdx),%edx
               :    e6c7:	add    $0x800,%rax
               :    e6cd:	and    $0xffffff80,%edx
               :    e6d0:	cmp    0x3c(%rax),%dl
               :    e6d3:	je     e878 <qman_portal_dequeue+0x218>
               :    e6d9:	test   %r15b,%r15b
               :    e6dc:	je     e863 <qman_portal_dequeue+0x203>
               :    e6e2:	lea    0xb487(%rip),%rdi        # 19b70 <.got>
               :    e6e9:	callq  4710 <__tls_get_addr@plt>
               :    e6ee:	lea    0x800(%rax),%r13
               :    e6f5:	mov    0x30(%r13),%rdx
               :    e6f9:	test   %rdx,%rdx
               :    e6fc:	je     e863 <qman_portal_dequeue+0x203>
               :    e702:	mov    %rdx,%rax
               :    e705:	shr    $0x6,%rax
               :    e709:	mov    %rax,%r15
               :    e70c:	and    $0xf,%r15d
               :    e710:	add    $0x10,%r15
               :    e714:	vmovdqu64 (%rdx),%xmm0
               :    e71a:	shl    $0x6,%r15
               :    e71e:	add    %r13,%r15
               :    e721:	vmovaps %xmm0,(%r15)
               :    e726:	vmovdqu64 0x10(%rdx),%xmm1
               :    e72d:	vmovaps %xmm1,0x10(%r15)
               :    e733:	vmovdqu64 0x20(%rdx),%xmm2
               :    e73a:	vmovaps %xmm2,0x20(%r15)
               :    e740:	vmovdqu64 0x30(%rdx),%xmm3
               :    e747:	mov    0x8(%r15),%edx
               :    e74b:	vmovaps %xmm3,0x30(%r15)
               :    e751:	bswap  %edx
               :    e753:	mov    %edx,0x8(%r15)
               :    e757:	movzwl 0x2(%r15),%edx
               :    e75c:	xchg   %dl,%dh
               :    e75e:	mov    0x10(%r15),%rcx
               :    e762:	mov    %dx,0x2(%r15)
               :    e767:	mov    %rcx,%rdi
               :    e76a:	shr    $0x18,%rdi
               :    e76e:	mov    %rdi,%rdx
               :    e771:	mov    %rcx,%r8
               :    e774:	shr    $0x38,%r8
               :    e778:	and    $0xff0000,%edx
               :    e77e:	or     %r8,%rdx
               :    e781:	mov    %rdi,%r8
               :    e784:	shl    $0x20,%r8
               :    e788:	and    %r14,%r8
               :    e78b:	shl    $0x10,%rdi
               :    e78f:	and    $0xff000000,%edi
               :    e795:	or     %r8,%rdx
               :    e798:	or     %rdi,%rdx
               :    e79b:	mov    %rcx,%rdi
               :    e79e:	shr    $0x28,%rdi
               :    e7a2:	and    $0xff00,%edi
               :    e7a8:	or     %rdi,%rdx
               :    e7ab:	shl    $0x18,%rdx
               :    e7af:	and    $0xffffff,%ecx
               :    e7b5:	or     %rcx,%rdx
               :    e7b8:	mov    %rdx,0x10(%r15)
               :    e7bc:	mov    0x1c(%r15),%edx
               :    e7c0:	bswap  %edx
               :    e7c2:	mov    %edx,0x1c(%r15)
               :    e7c6:	mov    0x18(%r15),%edx
               :    e7ca:	bswap  %edx
               :    e7cc:	mov    0x10c3d(%rip),%rax        # 1f410 <qman_fq_lookup_table>
               :    e7d3:	mov    %edx,0x18(%r15)
               :    e7d7:	mov    0xc(%r15),%edx
               :    e7db:	mov    %rbx,%r8
               :    e7de:	mov    (%rax,%rdx,8),%rax
               :    e7e2:	mov    %r15,%rcx
               :    e7e5:	mov    %rax,%rdx
               :    e7e8:	mov    %r13,%rsi
               :    e7eb:	mov    %rbp,%rdi
               :    e7ee:	callq  *(%rax)
               :    e7f0:	inc    %r12d
               :    e7f3:	cmp    $0x2,%eax
               :    e7f6:	je     e81d <qman_portal_dequeue+0x1bd>
               :    e7f8:	shr    $0x6,%r15
               :    e7fc:	cmp    $0x1,%eax
               :    e7ff:	sete   %al
               :    e802:	movzbl %al,%eax
               :    e805:	shl    $0x6,%eax
               :    e808:	and    $0xf,%r15d
               :    e80c:	or     %eax,%r15d
               :    e80f:	bswap  %r15d
               :    e812:	mov    0x8(%r13),%rax
               :    e816:	mov    %r15d,0x31c0(%rax)
               :    e81d:	lea    0xb34c(%rip),%rdi        # 19b70 <.got>
               :    e824:	callq  4710 <__tls_get_addr@plt>
               :    e829:	add    $0x10,%rbp
               :    e82d:	add    $0x8,%rbx
               :    e831:	mov    0x830(%rax),%rsi
               :    e838:	lea    0x40(%rsi),%rdx
               :    e83c:	movzbl 0x83a(%rax),%esi
               :    e843:	and    $0xfb,%dh
               :    e846:	lea    -0x1(%rsi),%r15d
               :    e84a:	mov    %rdx,0x830(%rax)
               :    e851:	mov    %r15b,0x83a(%rax)
               :    e858:	cmp    0xc(%rsp),%r12d
               :    e85d:	jb     e69d <qman_portal_dequeue+0x3d>
               :    e863:	add    $0x18,%rsp
               :    e867:	pop    %rbx
               :    e868:	pop    %rbp
               :    e869:	mov    %r12d,%eax
               :    e86c:	pop    %r12
               :    e86e:	pop    %r13
               :    e870:	pop    %r14
               :    e872:	pop    %r15
               :    e874:	retq   
               :    e875:	nopl   (%rax)
               :    e878:	inc    %ecx
               :    e87a:	and    $0xf,%ecx
               :    e87d:	mov    %cl,0x38(%rax)
               :    e880:	test   %cl,%cl
               :    e882:	jne    e88a <qman_portal_dequeue+0x22a>
               :    e884:	add    $0xffffff80,%edx
               :    e887:	mov    %dl,0x3c(%rax)
               :    e88a:	lea    0xb2df(%rip),%rdi        # 19b70 <.got>
               :    e891:	callq  4710 <__tls_get_addr@plt>
               :    e896:	inc    %r15d
               :    e899:	mov    %r15b,0x83a(%rax)
               :    e8a0:	jmpq   e6d9 <qman_portal_dequeue+0x79>
               :    e8a5:	data16 nopw %cs:0x0(%rax,%rax,1)
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_bus_pci.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000004009 <pci_plug.cold>: /* pci_plug.cold total:      1 3.0e-05 */
               :    4009:	mov    0x40(%r12),%eax
               :    400e:	mov    0x50(%r12),%ecx
               :    4013:	push   %rax
               :    4014:	lea    0x6115(%rip),%rdx        # a130 <_fini+0x160>
               :    401b:	xor    %esi,%esi
               :    401d:	movzbl 0x56(%r12),%eax
               :    4023:	mov    $0x8,%edi
               :    4028:	push   %rax
               :    4029:	xor    %eax,%eax
               :    402b:	movzbl 0x55(%r12),%r9d
               :    4031:	movzbl 0x54(%r12),%r8d
               :    4037:	callq  36c0 <rte_log@plt>
               :    403c:	mov    0x48(%r12),%rax
               :    4041:	pop    %rdx
               :    4042:	pop    %rcx
               :    4043:	test   %rax,%rax
               :    4046:	je     4068 <pci_plug.cold+0x5f>
               :    4048:	cmpl   $0x1,0x14(%rax)
               :    404c:	jne    4068 <pci_plug.cold+0x5f>
               :    404e:	lea    0x635b(%rip),%rdx        # a3b0 <_fini+0x3e0>
               :    4055:	xor    %esi,%esi
               :    4057:	mov    $0x7,%edi
               :    405c:	xor    %eax,%eax
               :    405e:	callq  36c0 <rte_log@plt>
               :    4063:	jmpq   6063 <pci_plug+0x43>
               :    4068:	cmpl   $0x0,0x40(%r12)
               :    406e:	jns    4097 <pci_plug.cold+0x8e>
               :    4070:	callq  3770 <rte_socket_count@plt>
               :    4075:	cmp    $0x1,%eax
               :    4078:	jbe    4097 <pci_plug.cold+0x8e>
               :    407a:	lea    0x110(%r12),%rcx
               :    4082:	lea    0x6357(%rip),%rdx        # a3e0 <_fini+0x410>
               :    4089:	xor    %esi,%esi
               :    408b:	mov    $0x7,%edi
               :    4090:	xor    %eax,%eax
               :    4092:	callq  36c0 <rte_log@plt>
               :    4097:	mov    %rbx,%rdi
               :    409a:	callq  3840 <rte_dev_is_probed@plt>
               :    409f:	mov    %eax,%r13d
               :    40a2:	test   %eax,%eax
               :    40a4:	je     4149 <pci_plug.cold+0x140>
               :    40aa:	testb  $0x4,0x58(%rbp)
               :    40ae:	je     41c4 <pci_plug.cold+0x1bb>
               :    40b4:	movzwl 0x5c(%r12),%ecx
               :    40ba:	mov    0x20(%rbp),%r9
               :    40be:	movzwl 0x5e(%r12),%r8d
               :    40c4:	lea    0x647d(%rip),%rdx        # a548 <_fini+0x578>
               :    40cb:	xor    %esi,%esi
               :    40cd:	mov    $0x8,%edi
               :    40d2:	xor    %eax,%eax
               :    40d4:	callq  36c0 <rte_log@plt>
               :    40d9:	mov    0x20(%rbp),%rcx
               :    40dd:	push   %rax
               :    40de:	xor    %esi,%esi
               :    40e0:	mov    $0x7,%edi
               :    40e5:	mov    0x40(%r12),%eax
               :    40ea:	movzwl 0x5e(%r12),%r9d
               :    40f0:	push   %rax
               :    40f1:	movzwl 0x5c(%r12),%r8d
               :    40f7:	lea    0x63fa(%rip),%rdx        # a4f8 <_fini+0x528>
               :    40fe:	movzbl 0x56(%r12),%eax
               :    4104:	push   %rax
               :    4105:	movzbl 0x55(%r12),%eax
               :    410b:	push   %rax
               :    410c:	movzbl 0x54(%r12),%eax
               :    4112:	push   %rax
               :    4113:	mov    0x50(%r12),%eax
               :    4118:	push   %rax
               :    4119:	xor    %eax,%eax
               :    411b:	callq  36c0 <rte_log@plt>
               :    4120:	add    $0x30,%rsp
               :    4124:	mov    %r12,%rsi
               :    4127:	mov    %rbp,%rdi
               :    412a:	callq  *0x30(%rbp)
               :    412d:	test   %r13d,%r13d
               :    4130:	je     41e8 <pci_plug.cold+0x1df>
               :    4136:	test   %eax,%eax
               :    4138:	js     6071 <pci_plug+0x51>
               :    413e:	jne    6063 <pci_plug+0x43>
               :    4144:	jmpq   6071 <pci_plug+0x51>
               :    4149:	movzwl 0x5c(%r12),%ecx
               :    414f:	mov    0x20(%rbp),%r9
               :    4153:	movzwl 0x5e(%r12),%r8d
               :    4159:	xor    %esi,%esi
               :    415b:	lea    0x63e6(%rip),%rdx        # a548 <_fini+0x578>
               :    4162:	mov    $0x8,%edi
               :    4167:	xor    %eax,%eax
               :    4169:	callq  36c0 <rte_log@plt>
               :    416e:	mov    %r12,%rsi
               :    4171:	mov    %rbp,%rdi
               :    4174:	callq  7ab0 <pci_device_iova_mode>
               :    4179:	mov    %eax,%r14d
               :    417c:	callq  3c70 <rte_eal_iova_mode@plt>
               :    4181:	test   %r14d,%r14d
               :    4184:	jne    426d <pci_plug.cold+0x264>
               :    418a:	xor    %edi,%edi
               :    418c:	callq  3c50 <rte_intr_instance_alloc@plt>
               :    4191:	mov    %rax,0xf8(%r12)
               :    4199:	test   %rax,%rax
               :    419c:	jne    42b3 <pci_plug.cold+0x2aa>
               :    41a2:	mov    0x20(%r12),%rcx
               :    41a7:	lea    0x62d2(%rip),%rdx        # a480 <_fini+0x4b0>
               :    41ae:	xor    %esi,%esi
               :    41b0:	mov    $0x4,%edi
               :    41b5:	callq  36c0 <rte_log@plt>
               :    41ba:	mov    $0xfffffff4,%eax
               :    41bf:	jmpq   6071 <pci_plug+0x51>
               :    41c4:	mov    0x20(%r12),%rcx
               :    41c9:	lea    0x6238(%rip),%rdx        # a408 <_fini+0x438>
               :    41d0:	xor    %esi,%esi
               :    41d2:	mov    $0x8,%edi
               :    41d7:	xor    %eax,%eax
               :    41d9:	callq  36c0 <rte_log@plt>
               :    41de:	mov    $0xffffffef,%eax
               :    41e3:	jmpq   6071 <pci_plug+0x51>
               :    41e8:	test   %eax,%eax
               :    41ea:	je     425f <pci_plug.cold+0x256>
               :    41ec:	mov    0x58(%rbp),%edx
               :    41ef:	movq   $0x0,0x100(%r12)
               :    41fb:	test   $0x1,%dl
               :    41fe:	je     4218 <pci_plug.cold+0x20f>
               :    4200:	test   %eax,%eax
               :    4202:	jg     433b <pci_plug.cold+0x332>
               :    4208:	mov    %r12,%rdi
               :    420b:	mov    %eax,0xc(%rsp)
               :    420f:	callq  3bf0 <rte_pci_unmap_device@plt>
               :    4214:	mov    0xc(%rsp),%eax
               :    4218:	mov    %eax,0xc(%rsp)
               :    421c:	mov    0x130(%r12),%rdi
               :    4224:	callq  3be0 <rte_intr_instance_free@plt>
               :    4229:	movq   $0x0,0x130(%r12)
               :    4235:	mov    0xf8(%r12),%rdi
               :    423d:	callq  3be0 <rte_intr_instance_free@plt>
               :    4242:	mov    0xc(%rsp),%eax
               :    4246:	movq   $0x0,0xf8(%r12)
               :    4252:	test   %eax,%eax
               :    4254:	js     6071 <pci_plug+0x51>
               :    425a:	jmpq   6063 <pci_plug+0x43>
               :    425f:	add    $0x10,%rbp
               :    4263:	mov    %rbp,0x30(%r12)
               :    4268:	jmpq   6071 <pci_plug+0x51>
               :    426d:	cmp    %eax,%r14d
               :    4270:	je     418a <pci_plug.cold+0x181>
               :    4276:	lea    0x636b(%rip),%rcx        # a5e8 <_fini+0x618>
               :    427d:	lea    0x6361(%rip),%rdx        # a5e5 <_fini+0x615>
               :    4284:	dec    %eax
               :    4286:	mov    %rcx,%r8
               :    4289:	cmove  %rdx,%r8
               :    428d:	dec    %r14d
               :    4290:	cmove  %rdx,%rcx
               :    4294:	mov    $0x4,%edi
               :    4299:	lea    0x6190(%rip),%rdx        # a430 <_fini+0x460>
               :    42a0:	xor    %esi,%esi
               :    42a2:	xor    %eax,%eax
               :    42a4:	callq  36c0 <rte_log@plt>
               :    42a9:	mov    $0xffffffea,%eax
               :    42ae:	jmpq   6071 <pci_plug+0x51>
               :    42b3:	xor    %edi,%edi
               :    42b5:	callq  3c50 <rte_intr_instance_alloc@plt>
               :    42ba:	mov    %rax,0x130(%r12)
     1 3.0e-05 :    42c2:	test   %rax,%rax
               :    42c5:	jne    4304 <pci_plug.cold+0x2fb>
               :    42c7:	mov    0xf8(%r12),%rdi
               :    42cf:	callq  3be0 <rte_intr_instance_free@plt>
               :    42d4:	movq   $0x0,0xf8(%r12)
               :    42e0:	mov    0x20(%r12),%rcx
               :    42e5:	lea    0x61cc(%rip),%rdx        # a4b8 <_fini+0x4e8>
               :    42ec:	xor    %esi,%esi
               :    42ee:	mov    $0x4,%edi
               :    42f3:	xor    %eax,%eax
               :    42f5:	callq  36c0 <rte_log@plt>
               :    42fa:	mov    $0xfffffff4,%eax
               :    42ff:	jmpq   6071 <pci_plug+0x51>
               :    4304:	mov    %rbp,0x100(%r12)
               :    430c:	testb  $0x1,0x58(%rbp)
               :    4310:	je     40d9 <pci_plug.cold+0xd0>
               :    4316:	mov    %r12,%rdi
               :    4319:	callq  3960 <rte_pci_map_device@plt>
               :    431e:	test   %eax,%eax
               :    4320:	je     40d9 <pci_plug.cold+0xd0>
               :    4326:	mov    %eax,0xc(%rsp)
               :    432a:	movq   $0x0,0x100(%r12)
               :    4336:	jmpq   421c <pci_plug.cold+0x213>
               :    433b:	and    $0x20,%dl
               :    433e:	je     4208 <pci_plug.cold+0x1ff>
               :    4344:	jmpq   4218 <pci_plug.cold+0x20f>
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_bus_pci.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000004349 <pci_probe.cold>: /* pci_probe.cold total:      1 3.0e-05 */
               :    4349:	mov    0x40(%r14),%eax
               :    434d:	movzbl 0x54(%r14),%r8d
               :    4352:	movzbl 0x55(%r14),%r9d
               :    4357:	mov    0x50(%r14),%ecx
               :    435b:	push   %rax
               :    435c:	mov    $0x8,%edi
               :    4361:	lea    0x5dc8(%rip),%rdx        # a130 <_fini+0x160>
               :    4368:	movzbl 0x56(%r14),%eax
               :    436d:	xor    %esi,%esi
               :    436f:	push   %rax
               :    4370:	xor    %eax,%eax
               :    4372:	callq  36c0 <rte_log@plt>
               :    4377:	mov    0x48(%r14),%rax
               :    437b:	pop    %rdi
               :    437c:	pop    %r8
               :    437e:	test   %rax,%rax
               :    4381:	je     43a3 <pci_probe.cold+0x5a>
               :    4383:	cmpl   $0x1,0x14(%rax)
               :    4387:	jne    43a3 <pci_probe.cold+0x5a>
               :    4389:	lea    0x6020(%rip),%rdx        # a3b0 <_fini+0x3e0>
               :    4390:	xor    %esi,%esi
               :    4392:	mov    $0x7,%edi
               :    4397:	xor    %eax,%eax
               :    4399:	callq  36c0 <rte_log@plt>
               :    439e:	jmpq   60e6 <pci_probe+0x56>
               :    43a3:	cmpl   $0x0,0x40(%r14)
               :    43a8:	jns    43d0 <pci_probe.cold+0x87>
               :    43aa:	callq  3770 <rte_socket_count@plt>
               :    43af:	cmp    $0x1,%eax
               :    43b2:	jbe    43d0 <pci_probe.cold+0x87>
               :    43b4:	lea    0x110(%r14),%rcx
               :    43bb:	lea    0x601e(%rip),%rdx        # a3e0 <_fini+0x410>
               :    43c2:	xor    %esi,%esi
               :    43c4:	mov    $0x7,%edi
               :    43c9:	xor    %eax,%eax
               :    43cb:	callq  36c0 <rte_log@plt>
               :    43d0:	mov    %r12,%rdi
               :    43d3:	callq  3840 <rte_dev_is_probed@plt>
               :    43d8:	mov    %eax,0x8(%rsp)
               :    43dc:	test   %eax,%eax
               :    43de:	je     447e <pci_probe.cold+0x135>
               :    43e4:	testb  $0x4,0x58(%r15)
               :    43e9:	je     44f4 <pci_probe.cold+0x1ab>
               :    43ef:	movzwl 0x5c(%r14),%ecx
               :    43f4:	mov    0x20(%r15),%r9
               :    43f8:	movzwl 0x5e(%r14),%r8d
               :    43fd:	lea    0x6144(%rip),%rdx        # a548 <_fini+0x578>
               :    4404:	xor    %esi,%esi
               :    4406:	mov    $0x8,%edi
               :    440b:	xor    %eax,%eax
               :    440d:	callq  36c0 <rte_log@plt>
               :    4412:	movzwl 0x5e(%r14),%r9d
               :    4417:	movzwl 0x5c(%r14),%r8d
               :    441c:	mov    0x20(%r15),%rcx
               :    4420:	push   %rsi
               :    4421:	lea    0x60d0(%rip),%rdx        # a4f8 <_fini+0x528>
               :    4428:	xor    %esi,%esi
               :    442a:	mov    0x40(%r14),%eax
               :    442e:	mov    $0x7,%edi
               :    4433:	push   %rax
               :    4434:	movzbl 0x56(%r14),%eax
               :    4439:	push   %rax
               :    443a:	movzbl 0x55(%r14),%eax
               :    443f:	push   %rax
               :    4440:	movzbl 0x54(%r14),%eax
               :    4445:	push   %rax
               :    4446:	mov    0x50(%r14),%eax
               :    444a:	push   %rax
               :    444b:	xor    %eax,%eax
               :    444d:	callq  36c0 <rte_log@plt>
               :    4452:	add    $0x30,%rsp
               :    4456:	mov    %r14,%rsi
               :    4459:	mov    %r15,%rdi
               :    445c:	callq  *0x30(%r15)
               :    4460:	cmpl   $0x0,0x8(%rsp)
               :    4465:	je     4512 <pci_probe.cold+0x1c9>
               :    446b:	test   %eax,%eax
               :    446d:	js     4580 <pci_probe.cold+0x237>
               :    4473:	jne    60e6 <pci_probe+0x56>
               :    4479:	jmpq   60ee <pci_probe+0x5e>
               :    447e:	movzwl 0x5c(%r14),%ecx
               :    4483:	mov    0x20(%r15),%r9
               :    4487:	movzwl 0x5e(%r14),%r8d
               :    448c:	lea    0x60b5(%rip),%rdx        # a548 <_fini+0x578>
               :    4493:	xor    %esi,%esi
               :    4495:	mov    $0x8,%edi
               :    449a:	xor    %eax,%eax
               :    449c:	callq  36c0 <rte_log@plt>
               :    44a1:	mov    %r14,%rsi
               :    44a4:	mov    %r15,%rdi
               :    44a7:	callq  7ab0 <pci_device_iova_mode>
               :    44ac:	mov    %eax,0xc(%rsp)
               :    44b0:	callq  3c70 <rte_eal_iova_mode@plt>
               :    44b5:	mov    0xc(%rsp),%edx
               :    44b9:	test   %edx,%edx
               :    44bb:	jne    4598 <pci_probe.cold+0x24f>
               :    44c1:	xor    %edi,%edi
               :    44c3:	callq  3c50 <rte_intr_instance_alloc@plt>
               :    44c8:	mov    %rax,0xf8(%r14)
               :    44cf:	test   %rax,%rax
               :    44d2:	jne    4625 <pci_probe.cold+0x2dc>
               :    44d8:	mov    0x20(%r14),%rcx
               :    44dc:	lea    0x5f9d(%rip),%rdx        # a480 <_fini+0x4b0>
               :    44e3:	xor    %esi,%esi
               :    44e5:	mov    $0x4,%edi
               :    44ea:	callq  36c0 <rte_log@plt>
               :    44ef:	jmpq   45d6 <pci_probe.cold+0x28d>
               :    44f4:	mov    0x20(%r14),%rcx
               :    44f8:	lea    0x5f09(%rip),%rdx        # a408 <_fini+0x438>
               :    44ff:	xor    %esi,%esi
               :    4501:	mov    $0x8,%edi
               :    4506:	xor    %eax,%eax
               :    4508:	callq  36c0 <rte_log@plt>
               :    450d:	jmpq   60ee <pci_probe+0x5e>
               :    4512:	test   %eax,%eax
               :    4514:	je     458b <pci_probe.cold+0x242>
               :    4516:	mov    0x58(%r15),%edx
               :    451a:	movq   $0x0,0x100(%r14)
               :    4525:	test   $0x1,%dl
               :    4528:	je     4542 <pci_probe.cold+0x1f9>
               :    452a:	test   %eax,%eax
               :    452c:	jg     46a3 <pci_probe.cold+0x35a>
               :    4532:	mov    %r14,%rdi
               :    4535:	mov    %eax,0x8(%rsp)
               :    4539:	callq  3bf0 <rte_pci_unmap_device@plt>
               :    453e:	mov    0x8(%rsp),%eax
               :    4542:	mov    %eax,0x8(%rsp)
               :    4546:	mov    0x130(%r14),%rdi
               :    454d:	callq  3be0 <rte_intr_instance_free@plt>
               :    4552:	movq   $0x0,0x130(%r14)
               :    455d:	mov    0xf8(%r14),%rdi
               :    4564:	callq  3be0 <rte_intr_instance_free@plt>
               :    4569:	mov    0x8(%rsp),%eax
               :    456d:	movq   $0x0,0xf8(%r14)
               :    4578:	test   %eax,%eax
               :    457a:	jns    60e6 <pci_probe+0x56>
               :    4580:	cmp    $0xffffffef,%eax
               :    4583:	je     60ee <pci_probe+0x5e>
               :    4589:	jmp    45d6 <pci_probe.cold+0x28d>
               :    458b:	lea    0x10(%r15),%r10
               :    458f:	mov    %r10,0x30(%r14)
               :    4593:	jmpq   60ee <pci_probe+0x5e>
               :    4598:	cmp    %eax,%edx
               :    459a:	je     44c1 <pci_probe.cold+0x178>
               :    45a0:	dec    %eax
               :    45a2:	lea    0x603f(%rip),%r8        # a5e8 <_fini+0x618>
               :    45a9:	lea    0x6035(%rip),%rax        # a5e5 <_fini+0x615>
               :    45b0:	cmove  %rax,%r8
               :    45b4:	lea    0x602d(%rip),%rcx        # a5e8 <_fini+0x618>
               :    45bb:	dec    %edx
               :    45bd:	cmove  %rax,%rcx
               :    45c1:	lea    0x5e68(%rip),%rdx        # a430 <_fini+0x460>
               :    45c8:	xor    %esi,%esi
               :    45ca:	mov    $0x4,%edi
               :    45cf:	xor    %eax,%eax
               :    45d1:	callq  36c0 <rte_log@plt>
               :    45d6:	mov    0x50(%r14),%ecx
               :    45da:	movzbl 0x55(%r14),%r9d
               :    45df:	movzbl 0x54(%r14),%r8d
               :    45e4:	push   %rax
               :    45e5:	lea    0x5f7c(%rip),%rdx        # a568 <_fini+0x598>
               :    45ec:	xor    %esi,%esi
               :    45ee:	movzbl 0x56(%r14),%eax
               :    45f3:	mov    $0x4,%edi
               :    45f8:	push   %rax
               :    45f9:	xor    %eax,%eax
               :    45fb:	inc    %r13
               :    45fe:	callq  36c0 <rte_log@plt>
               :    4603:	callq  3a90 <__errno_location@plt>
               :    4608:	mov    (%rax),%r12d
               :    460b:	data16 lea 0xa9cd(%rip),%rdi        # efe0 <per_lcore__rte_errno@DPDK_23>
               :    4613:	data16 data16 callq 3920 <__tls_get_addr@plt>
               :    461b:	mov    %r12d,(%rax)
               :    461e:	pop    %rdx
               :    461f:	pop    %rcx
               :    4620:	jmpq   60ee <pci_probe+0x5e>
               :    4625:	xor    %edi,%edi
               :    4627:	callq  3c50 <rte_intr_instance_alloc@plt>
               :    462c:	mov    %rax,0x130(%r14)
               :    4633:	test   %rax,%rax
               :    4636:	jne    466d <pci_probe.cold+0x324>
               :    4638:	mov    0xf8(%r14),%rdi
               :    463f:	callq  3be0 <rte_intr_instance_free@plt>
     1 3.0e-05 :    4644:	movq   $0x0,0xf8(%r14)
               :    464f:	mov    0x20(%r14),%rcx
               :    4653:	lea    0x5e5e(%rip),%rdx        # a4b8 <_fini+0x4e8>
               :    465a:	xor    %esi,%esi
               :    465c:	mov    $0x4,%edi
               :    4661:	xor    %eax,%eax
               :    4663:	callq  36c0 <rte_log@plt>
               :    4668:	jmpq   45d6 <pci_probe.cold+0x28d>
               :    466d:	mov    %r15,0x100(%r14)
               :    4674:	testb  $0x1,0x58(%r15)
               :    4679:	je     4412 <pci_probe.cold+0xc9>
               :    467f:	mov    %r14,%rdi
               :    4682:	callq  3960 <rte_pci_map_device@plt>
               :    4687:	test   %eax,%eax
               :    4689:	je     4412 <pci_probe.cold+0xc9>
               :    468f:	mov    %eax,0x8(%rsp)
               :    4693:	movq   $0x0,0x100(%r14)
               :    469e:	jmpq   4546 <pci_probe.cold+0x1fd>
               :    46a3:	and    $0x20,%dl
               :    46a6:	je     4532 <pci_probe.cold+0x1e9>
               :    46ac:	jmpq   4542 <pci_probe.cold+0x1f9>
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_common_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000011ff0 <mlx5_devx_cmd_register_read>: /* mlx5_devx_cmd_register_read total:     15 4.4e-04 */
               :   11ff0:	endbr64 
               :   11ff4:	push   %r14
               :   11ff6:	vpxor  %xmm0,%xmm0,%xmm0
               :   11ffa:	push   %r13
               :   11ffc:	push   %r12
               :   11ffe:	push   %rbp
               :   11fff:	push   %rbx
               :   12000:	sub    $0x50,%rsp
               :   12004:	mov    %fs:0x28,%rax
               :   1200d:	mov    %rax,0x48(%rsp)
               :   12012:	xor    %eax,%eax
               :   12014:	vmovaps %xmm0,(%rsp)
               :   12019:	vmovaps %xmm0,0x10(%rsp)
               :   1201f:	vmovaps %xmm0,0x20(%rsp)
               :   12025:	vmovaps %xmm0,0x30(%rsp)
               :   1202b:	cmp    $0x8,%r8d
               :   1202f:	ja     121cc <mlx5_devx_cmd_register_read+0x1dc>
               :   12035:	mov    %rcx,%r12
               :   12038:	mov    $0xb0c0000,%eax
               :   1203d:	bswap  %eax
               :   1203f:	mov    %eax,(%rsp)
               :   12042:	mov    $0x1,%eax
               :   12047:	bswap  %eax
               :   12049:	movzwl %si,%ebp
               :   1204c:	mov    %eax,0x4(%rsp)
               :   12050:	mov    %ebp,%eax
               :   12052:	bswap  %eax
               :   12054:	mov    %eax,0x8(%rsp)
               :   12058:	bswap  %edx
               :   1205a:	mov    0x1bf17(%rip),%rax        # 2df78 <mlx5_glue@@INTERNAL-0x948>
               :   12061:	mov    %edx,0xc(%rsp)
               :   12065:	mov    %r8d,%r8d
               :   12068:	mov    (%rax),%rax
               :   1206b:	lea    0x10(,%r8,4),%rbx
               :   12073:	lea    0x10(%rsp),%rcx
               :   12078:	mov    %rsp,%rsi
               :   1207b:	mov    %rbx,%r8
     7 2.1e-04 :   1207e:	mov    $0x10,%edx
     7 2.1e-04 :   12083:	callq  *0x2e8(%rax)
               :   12089:	mov    %eax,%r13d
               :   1208c:	mov    0x10(%rsp),%r14d
               :   12091:	test   %eax,%eax
               :   12093:	jne    1215c <mlx5_devx_cmd_register_read+0x16c>
               :   12099:	mov    %r14d,%eax
               :   1209c:	bswap  %eax
               :   1209e:	shr    $0x18,%eax
               :   120a1:	jne    1215c <mlx5_devx_cmd_register_read+0x16c>
               :   120a7:	lea    -0x10(%rbx),%r8
               :   120ab:	lea    0x20(%rsp),%rdx
               :   120b0:	cmp    $0x8,%r8d
               :   120b4:	jae    120f0 <mlx5_devx_cmd_register_read+0x100>
               :   120b6:	test   $0x4,%r8b
               :   120ba:	jne    12140 <mlx5_devx_cmd_register_read+0x150>
               :   120c0:	test   %r8d,%r8d
               :   120c3:	je     120cc <mlx5_devx_cmd_register_read+0xdc>
               :   120c5:	movzbl (%rdx),%eax
               :   120c8:	mov    %al,(%r12)
               :   120cc:	mov    0x48(%rsp),%rax
     1 3.0e-05 :   120d1:	xor    %fs:0x28,%rax
               :   120da:	jne    12157 <mlx5_devx_cmd_register_read+0x167>
               :   120dc:	add    $0x50,%rsp
               :   120e0:	pop    %rbx
               :   120e1:	pop    %rbp
               :   120e2:	pop    %r12
               :   120e4:	mov    %r13d,%eax
               :   120e7:	pop    %r13
               :   120e9:	pop    %r14
               :   120eb:	retq   
               :   120ec:	nopl   0x0(%rax)
               :   120f0:	mov    0x20(%rsp),%rax
               :   120f5:	lea    0x8(%r12),%rsi
               :   120fa:	mov    %rax,(%r12)
               :   120fe:	mov    %r8d,%eax
               :   12101:	and    $0xfffffffffffffff8,%rsi
               :   12105:	mov    -0x8(%rdx,%rax,1),%rcx
               :   1210a:	mov    %rcx,-0x8(%r12,%rax,1)
               :   1210f:	sub    %rsi,%r12
               :   12112:	add    %r12d,%r8d
               :   12115:	and    $0xfffffff8,%r8d
               :   12119:	sub    %r12,%rdx
               :   1211c:	cmp    $0x8,%r8d
               :   12120:	jb     120cc <mlx5_devx_cmd_register_read+0xdc>
               :   12122:	and    $0xfffffff8,%r8d
               :   12126:	xor    %eax,%eax
               :   12128:	mov    %eax,%ecx
               :   1212a:	mov    (%rdx,%rcx,1),%rdi
               :   1212e:	add    $0x8,%eax
               :   12131:	mov    %rdi,(%rsi,%rcx,1)
               :   12135:	cmp    %r8d,%eax
               :   12138:	jb     12128 <mlx5_devx_cmd_register_read+0x138>
               :   1213a:	jmp    120cc <mlx5_devx_cmd_register_read+0xdc>
               :   1213c:	nopl   0x0(%rax)
               :   12140:	mov    (%rdx),%eax
               :   12142:	mov    %eax,(%r12)
               :   12146:	mov    %r8d,%eax
               :   12149:	mov    -0x4(%rdx,%rax,1),%edx
               :   1214d:	mov    %edx,-0x4(%r12,%rax,1)
               :   12152:	jmpq   120cc <mlx5_devx_cmd_register_read+0xdc>
               :   12157:	callq  99a0 <__stack_chk_fail@plt>
               :   1215c:	callq  9900 <__errno_location@plt>
               :   12161:	mov    (%rax),%ebx
               :   12163:	data16 lea 0x1be3d(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   1216b:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   12173:	mov    %ebx,(%rax)
               :   12175:	mov    0x14(%rsp),%eax
               :   12179:	bswap  %eax
               :   1217b:	bswap  %r14d
               :   1217e:	lea    0x154e0(%rip),%rdi        # 27665 <crc32c_tables+0x26e5>
               :   12185:	push   %rdi
               :   12186:	shr    $0x18,%r14d
               :   1218a:	mov    %ebp,%r9d
               :   1218d:	push   %rax
               :   1218e:	lea    0x1c7db(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   12195:	lea    0xffc3(%rip),%r8        # 2215f <mlx5_common_driver_pmd_info+0x11f>
               :   1219c:	push   %r14
               :   1219e:	lea    0xffc7(%rip),%rcx        # 2216c <mlx5_common_driver_pmd_info+0x12c>
               :   121a5:	lea    0x1008c(%rip),%rdx        # 22238 <mlx5_common_driver_pmd_info+0x1f8>
               :   121ac:	push   %rbx
               :   121ad:	mov    $0x8,%edi
               :   121b2:	mov    (%rax),%esi
               :   121b4:	xor    %eax,%eax
               :   121b6:	callq  9010 <rte_log@plt>
               :   121bb:	add    $0x20,%rsp
               :   121bf:	test   %r13d,%r13d
               :   121c2:	jle    121f8 <mlx5_devx_cmd_register_read+0x208>
               :   121c4:	neg    %r13d
               :   121c7:	jmpq   120cc <mlx5_devx_cmd_register_read+0xdc>
               :   121cc:	lea    0x1c79d(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   121d3:	lea    0x1548b(%rip),%rcx        # 27665 <crc32c_tables+0x26e5>
               :   121da:	mov    (%rax),%esi
               :   121dc:	lea    0x1080d(%rip),%rdx        # 229f0 <mlx5_common_driver_pmd_info+0x9b0>
               :   121e3:	mov    $0x4,%edi
               :   121e8:	xor    %eax,%eax
               :   121ea:	callq  9010 <rte_log@plt>
               :   121ef:	or     $0xffffffff,%r13d
               :   121f3:	jmpq   120cc <mlx5_devx_cmd_register_read+0xdc>
               :   121f8:	mov    $0xffffffff,%eax
               :   121fd:	cmovns %eax,%r13d
               :   12201:	jmpq   120cc <mlx5_devx_cmd_register_read+0xdc>
               :   12206:	nopw   %cs:0x0(%rax,%rax,1)
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_common_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000010360 <mlx5_devx_cmd_create_virtq>: /* mlx5_devx_cmd_create_virtq total:      1 3.0e-05 */
               :   10360:	endbr64 
               :   10364:	push   %r13
               :   10366:	xor    %edx,%edx
               :   10368:	push   %r12
               :   1036a:	push   %rbp
               :   1036b:	mov    %rdi,%rbp
               :   1036e:	push   %rbx
               :   1036f:	mov    %rsi,%rbx
               :   10372:	sub    $0xf8,%rsp
               :   10379:	mov    %fs:0x28,%rax
               :   10382:	mov    %rax,0xe8(%rsp)
               :   1038a:	xor    %eax,%eax
               :   1038c:	lea    0x10(%rsp),%r13
               :   10391:	mov    %eax,%ecx
               :   10393:	add    $0x20,%eax
               :   10396:	mov    %rdx,0x10(%rsp,%rcx,1)
               :   1039b:	mov    %rdx,0x18(%rsp,%rcx,1)
               :   103a0:	mov    %rdx,0x20(%rsp,%rcx,1)
               :   103a5:	mov    %rdx,0x28(%rsp,%rcx,1)
               :   103aa:	cmp    $0xc0,%eax
               :   103af:	jb     10391 <mlx5_devx_cmd_create_virtq+0x31>
               :   103b1:	add    %r13,%rax
               :   103b4:	vpxor  %xmm0,%xmm0,%xmm0
               :   103b8:	mov    $0xffffffff,%ecx
               :   103bd:	xor    %edx,%edx
               :   103bf:	mov    $0x10,%esi
               :   103c4:	mov    $0x4,%edi
               :   103c9:	movq   $0x0,(%rax)
               :   103d0:	movq   $0x0,0x8(%rax)
               :   103d8:	vmovaps %xmm0,(%rsp)
               :   103dd:	callq  93f0 <mlx5_malloc@plt>
               :   103e2:	mov    %rax,%r12
               :   103e5:	test   %rax,%rax
               :   103e8:	je     1077f <mlx5_devx_cmd_create_virtq+0x41f>
               :   103ee:	mov    0x10(%rsp),%eax
               :   103f2:	bswap  %eax
               :   103f4:	movzwl %ax,%eax
               :   103f7:	or     $0xa000000,%eax
               :   103fc:	bswap  %eax
               :   103fe:	mov    %eax,0x10(%rsp)
               :   10402:	mov    0x14(%rsp),%eax
               :   10406:	bswap  %eax
               :   10408:	xor    %ax,%ax
               :   1040b:	or     $0xd,%eax
               :   1040e:	bswap  %eax
               :   10410:	mov    %eax,0x14(%rsp)
               :   10414:	movzwl 0x48(%rsp),%eax
               :   10419:	xchg   %al,%ah
               :   1041b:	movzwl (%rbx),%eax
               :   1041e:	xchg   %al,%ah
               :   10420:	mov    %ax,0x48(%rsp)
               :   10425:	movzwl 0x4a(%rsp),%eax
               :   1042a:	xchg   %al,%ah
               :   1042c:	movzwl 0x2(%rbx),%eax
               :   10430:	xchg   %al,%ah
               :   10432:	mov    %ax,0x4a(%rsp)
               :   10437:	movzwl 0x30(%rsp),%edx
               :   1043c:	xchg   %dl,%dh
               :   1043e:	movzbl 0xb(%rbx),%esi
               :   10442:	mov    %esi,%eax
               :   10444:	shr    %al
               :   10446:	and    $0x1,%eax
               :   10449:	shl    $0xf,%eax
               :   1044c:	mov    %eax,%ecx
               :   1044e:	mov    %edx,%eax
               :   10450:	and    $0x7fff,%ax
               :   10454:	or     %ecx,%eax
               :   10456:	xchg   %al,%ah
               :   10458:	xchg   %al,%ah
               :   1045a:	mov    %esi,%ecx
               :   1045c:	shr    $0x2,%cl
               :   1045f:	and    $0x1,%ecx
               :   10462:	shl    $0xe,%ecx
               :   10465:	and    $0xbf,%ah
               :   10468:	mov    %ecx,%edx
               :   1046a:	mov    %eax,%ecx
               :   1046c:	or     %edx,%ecx
               :   1046e:	xchg   %cl,%ch
               :   10470:	xchg   %cl,%ch
               :   10472:	mov    %esi,%edx
               :   10474:	shr    $0x3,%dl
               :   10477:	and    $0x1,%edx
               :   1047a:	mov    %edx,%eax
               :   1047c:	and    $0xdf,%ch
               :   1047f:	shl    $0xd,%eax
               :   10482:	mov    %ecx,%edx
               :   10484:	or     %eax,%edx
               :   10486:	xchg   %dl,%dh
               :   10488:	xchg   %dl,%dh
               :   1048a:	mov    %esi,%eax
               :   1048c:	shr    $0x4,%al
               :   1048f:	and    $0x1,%eax
               :   10492:	shl    $0xc,%eax
               :   10495:	mov    %eax,%ecx
               :   10497:	mov    %edx,%eax
               :   10499:	and    $0xef,%ah
               :   1049c:	or     %ecx,%eax
               :   1049e:	xchg   %al,%ah
               :   104a0:	mov    %ax,0x30(%rsp)
               :   104a5:	movzwl 0x64(%rsp),%edx
               :   104aa:	xchg   %dl,%dh
               :   104ac:	mov    %esi,%eax
               :   104ae:	and    $0x1,%eax
               :   104b1:	shl    $0xe,%eax
               :   104b4:	mov    %eax,%ecx
               :   104b6:	mov    %edx,%eax
               :   104b8:	and    $0xbf,%ah
               :   104bb:	or     %ecx,%eax
               :   104bd:	xchg   %al,%ah
               :   104bf:	mov    %ax,0x64(%rsp)
               :   104c4:	movzwl 0x60(%rsp),%edx
               :   104c9:	xchg   %dl,%dh
               :   104cb:	shr    $0x5,%sil
               :   104cf:	movzbl %sil,%eax
               :   104d3:	and    $0xfffffff8,%edx
               :   104d6:	or     %edx,%eax
               :   104d8:	xchg   %al,%ah
               :   104da:	mov    %ax,0x60(%rsp)
               :   104df:	mov    0x64(%rsp),%edx
               :   104e3:	bswap  %edx
               :   104e5:	mov    0x20(%rbx),%eax
               :   104e8:	and    $0xff000000,%edx
               :   104ee:	and    $0xffffff,%eax
               :   104f3:	or     %edx,%eax
               :   104f5:	bswap  %eax
               :   104f7:	mov    %eax,0x64(%rsp)
               :   104fb:	mov    0x40(%rbx),%rax
               :   104ff:	bswap  %rax
               :   10502:	mov    %rax,0x70(%rsp)
               :   10507:	mov    0x48(%rbx),%rax
               :   1050b:	bswap  %rax
               :   1050e:	mov    %rax,0x78(%rsp)
               :   10513:	mov    0x50(%rbx),%rax
               :   10517:	bswap  %rax
               :   1051a:	mov    %rax,0x80(%rsp)
               :   10522:	movzwl 0x62(%rsp),%eax
               :   10527:	xchg   %al,%ah
               :   10529:	movzwl 0x24(%rbx),%eax
               :   1052d:	xchg   %al,%ah
               :   1052f:	mov    %ax,0x62(%rsp)
               :   10534:	movzwl 0x6a(%rsp),%eax
               :   10539:	xchg   %al,%ah
               :   1053b:	movzwl 0x4(%rbx),%eax
               :   1053f:	xchg   %al,%ah
               :   10541:	mov    %ax,0x6a(%rsp)
               :   10546:	mov    0x88(%rsp),%eax
               :   1054d:	bswap  %eax
               :   1054f:	mov    0x1c(%rbx),%eax
               :   10552:	bswap  %eax
               :   10554:	mov    %eax,0x88(%rsp)
               :   1055b:	mov    0x90(%rsp),%eax
               :   10562:	bswap  %eax
               :   10564:	mov    0x58(%rbx),%eax
               :   10567:	bswap  %eax
               :   10569:	mov    %eax,0x90(%rsp)
               :   10570:	mov    0x94(%rsp),%eax
               :   10577:	bswap  %eax
               :   10579:	mov    0x5c(%rbx),%eax
               :   1057c:	bswap  %eax
               :   1057e:	mov    %eax,0x94(%rsp)
               :   10585:	mov    0x60(%rbx),%rax
               :   10589:	bswap  %rax
               :   1058c:	mov    %rax,0x98(%rsp)
               :   10594:	mov    0xa0(%rsp),%eax
               :   1059b:	bswap  %eax
               :   1059d:	mov    0x68(%rbx),%eax
               :   105a0:	bswap  %eax
               :   105a2:	mov    %eax,0xa0(%rsp)
               :   105a9:	mov    0xa4(%rsp),%eax
               :   105b0:	bswap  %eax
               :   105b2:	mov    0x6c(%rbx),%eax
               :   105b5:	bswap  %eax
               :   105b7:	mov    %eax,0xa4(%rsp)
               :   105be:	mov    0x70(%rbx),%rax
               :   105c2:	bswap  %rax
               :   105c5:	mov    %rax,0xa8(%rsp)
               :   105cd:	mov    0xb0(%rsp),%eax
               :   105d4:	bswap  %eax
               :   105d6:	mov    0x78(%rbx),%eax
               :   105d9:	bswap  %eax
               :   105db:	mov    %eax,0xb0(%rsp)
               :   105e2:	mov    0xb4(%rsp),%eax
               :   105e9:	bswap  %eax
               :   105eb:	mov    0x7c(%rbx),%eax
               :   105ee:	bswap  %eax
               :   105f0:	mov    %eax,0xb4(%rsp)
               :   105f7:	mov    0x80(%rbx),%rax
               :   105fe:	bswap  %rax
               :   10601:	mov    %rax,0xb8(%rsp)
               :   10609:	mov    0xc0(%rsp),%eax
               :   10610:	bswap  %eax
               :   10612:	mov    0x2c(%rbx),%eax
               :   10615:	bswap  %eax
               :   10617:	mov    %eax,0xc0(%rsp)
               :   1061e:	mov    0xc4(%rsp),%edx
               :   10625:	bswap  %edx
               :   10627:	mov    0x8(%rbx),%eax
     1 3.0e-05 :   1062a:	and    $0xff000000,%edx
               :   10630:	and    $0xffffff,%eax
               :   10635:	or     %edx,%eax
               :   10637:	bswap  %eax
               :   10639:	mov    %eax,0xc4(%rsp)
               :   10640:	mov    0xc8(%rsp),%ecx
               :   10647:	bswap  %ecx
               :   10649:	movzbl 0xc(%rbx),%eax
               :   1064d:	and    $0xcfffffff,%ecx
               :   10653:	shr    $0x4,%al
               :   10656:	mov    %eax,%edx
               :   10658:	and    $0x3,%edx
               :   1065b:	mov    %edx,%eax
               :   1065d:	shl    $0x1c,%eax
               :   10660:	or     %ecx,%eax
               :   10662:	bswap  %eax
               :   10664:	bswap  %eax
               :   10666:	mov    $0xa,%edi
               :   1066b:	and    $0xf000ffff,%eax
               :   10670:	shlx   %edi,0xc(%rbx),%edx
               :   10676:	and    $0xfff0000,%edx
               :   1067c:	or     %edx,%eax
               :   1067e:	bswap  %eax
               :   10680:	bswap  %eax
               :   10682:	movzwl 0x10(%rbx),%edx
               :   10686:	xor    %ax,%ax
               :   10689:	or     %edx,%eax
               :   1068b:	bswap  %eax
               :   1068d:	mov    %eax,0xc8(%rsp)
               :   10694:	mov    0x34(%rsp),%edx
               :   10698:	bswap  %edx
               :   1069a:	mov    0x28(%rbx),%eax
               :   1069d:	and    $0xff000000,%edx
               :   106a3:	and    $0xffffff,%eax
               :   106a8:	or     %edx,%eax
               :   106aa:	bswap  %eax
               :   106ac:	mov    %eax,0x34(%rsp)
               :   106b0:	mov    0x1d8c1(%rip),%rax        # 2df78 <mlx5_glue@@INTERNAL-0x948>
               :   106b7:	mov    %rsp,%rcx
               :   106ba:	mov    (%rax),%rax
               :   106bd:	mov    $0x10,%r8d
               :   106c3:	mov    $0xd0,%edx
               :   106c8:	mov    %r13,%rsi
               :   106cb:	mov    %rbp,%rdi
               :   106ce:	callq  *0x2c8(%rax)
               :   106d4:	mov    %rax,(%r12)
               :   106d8:	test   %rax,%rax
               :   106db:	je     10711 <mlx5_devx_cmd_create_virtq+0x3b1>
               :   106dd:	mov    0x8(%rsp),%eax
               :   106e1:	bswap  %eax
               :   106e3:	mov    %eax,0x8(%r12)
               :   106e8:	mov    0xe8(%rsp),%rax
               :   106f0:	xor    %fs:0x28,%rax
               :   106f9:	jne    1070c <mlx5_devx_cmd_create_virtq+0x3ac>
               :   106fb:	add    $0xf8,%rsp
               :   10702:	pop    %rbx
               :   10703:	pop    %rbp
               :   10704:	mov    %r12,%rax
               :   10707:	pop    %r12
               :   10709:	pop    %r13
               :   1070b:	retq   
               :   1070c:	callq  99a0 <__stack_chk_fail@plt>
               :   10711:	callq  9900 <__errno_location@plt>
               :   10716:	mov    (%rax),%ebp
               :   10718:	mov    %rax,%rbx
               :   1071b:	data16 lea 0x1d885(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   10723:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   1072b:	mov    %ebp,(%rax)
               :   1072d:	mov    0x4(%rsp),%eax
               :   10731:	bswap  %eax
               :   10733:	mov    (%rsp),%r9d
               :   10737:	bswap  %r9d
               :   1073a:	lea    0x16f24(%rip),%rdi        # 27665 <crc32c_tables+0x26e5>
               :   10741:	push   %rdi
               :   10742:	lea    0x11b77(%rip),%rdx        # 222c0 <mlx5_common_driver_pmd_info+0x280>
               :   10749:	shr    $0x18,%r9d
               :   1074d:	push   %rax
               :   1074e:	lea    0x1e21b(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   10755:	lea    0x119d4(%rip),%rcx        # 22130 <mlx5_common_driver_pmd_info+0xf0>
               :   1075c:	mov    (%rax),%esi
               :   1075e:	mov    (%rbx),%r8d
               :   10761:	mov    $0x4,%edi
               :   10766:	xor    %eax,%eax
               :   10768:	callq  9010 <rte_log@plt>
               :   1076d:	mov    %r12,%rdi
               :   10770:	callq  98c0 <mlx5_free@plt>
               :   10775:	pop    %rax
               :   10776:	pop    %rdx
               :   10777:	xor    %r12d,%r12d
               :   1077a:	jmpq   106e8 <mlx5_devx_cmd_create_virtq+0x388>
               :   1077f:	lea    0x1e1ea(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   10786:	lea    0x16ed8(%rip),%rcx        # 27665 <crc32c_tables+0x26e5>
               :   1078d:	mov    (%rax),%esi
               :   1078f:	lea    0x11f62(%rip),%rdx        # 226f8 <mlx5_common_driver_pmd_info+0x6b8>
               :   10796:	mov    $0x4,%edi
               :   1079b:	xor    %eax,%eax
               :   1079d:	callq  9010 <rte_log@plt>
               :   107a2:	data16 lea 0x1d7fe(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   107aa:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   107b2:	movl   $0xc,(%rax)
               :   107b8:	jmpq   106e8 <mlx5_devx_cmd_create_virtq+0x388>
               :   107bd:	nopl   (%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_common_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000107c0 <mlx5_devx_cmd_modify_virtq>: /* mlx5_devx_cmd_modify_virtq total:      1 3.0e-05 */
               :   107c0:	endbr64 
               :   107c4:	push   %rbx
               :   107c5:	xor    %edx,%edx
               :   107c7:	sub    $0xf0,%rsp
               :   107ce:	mov    %fs:0x28,%rax
               :   107d7:	mov    %rax,0xe8(%rsp)
               :   107df:	xor    %eax,%eax
               :   107e1:	lea    0x18(%rsp),%r8
               :   107e6:	mov    %eax,%ecx
               :   107e8:	add    $0x20,%eax
               :   107eb:	mov    %rdx,0x18(%rsp,%rcx,1)
               :   107f0:	mov    %rdx,0x20(%rsp,%rcx,1)
               :   107f5:	mov    %rdx,0x28(%rsp,%rcx,1)
               :   107fa:	mov    %rdx,0x30(%rsp,%rcx,1)
               :   107ff:	cmp    $0xc0,%eax
               :   10804:	jb     107e6 <mlx5_devx_cmd_modify_virtq+0x26>
               :   10806:	vpxor  %xmm0,%xmm0,%xmm0
               :   1080a:	movq   $0x0,(%r8,%rax,1)
               :   10812:	vmovaps %xmm0,(%rsp)
               :   10817:	mov    $0xa010000,%eax
               :   1081c:	bswap  %eax
               :   1081e:	mov    %eax,0x10(%rsp)
               :   10822:	mov    $0xd,%eax
               :   10827:	bswap  %eax
               :   10829:	mov    %eax,0x14(%rsp)
               :   1082d:	mov    0x8(%rdi),%eax
               :   10830:	bswap  %eax
               :   10832:	mov    0x38(%rsi),%r8
               :   10836:	mov    %eax,0x18(%rsp)
               :   1083a:	mov    %r8,%rax
               :   1083d:	bswap  %rax
               :   10840:	mov    %rax,0x20(%rsp)
               :   10845:	movzwl 0x24(%rsi),%eax
               :   10849:	xchg   %al,%ah
               :   1084b:	mov    %ax,0x62(%rsp)
               :   10850:	test   %r8,%r8
               :   10853:	je     10af0 <mlx5_devx_cmd_modify_virtq+0x330>
               :   10859:	test   $0x1,%r8b
               :   1085d:	je     1086d <mlx5_devx_cmd_modify_virtq+0xad>
               :   1085f:	movzbl 0xc(%rsi),%eax
               :   10863:	and    $0xf,%eax
               :   10866:	xchg   %al,%ah
               :   10868:	mov    %ax,0x32(%rsp)
               :   1086d:	test   $0x8,%r8b
               :   10871:	je     10891 <mlx5_devx_cmd_modify_virtq+0xd1>
               :   10873:	mov    0x14(%rsi),%eax
               :   10876:	bswap  %eax
               :   10878:	mov    %eax,0x38(%rsp)
               :   1087c:	mov    0x30(%rsi),%rax
               :   10880:	bswap  %rax
               :   10883:	mov    %rax,0x40(%rsp)
               :   10888:	mov    0x18(%rsi),%eax
               :   1088b:	bswap  %eax
               :   1088d:	mov    %eax,0x3c(%rsp)
               :   10891:	test   $0x10,%r8b
               :   10895:	je     108b9 <mlx5_devx_cmd_modify_virtq+0xf9>
               :   10897:	mov    0x30(%rsp),%ecx
               :   1089b:	bswap  %ecx
               :   1089d:	movzbl 0x12(%rsi),%eax
               :   108a1:	and    $0xffdfffff,%ecx
               :   108a7:	mov    %eax,%edx
               :   108a9:	and    $0x1,%edx
               :   108ac:	mov    %edx,%eax
               :   108ae:	shl    $0x15,%eax
               :   108b1:	or     %ecx,%eax
               :   108b3:	bswap  %eax
               :   108b5:	mov    %eax,0x30(%rsp)
               :   108b9:	test   $0x20,%r8b
               :   108bd:	je     108fe <mlx5_devx_cmd_modify_virtq+0x13e>
               :   108bf:	movzbl 0xc(%rsi),%edx
               :   108c3:	shr    $0x4,%dl
               :   108c6:	and    $0x3,%edx
               :   108c9:	shl    $0x1c,%edx
               :   108cc:	bswap  %edx
               :   108ce:	bswap  %edx
               :   108d0:	mov    $0xa,%eax
               :   108d5:	and    $0xf000ffff,%edx
               :   108db:	shlx   %eax,0xc(%rsi),%eax
               :   108e1:	and    $0xfff0000,%eax
               :   108e6:	or     %edx,%eax
               :   108e8:	bswap  %eax
               :   108ea:	bswap  %eax
               :   108ec:	movzwl 0x10(%rsi),%edx
               :   108f0:	xor    %ax,%ax
               :   108f3:	or     %edx,%eax
               :   108f5:	bswap  %eax
               :   108f7:	mov    %eax,0xc8(%rsp)
               :   108fe:	test   $0x40,%r8b
               :   10902:	je     1092b <mlx5_devx_cmd_modify_virtq+0x16b>
               :   10904:	mov    0x40(%rsi),%rax
               :   10908:	bswap  %rax
               :   1090b:	mov    %rax,0x70(%rsp)
               :   10910:	mov    0x48(%rsi),%rax
               :   10914:	bswap  %rax
               :   10917:	mov    %rax,0x78(%rsp)
               :   1091c:	mov    0x50(%rsi),%rax
               :   10920:	bswap  %rax
               :   10923:	mov    %rax,0x80(%rsp)
               :   1092b:	test   $0x80,%r8b
               :   1092f:	je     1093b <mlx5_devx_cmd_modify_virtq+0x17b>
               :   10931:	movzwl (%rsi),%eax
               :   10934:	xchg   %al,%ah
               :   10936:	mov    %ax,0x48(%rsp)
               :   1093b:	test   $0x100,%r8d
               :   10942:	je     1094f <mlx5_devx_cmd_modify_virtq+0x18f>
               :   10944:	movzwl 0x2(%rsi),%eax
               :   10948:	xchg   %al,%ah
               :   1094a:	mov    %ax,0x4a(%rsp)
               :   1094f:	xor    %r9d,%r9d
               :   10952:	test   $0x200,%r8d
               :   10959:	je     10974 <mlx5_devx_cmd_modify_virtq+0x1b4>
               :   1095b:	movzbl 0x89(%rsi),%r9d
               :   10963:	shl    $0x8,%r9d
               :   10967:	mov    %r9d,%eax
               :   1096a:	xchg   %al,%ah
               :   1096c:	mov    %ax,0x60(%rsp)
               :   10971:	mov    %eax,%r9d
               :   10974:	test   $0x400,%r8d
               :   1097b:	je     1098e <mlx5_devx_cmd_modify_virtq+0x1ce>
               :   1097d:	movzbl 0xb(%rsi),%eax
               :   10981:	and    $0x1,%eax
               :   10984:	shl    $0xe,%eax
               :   10987:	xchg   %al,%ah
               :   10989:	mov    %ax,0x64(%rsp)
               :   1098e:	test   $0x800,%r8d
               :   10995:	je     109a3 <mlx5_devx_cmd_modify_virtq+0x1e3>
     1 3.0e-05 :   10997:	mov    0x1c(%rsi),%eax
               :   1099a:	bswap  %eax
               :   1099c:	mov    %eax,0x88(%rsp)
               :   109a3:	test   $0x1000,%r8d
               :   109aa:	je     10a1f <mlx5_devx_cmd_modify_virtq+0x25f>
               :   109ac:	movzwl 0x30(%rsp),%ecx
               :   109b1:	xchg   %cl,%ch
               :   109b3:	movzbl 0xb(%rsi),%eax
               :   109b7:	and    $0x7fff,%cx
               :   109bc:	mov    %eax,%edx
               :   109be:	shr    %dl
               :   109c0:	and    $0x1,%edx
               :   109c3:	shl    $0xf,%edx
               :   109c6:	mov    %edx,%r10d
               :   109c9:	mov    %ecx,%edx
               :   109cb:	or     %r10d,%edx
               :   109ce:	xchg   %dl,%dh
               :   109d0:	xchg   %dl,%dh
               :   109d2:	mov    %eax,%ecx
               :   109d4:	shr    $0x2,%cl
               :   109d7:	and    $0x1,%ecx
               :   109da:	shl    $0xe,%ecx
               :   109dd:	mov    %ecx,%r10d
               :   109e0:	mov    %edx,%ecx
               :   109e2:	and    $0xbf,%ch
               :   109e5:	or     %r10d,%ecx
               :   109e8:	xchg   %cl,%ch
               :   109ea:	xchg   %cl,%ch
               :   109ec:	mov    %eax,%edx
               :   109ee:	shr    $0x3,%dl
               :   109f1:	and    $0x1,%edx
               :   109f4:	shl    $0xd,%edx
               :   109f7:	and    $0xdf,%ch
               :   109fa:	mov    %edx,%r10d
               :   109fd:	mov    %ecx,%edx
               :   109ff:	or     %r10d,%edx
               :   10a02:	xchg   %dl,%dh
               :   10a04:	xchg   %dl,%dh
               :   10a06:	shr    $0x4,%al
               :   10a09:	and    $0x1,%eax
               :   10a0c:	shl    $0xc,%eax
               :   10a0f:	mov    %eax,%ecx
               :   10a11:	mov    %edx,%eax
               :   10a13:	and    $0xef,%ah
               :   10a16:	or     %ecx,%eax
               :   10a18:	xchg   %al,%ah
               :   10a1a:	mov    %ax,0x30(%rsp)
               :   10a1f:	test   $0x2000,%r8d
               :   10a26:	je     10a63 <mlx5_devx_cmd_modify_virtq+0x2a3>
               :   10a28:	mov    %r9d,%ecx
               :   10a2b:	xchg   %cl,%ch
               :   10a2d:	movzbl 0xb(%rsi),%edx
               :   10a31:	and    $0xfffffff8,%ecx
               :   10a34:	shr    $0x5,%dl
               :   10a37:	movzbl %dl,%eax
               :   10a3a:	mov    %ecx,%r9d
               :   10a3d:	or     %r9d,%eax
               :   10a40:	xchg   %al,%ah
               :   10a42:	mov    %ax,0x60(%rsp)
               :   10a47:	mov    0x64(%rsp),%edx
               :   10a4b:	bswap  %edx
               :   10a4d:	mov    0x20(%rsi),%eax
               :   10a50:	and    $0xff000000,%edx
               :   10a56:	and    $0xffffff,%eax
               :   10a5b:	or     %edx,%eax
               :   10a5d:	bswap  %eax
               :   10a5f:	mov    %eax,0x64(%rsp)
               :   10a63:	mov    0x1d50e(%rip),%rax        # 2df78 <mlx5_glue@@INTERNAL-0x948>
               :   10a6a:	mov    (%rdi),%rdi
               :   10a6d:	mov    (%rax),%rax
               :   10a70:	mov    %rsp,%rcx
               :   10a73:	lea    0x10(%rsp),%rsi
               :   10a78:	mov    $0x10,%r8d
               :   10a7e:	mov    $0xd0,%edx
               :   10a83:	callq  *0x2e0(%rax)
               :   10a89:	test   %eax,%eax
               :   10a8b:	jne    10aae <mlx5_devx_cmd_modify_virtq+0x2ee>
               :   10a8d:	mov    0xe8(%rsp),%rbx
               :   10a95:	xor    %fs:0x28,%rbx
               :   10a9e:	jne    10aa9 <mlx5_devx_cmd_modify_virtq+0x2e9>
               :   10aa0:	add    $0xf0,%rsp
               :   10aa7:	pop    %rbx
               :   10aa8:	retq   
               :   10aa9:	callq  99a0 <__stack_chk_fail@plt>
               :   10aae:	lea    0x1debb(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   10ab5:	lea    0x16ba9(%rip),%rcx        # 27665 <crc32c_tables+0x26e5>
               :   10abc:	mov    (%rax),%esi
               :   10abe:	lea    0x11cab(%rip),%rdx        # 22770 <mlx5_common_driver_pmd_info+0x730>
               :   10ac5:	mov    $0x4,%edi
               :   10aca:	xor    %eax,%eax
               :   10acc:	callq  9010 <rte_log@plt>
               :   10ad1:	callq  9900 <__errno_location@plt>
               :   10ad6:	mov    (%rax),%ebx
               :   10ad8:	data16 lea 0x1d4c8(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   10ae0:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   10ae8:	mov    %ebx,(%rax)
               :   10aea:	mov    %ebx,%eax
               :   10aec:	neg    %eax
               :   10aee:	jmp    10a8d <mlx5_devx_cmd_modify_virtq+0x2cd>
               :   10af0:	lea    0x1de79(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   10af7:	lea    0x16b67(%rip),%rcx        # 27665 <crc32c_tables+0x26e5>
               :   10afe:	mov    (%rax),%esi
               :   10b00:	lea    0x11c29(%rip),%rdx        # 22730 <mlx5_common_driver_pmd_info+0x6f0>
               :   10b07:	mov    $0x4,%edi
               :   10b0c:	xor    %eax,%eax
               :   10b0e:	callq  9010 <rte_log@plt>
               :   10b13:	data16 lea 0x1d48d(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   10b1b:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   10b23:	movl   $0x16,(%rax)
               :   10b29:	mov    $0xffffffea,%eax
               :   10b2e:	jmpq   10a8d <mlx5_devx_cmd_modify_virtq+0x2cd>
               :   10b33:	data16 nopw %cs:0x0(%rax,%rax,1)
               :   10b3e:	xchg   %ax,%ax
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_common_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000019100 <mlx5_devx_rq_create>: /* mlx5_devx_rq_create total:      1 3.0e-05 */
               :   19100:	endbr64 
               :   19104:	push   %r15
               :   19106:	lea    0x10(%r8),%r10
               :   1910a:	push   %r14
               :   1910c:	mov    %r9d,%r14d
               :   1910f:	push   %r13
               :   19111:	mov    %rdi,%r13
               :   19114:	push   %r12
               :   19116:	mov    %rsi,%r12
               :   19119:	mov    %edx,%esi
               :   1911b:	push   %rbp
               :   1911c:	mov    %ecx,%edx
               :   1911e:	mov    %r8,%rbp
               :   19121:	push   %rbx
               :   19122:	sub    $0x88,%rsp
               :   19129:	mov    0x8(%r12),%rbx
               :   1912e:	mov    %fs:0x28,%rax
               :   19137:	mov    %rax,0x78(%rsp)
               :   1913c:	xor    %eax,%eax
               :   1913e:	test   %rbx,%rbx
               :   19141:	je     192c0 <mlx5_devx_rq_create+0x1c0>
               :   19147:	mov    (%rbx),%rax
               :   1914a:	vpxor  %xmm0,%xmm0,%xmm0
               :   1914e:	vmovaps %xmm0,0x10(%rsp)
               :   19154:	vmovaps %xmm0,0x20(%rsp)
               :   1915a:	vmovaps %xmm0,0x30(%rsp)
               :   19160:	test   %rax,%rax
               :   19163:	je     19200 <mlx5_devx_rq_create+0x100>
               :   19169:	mov    0x8(%rax),%eax
               :   1916c:	vpxor  %xmm0,%xmm0,%xmm0
               :   19170:	and    $0xffffff,%eax
               :   19175:	mov    %eax,%edx
               :   19177:	mov    0xc(%rbp),%eax
               :   1917a:	vmovups %xmm0,0x10(%rbp)
               :   1917f:	and    $0xff000000,%eax
               :   19184:	or     %edx,%eax
               :   19186:	mov    %eax,0xc(%rbp)
               :   19189:	movzwl 0x0(%rbp),%eax
               :   1918d:	mov    %r14d,%edx
               :   19190:	and    $0xef0f,%ax
               :   19194:	or     $0x10,%eax
               :   19197:	mov    %ax,0x0(%rbp)
               :   1919b:	movq   $0x0,0x30(%r10)
               :   191a3:	vmovups %xmm0,0x10(%r10)
               :   191a9:	vmovups %xmm0,0x20(%r10)
               :   191af:	mov    %rbp,%rsi
               :   191b2:	mov    %r13,%rdi
               :   191b5:	callq  99c0 <mlx5_devx_cmd_create_rq@plt>
               :   191ba:	test   %rax,%rax
               :   191bd:	je     1936e <mlx5_devx_rq_create+0x26e>
               :   191c3:	mov    %rax,(%r12)
               :   191c7:	mov    0x8(%r12),%rax
               :   191cc:	xor    %r8d,%r8d
               :   191cf:	incl   0x8(%rax)
               :   191d2:	mov    0x78(%rsp),%rax
               :   191d7:	xor    %fs:0x28,%rax
               :   191e0:	jne    19304 <mlx5_devx_rq_create+0x204>
               :   191e6:	add    $0x88,%rsp
               :   191ed:	pop    %rbx
               :   191ee:	pop    %rbp
               :   191ef:	pop    %r12
               :   191f1:	pop    %r13
     1 3.0e-05 :   191f3:	pop    %r14
               :   191f5:	mov    %r8d,%eax
               :   191f8:	pop    %r15
               :   191fa:	retq   
               :   191fb:	nopl   0x0(%rax,%rax,1)
               :   19200:	mov    0x40(%r8),%rax
               :   19204:	vmovdqu64 0x10(%r8),%xmm1
               :   1920b:	vmovdqu64 0x20(%r8),%xmm2
               :   19212:	vmovdqu64 0x30(%r8),%xmm3
               :   19219:	lea    0x10(%rbx),%r15
               :   1921d:	mov    %rax,0x70(%rsp)
               :   19222:	lea    0x40(%rsp),%r8
               :   19227:	lea    0x10(%rsp),%rax
               :   1922c:	mov    %r15,%r9
               :   1922f:	mov    %r14d,%ecx
               :   19232:	movzwl %dx,%edx
               :   19235:	mov    %r10,0x8(%rsp)
               :   1923a:	mov    %rax,(%rsp)
               :   1923e:	vmovaps %xmm1,0x40(%rsp)
               :   19244:	vmovaps %xmm2,0x50(%rsp)
               :   1924a:	vmovaps %xmm3,0x60(%rsp)
               :   19250:	callq  186a0 <mlx5_devx_wq_init>
               :   19255:	mov    %eax,%r8d
               :   19258:	test   %eax,%eax
               :   1925a:	jne    191d2 <mlx5_devx_rq_create+0xd2>
               :   19260:	movzbl 0x10(%rbp),%eax
               :   19264:	movabs $0xfffffffefffff0ff,%rdx
               :   1926e:	and    $0xf,%eax
               :   19271:	cmp    $0x3,%al
               :   19273:	setne  %al
               :   19276:	movzbl %al,%eax
               :   19279:	shl    $0x20,%rax
               :   1927d:	and    0x10(%rsp),%rdx
               :   19282:	or     $0x1,%ah
               :   19285:	mov    (%rsp),%rsi
               :   19289:	or     %rdx,%rax
               :   1928c:	mov    %r13,%rdi
               :   1928f:	mov    %r14d,%edx
               :   19292:	mov    %rax,0x10(%rsp)
               :   19297:	callq  97f0 <mlx5_devx_cmd_create_rmp@plt>
               :   1929c:	test   %rax,%rax
               :   1929f:	mov    %rax,(%rbx)
               :   192a2:	mov    0x8(%rsp),%r10
               :   192a7:	je     1935e <mlx5_devx_rq_create+0x25e>
               :   192ad:	mov    0x8(%r12),%rax
               :   192b2:	mov    (%rax),%rax
               :   192b5:	jmpq   19169 <mlx5_devx_rq_create+0x69>
               :   192ba:	nopw   0x0(%rax,%rax,1)
               :   192c0:	lea    0x10(%r12),%r15
               :   192c5:	mov    %r10,%r8
               :   192c8:	mov    %r15,%r9
               :   192cb:	mov    %r14d,%ecx
               :   192ce:	movzwl %dx,%edx
               :   192d1:	callq  186a0 <mlx5_devx_wq_init>
               :   192d6:	mov    %eax,%r8d
               :   192d9:	test   %eax,%eax
               :   192db:	jne    191d2 <mlx5_devx_rq_create+0xd2>
               :   192e1:	mov    %r14d,%edx
               :   192e4:	mov    %rbp,%rsi
               :   192e7:	mov    %r13,%rdi
               :   192ea:	mov    %eax,(%rsp)
               :   192ed:	callq  99c0 <mlx5_devx_cmd_create_rq@plt>
               :   192f2:	test   %rax,%rax
               :   192f5:	mov    (%rsp),%r8d
               :   192f9:	je     19309 <mlx5_devx_rq_create+0x209>
               :   192fb:	mov    %rax,(%r12)
               :   192ff:	jmpq   191d2 <mlx5_devx_rq_create+0xd2>
               :   19304:	callq  99a0 <__stack_chk_fail@plt>
               :   19309:	lea    0xe355(%rip),%rcx        # 27665 <crc32c_tables+0x26e5>
               :   19310:	lea    0xb909(%rip),%rdx        # 24c20 <this_pmd_name0+0x300>
               :   19317:	lea    0x15652(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   1931e:	mov    $0x4,%edi
               :   19323:	mov    (%rax),%esi
               :   19325:	xor    %eax,%eax
               :   19327:	callq  9010 <rte_log@plt>
               :   1932c:	data16 lea 0x14c74(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   19334:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   1933c:	mov    %r15,%rdi
               :   1933f:	mov    %rax,%rbx
               :   19342:	movl   $0xc,(%rax)
               :   19348:	callq  b744 <mlx5_devx_wq_res_destroy>
               :   1934d:	movl   $0xc,(%rbx)
               :   19353:	mov    $0xfffffff4,%r8d
               :   19359:	jmpq   191d2 <mlx5_devx_rq_create+0xd2>
               :   1935e:	lea    0xe300(%rip),%rcx        # 27665 <crc32c_tables+0x26e5>
               :   19365:	lea    0xb8e4(%rip),%rdx        # 24c50 <this_pmd_name0+0x330>
               :   1936c:	jmp    19317 <mlx5_devx_rq_create+0x217>
               :   1936e:	lea    0x155fb(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   19375:	lea    0xe2e9(%rip),%rcx        # 27665 <crc32c_tables+0x26e5>
               :   1937c:	mov    (%rax),%esi
               :   1937e:	lea    0xb8fb(%rip),%rdx        # 24c80 <this_pmd_name0+0x360>
               :   19385:	mov    $0x4,%edi
               :   1938a:	xor    %eax,%eax
               :   1938c:	callq  9010 <rte_log@plt>
               :   19391:	data16 lea 0x14c0f(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   19399:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   193a1:	mov    %r12,%rdi
               :   193a4:	mov    %rax,%rbx
               :   193a7:	movl   $0xc,(%rax)
               :   193ad:	callq  9460 <mlx5_devx_rq_destroy@plt>
               :   193b2:	movl   $0xc,(%rbx)
               :   193b8:	mov    $0xfffffff4,%r8d
               :   193be:	jmpq   191d2 <mlx5_devx_rq_create+0xd2>
               :   193c3:	data16 nopw %cs:0x0(%rax,%rax,1)
               :   193ce:	xchg   %ax,%ax
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_common_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000164a0 <mlx5_mr_mempool_register>: /* mlx5_mr_mempool_register total:      1 3.0e-05 */
               :   164a0:	endbr64 
               :   164a4:	push   %r15
               :   164a6:	push   %r14
               :   164a8:	xor    %r14d,%r14d
               :   164ab:	push   %r13
               :   164ad:	push   %r12
               :   164af:	push   %rbp
               :   164b0:	push   %rbx
               :   164b1:	sub    $0x78,%rsp
               :   164b5:	mov    %fs:0x28,%rax
               :   164be:	mov    %rax,0x68(%rsp)
               :   164c3:	xor    %eax,%eax
               :   164c5:	mov    0x38(%rsi),%eax
               :   164c8:	and    $0x40,%eax
               :   164cb:	mov    %eax,(%rsp)
               :   164ce:	je     16500 <mlx5_mr_mempool_register+0x60>
               :   164d0:	mov    0x68(%rsp),%rax
               :   164d5:	xor    %fs:0x28,%rax
               :   164de:	jne    165fa <mlx5_mr_mempool_register+0x15a>
               :   164e4:	add    $0x78,%rsp
               :   164e8:	pop    %rbx
               :   164e9:	pop    %rbp
               :   164ea:	pop    %r12
               :   164ec:	pop    %r13
               :   164ee:	mov    %r14d,%eax
               :   164f1:	pop    %r14
               :   164f3:	pop    %r15
               :   164f5:	retq   
               :   164f6:	nopw   %cs:0x0(%rax,%rax,1)
               :   16500:	mov    %rdi,%r13
               :   16503:	mov    %rsi,%rbp
               :   16506:	mov    %edx,%ebx
               :   16508:	callq  9330 <rte_eal_process_type@plt>
               :   1650d:	test   %eax,%eax
               :   1650f:	je     16538 <mlx5_mr_mempool_register+0x98>
               :   16511:	mov    $0xffffffff,%r14d
               :   16517:	cmp    $0x1,%eax
               :   1651a:	jne    164d0 <mlx5_mr_mempool_register+0x30>
               :   1651c:	movzbl %bl,%ecx
               :   1651f:	mov    $0x1,%edx
               :   16524:	mov    %rbp,%rsi
               :   16527:	mov    %r13,%rdi
               :   1652a:	callq  93a0 <mlx5_mp_req_mempool_reg@plt>
               :   1652f:	mov    %eax,%r14d
               :   16532:	jmp    164d0 <mlx5_mr_mempool_register+0x30>
               :   16534:	nopl   0x0(%rax)
               :   16538:	mov    0x28(%r13),%r10
               :   1653c:	lea    0x38(%r13),%r15
               :   16540:	jmp    1654a <mlx5_mr_mempool_register+0xaa>
               :   16542:	nopw   0x0(%rax,%rax,1)
               :   16548:	pause  
               :   1654a:	mov    (%r15),%eax
               :   1654d:	test   $0x3,%al
               :   1654f:	jne    16548 <mlx5_mr_mempool_register+0xa8>
               :   16551:	mov    $0x4,%r14d
               :   16557:	lock xadd %r14d,(%r15)
               :   1655c:	and    $0x3,%r14d
               :   16560:	jne    165f0 <mlx5_mr_mempool_register+0x150>
               :   16566:	mov    0x60(%r13),%r12
               :   1656a:	test   %r12,%r12
               :   1656d:	jne    16581 <mlx5_mr_mempool_register+0xe1>
               :   1656f:	jmpq   165ff <mlx5_mr_mempool_register+0x15f>
               :   16574:	nopl   0x0(%rax)
               :   16578:	mov    (%r12),%r12
               :   1657c:	test   %r12,%r12
               :   1657f:	je     165ff <mlx5_mr_mempool_register+0x15f>
               :   16581:	cmp    0x10(%r12),%rbp
               :   16586:	jne    16578 <mlx5_mr_mempool_register+0xd8>
               :   16588:	lock subl $0x4,(%r15)
               :   1658d:	test   %bl,%bl
               :   1658f:	jne    166fd <mlx5_mr_mempool_register+0x25d>
               :   16595:	lea    0x183d4(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   1659c:	lea    0x110c2(%rip),%r9        # 27665 <crc32c_tables+0x26e5>
               :   165a3:	mov    (%rax),%esi
               :   165a5:	mov    %r10,%r8
               :   165a8:	mov    %rbp,%rcx
               :   165ab:	lea    0xd7e6(%rip),%rdx        # 23d98 <this_pmd_name0+0x3e8>
               :   165b2:	mov    $0x8,%edi
               :   165b7:	xor    %eax,%eax
               :   165b9:	callq  9010 <rte_log@plt>
               :   165be:	data16 lea 0x179e2(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   165c6:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   165ce:	movq   $0x0,0x10(%rsp)
               :   165d7:	or     $0xffffffff,%r14d
               :   165db:	movl   $0x11,(%rax)
               :   165e1:	mov    0x10(%rsp),%rdi
               :   165e6:	callq  9470 <free@plt>
               :   165eb:	jmpq   164d0 <mlx5_mr_mempool_register+0x30>
               :   165f0:	lock subl $0x4,(%r15)
               :   165f5:	jmpq   1654a <mlx5_mr_mempool_register+0xaa>
               :   165fa:	callq  99a0 <__stack_chk_fail@plt>
               :   165ff:	lock subl $0x4,(%r15)
               :   16604:	test   %bl,%bl
               :   16606:	je     1670e <mlx5_mr_mempool_register+0x26e>
               :   1660c:	xor    %r12d,%r12d
               :   1660f:	lea    0x1835a(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   16616:	lea    0x11048(%rip),%r8        # 27665 <crc32c_tables+0x26e5>
               :   1661d:	mov    (%rax),%esi
               :   1661f:	mov    %rax,0x18(%rsp)
               :   16624:	mov    %rbp,%rcx
               :   16627:	lea    0xd7aa(%rip),%rdx        # 23dd8 <this_pmd_name0+0x428>
               :   1662e:	mov    $0x8,%edi
               :   16633:	xor    %eax,%eax
               :   16635:	mov    %r10,0x20(%rsp)
               :   1663a:	callq  9010 <rte_log@plt>
               :   1663f:	vpxor  %xmm0,%xmm0,%xmm0
               :   16643:	lea    0x50(%rsp),%rdx
               :   16648:	lea    -0xe7f(%rip),%rsi        # 157d0 <mlx5_mempool_get_extmem_cb>
               :   1664f:	mov    %rbp,%rdi
               :   16652:	vmovaps %xmm0,0x50(%rsp)
               :   16658:	callq  9630 <rte_mempool_obj_iter@plt>
               :   1665d:	mov    0x50(%rsp),%rax
               :   16662:	cmpl   $0x0,0x5c(%rsp)
               :   16667:	mov    %rax,0x10(%rsp)
               :   1666c:	mov    0x58(%rsp),%eax
               :   16670:	mov    0x20(%rsp),%r10
               :   16675:	mov    %eax,0x8(%rsp)
               :   16679:	mov    %eax,%r8d
               :   1667c:	js     16770 <mlx5_mr_mempool_register+0x2d0>
               :   16682:	mov    0x10(%rsp),%rdi
               :   16687:	mov    %r8,%rsi
               :   1668a:	lea    -0x1021(%rip),%rcx        # 15670 <mlx5_range_compare_start>
               :   16691:	mov    $0x10,%edx
               :   16696:	mov    %r10,0x20(%rsp)
               :   1669b:	callq  9910 <qsort@plt>
               :   166a0:	mov    0x10(%rsp),%r9
               :   166a5:	mov    0x20(%rsp),%r10
               :   166aa:	lea    0x10(%r9),%rax
               :   166ae:	mov    $0x1,%esi
               :   166b3:	mov    $0x1,%r8d
               :   166b9:	xor    %edi,%edi
               :   166bb:	mov    %edi,%edx
               :   166bd:	shl    $0x4,%rdx
               :   166c1:	mov    -0x8(%rax),%rcx
               :   166c5:	add    %r9,%rdx
               :   166c8:	cmp    0x8(%rsp),%esi
               :   166cc:	jae    16809 <mlx5_mr_mempool_register+0x369>
               :   166d2:	cmp    %rcx,(%rax)
               :   166d5:	je     166f5 <mlx5_mr_mempool_register+0x255>
               :   166d7:	mov    %rcx,0x8(%rdx)
               :   166db:	mov    %r8d,%edx
               :   166de:	shl    $0x4,%rdx
               :   166e2:	vmovdqu64 (%rax),%xmm1
               :   166e8:	inc    %r8d
               :   166eb:	vmovups %xmm1,(%r9,%rdx,1)
               :   166f1:	lea    -0x1(%r8),%edi
               :   166f5:	inc    %esi
               :   166f7:	add    $0x10,%rax
               :   166fb:	jmp    166bb <mlx5_mr_mempool_register+0x21b>
               :   166fd:	cmpb   $0x0,0x24(%r12)
               :   16703:	jne    16595 <mlx5_mr_mempool_register+0xf5>
               :   16709:	jmpq   1660f <mlx5_mr_mempool_register+0x16f>
               :   1670e:	lea    0x1825b(%rip),%rax        # 2e970 <mlx5_common_logtype>
               :   16715:	lea    0x10f49(%rip),%r8        # 27665 <crc32c_tables+0x26e5>
               :   1671c:	mov    (%rax),%esi
               :   1671e:	mov    %rax,0x18(%rsp)
               :   16723:	mov    %rbp,%rcx
               :   16726:	lea    0xd6f3(%rip),%rdx        # 23e20 <this_pmd_name0+0x470>
               :   1672d:	mov    $0x8,%edi
               :   16732:	xor    %eax,%eax
               :   16734:	mov    %r10,0x28(%rsp)
               :   16739:	callq  9010 <rte_log@plt>
               :   1673e:	mov    0x80(%rbp),%r8d
               :   16745:	mov    $0x10,%edi
               :   1674a:	mov    %r8,%rsi
               :   1674d:	mov    %r8d,0x8(%rsp)
               :   16752:	mov    %r8,0x20(%rsp)
               :   16757:	callq  9ab0 <calloc@plt>
               :   1675c:	test   %rax,%rax
               :   1675f:	mov    %rax,0x10(%rsp)
               :   16764:	mov    0x20(%rsp),%r8
               :   16769:	mov    0x28(%rsp),%r10
               :   1676e:	jne    167db <mlx5_mr_mempool_register+0x33b>
               :   16770:	mov    0x18(%rsp),%rbx
               :   16775:	lea    0x10ee9(%rip),%r8        # 27665 <crc32c_tables+0x26e5>
               :   1677c:	mov    (%rbx),%esi
               :   1677e:	mov    %rbp,%rcx
               :   16781:	lea    0xd6d8(%rip),%rdx        # 23e60 <this_pmd_name0+0x4b0>
               :   16788:	mov    $0x4,%edi
               :   1678d:	xor    %eax,%eax
               :   1678f:	callq  9010 <rte_log@plt>
               :   16794:	mov    (%rbx),%esi
               :   16796:	lea    0x10ec8(%rip),%r8        # 27665 <crc32c_tables+0x26e5>
               :   1679d:	mov    %rbp,%rcx
               :   167a0:	lea    0xd6f9(%rip),%rdx        # 23ea0 <this_pmd_name0+0x4f0>
               :   167a7:	mov    $0x4,%edi
               :   167ac:	xor    %eax,%eax
               :   167ae:	callq  9010 <rte_log@plt>
               :   167b3:	data16 lea 0x177ed(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   167bb:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   167c3:	or     $0xffffffff,%r14d
               :   167c7:	movq   $0x0,0x10(%rsp)
               :   167d0:	movl   $0xc,(%rax)
               :   167d6:	jmpq   165e1 <mlx5_mr_mempool_register+0x141>
               :   167db:	mov    %rax,%rdx
               :   167de:	lea    -0x1155(%rip),%rsi        # 15690 <mlx5_range_from_mempool_chunk>
               :   167e5:	mov    %rbp,%rdi
               :   167e8:	mov    %r8,0x28(%rsp)
               :   167ed:	mov    %r10,0x20(%rsp)
               :   167f2:	xor    %r12d,%r12d
               :   167f5:	callq  9750 <rte_mempool_mem_iter@plt>
               :   167fa:	mov    0x20(%rsp),%r10
               :   167ff:	mov    0x28(%rsp),%r8
               :   16804:	jmpq   16682 <mlx5_mr_mempool_register+0x1e2>
               :   16809:	mov    0x10(%rsp),%rax
               :   1680e:	mov    %rcx,0x8(%rdx)
               :   16812:	mov    (%rax),%rdi
               :   16815:	mov    %r10,0x28(%rsp)
               :   1681a:	mov    %rdx,0x8(%rsp)
               :   1681f:	mov    %r8d,0x20(%rsp)
               :   16824:	callq  9840 <rte_mem_virt2memseg_list@plt>
               :   16829:	test   %rax,%rax
               :   1682c:	mov    0x8(%rsp),%rdx
               :   16831:	mov    0x28(%rsp),%r10
               :   16836:	mov    %rax,%rcx
               :   16839:	je     1685f <mlx5_mr_mempool_register+0x3bf>
               :   1683b:	xor    %esi,%esi
               :   1683d:	xor    %eax,%eax
               :   1683f:	cmp    0x20(%rsp),%esi
               :   16843:	je     16bb7 <mlx5_mr_mempool_register+0x717>
               :   16849:	mov    0x8(%rcx),%rdi
               :   1684d:	test   %rax,%rax
               :   16850:	je     16cef <mlx5_mr_mempool_register+0x84f>
               :   16856:	cmp    %rdi,%rax
               :   16859:	je     16cef <mlx5_mr_mempool_register+0x84f>
               :   1685f:	xor    %r8d,%r8d
               :   16862:	or     $0xffffffff,%ecx
               :   16865:	mov    $0x40,%edx
               :   1686a:	mov    $0x28,%esi
               :   1686f:	mov    $0x6,%edi
               :   16874:	mov    %r8b,0x30(%rsp)
               :   16879:	mov    %r10,0x28(%rsp)
               :   1687e:	callq  93f0 <mlx5_malloc@plt>
               :   16883:	test   %rax,%rax
               :   16886:	mov    %rax,0x8(%rsp)
               :   1688b:	mov    0x28(%rsp),%r10
               :   16890:	movzbl 0x30(%rsp),%r8d
               :   16896:	jne    1690a <mlx5_mr_mempool_register+0x46a>
               :   16898:	mov    0x18(%rsp),%rax
               :   1689d:	lea    0x10dc1(%rip),%r8        # 27665 <crc32c_tables+0x26e5>
               :   168a4:	mov    (%rax),%esi
               :   168a6:	mov    %rbp,%rcx
               :   168a9:	lea    0xd628(%rip),%rdx        # 23ed8 <this_pmd_name0+0x528>
               :   168b0:	mov    $0x4,%edi
               :   168b5:	xor    %eax,%eax
               :   168b7:	mov    %r10,(%rsp)
               :   168bb:	callq  9010 <rte_log@plt>
               :   168c0:	mov    (%rsp),%r10
               :   168c4:	mov    0x18(%rsp),%rax
               :   168c9:	lea    0x10d95(%rip),%r9        # 27665 <crc32c_tables+0x26e5>
               :   168d0:	mov    (%rax),%esi
               :   168d2:	mov    %r10,%r8
               :   168d5:	mov    %rbp,%rcx
               :   168d8:	lea    0xd681(%rip),%rdx        # 23f60 <this_pmd_name0+0x5b0>
               :   168df:	mov    $0x4,%edi
               :   168e4:	xor    %eax,%eax
               :   168e6:	callq  9010 <rte_log@plt>
               :   168eb:	data16 lea 0x176b5(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   168f3:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   168fb:	or     $0xffffffff,%r14d
               :   168ff:	movl   $0xc,(%rax)
               :   16905:	jmpq   165e1 <mlx5_mr_mempool_register+0x141>
               :   1690a:	mov    0x20(%rsp),%esi
               :   1690e:	or     $0xffffffff,%ecx
               :   16911:	imul   $0x30,%rsi,%rsi
               :   16915:	mov    $0x40,%edx
               :   1691a:	mov    $0x6,%edi
               :   1691f:	mov    %r8b,0x30(%rsp)
               :   16924:	mov    %r10,0x28(%rsp)
               :   16929:	callq  93f0 <mlx5_malloc@plt>
               :   1692e:	mov    0x8(%rsp),%rcx
               :   16933:	test   %rax,%rax
               :   16936:	mov    %rax,0x18(%rcx)
               :   1693a:	mov    0x28(%rsp),%r10
               :   1693f:	movzbl 0x30(%rsp),%r8d
               :   16945:	jne    16982 <mlx5_mr_mempool_register+0x4e2>
               :   16947:	mov    0x18(%rsp),%rax
               :   1694c:	lea    0x10d12(%rip),%r8        # 27665 <crc32c_tables+0x26e5>
               :   16953:	mov    (%rax),%esi
               :   16955:	mov    %rbp,%rcx
               :   16958:	lea    0xd5c1(%rip),%rdx        # 23f20 <this_pmd_name0+0x570>
               :   1695f:	mov    $0x4,%edi
               :   16964:	xor    %eax,%eax
               :   16966:	mov    %r10,(%rsp)
               :   1696a:	callq  9010 <rte_log@plt>
               :   1696f:	mov    0x8(%rsp),%rdi
               :   16974:	callq  98c0 <mlx5_free@plt>
               :   16979:	mov    (%rsp),%r10
               :   1697d:	jmpq   168c4 <mlx5_mr_mempool_register+0x424>
               :   16982:	mov    0x8(%rsp),%rax
               :   16987:	mov    0x20(%rsp),%ecx
               :   1698b:	mov    %rbp,0x10(%rax)
               :   1698f:	mov    %ecx,0x20(%rax)
               :   16992:	mov    %bl,0x24(%rax)
               :   16995:	test   %r8b,%r8b
               :   16998:	je     169fa <mlx5_mr_mempool_register+0x55a>
               :   1699a:	mov    %r15,%rdi
               :   1699d:	mov    %r10,0x28(%rsp)
               :   169a2:	callq  15790 <rte_rwlock_write_lock>
               :   169a7:	mov    0x60(%r13),%rdx
               :   169ab:	mov    0x28(%rsp),%r10
               :   169b0:	test   %rdx,%rdx
               :   169b3:	je     169f5 <mlx5_mr_mempool_register+0x555>
               :   169b5:	mov    0x10(%rsp),%rcx
               :   169ba:	mov    0x18(%rdx),%rax
               :   169be:	mov    (%rcx),%rcx
               :   169c1:	cmp    %rcx,0x8(%rax)
               :   169c5:	jne    16baf <mlx5_mr_mempool_register+0x70f>
               :   169cb:	mov    0x8(%rsp),%rsi
               :   169d0:	mov    (%rsp),%ecx
               :   169d3:	mov    %rax,0x18(%rsi)
               :   169d7:	cmp    0x20(%rsi),%ecx
               :   169da:	jae    16c1c <mlx5_mr_mempool_register+0x77c>
               :   169e0:	mov    %ecx,%eax
               :   169e2:	imul   $0x30,%rax,%rax
               :   169e6:	add    0x18(%rsi),%rax
               :   169ea:	add    $0x28,%rax
               :   169ee:	lock incl (%rax)
               :   169f1:	inc    %ecx
               :   169f3:	jmp    169d7 <mlx5_mr_mempool_register+0x537>
               :   169f5:	lock subl $0x2,(%r15)
               :   169fa:	lea    0x34(%r13),%rax
               :   169fe:	mov    0x10(%rsp),%r11
               :   16a03:	mov    %rax,0x28(%rsp)
               :   16a08:	xor    %ebx,%ebx
               :   16a0a:	mov    %r12,0x30(%rsp)
               :   16a0f:	mov    %r14d,0x3c(%rsp)
               :   16a14:	mov    %r10,%r12
               :   16a17:	mov    %rbx,%r14
               :   16a1a:	mov    %r11,%rbx
               :   16a1d:	mov    %r14d,%eax
               :   16a20:	cmp    0x20(%rsp),%r14d
               :   16a25:	jae    16acb <mlx5_mr_mempool_register+0x62b>
               :   16a2b:	imul   $0x30,%r14,%rcx
               :   16a2f:	mov    0x8(%rsp),%rax
               :   16a34:	mov    (%rbx),%rsi
               :   16a37:	mov    0x8(%rbx),%rdx
               :   16a3b:	add    0x18(%rax),%rcx
               :   16a3f:	sub    %rsi,%rdx
               :   16a42:	mov    %r12,%rdi
               :   16a45:	mov    %rcx,0x48(%rsp)
               :   16a4a:	mov    %rdx,0x40(%rsp)
               :   16a4f:	callq  *0x68(%r13)
               :   16a53:	test   %eax,%eax
               :   16a55:	mov    0x40(%rsp),%rdx
               :   16a5a:	mov    0x48(%rsp),%rcx
               :   16a5f:	jns    16b6f <mlx5_mr_mempool_register+0x6cf>
               :   16a65:	mov    0x8(%rbx),%r9
               :   16a69:	push   %rax
               :   16a6a:	lea    0x10bf4(%rip),%rax        # 27665 <crc32c_tables+0x26e5>
               :   16a71:	mov    %r12,%rcx
               :   16a74:	push   %rax
               :   16a75:	mov    $0x4,%edi
               :   16a7a:	push   %rbp
               :   16a7b:	push   %rdx
               :   16a7c:	lea    0xd575(%rip),%rdx        # 23ff8 <this_pmd_name0+0x648>
               :   16a83:	mov    0x38(%rsp),%rax
               :   16a88:	mov    (%rbx),%r8
               :   16a8b:	mov    (%rax),%esi
               :   16a8d:	xor    %eax,%eax
               :   16a8f:	callq  9010 <rte_log@plt>
               :   16a94:	add    $0x20,%rsp
               :   16a98:	mov    0x8(%rsp),%rsi
               :   16a9d:	mov    0x28(%rsp),%rdi
               :   16aa2:	mov    $0x1,%edx
               :   16aa7:	callq  156e0 <mlx5_mempool_reg_destroy>
               :   16aac:	data16 lea 0x174f4(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   16ab4:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   16abc:	or     $0xffffffff,%r14d
               :   16ac0:	movl   $0x16,(%rax)
               :   16ac6:	jmpq   165e1 <mlx5_mr_mempool_register+0x141>
               :   16acb:	mov    %r12,%r10
               :   16ace:	mov    0x3c(%rsp),%r14d
               :   16ad3:	mov    0x30(%rsp),%r12
               :   16ad8:	cmp    0x20(%rsp),%eax
               :   16adc:	jne    16a98 <mlx5_mr_mempool_register+0x5f8>
               :   16ade:	mov    %r15,%rdi
               :   16ae1:	mov    %r10,0x20(%rsp)
               :   16ae6:	callq  15790 <rte_rwlock_write_lock>
               :   16aeb:	mov    0x60(%r13),%rdx
               :   16aef:	mov    0x20(%rsp),%r10
               :   16af4:	test   %rdx,%rdx
               :   16af7:	je     16bec <mlx5_mr_mempool_register+0x74c>
               :   16afd:	cmp    0x10(%rdx),%rbp
               :   16b01:	jne    16c14 <mlx5_mr_mempool_register+0x774>
               :   16b07:	test   %r12,%r12
               :   16b0a:	jne    16cf9 <mlx5_mr_mempool_register+0x859>
               :   16b10:	lock subl $0x2,(%r15)
               :   16b15:	lea    0x10b49(%rip),%r9        # 27665 <crc32c_tables+0x26e5>
               :   16b1c:	lea    0xd275(%rip),%rdx        # 23d98 <this_pmd_name0+0x3e8>
               :   16b23:	mov    $0x8,%edi
               :   16b28:	or     $0xffffffff,%r14d
               :   16b2c:	mov    0x18(%rsp),%rax
               :   16b31:	mov    %r10,%r8
               :   16b34:	mov    (%rax),%esi
               :   16b36:	mov    %rbp,%rcx
               :   16b39:	xor    %eax,%eax
               :   16b3b:	callq  9010 <rte_log@plt>
               :   16b40:	mov    0x8(%rsp),%rsi
               :   16b45:	mov    0x28(%rsp),%rdi
               :   16b4a:	mov    $0x1,%edx
               :   16b4f:	callq  156e0 <mlx5_mempool_reg_destroy>
               :   16b54:	data16 lea 0x1744c(%rip),%rdi        # 2dfa8 <per_lcore__rte_errno@DPDK_23>
               :   16b5c:	data16 data16 callq 95d0 <__tls_get_addr@plt>
               :   16b64:	movl   $0x11,(%rax)
               :   16b6a:	jmpq   165e1 <mlx5_mr_mempool_register+0x141>
               :   16b6f:	lea    0x10aef(%rip),%rax        # 27665 <crc32c_tables+0x26e5>
               :   16b76:	push   %rax
               :   16b77:	mov    (%rcx),%ecx
               :   16b79:	mov    %r12,%r8
               :   16b7c:	push   %rbp
               :   16b7d:	mov    $0x8,%edi
               :   16b82:	inc    %r14
               :   16b85:	push   %rdx
               :   16b86:	lea    0xd4db(%rip),%rdx        # 24068 <this_pmd_name0+0x6b8>
               :   16b8d:	add    $0x10,%rbx
               :   16b91:	pushq  -0x8(%rbx)
               :   16b94:	mov    0x38(%rsp),%rax
               :   16b99:	mov    -0x10(%rbx),%r9
               :   16b9d:	mov    (%rax),%esi
               :   16b9f:	xor    %eax,%eax
               :   16ba1:	callq  9010 <rte_log@plt>
               :   16ba6:	add    $0x20,%rsp
               :   16baa:	jmpq   16a1d <mlx5_mr_mempool_register+0x57d>
               :   16baf:	mov    (%rdx),%rdx
               :   16bb2:	jmpq   169b0 <mlx5_mr_mempool_register+0x510>
               :   16bb7:	mov    %rax,%rcx
               :   16bba:	mov    0x10(%rsp),%rdi
               :   16bbf:	neg    %rcx
               :   16bc2:	and    (%rdi),%rcx
               :   16bc5:	add    %rcx,%rax
               :   16bc8:	cmp    %rax,0x8(%rdx)
               :   16bcc:	jae    1685f <mlx5_mr_mempool_register+0x3bf>
               :   16bd2:	mov    %rcx,(%rdi)
               :   16bd5:	mov    %rax,0x8(%rdi)
               :   16bd9:	movl   $0x1,0x20(%rsp)
               :   16be1:	mov    $0x1,%r8d
               :   16be7:	jmpq   16862 <mlx5_mr_mempool_register+0x3c2>
               :   16bec:	mov    (%rsp),%edx
               :   16bef:	mov    0x8(%rsp),%rcx
               :   16bf4:	xor    %ebx,%ebx
               :   16bf6:	cmp    0x20(%rcx),%edx
               :   16bf9:	jae    16c7f <mlx5_mr_mempool_register+0x7df>
               :   16bff:	mov    %edx,%eax
               :   16c01:	imul   $0x30,%rax,%rax
               :   16c05:	add    0x18(%rcx),%rax
               :   16c09:	add    $0x28,%rax
               :   16c0d:	lock incl (%rax)
               :   16c10:	inc    %edx
               :   16c12:	jmp    16bf6 <mlx5_mr_mempool_register+0x756>
               :   16c14:	mov    (%rdx),%rdx
               :   16c17:	jmpq   16af4 <mlx5_mr_mempool_register+0x654>
               :   16c1c:	mov    0x60(%r13),%rax
               :   16c20:	mov    0x8(%rsp),%rcx
               :   16c25:	mov    %rax,(%rcx)
               :   16c28:	test   %rax,%rax
               :   16c2b:	je     16c31 <mlx5_mr_mempool_register+0x791>
               :   16c2d:	mov    %rcx,0x8(%rax)
               :   16c31:	mov    0x8(%rsp),%rax
               :   16c36:	add    $0x60,%r13
               :   16c3a:	mov    %rax,0x0(%r13)
               :   16c3e:	mov    %r13,0x8(%rax)
               :   16c42:	lock subl $0x2,(%r15)
               :   16c47:	lea    0x10a17(%rip),%rcx        # 27665 <crc32c_tables+0x26e5>
               :   16c4e:	mov    $0x8,%edi
               :   16c53:	mov    0x18(%rdx),%rax
               :   16c57:	push   %rcx
               :   16c58:	mov    (%rax),%ecx
               :   16c5a:	mov    %rbp,%r9
               :   16c5d:	pushq  0x10(%rdx)
               :   16c60:	mov    %r10,%r8
               :   16c63:	lea    0xd346(%rip),%rdx        # 23fb0 <this_pmd_name0+0x600>
               :   16c6a:	mov    0x28(%rsp),%rax
               :   16c6f:	mov    (%rax),%esi
               :   16c71:	xor    %eax,%eax
               :   16c73:	callq  9010 <rte_log@plt>
               :   16c78:	pop    %rdx
               :   16c79:	pop    %rcx
               :   16c7a:	jmpq   165e1 <mlx5_mr_mempool_register+0x141>
               :   16c7f:	mov    0x60(%r13),%rax
     1 3.0e-05 :   16c83:	mov    %rcx,0x8(%rsp)
               :   16c88:	mov    %rax,(%rcx)
               :   16c8b:	test   %rax,%rax
               :   16c8e:	je     16c94 <mlx5_mr_mempool_register+0x7f4>
               :   16c90:	mov    %rcx,0x8(%rax)
               :   16c94:	mov    0x8(%rsp),%rax
               :   16c99:	add    $0x60,%r13
               :   16c9d:	mov    %rax,0x0(%r13)
               :   16ca1:	mov    %r13,0x8(%rax)
               :   16ca5:	lock subl $0x2,(%r15)
               :   16caa:	test   %r12,%r12
               :   16cad:	je     165e1 <mlx5_mr_mempool_register+0x141>
               :   16cb3:	mov    0x18(%rsp),%rax
               :   16cb8:	lea    0x109a6(%rip),%r9        # 27665 <crc32c_tables+0x26e5>
               :   16cbf:	mov    (%rax),%esi
               :   16cc1:	mov    %r10,%r8
               :   16cc4:	mov    %rbp,%rcx
               :   16cc7:	lea    0xd40a(%rip),%rdx        # 240d8 <this_pmd_name0+0x728>
               :   16cce:	mov    $0x8,%edi
               :   16cd3:	xor    %eax,%eax
               :   16cd5:	callq  9010 <rte_log@plt>
               :   16cda:	mov    0x28(%rsp),%rdi
               :   16cdf:	movzbl %bl,%edx
               :   16ce2:	mov    %r12,%rsi
               :   16ce5:	callq  156e0 <mlx5_mempool_reg_destroy>
               :   16cea:	jmpq   165e1 <mlx5_mr_mempool_register+0x141>
               :   16cef:	inc    %esi
               :   16cf1:	mov    %rdi,%rax
               :   16cf4:	jmpq   1683f <mlx5_mr_mempool_register+0x39f>
               :   16cf9:	cmp    %r12,%rdx
               :   16cfc:	jne    16b10 <mlx5_mr_mempool_register+0x670>
               :   16d02:	mov    (%r12),%rcx
               :   16d06:	mov    0x8(%r12),%rax
               :   16d0b:	test   %rcx,%rcx
               :   16d0e:	je     16d19 <mlx5_mr_mempool_register+0x879>
               :   16d10:	mov    %rax,0x8(%rcx)
               :   16d14:	mov    0x8(%r12),%rax
               :   16d19:	mov    %rcx,(%rax)
               :   16d1c:	xor    %ebx,%ebx
               :   16d1e:	xor    %ecx,%ecx
               :   16d20:	cmp    0x20(%rdx),%ecx
               :   16d23:	jae    16d3f <mlx5_mr_mempool_register+0x89f>
               :   16d25:	mov    %ecx,%eax
               :   16d27:	imul   $0x30,%rax,%rax
               :   16d2b:	add    0x18(%rdx),%rax
               :   16d2f:	add    $0x28,%rax
               :   16d33:	lock decl (%rax)
               :   16d36:	sete   %al
               :   16d39:	or     %eax,%ebx
               :   16d3b:	inc    %ecx
               :   16d3d:	jmp    16d20 <mlx5_mr_mempool_register+0x880>
               :   16d3f:	mov    (%rsp),%edx
               :   16d42:	mov    0x8(%rsp),%rcx
               :   16d47:	jmpq   16bf6 <mlx5_mr_mempool_register+0x756>
               :   16d4c:	nopl   0x0(%rax)
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_dpaa2.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000009975 <dpaa2_flow_create.cold>: /* dpaa2_flow_create.cold total:      1 3.0e-05 */
               :    9975:	lea    0x2fba4(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    997c:	lea    0x24ebd(%rip),%rdx        # 2e840 <dpaa2_xstats_strings+0x1c60>
               :    9983:	mov    (%rbx),%esi
               :    9985:	mov    $0x4,%edi
               :    998a:	xor    %eax,%eax
               :    998c:	callq  4670 <rte_log@plt>
               :    9991:	mov    $0xffffffa1,%r12d
               :    9997:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    999c:	lea    0x2fb7d(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    99a3:	lea    0x207ae(%rip),%rdx        # 2a158 <dpdmux_pmd_info+0xb8>
               :    99aa:	mov    (%rbx),%esi
               :    99ac:	mov    $0x4,%edi
               :    99b1:	xor    %eax,%eax
               :    99b3:	mov    0x30(%rsp),%r15
               :    99b8:	or     $0xffffffff,%r12d
               :    99bc:	callq  4670 <rte_log@plt>
               :    99c1:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    99c6:	lea    0x2fb53(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    99cd:	mov    %eax,%ecx
               :    99cf:	mov    (%rbx),%esi
               :    99d1:	lea    0x259d8(%rip),%rdx        # 2f3b0 <dpaa2_xstats_strings+0x27d0>
               :    99d8:	mov    $0x4,%edi
               :    99dd:	xor    %eax,%eax
               :    99df:	mov    0x30(%rsp),%r15
               :    99e4:	or     $0xffffffff,%r12d
               :    99e8:	callq  4670 <rte_log@plt>
               :    99ed:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    99f2:	lea    0x2fb27(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    99f9:	mov    %eax,%ecx
               :    99fb:	mov    (%rbx),%esi
               :    99fd:	lea    0x2597c(%rip),%rdx        # 2f380 <dpaa2_xstats_strings+0x27a0>
               :    9a04:	mov    $0x4,%edi
               :    9a09:	xor    %eax,%eax
               :    9a0b:	mov    0x30(%rsp),%r15
               :    9a10:	or     $0xffffffff,%r12d
               :    9a14:	callq  4670 <rte_log@plt>
               :    9a19:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9a1e:	lea    0x2fafb(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9a25:	lea    0x2072c(%rip),%rdx        # 2a158 <dpdmux_pmd_info+0xb8>
               :    9a2c:	mov    (%rbx),%esi
               :    9a2e:	mov    $0x4,%edi
               :    9a33:	xor    %eax,%eax
               :    9a35:	mov    0x30(%rsp),%r15
               :    9a3a:	or     $0xffffffff,%r12d
               :    9a3e:	callq  4670 <rte_log@plt>
               :    9a43:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9a48:	lea    0x2fad1(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9a4f:	mov    %eax,%ecx
               :    9a51:	mov    (%rbx),%esi
               :    9a53:	lea    0x25b6e(%rip),%rdx        # 2f5c8 <dpaa2_xstats_strings+0x29e8>
               :    9a5a:	mov    $0x4,%edi
               :    9a5f:	xor    %eax,%eax
               :    9a61:	mov    0x30(%rsp),%r15
               :    9a66:	or     $0xffffffff,%r12d
               :    9a6a:	callq  4670 <rte_log@plt>
               :    9a6f:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9a74:	lea    0x2faa5(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9a7b:	lea    0x254e6(%rip),%rdx        # 2ef68 <dpaa2_xstats_strings+0x2388>
               :    9a82:	mov    (%rbx),%esi
               :    9a84:	mov    $0x4,%edi
               :    9a89:	xor    %eax,%eax
               :    9a8b:	callq  4670 <rte_log@plt>
               :    9a90:	mov    (%rbx),%esi
               :    9a92:	lea    0x256ff(%rip),%rdx        # 2f198 <dpaa2_xstats_strings+0x25b8>
               :    9a99:	mov    $0x4,%edi
               :    9a9e:	xor    %eax,%eax
               :    9aa0:	callq  4670 <rte_log@plt>
               :    9aa5:	or     $0xffffffff,%r12d
               :    9aa9:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9aae:	lea    0x2fa6b(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9ab5:	lea    0x2579c(%rip),%rdx        # 2f258 <dpaa2_xstats_strings+0x2678>
               :    9abc:	mov    (%rbx),%esi
               :    9abe:	mov    $0x5,%edi
               :    9ac3:	xor    %eax,%eax
               :    9ac5:	callq  4670 <rte_log@plt>
               :    9aca:	lea    0x257e7(%rip),%rdx        # 2f2b8 <dpaa2_xstats_strings+0x26d8>
               :    9ad1:	mov    (%rbx),%esi
               :    9ad3:	mov    $0x4,%edi
               :    9ad8:	xor    %eax,%eax
               :    9ada:	callq  4670 <rte_log@plt>
               :    9adf:	or     $0xffffffff,%r12d
               :    9ae3:	mov    (%rbx),%esi
               :    9ae5:	lea    0x257f4(%rip),%rdx        # 2f2e0 <dpaa2_xstats_strings+0x2700>
               :    9aec:	mov    $0x4,%edi
               :    9af1:	xor    %eax,%eax
               :    9af3:	callq  4670 <rte_log@plt>
               :    9af8:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9afd:	lea    0x2fa1c(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9b04:	lea    0x25005(%rip),%rdx        # 2eb10 <dpaa2_xstats_strings+0x1f30>
               :    9b0b:	mov    (%rbx),%esi
               :    9b0d:	mov    $0x4,%edi
               :    9b12:	xor    %eax,%eax
               :    9b14:	callq  4670 <rte_log@plt>
               :    9b19:	jmpq   197b7 <dpaa2_flow_create+0x467>
               :    9b1e:	lea    0x2f9fb(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9b25:	lea    0x24e04(%rip),%rdx        # 2e930 <dpaa2_xstats_strings+0x1d50>
               :    9b2c:	mov    (%rbx),%esi
               :    9b2e:	mov    $0x4,%edi
               :    9b33:	xor    %eax,%eax
               :    9b35:	callq  4670 <rte_log@plt>
               :    9b3a:	jmpq   197b7 <dpaa2_flow_create+0x467>
               :    9b3f:	mov    (%rbx),%esi
               :    9b41:	mov    %r12d,%ecx
               :    9b44:	lea    0x25add(%rip),%rdx        # 2f628 <dpaa2_xstats_strings+0x2a48>
               :    9b4b:	mov    $0x4,%edi
               :    9b50:	xor    %eax,%eax
               :    9b52:	callq  4670 <rte_log@plt>
               :    9b57:	mov    %r14,%rdi
               :    9b5a:	callq  4a80 <rte_free@plt>
               :    9b5f:	mov    0x20(%rsp),%rdi
               :    9b64:	xor    %r14d,%r14d
               :    9b67:	callq  4a80 <rte_free@plt>
               :    9b6c:	mov    0x18(%rsp),%rdi
               :    9b71:	callq  4a80 <rte_free@plt>
               :    9b76:	jmpq   19fb9 <dpaa2_flow_create+0xc69>
               :    9b7b:	lea    0x2f99e(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9b82:	lea    0x24eaf(%rip),%rdx        # 2ea38 <dpaa2_xstats_strings+0x1e58>
               :    9b89:	mov    (%rbx),%esi
               :    9b8b:	mov    $0x4,%edi
               :    9b90:	xor    %eax,%eax
               :    9b92:	callq  4670 <rte_log@plt>
               :    9b97:	jmpq   197b7 <dpaa2_flow_create+0x467>
               :    9b9c:	lea    0x2f97d(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9ba3:	lea    0x24d56(%rip),%rdx        # 2e900 <dpaa2_xstats_strings+0x1d20>
               :    9baa:	mov    (%rbx),%esi
               :    9bac:	mov    $0x4,%edi
               :    9bb1:	xor    %eax,%eax
               :    9bb3:	callq  4670 <rte_log@plt>
               :    9bb8:	jmpq   197b7 <dpaa2_flow_create+0x467>
               :    9bbd:	lea    0x2f95c(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9bc4:	movzwl %ax,%ecx
               :    9bc7:	mov    (%rbx),%esi
               :    9bc9:	lea    0x258e8(%rip),%rdx        # 2f4b8 <dpaa2_xstats_strings+0x28d8>
               :    9bd0:	mov    $0x4,%edi
               :    9bd5:	xor    %eax,%eax
               :    9bd7:	mov    0x30(%rsp),%r15
               :    9bdc:	or     $0xffffffff,%r12d
               :    9be0:	callq  4670 <rte_log@plt>
               :    9be5:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9bea:	lea    0x2f92f(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9bf1:	lea    0x24f48(%rip),%rdx        # 2eb40 <dpaa2_xstats_strings+0x1f60>
               :    9bf8:	mov    (%rbx),%esi
               :    9bfa:	mov    $0x4,%edi
               :    9bff:	xor    %eax,%eax
               :    9c01:	callq  4670 <rte_log@plt>
               :    9c06:	jmpq   197b7 <dpaa2_flow_create+0x467>
               :    9c0b:	lea    0x2f90e(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9c12:	lea    0x2503f(%rip),%rdx        # 2ec58 <dpaa2_xstats_strings+0x2078>
               :    9c19:	mov    (%rbx),%esi
               :    9c1b:	mov    $0x4,%edi
               :    9c20:	xor    %eax,%eax
               :    9c22:	callq  4670 <rte_log@plt>
               :    9c27:	mov    (%rbx),%esi
               :    9c29:	lea    0x25218(%rip),%rdx        # 2ee48 <dpaa2_xstats_strings+0x2268>
               :    9c30:	mov    $0x4,%edi
               :    9c35:	xor    %eax,%eax
               :    9c37:	callq  4670 <rte_log@plt>
               :    9c3c:	or     $0xffffffff,%r12d
               :    9c40:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9c45:	lea    0x2f8d4(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9c4c:	lea    0x259ad(%rip),%rdx        # 2f600 <dpaa2_xstats_strings+0x2a20>
               :    9c53:	mov    (%rbx),%esi
               :    9c55:	mov    $0x4,%edi
               :    9c5a:	xor    %eax,%eax
               :    9c5c:	callq  4670 <rte_log@plt>
               :    9c61:	or     $0xffffffff,%r12d
               :    9c65:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9c6a:	lea    0x2f8af(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9c71:	lea    0x25698(%rip),%rdx        # 2f310 <dpaa2_xstats_strings+0x2730>
               :    9c78:	mov    (%rbx),%esi
               :    9c7a:	mov    $0x4,%edi
               :    9c7f:	xor    %eax,%eax
               :    9c81:	callq  4670 <rte_log@plt>
               :    9c86:	or     $0xffffffff,%r12d
               :    9c8a:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9c8f:	lea    0x2f88a(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9c96:	lea    0x2538b(%rip),%rdx        # 2f028 <dpaa2_xstats_strings+0x2448>
               :    9c9d:	mov    (%rbx),%esi
               :    9c9f:	mov    $0x4,%edi
               :    9ca4:	xor    %eax,%eax
               :    9ca6:	callq  4670 <rte_log@plt>
               :    9cab:	jmpq   9a90 <dpaa2_flow_create.cold+0x11b>
               :    9cb0:	lea    0x2f869(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9cb7:	lea    0x2532a(%rip),%rdx        # 2efe8 <dpaa2_xstats_strings+0x2408>
               :    9cbe:	mov    (%rbx),%esi
               :    9cc0:	mov    $0x4,%edi
               :    9cc5:	xor    %eax,%eax
               :    9cc7:	callq  4670 <rte_log@plt>
               :    9ccc:	jmpq   9a90 <dpaa2_flow_create.cold+0x11b>
               :    9cd1:	lea    0x2f848(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9cd8:	lea    0x25411(%rip),%rdx        # 2f0f0 <dpaa2_xstats_strings+0x2510>
               :    9cdf:	mov    (%rbx),%esi
               :    9ce1:	mov    $0x4,%edi
               :    9ce6:	xor    %eax,%eax
               :    9ce8:	callq  4670 <rte_log@plt>
     1 3.0e-05 :    9ced:	jmpq   9a90 <dpaa2_flow_create.cold+0x11b>
               :    9cf2:	lea    0x2f827(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9cf9:	lea    0x24a70(%rip),%rdx        # 2e770 <dpaa2_xstats_strings+0x1b90>
               :    9d00:	mov    (%rbx),%esi
               :    9d02:	mov    $0x4,%edi
               :    9d07:	xor    %eax,%eax
               :    9d09:	callq  4670 <rte_log@plt>
               :    9d0e:	mov    $0xffffffa1,%r12d
               :    9d14:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9d19:	lea    0x2f800(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9d20:	lea    0x24cb1(%rip),%rdx        # 2e9d8 <dpaa2_xstats_strings+0x1df8>
               :    9d27:	mov    (%rbx),%esi
               :    9d29:	mov    $0x4,%edi
               :    9d2e:	xor    %eax,%eax
               :    9d30:	callq  4670 <rte_log@plt>
               :    9d35:	jmpq   197b7 <dpaa2_flow_create+0x467>
               :    9d3a:	lea    0x2f7df(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9d41:	lea    0x24f90(%rip),%rdx        # 2ecd8 <dpaa2_xstats_strings+0x20f8>
               :    9d48:	mov    (%rbx),%esi
               :    9d4a:	mov    $0x4,%edi
               :    9d4f:	xor    %eax,%eax
               :    9d51:	callq  4670 <rte_log@plt>
               :    9d56:	jmpq   9c27 <dpaa2_flow_create.cold+0x2b2>
               :    9d5b:	lea    0x2f7be(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9d62:	lea    0x24f2f(%rip),%rdx        # 2ec98 <dpaa2_xstats_strings+0x20b8>
               :    9d69:	mov    (%rbx),%esi
               :    9d6b:	mov    $0x4,%edi
               :    9d70:	xor    %eax,%eax
               :    9d72:	callq  4670 <rte_log@plt>
               :    9d77:	jmpq   9c27 <dpaa2_flow_create.cold+0x2b2>
               :    9d7c:	lea    0x2f79d(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9d83:	lea    0x254ce(%rip),%rdx        # 2f258 <dpaa2_xstats_strings+0x2678>
               :    9d8a:	mov    (%rbx),%esi
               :    9d8c:	mov    $0x5,%edi
               :    9d91:	xor    %eax,%eax
               :    9d93:	callq  4670 <rte_log@plt>
               :    9d98:	lea    0x254f1(%rip),%rdx        # 2f290 <dpaa2_xstats_strings+0x26b0>
               :    9d9f:	jmpq   9ad1 <dpaa2_flow_create.cold+0x15c>
               :    9da4:	lea    0x2f775(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9dab:	lea    0x24d2e(%rip),%rdx        # 2eae0 <dpaa2_xstats_strings+0x1f00>
               :    9db2:	mov    (%rbx),%esi
               :    9db4:	mov    $0x4,%edi
               :    9db9:	xor    %eax,%eax
               :    9dbb:	callq  4670 <rte_log@plt>
               :    9dc0:	jmpq   197b7 <dpaa2_flow_create+0x467>
               :    9dc5:	lea    0x2f754(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9dcc:	mov    %eax,%ecx
               :    9dce:	mov    (%rbx),%esi
               :    9dd0:	lea    0x25641(%rip),%rdx        # 2f418 <dpaa2_xstats_strings+0x2838>
               :    9dd7:	mov    $0x4,%edi
               :    9ddc:	xor    %eax,%eax
               :    9dde:	mov    0x30(%rsp),%r15
               :    9de3:	or     $0xffffffff,%r12d
               :    9de7:	callq  4670 <rte_log@plt>
               :    9dec:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9df1:	lea    0x2f728(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9df8:	lea    0x20359(%rip),%rdx        # 2a158 <dpdmux_pmd_info+0xb8>
               :    9dff:	mov    (%rbx),%esi
               :    9e01:	mov    $0x4,%edi
               :    9e06:	xor    %eax,%eax
               :    9e08:	mov    0x30(%rsp),%r15
               :    9e0d:	or     $0xffffffff,%r12d
               :    9e11:	callq  4670 <rte_log@plt>
               :    9e16:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9e1b:	lea    0x2f6fe(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9e22:	mov    %r12d,%ecx
               :    9e25:	mov    (%rbx),%esi
               :    9e27:	lea    0x23232(%rip),%rdx        # 2d060 <dpaa2_xstats_strings+0x480>
               :    9e2e:	mov    $0x4,%edi
               :    9e33:	xor    %eax,%eax
               :    9e35:	mov    0x30(%rsp),%r15
               :    9e3a:	callq  4670 <rte_log@plt>
               :    9e3f:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9e44:	lea    0x2f6d5(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9e4b:	movzwl %ax,%ecx
               :    9e4e:	mov    (%rbx),%esi
               :    9e50:	lea    0x255f9(%rip),%rdx        # 2f450 <dpaa2_xstats_strings+0x2870>
               :    9e57:	mov    $0x4,%edi
               :    9e5c:	xor    %eax,%eax
               :    9e5e:	mov    0x30(%rsp),%r15
               :    9e63:	or     $0xffffffff,%r12d
               :    9e67:	callq  4670 <rte_log@plt>
               :    9e6c:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9e71:	lea    0x2f6a8(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9e78:	mov    %eax,%ecx
               :    9e7a:	mov    (%rbx),%esi
               :    9e7c:	lea    0x2570d(%rip),%rdx        # 2f590 <dpaa2_xstats_strings+0x29b0>
               :    9e83:	mov    $0x4,%edi
               :    9e88:	xor    %eax,%eax
               :    9e8a:	mov    0x30(%rsp),%r15
               :    9e8f:	callq  4670 <rte_log@plt>
               :    9e94:	mov    %rbp,%rdi
               :    9e97:	callq  4a80 <rte_free@plt>
               :    9e9c:	or     $0xffffffff,%r12d
               :    9ea0:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9ea5:	lea    0x2f674(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9eac:	lea    0x202a5(%rip),%rdx        # 2a158 <dpdmux_pmd_info+0xb8>
               :    9eb3:	mov    (%rbx),%esi
               :    9eb5:	mov    $0x4,%edi
               :    9eba:	xor    %eax,%eax
               :    9ebc:	mov    0x30(%rsp),%r15
               :    9ec1:	callq  4670 <rte_log@plt>
               :    9ec6:	mov    %rbp,%rdi
               :    9ec9:	callq  4a80 <rte_free@plt>
               :    9ece:	or     $0xffffffff,%r12d
               :    9ed2:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9ed7:	lea    0x2f642(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9ede:	lea    0x25683(%rip),%rdx        # 2f568 <dpaa2_xstats_strings+0x2988>
               :    9ee5:	mov    (%rbx),%esi
               :    9ee7:	mov    $0x4,%edi
               :    9eec:	xor    %eax,%eax
               :    9eee:	mov    0x30(%rsp),%r15
               :    9ef3:	or     $0xffffffff,%r12d
               :    9ef7:	callq  4670 <rte_log@plt>
               :    9efc:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9f01:	lea    0x2f618(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9f08:	lea    0x25611(%rip),%rdx        # 2f520 <dpaa2_xstats_strings+0x2940>
               :    9f0f:	mov    (%rbx),%esi
               :    9f11:	mov    $0x4,%edi
               :    9f16:	xor    %eax,%eax
               :    9f18:	mov    0x30(%rsp),%r15
               :    9f1d:	callq  4670 <rte_log@plt>
               :    9f22:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9f27:	lea    0x2f5f2(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9f2e:	lea    0x25123(%rip),%rdx        # 2f058 <dpaa2_xstats_strings+0x2478>
               :    9f35:	mov    (%rbx),%esi
               :    9f37:	mov    $0x5,%edi
               :    9f3c:	xor    %eax,%eax
               :    9f3e:	callq  4670 <rte_log@plt>
               :    9f43:	jmpq   9a90 <dpaa2_flow_create.cold+0x11b>
               :    9f48:	lea    0x2f5d1(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9f4f:	lea    0x247a2(%rip),%rdx        # 2e6f8 <dpaa2_xstats_strings+0x1b18>
               :    9f56:	mov    (%rbx),%esi
               :    9f58:	mov    $0x4,%edi
               :    9f5d:	xor    %eax,%eax
               :    9f5f:	callq  4670 <rte_log@plt>
               :    9f64:	or     $0xffffffff,%r12d
               :    9f68:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9f6d:	lea    0x2f5ac(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9f74:	mov    %eax,%ecx
               :    9f76:	mov    (%rbx),%esi
               :    9f78:	lea    0x25569(%rip),%rdx        # 2f4e8 <dpaa2_xstats_strings+0x2908>
               :    9f7f:	mov    $0x4,%edi
               :    9f84:	xor    %eax,%eax
               :    9f86:	mov    0x30(%rsp),%r15
               :    9f8b:	callq  4670 <rte_log@plt>
               :    9f90:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    9f95:	lea    0x2f584(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9f9c:	lea    0x24c75(%rip),%rdx        # 2ec18 <dpaa2_xstats_strings+0x2038>
               :    9fa3:	mov    (%rbx),%esi
               :    9fa5:	mov    $0x4,%edi
               :    9faa:	xor    %eax,%eax
               :    9fac:	callq  4670 <rte_log@plt>
               :    9fb1:	jmpq   9c27 <dpaa2_flow_create.cold+0x2b2>
               :    9fb6:	lea    0x2f563(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    9fbd:	lea    0x24d7c(%rip),%rdx        # 2ed40 <dpaa2_xstats_strings+0x2160>
               :    9fc4:	mov    (%rbx),%esi
               :    9fc6:	mov    $0x4,%edi
               :    9fcb:	xor    %eax,%eax
               :    9fcd:	callq  4670 <rte_log@plt>
               :    9fd2:	jmpq   9c27 <dpaa2_flow_create.cold+0x2b2>
               :    9fd7:	lea    0x2f542(%rip),%rax        # 39520 <dpaa2_logtype_pmd>
               :    9fde:	lea    0x2485b(%rip),%rdx        # 2e840 <dpaa2_xstats_strings+0x1c60>
               :    9fe5:	mov    (%rax),%esi
               :    9fe7:	mov    $0x4,%edi
               :    9fec:	xor    %eax,%eax
               :    9fee:	callq  4670 <rte_log@plt>
               :    9ff3:	mov    $0xffffffa1,%r12d
               :    9ff9:	jmpq   1ab77 <dpaa2_flow_create+0x1827>
               :    9ffe:	lea    0x2f51b(%rip),%rax        # 39520 <dpaa2_logtype_pmd>
               :    a005:	lea    0x20de4(%rip),%rdx        # 2adf0 <__func__.48478+0x200>
               :    a00c:	mov    (%rax),%esi
               :    a00e:	mov    $0x4,%edi
               :    a013:	xor    %eax,%eax
               :    a015:	callq  4670 <rte_log@plt>
               :    a01a:	mov    0x38(%rsp),%rdi
               :    a01f:	lea    0x256d8(%rip),%r8        # 2f6fe <dpaa2_xstats_strings+0x2b1e>
               :    a026:	xor    %ecx,%ecx
               :    a028:	mov    $0x1,%edx
               :    a02d:	mov    $0x1,%esi
               :    a032:	callq  49d0 <rte_flow_error_set@plt>
               :    a037:	jmpq   9b57 <dpaa2_flow_create.cold+0x1e2>
               :    a03c:	lea    0x2f4dd(%rip),%rax        # 39520 <dpaa2_logtype_pmd>
               :    a043:	lea    0x247f6(%rip),%rdx        # 2e840 <dpaa2_xstats_strings+0x1c60>
               :    a04a:	mov    (%rax),%esi
               :    a04c:	mov    $0x4,%edi
               :    a051:	xor    %eax,%eax
               :    a053:	callq  4670 <rte_log@plt>
               :    a058:	mov    $0xffffffa1,%r12d
               :    a05e:	jmpq   196c0 <dpaa2_flow_create+0x370>
               :    a063:	lea    0x2f4b6(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a06a:	lea    0x246c7(%rip),%rdx        # 2e738 <dpaa2_xstats_strings+0x1b58>
               :    a071:	mov    (%rbx),%esi
               :    a073:	mov    $0x4,%edi
               :    a078:	xor    %eax,%eax
               :    a07a:	callq  4670 <rte_log@plt>
               :    a07f:	or     $0xffffffff,%r12d
               :    a083:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    a088:	lea    0x2f491(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a08f:	lea    0x2473a(%rip),%rdx        # 2e7d0 <dpaa2_xstats_strings+0x1bf0>
               :    a096:	mov    (%rbx),%esi
               :    a098:	mov    $0x4,%edi
               :    a09d:	xor    %eax,%eax
               :    a09f:	callq  4670 <rte_log@plt>
               :    a0a4:	mov    $0xffffffa1,%r12d
               :    a0aa:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    a0af:	lea    0x2f46a(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a0b6:	lea    0x246db(%rip),%rdx        # 2e798 <dpaa2_xstats_strings+0x1bb8>
               :    a0bd:	mov    (%rbx),%esi
               :    a0bf:	mov    $0x4,%edi
               :    a0c4:	xor    %eax,%eax
               :    a0c6:	callq  4670 <rte_log@plt>
               :    a0cb:	mov    $0xffffffa1,%r12d
               :    a0d1:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    a0d6:	lea    0x2f443(%rip),%rax        # 39520 <dpaa2_logtype_pmd>
               :    a0dd:	lea    0x20d0c(%rip),%rdx        # 2adf0 <__func__.48478+0x200>
               :    a0e4:	mov    (%rax),%esi
               :    a0e6:	mov    $0x4,%edi
               :    a0eb:	xor    %eax,%eax
               :    a0ed:	callq  4670 <rte_log@plt>
               :    a0f2:	movq   $0x0,0x18(%rsp)
               :    a0fb:	jmpq   a01a <dpaa2_flow_create.cold+0x6a5>
               :    a100:	lea    0x2f419(%rip),%rax        # 39520 <dpaa2_logtype_pmd>
               :    a107:	lea    0x245ba(%rip),%rdx        # 2e6c8 <dpaa2_xstats_strings+0x1ae8>
               :    a10e:	mov    (%rax),%esi
               :    a110:	mov    $0x4,%edi
               :    a115:	xor    %eax,%eax
               :    a117:	callq  4670 <rte_log@plt>
               :    a11c:	movq   $0x0,0x18(%rsp)
               :    a125:	movq   $0x0,0x20(%rsp)
               :    a12e:	jmpq   a01a <dpaa2_flow_create.cold+0x6a5>
               :    a133:	lea    0x2f3e6(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a13a:	lea    0x24df7(%rip),%rdx        # 2ef38 <dpaa2_xstats_strings+0x2358>
               :    a141:	mov    (%rbx),%esi
               :    a143:	mov    $0x4,%edi
               :    a148:	xor    %eax,%eax
               :    a14a:	callq  4670 <rte_log@plt>
               :    a14f:	jmpq   1b4f0 <dpaa2_flow_create+0x21a0>
               :    a154:	lea    0x2f3c5(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a15b:	lea    0x24da6(%rip),%rdx        # 2ef08 <dpaa2_xstats_strings+0x2328>
               :    a162:	mov    (%rbx),%esi
               :    a164:	mov    $0x4,%edi
               :    a169:	xor    %eax,%eax
               :    a16b:	callq  4670 <rte_log@plt>
               :    a170:	jmpq   1b4f0 <dpaa2_flow_create+0x21a0>
               :    a175:	lea    0x2f3a4(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a17c:	lea    0x24d55(%rip),%rdx        # 2eed8 <dpaa2_xstats_strings+0x22f8>
               :    a183:	mov    (%rbx),%esi
               :    a185:	mov    $0x4,%edi
               :    a18a:	xor    %eax,%eax
               :    a18c:	callq  4670 <rte_log@plt>
               :    a191:	jmpq   1b4f0 <dpaa2_flow_create+0x21a0>
               :    a196:	lea    0x2f383(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a19d:	lea    0x24d04(%rip),%rdx        # 2eea8 <dpaa2_xstats_strings+0x22c8>
               :    a1a4:	mov    (%rbx),%esi
               :    a1a6:	mov    $0x4,%edi
               :    a1ab:	xor    %eax,%eax
               :    a1ad:	callq  4670 <rte_log@plt>
               :    a1b2:	jmpq   1b4f0 <dpaa2_flow_create+0x21a0>
               :    a1b7:	movzwl %ax,%ecx
               :    a1ba:	lea    0x2f35f(%rip),%rax        # 39520 <dpaa2_logtype_pmd>
               :    a1c1:	lea    -0x1(%rdx),%r8d
               :    a1c5:	mov    (%rax),%esi
               :    a1c7:	lea    0x244ba(%rip),%rdx        # 2e688 <dpaa2_xstats_strings+0x1aa8>
               :    a1ce:	mov    $0x4,%edi
               :    a1d3:	xor    %eax,%eax
               :    a1d5:	callq  4670 <rte_log@plt>
               :    a1da:	xor    %r14d,%r14d
               :    a1dd:	jmpq   19fb9 <dpaa2_flow_create+0xc69>
               :    a1e2:	lea    0x2f337(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a1e9:	lea    0x24618(%rip),%rdx        # 2e808 <dpaa2_xstats_strings+0x1c28>
               :    a1f0:	mov    (%rbx),%esi
               :    a1f2:	mov    $0x4,%edi
               :    a1f7:	xor    %eax,%eax
               :    a1f9:	callq  4670 <rte_log@plt>
               :    a1fe:	mov    $0xffffffa1,%r12d
               :    a204:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    a209:	lea    0x2f310(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a210:	lea    0x24fb1(%rip),%rdx        # 2f1c8 <dpaa2_xstats_strings+0x25e8>
               :    a217:	mov    (%rbx),%esi
               :    a219:	mov    $0x4,%edi
               :    a21e:	xor    %eax,%eax
               :    a220:	callq  4670 <rte_log@plt>
               :    a225:	mov    $0xffffffea,%r12d
               :    a22b:	jmpq   9ae3 <dpaa2_flow_create.cold+0x16e>
               :    a230:	lea    0x2f2e9(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a237:	lea    0x24fb2(%rip),%rdx        # 2f1f0 <dpaa2_xstats_strings+0x2610>
               :    a23e:	jmp    a217 <dpaa2_flow_create.cold+0x8a2>
               :    a240:	lea    0x2f2d9(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a247:	lea    0x247ba(%rip),%rdx        # 2ea08 <dpaa2_xstats_strings+0x1e28>
               :    a24e:	mov    (%rbx),%esi
               :    a250:	mov    $0x4,%edi
               :    a255:	xor    %eax,%eax
               :    a257:	callq  4670 <rte_log@plt>
               :    a25c:	jmpq   197b7 <dpaa2_flow_create+0x467>
               :    a261:	lea    0x2f2b8(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a268:	lea    0x24661(%rip),%rdx        # 2e8d0 <dpaa2_xstats_strings+0x1cf0>
               :    a26f:	mov    (%rbx),%esi
               :    a271:	mov    $0x4,%edi
               :    a276:	xor    %eax,%eax
               :    a278:	callq  4670 <rte_log@plt>
               :    a27d:	jmpq   197b7 <dpaa2_flow_create+0x467>
               :    a282:	lea    0x2f297(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a289:	lea    0x24b10(%rip),%rdx        # 2eda0 <dpaa2_xstats_strings+0x21c0>
               :    a290:	mov    (%rbx),%esi
               :    a292:	mov    $0x4,%edi
               :    a297:	xor    %eax,%eax
               :    a299:	callq  4670 <rte_log@plt>
               :    a29e:	jmpq   9c27 <dpaa2_flow_create.cold+0x2b2>
               :    a2a3:	lea    0x2f276(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a2aa:	lea    0x24e0f(%rip),%rdx        # 2f0c0 <dpaa2_xstats_strings+0x24e0>
               :    a2b1:	mov    (%rbx),%esi
               :    a2b3:	mov    $0x4,%edi
               :    a2b8:	xor    %eax,%eax
               :    a2ba:	callq  4670 <rte_log@plt>
               :    a2bf:	jmpq   9a90 <dpaa2_flow_create.cold+0x11b>
               :    a2c4:	lea    0x2f255(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a2cb:	lea    0x24cd6(%rip),%rdx        # 2efa8 <dpaa2_xstats_strings+0x23c8>
               :    a2d2:	mov    (%rbx),%esi
               :    a2d4:	mov    $0x4,%edi
               :    a2d9:	xor    %eax,%eax
               :    a2db:	callq  4670 <rte_log@plt>
               :    a2e0:	jmpq   9a90 <dpaa2_flow_create.cold+0x11b>
               :    a2e5:	lea    0x2f234(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a2ec:	movzwl %ax,%ecx
               :    a2ef:	mov    (%rbx),%esi
               :    a2f1:	lea    0x25158(%rip),%rdx        # 2f450 <dpaa2_xstats_strings+0x2870>
               :    a2f8:	mov    $0x4,%edi
               :    a2fd:	xor    %eax,%eax
               :    a2ff:	mov    0x30(%rsp),%r15
               :    a304:	or     $0xffffffff,%r12d
               :    a308:	callq  4670 <rte_log@plt>
               :    a30d:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    a312:	lea    0x2f207(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a319:	lea    0x24f08(%rip),%rdx        # 2f228 <dpaa2_xstats_strings+0x2648>
               :    a320:	jmpq   a217 <dpaa2_flow_create.cold+0x8a2>
               :    a325:	lea    0x2f1f4(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a32c:	lea    0x24b45(%rip),%rdx        # 2ee78 <dpaa2_xstats_strings+0x2298>
               :    a333:	mov    (%rbx),%esi
               :    a335:	mov    $0x4,%edi
               :    a33a:	xor    %eax,%eax
               :    a33c:	callq  4670 <rte_log@plt>
               :    a341:	jmpq   1b4f0 <dpaa2_flow_create+0x21a0>
               :    a346:	lea    0x2f1d3(%rip),%rax        # 39520 <dpaa2_logtype_pmd>
               :    a34d:	lea    0x2450c(%rip),%rdx        # 2e860 <dpaa2_xstats_strings+0x1c80>
               :    a354:	mov    (%rax),%esi
               :    a356:	mov    $0x5,%edi
               :    a35b:	xor    %eax,%eax
               :    a35d:	callq  4670 <rte_log@plt>
               :    a362:	jmpq   1a827 <dpaa2_flow_create+0x14d7>
               :    a367:	lea    0x2f1b2(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a36e:	lea    0x24993(%rip),%rdx        # 2ed08 <dpaa2_xstats_strings+0x2128>
               :    a375:	mov    (%rbx),%esi
               :    a377:	mov    $0x5,%edi
               :    a37c:	xor    %eax,%eax
               :    a37e:	callq  4670 <rte_log@plt>
               :    a383:	jmpq   9c27 <dpaa2_flow_create.cold+0x2b2>
               :    a388:	lea    0x2f191(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a38f:	lea    0x24cfa(%rip),%rdx        # 2f090 <dpaa2_xstats_strings+0x24b0>
               :    a396:	mov    (%rbx),%esi
               :    a398:	mov    $0x4,%edi
               :    a39d:	xor    %eax,%eax
               :    a39f:	callq  4670 <rte_log@plt>
               :    a3a4:	jmpq   9a90 <dpaa2_flow_create.cold+0x11b>
               :    a3a9:	lea    0x2f170(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a3b0:	mov    %eax,%ecx
               :    a3b2:	mov    (%rbx),%esi
               :    a3b4:	lea    0x250c5(%rip),%rdx        # 2f480 <dpaa2_xstats_strings+0x28a0>
               :    a3bb:	mov    $0x4,%edi
               :    a3c0:	xor    %eax,%eax
               :    a3c2:	mov    0x30(%rsp),%r15
               :    a3c7:	callq  4670 <rte_log@plt>
               :    a3cc:	jmpq   1b500 <dpaa2_flow_create+0x21b0>
               :    a3d1:	lea    0x2f148(%rip),%rbx        # 39520 <dpaa2_logtype_pmd>
               :    a3d8:	lea    0x24991(%rip),%rdx        # 2ed70 <dpaa2_xstats_strings+0x2190>
               :    a3df:	mov    (%rbx),%esi
               :    a3e1:	mov    $0x4,%edi
               :    a3e6:	xor    %eax,%eax
               :    a3e8:	callq  4670 <rte_log@plt>
               :    a3ed:	jmpq   9c27 <dpaa2_flow_create.cold+0x2b2>
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000135f90 <mlx5_flow_hw_ctrl_flows>: /* mlx5_flow_hw_ctrl_flows total: 1272501 37.6287 */
               :  135f90:	endbr64 
               :  135f94:	push   %r15
               :  135f96:	push   %r14
               :  135f98:	push   %r13
               :  135f9a:	push   %r12
               :  135f9c:	push   %rbp
               :  135f9d:	push   %rbx
               :  135f9e:	sub    $0x188,%rsp
               :  135fa5:	mov    %esi,0x48(%rsp)
               :  135fa9:	mov    %fs:0x28,%rax
               :  135fb2:	mov    %rax,0x178(%rsp)
               :  135fba:	xor    %eax,%eax
               :  135fbc:	mov    0x30(%rdi),%rax
               :  135fc0:	mov    0x60(%rax),%r15
               :  135fc4:	cmpq   $0x0,0x3360(%r15)
               :  135fcc:	je     174fb <mlx5_flow_hw_ctrl_flows.cold+0xca>
               :  135fd2:	mov    0x3400(%r15),%rbx
               :  135fd9:	mov    %rbx,0x30(%rsp)
               :  135fde:	test   %rbx,%rbx
               :  135fe1:	je     17467 <mlx5_flow_hw_ctrl_flows.cold+0x36>
               :  135fe7:	mov    %esi,%eax
               :  135fe9:	movq   $0x0,0x28(%rsp)
               :  135ff2:	and    $0x40,%eax
               :  135ff5:	mov    %eax,0x4c(%rsp)
               :  135ff9:	mov    0x28(%rsp),%rsi
 15465  0.4573 :  135ffe:	mov    $0x1,%edx
               :  136003:	mov    %rdi,%rbx
     2 5.9e-05 :  136006:	nopw   %cs:0x0(%rax,%rax,1)
               :  136010:	mov    $0x1,%eax
               :  136015:	mov    %esi,%edi
               :  136017:	mov    %esi,0x3c(%rsp)
               :  13601b:	shlx   %rdi,%rax,%rax
               :  136020:	test   $0x2a8,%eax
 11666  0.3450 :  136025:	je     1366f0 <mlx5_flow_hw_ctrl_flows+0x760>
               :  13602b:	mov    0x4c(%rsp),%r11d
               :  136030:	test   %edx,0x48(%rsp)
               :  136034:	setne  %al
               :  136037:	test   %r11d,%r11d
               :  13603a:	setne  %dl
               :  13603d:	and    %edx,%eax
               :  13603f:	test   %al,%al
               :  136041:	je     13611a <mlx5_flow_hw_ctrl_flows+0x18a>
     5 1.5e-04 :  136047:	imul   $0xe0,0x28(%rsp),%rax
               :  136050:	movq   $0x0,(%rsp)
               :  136058:	mov    %rbx,%rbp
 11406  0.3373 :  13605b:	add    0x30(%rsp),%rax
               :  136060:	mov    %rax,0x50(%rsp)
               :  136065:	mov    %rax,0x8(%rsp)
               :  13606a:	nopw   0x0(%rax,%rax,1)
     9 2.7e-04 :  136070:	mov    0x8(%rsp),%rbx
               :  136075:	mov    (%rsp),%rax
 11708  0.3462 :  136079:	vmovdqu64 0x38(%rbx),%xmm1
               :  136083:	mov    0x30(%rsp),%rbx
               :  136088:	mov    %eax,%r12d
   135  0.0040 :  13608b:	mov    (%rbx,%rax,8),%rax
    89  0.0026 :  13608f:	movb   $0x0,0x80(%rsp)
 11424  0.3378 :  136097:	vmovaps %xmm1,0x10(%rsp)
               :  13609d:	vmovaps %xmm1,0x70(%rsp)
               :  1360a3:	test   %rax,%rax
   463  0.0137 :  1360a6:	je     136798 <mlx5_flow_hw_ctrl_flows+0x808>
               :  1360ac:	mov    %rax,0x60(%rsp)
 11277  0.3335 :  1360b1:	mov    0x3400(%r15),%rax
     8 2.4e-04 :  1360b8:	mov    %r12d,%edx
   806  0.0238 :  1360bb:	mov    (%rax,%rdx,8),%rax
    89  0.0026 :  1360bf:	mov    0x18(%rax),%rsi
    86  0.0025 :  1360c3:	mov    (%rsi),%edx
               :  1360c5:	test   %edx,%edx
               :  1360c7:	je     136140 <mlx5_flow_hw_ctrl_flows+0x1b0>
 10726  0.3172 :  1360c9:	mov    %rsi,%rax
               :  1360cc:	xor    %ecx,%ecx
     1 3.0e-05 :  1360ce:	jmp    1360e3 <mlx5_flow_hw_ctrl_flows+0x153>
               :  1360d0:	lea    0x1(%rcx),%eax
               :  1360d3:	mov    %rax,%rcx
     2 5.9e-05 :  1360d6:	shl    $0x4,%rax
               :  1360da:	add    %rsi,%rax
               :  1360dd:	mov    (%rax),%edx
               :  1360df:	test   %edx,%edx
               :  1360e1:	je     136140 <mlx5_flow_hw_ctrl_flows+0x1b0>
               :  1360e3:	cmp    $0x9,%edx
 11271  0.3333 :  1360e6:	jne    1360d0 <mlx5_flow_hw_ctrl_flows+0x140>
               :  1360e8:	mov    0x8(%rax),%rax
    86  0.0025 :  1360ec:	mov    0x798(%r15),%rdx
               :  1360f3:	mov    0x8(%rax),%rax
               :  1360f7:	and    %rax,%rdx
    97  0.0029 :  1360fa:	cmp    %rdx,%rax
               :  1360fd:	je     1360d0 <mlx5_flow_hw_ctrl_flows+0x140>
               :  1360ff:	incq   (%rsp)
164397  4.8613 :  136103:	addq   $0x20,0x8(%rsp)
               :  136109:	mov    (%rsp),%rax
     4 1.2e-04 :  13610d:	cmp    $0x7,%rax
               :  136111:	jne    136070 <mlx5_flow_hw_ctrl_flows+0xe0>
               :  136117:	mov    %rbp,%rbx
               :  13611a:	incq   0x28(%rsp)
     1 3.0e-05 :  13611f:	mov    0x28(%rsp),%rax
    13 3.8e-04 :  136124:	cmp    $0xa,%rax
               :  136128:	je     136719 <mlx5_flow_hw_ctrl_flows+0x789>
               :  13612e:	mov    %rax,%rsi
               :  136131:	lea    0x3db48(%rip),%rax        # 173c80 <CSWTCH.692>
               :  136138:	mov    (%rax,%rsi,4),%edx
               :  13613b:	jmpq   136010 <mlx5_flow_hw_ctrl_flows+0x80>
 11382  0.3366 :  136140:	mov    0x8(%rsp),%rax
               :  136145:	mov    0x50(%rax),%r14
               :  136149:	test   %r14,%r14
     8 2.4e-04 :  13614c:	je     136750 <mlx5_flow_hw_ctrl_flows+0x7c0>
               :  136152:	mov    0x3c(%rsp),%eax
               :  136156:	sub    $0x3,%eax
               :  136159:	cmp    $0x6,%eax
               :  13615c:	ja     136370 <mlx5_flow_hw_ctrl_flows+0x3e0>
               :  136162:	lea    0x3dacb(%rip),%rcx        # 173c34 <__func__.60215+0x29c4>
               :  136169:	movslq (%rcx,%rax,4),%rax
               :  13616d:	add    %rcx,%rax
               :  136170:	notrack jmpq *%rax
               :  136173:	nopl   0x0(%rax,%rax,1)
               :  136178:	mov    0x30(%rbp),%rax
   118  0.0035 :  13617c:	mov    0x3c(%rsp),%esi
               :  136180:	mov    0x60(%rax),%rbx
 10470  0.3096 :  136184:	lea    0x3dd15(%rip),%rax        # 173ea0 <ctrl_rx_eth_ipv6_mcast_spec>
  2745  0.0812 :  13618b:	cmp    $0x5,%esi
               :  13618e:	ja     1361a5 <mlx5_flow_hw_ctrl_flows+0x215>
  6566  0.1942 :  136190:	cmp    $0x3,%esi
               :  136193:	lea    0x3dca6(%rip),%rax        # 173e40 <ctrl_rx_eth_bcast_spec>
 16627  0.4917 :  13619a:	lea    0x3dd3f(%rip),%rdi        # 173ee0 <ctrl_rx_eth_ipv4_mcast_spec>
 11643  0.3443 :  1361a1:	cmovne %rdi,%rax
               :  1361a5:	vpxor  %xmm0,%xmm0,%xmm0
 15615  0.4617 :  1361a9:	cmpq   $0x3,(%rsp)
    39  0.0012 :  1361ae:	vmovaps %xmm0,0xd0(%rsp)
 11495  0.3399 :  1361b7:	vmovaps %xmm0,0xb0(%rsp)
 11594  0.3428 :  1361c0:	vmovaps %xmm0,0xf0(%rsp)
   362  0.0107 :  1361c9:	movl   $0x9,0xb0(%rsp)
 51612  1.5262 :  1361d4:	movq   $0x0,0x130(%rsp)
  5975  0.1767 :  1361e0:	movl   $0x6,0xd0(%rsp)
  9647  0.2853 :  1361eb:	mov    %rax,0xd8(%rsp)
  5839  0.1727 :  1361f3:	movl   $0x7,0xf0(%rsp)
 28890  0.8543 :  1361fe:	vmovaps %xmm0,0xc0(%rsp)
               :  136207:	vmovaps %xmm0,0x110(%rsp)
               :  136210:	vmovaps %xmm0,0xe0(%rsp)
 11613  0.3434 :  136219:	vmovaps %xmm0,0x100(%rsp)
               :  136222:	ja     136ba5 <mlx5_flow_hw_ctrl_flows+0xc15>
               :  136228:	test   %r12d,%r12d
   108  0.0032 :  13622b:	jne    136c50 <mlx5_flow_hw_ctrl_flows+0xcc0>
   118  0.0035 :  136231:	movl   $0x1,0x110(%rsp)
 11394  0.3369 :  13623c:	movq   $0x0,0x118(%rsp)
    93  0.0028 :  136248:	movq   $0x0,0x120(%rsp)
               :  136254:	movq   $0x0,0x128(%rsp)
               :  136260:	mov    $0x1,%eax
               :  136265:	nopl   (%rax)
               :  136268:	mov    0x740(%rbx),%r9d
               :  13626f:	vpxor  %xmm0,%xmm0,%xmm0
               :  136273:	mov    %eax,0x130(%rsp)
    72  0.0021 :  13627a:	movq   $0x0,0x138(%rsp)
    39  0.0012 :  136286:	movq   $0x0,0x140(%rsp)
 11436  0.3382 :  136292:	movq   $0x0,0x148(%rsp)
   180  0.0053 :  13629e:	vmovaps %xmm0,0x150(%rsp)
    11 3.3e-04 :  1362a7:	vmovaps %xmm0,0x160(%rsp)
   424  0.0125 :  1362b0:	test   %r9d,%r9d
   142  0.0042 :  1362b3:	je     1360ff <mlx5_flow_hw_ctrl_flows+0x16f>
               :  1362b9:	xor    %r13d,%r13d
 15525  0.4591 :  1362bc:	lea    0xb0(%rsp),%r8
  4396  0.1300 :  1362c4:	lea    0x68(%rsp),%rax
 29171  0.8626 :  1362c9:	mov    %r15,0x20(%rsp)
               :  1362ce:	mov    %rax,0x10(%rsp)
               :  1362d3:	mov    %rbx,%r15
 51739  1.5300 :  1362d6:	lea    0xd0(%rsp),%r12
               :  1362de:	mov    %rbp,%rbx
               :  1362e1:	mov    %r13,%rbp
               :  1362e4:	mov    %r8,%r13
               :  1362e7:	jmp    136300 <mlx5_flow_hw_ctrl_flows+0x370>
 22979  0.6795 :  1362e9:	nopl   0x0(%rax)
               :  1362f0:	inc    %rbp
               :  1362f3:	cmp    %ebp,0x740(%r15)
  3949  0.1168 :  1362fa:	jbe    136cc1 <mlx5_flow_hw_ctrl_flows+0xd31>
     1 3.0e-05 :  136300:	xor    %r8d,%r8d
  4611  0.1364 :  136303:	movzwl 0x640(%r15,%rbp,2),%eax
 17386  0.5141 :  13630c:	movl   $0x0,0x6a(%rsp)
    17 5.0e-04 :  136314:	mov    %r8w,0x6e(%rsp)
               :  13631a:	xchg   %al,%ah
    34  0.0010 :  13631c:	mov    %ax,0x68(%rsp)
     3 8.9e-05 :  136321:	mov    0x10(%rsp),%rax
  5820  0.1721 :  136326:	mov    %r13,%r8
               :  136329:	mov    %r12,%rcx
               :  13632c:	mov    %r14,%rdx
  6258  0.1851 :  13632f:	mov    %rbx,%rsi
               :  136332:	mov    %rbx,%rdi
   591  0.0175 :  136335:	mov    %rax,0xf8(%rsp)
  1872  0.0554 :  13633d:	callq  1341e0 <flow_hw_create_ctrl_flow.constprop.0>
               :  136342:	test   %eax,%eax
               :  136344:	je     1362f0 <mlx5_flow_hw_ctrl_flows+0x360>
  5106  0.1510 :  136346:	data16 lea 0x5fb82(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
  4821  0.1426 :  13634e:	data16 data16 callq a700 <__tls_get_addr@plt>
   458  0.0135 :  136356:	mov    0x20(%rsp),%r15
               :  13635b:	mov    %rbx,%rbp
   125  0.0037 :  13635e:	mov    (%rax),%eax
               :  136360:	neg    %eax
  1240  0.0367 :  136362:	jmpq   1364d4 <mlx5_flow_hw_ctrl_flows+0x544>
  5009  0.1481 :  136367:	nopw   0x0(%rax,%rax,1)
               :  136370:	mov    0x3c(%rsp),%eax
               :  136374:	cmp    $0x6,%eax
  4840  0.1431 :  136377:	je     136cd7 <mlx5_flow_hw_ctrl_flows+0xd47>
               :  13637d:	cmp    $0x3,%eax
   480  0.0142 :  136380:	ja     136ce0 <mlx5_flow_hw_ctrl_flows+0xd50>
               :  136386:	cmp    $0x1,%eax
  1229  0.0363 :  136389:	je     136cce <mlx5_flow_hw_ctrl_flows+0xd3e>
               :  13638f:	sub    $0x2,%eax
  4500  0.1331 :  136392:	cmp    $0x1,%eax
               :  136395:	jbe    136c94 <mlx5_flow_hw_ctrl_flows+0xd04>
  4326  0.1279 :  13639b:	vpxor  %xmm0,%xmm0,%xmm0
               :  13639f:	vmovaps %xmm0,0xb0(%rsp)
  1756  0.0519 :  1363a8:	movl   $0x9,0xb0(%rsp)
  4583  0.1355 :  1363b3:	vmovaps %xmm0,0xc0(%rsp)
               :  1363bc:	lea    0x3db9d(%rip),%rax        # 173f60 <ctrl_rx_eth_promisc_spec>
  4384  0.1296 :  1363c3:	vpxor  %xmm0,%xmm0,%xmm0
               :  1363c7:	cmpq   $0x3,(%rsp)
   556  0.0164 :  1363cc:	vmovaps %xmm0,0xd0(%rsp)
  1288  0.0381 :  1363d5:	vmovaps %xmm0,0xf0(%rsp)
  4618  0.1366 :  1363de:	movq   $0x0,0x130(%rsp)
               :  1363ea:	movl   $0x6,0xd0(%rsp)
               :  1363f5:	mov    %rax,0xd8(%rsp)
               :  1363fd:	movl   $0x1,0xf0(%rsp)
               :  136408:	vmovaps %xmm0,0x110(%rsp)
               :  136411:	vmovaps %xmm0,0xe0(%rsp)
               :  13641a:	vmovaps %xmm0,0x100(%rsp)
               :  136423:	jbe    136c08 <mlx5_flow_hw_ctrl_flows+0xc78>
               :  136429:	movl   $0x9,0x110(%rsp)
               :  136434:	movq   $0x0,0x118(%rsp)
               :  136440:	movq   $0x0,0x120(%rsp)
               :  13644c:	movq   $0x0,0x128(%rsp)
               :  136458:	mov    $0xb,%eax
               :  13645d:	cmp    $0x5,%r12d
               :  136461:	je     136472 <mlx5_flow_hw_ctrl_flows+0x4e2>
               :  136463:	mov    $0xc,%eax
               :  136468:	cmp    $0x6,%r12d
               :  13646c:	jne    136b8f <mlx5_flow_hw_ctrl_flows+0xbff>
               :  136472:	lea    0xd0(%rsp),%r12
               :  13647a:	vpxor  %xmm0,%xmm0,%xmm0
               :  13647e:	lea    0xb0(%rsp),%r8
    22 6.5e-04 :  136486:	mov    %r12,%rcx
               :  136489:	mov    %r14,%rdx
  4283  0.1267 :  13648c:	mov    %rbp,%rsi
               :  13648f:	mov    %rbp,%rdi
   551  0.0163 :  136492:	mov    %eax,0x130(%rsp)
  8684  0.2568 :  136499:	movq   $0x0,0x138(%rsp)
  1295  0.0383 :  1364a5:	movq   $0x0,0x140(%rsp)
               :  1364b1:	movq   $0x0,0x148(%rsp)
               :  1364bd:	vmovaps %xmm0,0x150(%rsp)
 11918  0.3524 :  1364c6:	vmovaps %xmm0,0x160(%rsp)
     2 5.9e-05 :  1364cf:	callq  1341e0 <flow_hw_create_ctrl_flow.constprop.0>
     4 1.2e-04 :  1364d4:	test   %eax,%eax
     7 2.1e-04 :  1364d6:	je     1360ff <mlx5_flow_hw_ctrl_flows+0x16f>
               :  1364dc:	jmpq   17431 <mlx5_flow_hw_ctrl_flows.cold>
     8 2.4e-04 :  1364e1:	nopl   0x0(%rax)
 11561  0.3419 :  1364e8:	mov    0x30(%rbp),%rax
     1 3.0e-05 :  1364ec:	vpxor  %xmm0,%xmm0,%xmm0
     4 1.2e-04 :  1364f0:	xor    %esi,%esi
     9 2.7e-04 :  1364f2:	lea    0x90(%rsp),%rcx
    17 5.0e-04 :  1364fa:	cmpq   $0x3,(%rsp)
     9 2.7e-04 :  1364ff:	mov    0x60(%rax),%rbx
    16 4.7e-04 :  136503:	movl   $0x0,0x8a(%rsp)
   100  0.0030 :  13650e:	vmovaps %xmm0,0xd0(%rsp)
   119  0.0035 :  136517:	vmovaps %xmm0,0xb0(%rsp)
   237  0.0070 :  136520:	vmovaps %xmm0,0xf0(%rsp)
  2381  0.0704 :  136529:	movl   $0x9,0xb0(%rsp)
  5734  0.1696 :  136534:	mov    %si,0x8e(%rsp)
    27 8.0e-04 :  13653c:	movl   $0x0,0xa0(%rsp)
  1572  0.0465 :  136547:	movq   $0x0,0x130(%rsp)
  2497  0.0738 :  136553:	movl   $0x6,0xd0(%rsp)
  7947  0.2350 :  13655e:	mov    %rcx,0xd8(%rsp)
     7 2.1e-04 :  136566:	movl   $0x7,0xf0(%rsp)
   976  0.0289 :  136571:	vmovaps %xmm0,0xc0(%rsp)
  1288  0.0381 :  13657a:	vmovaps %xmm0,0x90(%rsp)
  8379  0.2478 :  136583:	vmovaps %xmm0,0x110(%rsp)
  3044  0.0900 :  13658c:	vmovaps %xmm0,0xe0(%rsp)
     3 8.9e-05 :  136595:	vmovaps %xmm0,0x100(%rsp)
   806  0.0238 :  13659e:	ja     1367c3 <mlx5_flow_hw_ctrl_flows+0x833>
               :  1365a4:	test   %r12d,%r12d
   916  0.0271 :  1365a7:	jne    136aa6 <mlx5_flow_hw_ctrl_flows+0xb16>
  7819  0.2312 :  1365ad:	movl   $0x1,0x110(%rsp)
  3835  0.1134 :  1365b8:	movq   $0x0,0x118(%rsp)
 21776  0.6439 :  1365c4:	movq   $0x0,0x120(%rsp)
 12983  0.3839 :  1365d0:	movq   $0x0,0x128(%rsp)
   188  0.0056 :  1365dc:	mov    $0x1,%ecx
  1094  0.0324 :  1365e1:	jmpq   136810 <mlx5_flow_hw_ctrl_flows+0x880>
 11032  0.3262 :  1365e6:	nopw   %cs:0x0(%rax,%rax,1)
  3167  0.0937 :  1365f0:	vpxor  %xmm0,%xmm0,%xmm0
               :  1365f4:	xor    %edi,%edi
  3108  0.0919 :  1365f6:	lea    0x90(%rsp),%rax
   309  0.0091 :  1365fe:	cmpq   $0x3,(%rsp)
  5039  0.1490 :  136603:	vmovaps %xmm0,0xd0(%rsp)
  9890  0.2925 :  13660c:	vmovaps %xmm0,0xb0(%rsp)
   409  0.0121 :  136615:	vmovaps %xmm0,0xf0(%rsp)
 14691  0.4344 :  13661e:	movl   $0x9,0xb0(%rsp)
 11740  0.3472 :  136629:	movl   $0x0,0x8a(%rsp)
 11440  0.3383 :  136634:	mov    %di,0x8e(%rsp)
   478  0.0141 :  13663c:	movl   $0x0,0xa0(%rsp)
   168  0.0050 :  136647:	movq   $0x0,0x130(%rsp)
 12277  0.3630 :  136653:	movl   $0x6,0xd0(%rsp)
    13 3.8e-04 :  13665e:	mov    %rax,0xd8(%rsp)
    54  0.0016 :  136666:	movl   $0x1,0xf0(%rsp)
     3 8.9e-05 :  136671:	vmovaps %xmm0,0xc0(%rsp)
   744  0.0220 :  13667a:	vmovaps %xmm0,0x90(%rsp)
    38  0.0011 :  136683:	vmovaps %xmm0,0x110(%rsp)
  7667  0.2267 :  13668c:	vmovaps %xmm0,0xe0(%rsp)
  1067  0.0316 :  136695:	vmovaps %xmm0,0x100(%rsp)
    30 8.9e-04 :  13669e:	ja     136990 <mlx5_flow_hw_ctrl_flows+0xa00>
  8461  0.2502 :  1366a4:	test   %r12d,%r12d
  4372  0.1293 :  1366a7:	jne    136afb <mlx5_flow_hw_ctrl_flows+0xb6b>
  4582  0.1355 :  1366ad:	movl   $0x1,0x110(%rsp)
 11292  0.3339 :  1366b8:	movq   $0x0,0x118(%rsp)
     3 8.9e-05 :  1366c4:	movq   $0x0,0x120(%rsp)
  3141  0.0929 :  1366d0:	movq   $0x0,0x128(%rsp)
  8341  0.2466 :  1366dc:	mov    $0x1,%eax
  9050  0.2676 :  1366e1:	jmpq   1369e0 <mlx5_flow_hw_ctrl_flows+0xa50>
  1153  0.0341 :  1366e6:	nopw   %cs:0x0(%rax,%rax,1)
   792  0.0234 :  1366f0:	mov    0x4c(%rsp),%r10d
               :  1366f5:	test   %edx,0x48(%rsp)
    74  0.0022 :  1366f9:	setne  %al
               :  1366fc:	test   %r10d,%r10d
    35  0.0010 :  1366ff:	je     13603f <mlx5_flow_hw_ctrl_flows+0xaf>
               :  136705:	incq   0x28(%rsp)
               :  13670a:	mov    0x28(%rsp),%rax
               :  13670f:	cmp    $0xa,%rax
               :  136713:	jne    13612e <mlx5_flow_hw_ctrl_flows+0x19e>
               :  136719:	xor    %r13d,%r13d
               :  13671c:	mov    0x178(%rsp),%rax
               :  136724:	xor    %fs:0x28,%rax
               :  13672d:	jne    136d0e <mlx5_flow_hw_ctrl_flows+0xd7e>
   869  0.0257 :  136733:	add    $0x188,%rsp
               :  13673a:	pop    %rbx
               :  13673b:	pop    %rbp
  4609  0.1363 :  13673c:	pop    %r12
               :  13673e:	mov    %r13d,%eax
               :  136741:	pop    %r13
  4372  0.1293 :  136743:	pop    %r14
               :  136745:	pop    %r15
               :  136747:	retq   
  1264  0.0374 :  136748:	nopl   0x0(%rax,%rax,1)
               :  136750:	mov    (%rsp),%rax
  1220  0.0361 :  136754:	mov    0x50(%rsp),%rbx
               :  136759:	shl    $0x5,%rax
               :  13675d:	lea    0x60(%rsp),%rcx
               :  136762:	lea    0x48(%rbx,%rax,1),%rdx
   914  0.0270 :  136767:	lea    0x70(%rsp),%rsi
  4360  0.1289 :  13676c:	xor    %r8d,%r8d
  4234  0.1252 :  13676f:	mov    %rbp,%rdi
   171  0.0051 :  136772:	callq  12bbd0 <flow_hw_table_create.constprop.0>
  1249  0.0369 :  136777:	mov    %rax,%r14
               :  13677a:	mov    0x8(%rsp),%rax
               :  13677f:	mov    %r14,0x50(%rax)
               :  136783:	test   %r14,%r14
               :  136786:	jne    136152 <mlx5_flow_hw_ctrl_flows+0x1c2>
               :  13678c:	jmpq   174b2 <mlx5_flow_hw_ctrl_flows.cold+0x81>
               :  136791:	nopl   0x0(%rax)
               :  136798:	mov    (%rsp),%esi
               :  13679b:	mov    %rbp,%rdi
               :  13679e:	callq  1260b0 <flow_hw_create_ctrl_rx_rss_template>
               :  1367a3:	mov    %rax,0x60(%rsp)
               :  1367a8:	test   %rax,%rax
               :  1367ab:	je     136ce9 <mlx5_flow_hw_ctrl_flows+0xd59>
               :  1367b1:	mov    0x30(%rsp),%rdi
               :  1367b6:	mov    (%rsp),%rbx
               :  1367ba:	mov    %rax,(%rdi,%rbx,8)
               :  1367be:	jmpq   1360b1 <mlx5_flow_hw_ctrl_flows+0x121>
               :  1367c3:	movl   $0x9,0x110(%rsp)
               :  1367ce:	movq   $0x0,0x118(%rsp)
               :  1367da:	movq   $0x0,0x120(%rsp)
               :  1367e6:	movq   $0x0,0x128(%rsp)
               :  1367f2:	mov    $0xb,%ecx
               :  1367f7:	cmp    $0x5,%r12d
               :  1367fb:	je     136810 <mlx5_flow_hw_ctrl_flows+0x880>
               :  1367fd:	mov    $0xc,%ecx
               :  136802:	cmp    $0x6,%r12d
               :  136806:	jne    136ae5 <mlx5_flow_hw_ctrl_flows+0xb55>
               :  13680c:	nopl   0x0(%rax)
               :  136810:	mov    %ecx,0x130(%rsp)
               :  136817:	movq   $0x0,0x138(%rsp)
               :  136823:	movq   $0x0,0x140(%rsp)
               :  13682f:	movq   $0x0,0x148(%rsp)
               :  13683b:	movq   $0x0,0x20(%rsp)
               :  136844:	vpxor  %xmm0,%xmm0,%xmm0
               :  136848:	lea    0x8a(%rsp),%r12
               :  136850:	lea    0xb0(%rsp),%r8
               :  136858:	mov    %r15,0x58(%rsp)
               :  13685d:	mov    %r12,0x40(%rsp)
               :  136862:	vmovaps %xmm0,0x150(%rsp)
               :  13686b:	vmovaps %xmm0,0x160(%rsp)
               :  136874:	mov    %rbx,%r15
               :  136877:	mov    %r8,%r12
               :  13687a:	mov    0x20(%rsp),%rbx
               :  13687f:	mov    0x40(%rsp),%rsi
               :  136884:	add    0x960(%rax),%rbx
               :  13688b:	mov    %rbx,%rax
               :  13688e:	mov    (%rsi),%ebx
               :  136890:	cmp    %ebx,(%rax)
               :  136892:	je     136980 <mlx5_flow_hw_ctrl_flows+0x9f0>
               :  136898:	mov    (%rax),%edx
               :  13689a:	mov    %edx,0x90(%rsp)
               :  1368a1:	movzwl 0x4(%rax),%eax
               :  1368a5:	mov    %ax,0x94(%rsp)
               :  1368ad:	mov    0x740(%r15),%ecx
               :  1368b4:	test   %ecx,%ecx
               :  1368b6:	je     136958 <mlx5_flow_hw_ctrl_flows+0x9c8>
               :  1368bc:	lea    0x68(%rsp),%rax
               :  1368c1:	mov    %rax,0x10(%rsp)
               :  1368c6:	mov    %r12,%rax
               :  1368c9:	xor    %r13d,%r13d
               :  1368cc:	mov    %r15,%r12
               :  1368cf:	lea    0xd0(%rsp),%rbx
               :  1368d7:	mov    %rax,%r15
               :  1368da:	jmp    1368ed <mlx5_flow_hw_ctrl_flows+0x95d>
               :  1368dc:	nopl   0x0(%rax)
               :  1368e0:	inc    %r13
               :  1368e3:	cmp    %r13d,0x740(%r12)
               :  1368eb:	jbe    13694f <mlx5_flow_hw_ctrl_flows+0x9bf>
               :  1368ed:	xor    %edx,%edx
               :  1368ef:	movzwl 0x640(%r12,%r13,2),%eax
               :  1368f8:	movl   $0x0,0x6a(%rsp)
               :  136900:	mov    %dx,0x6e(%rsp)
               :  136905:	xchg   %al,%ah
               :  136907:	mov    %ax,0x68(%rsp)
               :  13690c:	mov    0x10(%rsp),%rax
               :  136911:	mov    %r15,%r8
               :  136914:	mov    %rbx,%rcx
               :  136917:	mov    %r14,%rdx
               :  13691a:	mov    %rbp,%rsi
               :  13691d:	mov    %rbp,%rdi
               :  136920:	mov    %rax,0xf8(%rsp)
               :  136928:	callq  1341e0 <flow_hw_create_ctrl_flow.constprop.0>
               :  13692d:	test   %eax,%eax
               :  13692f:	je     1368e0 <mlx5_flow_hw_ctrl_flows+0x950>
               :  136931:	mov    0x58(%rsp),%r15
               :  136936:	data16 lea 0x5f592(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :  13693e:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  136946:	mov    (%rax),%eax
               :  136948:	neg    %eax
               :  13694a:	jmpq   1364d4 <mlx5_flow_hw_ctrl_flows+0x544>
               :  13694f:	mov    %r15,%rax
               :  136952:	mov    %r12,%r15
               :  136955:	mov    %rax,%r12
               :  136958:	addq   $0x6,0x20(%rsp)
               :  13695e:	mov    0x20(%rsp),%rax
               :  136963:	cmp    $0x600,%rax
               :  136969:	je     136d04 <mlx5_flow_hw_ctrl_flows+0xd74>
               :  13696f:	mov    0x30(%rbp),%rax
               :  136973:	jmpq   13687a <mlx5_flow_hw_ctrl_flows+0x8ea>
               :  136978:	nopl   0x0(%rax,%rax,1)
               :  136980:	movzwl 0x4(%rsi),%ebx
               :  136984:	cmp    %bx,0x4(%rax)
               :  136988:	jne    136898 <mlx5_flow_hw_ctrl_flows+0x908>
               :  13698e:	jmp    136958 <mlx5_flow_hw_ctrl_flows+0x9c8>
               :  136990:	movl   $0x9,0x110(%rsp)
               :  13699b:	movq   $0x0,0x118(%rsp)
               :  1369a7:	movq   $0x0,0x120(%rsp)
               :  1369b3:	movq   $0x0,0x128(%rsp)
               :  1369bf:	mov    $0xb,%eax
               :  1369c4:	cmp    $0x5,%r12d
               :  1369c8:	je     1369e0 <mlx5_flow_hw_ctrl_flows+0xa50>
               :  1369ca:	mov    $0xc,%eax
               :  1369cf:	cmp    $0x6,%r12d
               :  1369d3:	jne    136b3a <mlx5_flow_hw_ctrl_flows+0xbaa>
               :  1369d9:	nopl   0x0(%rax)
               :  1369e0:	vpxor  %xmm0,%xmm0,%xmm0
               :  1369e4:	mov    %eax,0x130(%rsp)
               :  1369eb:	movq   $0x0,0x138(%rsp)
               :  1369f7:	movq   $0x0,0x140(%rsp)
               :  136a03:	movq   $0x0,0x148(%rsp)
               :  136a0f:	vmovaps %xmm0,0x150(%rsp)
               :  136a18:	vmovaps %xmm0,0x160(%rsp)
               :  136a21:	xor    %ebx,%ebx
               :  136a23:	lea    0x8a(%rsp),%r12
               :  136a2b:	lea    0xb0(%rsp),%r13
               :  136a33:	jmp    136a7f <mlx5_flow_hw_ctrl_flows+0xaef>
               :  136a35:	nopl   (%rax)
               :  136a38:	mov    (%rax),%edx
               :  136a3a:	lea    0xd0(%rsp),%rcx
               :  136a42:	mov    %edx,0x90(%rsp)
               :  136a49:	mov    %r13,%r8
               :  136a4c:	mov    %r14,%rdx
               :  136a4f:	movzwl 0x4(%rax),%eax
               :  136a53:	mov    %rbp,%rsi
               :  136a56:	mov    %rbp,%rdi
               :  136a59:	mov    %ax,0x94(%rsp)
               :  136a61:	callq  1341e0 <flow_hw_create_ctrl_flow.constprop.0>
               :  136a66:	test   %eax,%eax
               :  136a68:	jne    136936 <mlx5_flow_hw_ctrl_flows+0x9a6>
               :  136a6e:	add    $0x6,%rbx
               :  136a72:	cmp    $0x600,%rbx
               :  136a79:	je     1360ff <mlx5_flow_hw_ctrl_flows+0x16f>
               :  136a7f:	mov    0x30(%rbp),%rax
               :  136a83:	mov    0x960(%rax),%rdi
               :  136a8a:	add    %rbx,%rdi
               :  136a8d:	mov    %rdi,%rax
               :  136a90:	mov    (%r12),%edi
               :  136a94:	cmp    %edi,(%rax)
               :  136a96:	jne    136a38 <mlx5_flow_hw_ctrl_flows+0xaa8>
               :  136a98:	movzwl 0x4(%r12),%edi
               :  136a9e:	cmp    %di,0x4(%rax)
               :  136aa2:	jne    136a38 <mlx5_flow_hw_ctrl_flows+0xaa8>
               :  136aa4:	jmp    136a6e <mlx5_flow_hw_ctrl_flows+0xade>
               :  136aa6:	cmpq   $0x2,(%rsp)
               :  136aab:	movl   $0x8,0x110(%rsp)
               :  136ab6:	movq   $0x0,0x118(%rsp)
               :  136ac2:	movq   $0x0,0x120(%rsp)
               :  136ace:	movq   $0x0,0x128(%rsp)
               :  136ada:	mov    $0xb,%ecx
               :  136adf:	je     136810 <mlx5_flow_hw_ctrl_flows+0x880>
               :  136ae5:	cmp    $0x3,%r12d
               :  136ae9:	mov    $0xc,%ecx
               :  136aee:	mov    $0x1,%esi
               :  136af3:	cmovne %esi,%ecx
               :  136af6:	jmpq   136810 <mlx5_flow_hw_ctrl_flows+0x880>
               :  136afb:	cmpq   $0x2,(%rsp)
               :  136b00:	movl   $0x8,0x110(%rsp)
               :  136b0b:	movq   $0x0,0x118(%rsp)
               :  136b17:	movq   $0x0,0x120(%rsp)
               :  136b23:	movq   $0x0,0x128(%rsp)
               :  136b2f:	mov    $0xb,%eax
               :  136b34:	je     1369e0 <mlx5_flow_hw_ctrl_flows+0xa50>
               :  136b3a:	cmp    $0x3,%r12d
               :  136b3e:	mov    $0xc,%eax
               :  136b43:	mov    $0x1,%ecx
               :  136b48:	cmovne %ecx,%eax
               :  136b4b:	jmpq   1369e0 <mlx5_flow_hw_ctrl_flows+0xa50>
               :  136b50:	cmpq   $0x2,(%rsp)
               :  136b55:	movl   $0x8,0x110(%rsp)
               :  136b60:	movq   $0x0,0x118(%rsp)
               :  136b6c:	movq   $0x0,0x120(%rsp)
               :  136b78:	movq   $0x0,0x128(%rsp)
               :  136b84:	mov    $0xb,%eax
               :  136b89:	je     136472 <mlx5_flow_hw_ctrl_flows+0x4e2>
               :  136b8f:	cmp    $0x3,%r12d
               :  136b93:	mov    $0xc,%eax
               :  136b98:	mov    $0x1,%ecx
               :  136b9d:	cmovne %ecx,%eax
               :  136ba0:	jmpq   136472 <mlx5_flow_hw_ctrl_flows+0x4e2>
               :  136ba5:	movl   $0x9,0x110(%rsp)
               :  136bb0:	movq   $0x0,0x118(%rsp)
               :  136bbc:	movq   $0x0,0x120(%rsp)
               :  136bc8:	movq   $0x0,0x128(%rsp)
               :  136bd4:	mov    $0xb,%eax
               :  136bd9:	cmp    $0x5,%r12d
               :  136bdd:	je     136268 <mlx5_flow_hw_ctrl_flows+0x2d8>
               :  136be3:	mov    $0xc,%eax
               :  136be8:	cmp    $0x6,%r12d
               :  136bec:	je     136268 <mlx5_flow_hw_ctrl_flows+0x2d8>
               :  136bf2:	cmp    $0x3,%r12d
               :  136bf6:	mov    $0xc,%eax
               :  136bfb:	mov    $0x1,%ecx
               :  136c00:	cmovne %ecx,%eax
               :  136c03:	jmpq   136268 <mlx5_flow_hw_ctrl_flows+0x2d8>
               :  136c08:	test   %r12d,%r12d
               :  136c0b:	jne    136b50 <mlx5_flow_hw_ctrl_flows+0xbc0>
               :  136c11:	movl   $0x1,0x110(%rsp)
               :  136c1c:	movq   $0x0,0x118(%rsp)
               :  136c28:	movq   $0x0,0x120(%rsp)
               :  136c34:	movq   $0x0,0x128(%rsp)
               :  136c40:	mov    $0x1,%eax
               :  136c45:	jmpq   136472 <mlx5_flow_hw_ctrl_flows+0x4e2>
               :  136c4a:	nopw   0x0(%rax,%rax,1)
               :  136c50:	cmpq   $0x2,(%rsp)
               :  136c55:	movl   $0x8,0x110(%rsp)
               :  136c60:	movq   $0x0,0x118(%rsp)
               :  136c6c:	movq   $0x0,0x120(%rsp)
               :  136c78:	movq   $0x0,0x128(%rsp)
               :  136c84:	mov    $0xb,%eax
               :  136c89:	jne    136bf2 <mlx5_flow_hw_ctrl_flows+0xc62>
               :  136c8f:	jmpq   136268 <mlx5_flow_hw_ctrl_flows+0x2d8>
               :  136c94:	lea    0x3d1a5(%rip),%rax        # 173e40 <ctrl_rx_eth_bcast_spec>
               :  136c9b:	vpxor  %xmm0,%xmm0,%xmm0
               :  136c9f:	vmovaps %xmm0,0xb0(%rsp)
               :  136ca8:	vmovaps %xmm0,0xc0(%rsp)
               :  136cb1:	movl   $0x9,0xb0(%rsp)
               :  136cbc:	jmpq   1363c3 <mlx5_flow_hw_ctrl_flows+0x433>
               :  136cc1:	mov    0x20(%rsp),%r15
               :  136cc6:	mov    %rbx,%rbp
               :  136cc9:	jmpq   1360ff <mlx5_flow_hw_ctrl_flows+0x16f>
               :  136cce:	lea    0x3d24b(%rip),%rax        # 173f20 <ctrl_rx_eth_mcast_spec>
               :  136cd5:	jmp    136c9b <mlx5_flow_hw_ctrl_flows+0xd0b>
               :  136cd7:	lea    0x3d1c2(%rip),%rax        # 173ea0 <ctrl_rx_eth_ipv6_mcast_spec>
               :  136cde:	jmp    136c9b <mlx5_flow_hw_ctrl_flows+0xd0b>
               :  136ce0:	lea    0x3d1f9(%rip),%rax        # 173ee0 <ctrl_rx_eth_ipv4_mcast_spec>
               :  136ce7:	jmp    136c9b <mlx5_flow_hw_ctrl_flows+0xd0b>
               :  136ce9:	data16 lea 0x5f1df(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :  136cf1:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  136cf9:	mov    (%rax),%r13d
               :  136cfc:	neg    %r13d
               :  136cff:	jmpq   13671c <mlx5_flow_hw_ctrl_flows+0x78c>
               :  136d04:	mov    0x58(%rsp),%r15
               :  136d09:	jmpq   1360ff <mlx5_flow_hw_ctrl_flows+0x16f>
               :  136d0e:	callq  aaf0 <__stack_chk_fail@plt>
               :  136d13:	data16 nopw %cs:0x0(%rax,%rax,1)
               :  136d1e:	xchg   %ax,%ax
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000139340 <mlx5_hws_cnt_svc>: /* mlx5_hws_cnt_svc total: 205902  6.0887 */
               :  139340:	endbr64 
               :  139344:	push   %r15
               :  139346:	push   %r14
               :  139348:	mov    %rdi,%r14
               :  13934b:	push   %r13
               :  13934d:	push   %r12
               :  13934f:	push   %rbp
               :  139350:	push   %rbx
               :  139351:	sub    $0xb8,%rsp
               :  139358:	mov    %fs:0x28,%rax
               :  139361:	mov    %rax,0xa8(%rsp)
               :  139369:	xor    %eax,%eax
               :  13936b:	mov    0x838(%rdi),%rax
               :  139372:	mov    0x8(%rax),%edx
               :  139375:	imul   $0x3e8,%rdx,%rcx
               :  13937c:	cmpb   $0x0,0x18(%rax)
               :  139380:	mov    %rcx,0x78(%rsp)
               :  139385:	je     1399bd <mlx5_hws_cnt_svc+0x67d>
               :  13938b:	nopl   0x0(%rax,%rax,1)
               :  139390:	rdtsc  
               :  139392:	shl    $0x20,%rdx
               :  139396:	mov    %eax,%eax
               :  139398:	or     %rdx,%rax
               :  13939b:	mov    %rax,0x68(%rsp)
               :  1393a0:	mov    0x80(%r14),%rax
               :  1393a7:	xor    %edi,%edi
               :  1393a9:	mov    (%rax),%rsi
               :  1393ac:	callq  249a0 <mlx5_eth_find_next>
               :  1393b1:	mov    %eax,%r15d
               :  1393b4:	cmp    $0x1f,%ax
               :  1393b8:	jbe    1393e3 <mlx5_hws_cnt_svc+0xa3>
               :  1393ba:	jmpq   139970 <mlx5_hws_cnt_svc+0x630>
               :  1393bf:	nop
               :  1393c0:	mov    0x80(%r14),%rax
               :  1393c7:	lea    0x1(%r15),%edi
               :  1393cb:	mov    (%rax),%rsi
               :  1393ce:	movzwl %di,%edi
               :  1393d1:	callq  249a0 <mlx5_eth_find_next>
               :  1393d6:	mov    %eax,%r15d
               :  1393d9:	cmp    $0x1f,%ax
               :  1393dd:	ja     139970 <mlx5_hws_cnt_svc+0x630>
               :  1393e3:	movzwl %r15w,%eax
               :  1393e7:	imul   $0x4080,%rax,%rax
               :  1393ee:	mov    0x5cba3(%rip),%rcx        # 195f98 <rte_eth_devices@INTERNAL>
               :  1393f5:	mov    0x30(%rcx,%rax,1),%rax
               :  1393fa:	mov    0x60(%rax),%rax
               :  1393fe:	mov    %rax,0x38(%rsp)
               :  139403:	test   %rax,%rax
               :  139406:	je     1393c0 <mlx5_hws_cnt_svc+0x80>
               :  139408:	cmp    %r14,0x8(%rax)
               :  13940c:	jne    1393c0 <mlx5_hws_cnt_svc+0x80>
               :  13940e:	mov    0x3340(%rax),%r13
               :  139415:	test   %r13,%r13
               :  139418:	je     1393c0 <mlx5_hws_cnt_svc+0x80>
               :  13941a:	mov    0xe8(%r13),%rbp
               :  139421:	mov    %r15w,0x76(%rsp)
               :  139427:	mov    0x84(%rbp),%ebx
               :  13942d:	mov    0x104(%rbp),%eax
               :  139433:	mov    %r14,0x50(%rsp)
               :  139438:	sub    %eax,%ebx
               :  13943a:	mov    0x38(%rbp),%eax
               :  13943d:	and    0x34(%rbp),%ebx
               :  139440:	cmp    %eax,%ebx
               :  139442:	cmova  %eax,%ebx
               :  139445:	xor    %ecx,%ecx
               :  139447:	xor    %eax,%eax
               :  139449:	movq   $0x0,0x30(%rsp)
               :  139452:	movq   $0x0,0x48(%rsp)
               :  13945b:	mov    0xd8(%r13),%r12
               :  139462:	mov    %rcx,%r15
               :  139465:	mov    %rax,%r14
               :  139468:	jmpq   1395af <mlx5_hws_cnt_svc+0x26f>
               :  13946d:	nopl   (%rax)
               :  139470:	mov    0x108(%rbp),%eax
               :  139476:	cmp    $0x1,%eax
               :  139479:	je     1399f0 <mlx5_hws_cnt_svc+0x6b0>
               :  13947f:	cmp    $0x3,%eax
               :  139482:	je     1397a8 <mlx5_hws_cnt_svc+0x468>
               :  139488:	xor    %esi,%esi
               :  13948a:	xor    %edx,%edx
               :  13948c:	xor    %eax,%eax
               :  13948e:	mov    %esi,%r10d
               :  139491:	mov    0x30(%rsp),%r8
               :  139496:	sub    %eax,%r10d
               :  139499:	lea    (%r15,%rdx,1),%rax
               :  13949d:	mov    %rax,0x28(%rsp)
               :  1394a2:	mov    %ebx,%eax
               :  1394a4:	sub    %esi,%eax
               :  1394a6:	mov    %eax,(%rsp)
               :  1394a9:	mov    0x48(%rsp),%rax
               :  1394ae:	mov    %r10d,%r9d
               :  1394b1:	mov    %r8,0x30(%rsp)
               :  1394b6:	mov    %rax,0x40(%rsp)
               :  1394bb:	shl    $0x2,%r9
               :  1394bf:	lea    (%rax,%r9,1),%r11
               :  1394c3:	mov    %r14,%rsi
               :  1394c6:	mov    %r15,%rdi
               :  1394c9:	mov    %r8,0x20(%rsp)
               :  1394ce:	mov    %r11,0x18(%rsp)
               :  1394d3:	mov    %r9,0x10(%rsp)
               :  1394d8:	mov    %r10d,0x8(%rsp)
               :  1394dd:	callq  aeb0 <memcpy@plt>
               :  1394e2:	mov    0x8(%rsp),%r10d
               :  1394e7:	mov    0x10(%rsp),%r9
               :  1394ec:	test   %r10d,%r10d
               :  1394ef:	mov    0x18(%rsp),%r11
               :  1394f4:	mov    0x20(%rsp),%r8
               :  1394f9:	jne    139910 <mlx5_hws_cnt_svc+0x5d0>
               :  1394ff:	mov    (%rsp),%r9d
               :  139503:	test   %r9d,%r9d
               :  139506:	jne    1398f0 <mlx5_hws_cnt_svc+0x5b0>
               :  13950c:	mov    0x108(%rbp),%eax
               :  139512:	cmp    $0x1,%eax
               :  139515:	je     1398c0 <mlx5_hws_cnt_svc+0x580>
               :  13951b:	cmp    $0x3,%eax
               :  13951e:	jne    13954b <mlx5_hws_cnt_svc+0x20b>
               :  139520:	mov    0x100(%rbp),%rdx
               :  139527:	mov    %rdx,%rax
               :  13952a:	shr    $0x20,%rax
               :  13952e:	sub    %eax,%edx
               :  139530:	cmp    %edx,%ebx
               :  139532:	lea    (%rbx,%rax,1),%esi
               :  139535:	cmovbe %esi,%eax
               :  139538:	mov    %rax,%rdx
               :  13953b:	shl    $0x20,%rdx
               :  13953f:	mov    %eax,%eax
               :  139541:	or     %rdx,%rax
               :  139544:	mov    %rax,0x100(%rbp)
               :  13954b:	mov    0x88(%r12),%eax
               :  139553:	cmp    $0x1,%eax
               :  139556:	je     139890 <mlx5_hws_cnt_svc+0x550>
               :  13955c:	cmp    $0x3,%eax
               :  13955f:	jne    13958e <mlx5_hws_cnt_svc+0x24e>
               :  139561:	mov    0x80(%r12),%rdx
               :  139569:	mov    %rdx,%rax
               :  13956c:	shr    $0x20,%rax
               :  139570:	sub    %eax,%edx
               :  139572:	cmp    %edx,%ebx
               :  139574:	lea    (%rbx,%rax,1),%esi
               :  139577:	cmovbe %esi,%eax
               :  13957a:	mov    %rax,%rdx
               :  13957d:	shl    $0x20,%rdx
               :  139581:	mov    %eax,%eax
               :  139583:	or     %rdx,%rax
               :  139586:	mov    %rax,0x80(%r12)
               :  13958e:	mov    0x84(%rbp),%ebx
               :  139594:	mov    0x104(%rbp),%eax
               :  13959a:	sub    %eax,%ebx
               :  13959c:	mov    0x38(%rbp),%eax
               :  13959f:	and    0x34(%rbp),%ebx
               :  1395a2:	cmp    %eax,%ebx
               :  1395a4:	cmova  %eax,%ebx
               :  1395a7:	test   %ebx,%ebx
               :  1395a9:	je     139a00 <mlx5_hws_cnt_svc+0x6c0>
               :  1395af:	incl   0xc0(%r13)
               :  1395b6:	mov    0x50(%rsp),%rdi
               :  1395bb:	mov    %r13,%rsi
               :  1395be:	callq  5d030 <mlx5_aso_cnt_query>
               :  1395c3:	mov    0x88(%r12),%eax
               :  1395cb:	cmp    $0x1,%eax
               :  1395ce:	je     139688 <mlx5_hws_cnt_svc+0x348>
               :  1395d4:	cmp    $0x3,%eax
               :  1395d7:	jne    139470 <mlx5_hws_cnt_svc+0x130>
               :  1395dd:	mov    0x38(%r12),%r8d
               :  1395e2:	mov    0x80(%r12),%rax
               :  1395ea:	mov    %rax,0xa0(%rsp)
               :  1395f2:	lea    0x80(%r12),%rdi
               :  1395fa:	mov    0x58(%rsp),%r9
               :  1395ff:	mov    0xa0(%rsp),%eax
               :  139606:	cmp    %eax,0xa4(%rsp)
               :  13960d:	je     13962a <mlx5_hws_cnt_svc+0x2ea>
               :  13960f:	nop
               :  139610:	pause  
               :  139612:	mov    (%rdi),%rdx
               :  139615:	mov    %rdx,%rcx
               :  139618:	shr    $0x20,%rcx
               :  13961c:	mov    %rdx,0xa0(%rsp)
               :  139624:	mov    %ecx,%eax
               :  139626:	cmp    %edx,%ecx
               :  139628:	jne    139610 <mlx5_hws_cnt_svc+0x2d0>
               :  13962a:	mov    0x104(%r12),%esi
               :  139632:	add    %r8d,%esi
               :  139635:	sub    %eax,%esi
               :  139637:	cmp    %ebx,%esi
               :  139639:	cmova  %ebx,%esi
               :  13963c:	test   %esi,%esi
               :  13963e:	je     139d40 <mlx5_hws_cnt_svc+0xa00>
               :  139644:	mov    %rax,%rdx
               :  139647:	shl    $0x20,%rdx
               :  13964b:	mov    %r9d,%r9d
               :  13964e:	or     %rdx,%r9
               :  139651:	movabs $0xffffffff00000000,%rcx
               :  13965b:	add    %esi,%eax
               :  13965d:	and    %rcx,%r9
               :  139660:	or     %rax,%r9
               :  139663:	mov    0xa0(%rsp),%rax
               :  13966b:	lock cmpxchg %r9,(%rdi)
               :  139670:	je     139940 <mlx5_hws_cnt_svc+0x600>
               :  139676:	mov    %rax,0xa0(%rsp)
               :  13967e:	jmpq   1395ff <mlx5_hws_cnt_svc+0x2bf>
               :  139683:	nopl   0x0(%rax,%rax,1)
               :  139688:	mov    0x38(%r12),%esi
               :  13968d:	mov    0x80(%r12),%eax
               :  139695:	mov    0x104(%r12),%edx
               :  13969d:	add    %edx,%esi
               :  13969f:	sub    %eax,%esi
               :  1396a1:	cmp    %ebx,%esi
               :  1396a3:	cmova  %ebx,%esi
               :  1396a6:	test   %esi,%esi
               :  1396a8:	je     1396b5 <mlx5_hws_cnt_svc+0x375>
               :  1396aa:	lea    (%rax,%rsi,1),%edx
               :  1396ad:	mov    %edx,0x80(%r12)
               :  1396b5:	and    0x34(%r12),%eax
               :  1396ba:	mov    %eax,%edx
               :  1396bc:	lea    0x180(%r12),%r8
               :  1396c4:	lea    (%r8,%rdx,4),%r15
               :  1396c8:	mov    0x30(%r12),%edx
               :  1396cd:	lea    (%rax,%rsi,1),%edi
               :  1396d0:	cmp    %edx,%edi
               :  1396d2:	jbe    139700 <mlx5_hws_cnt_svc+0x3c0>
               :  1396d4:	mov    %edx,%esi
               :  1396d6:	sub    %eax,%esi
               :  1396d8:	mov    0x108(%rbp),%eax
               :  1396de:	cmp    $0x1,%eax
               :  1396e1:	je     13970e <mlx5_hws_cnt_svc+0x3ce>
               :  1396e3:	cmp    $0x3,%eax
               :  1396e6:	je     1397af <mlx5_hws_cnt_svc+0x46f>
               :  1396ec:	mov    %esi,%r10d
               :  1396ef:	xor    %edx,%edx
               :  1396f1:	jmpq   139499 <mlx5_hws_cnt_svc+0x159>
               :  1396f6:	nopw   %cs:0x0(%rax,%rax,1)
               :  139700:	mov    0x108(%rbp),%eax
               :  139706:	xor    %r8d,%r8d
               :  139709:	cmp    $0x1,%eax
               :  13970c:	jne    1396e3 <mlx5_hws_cnt_svc+0x3a3>
               :  13970e:	mov    0x100(%rbp),%eax
               :  139714:	mov    0x84(%rbp),%edi
               :  13971a:	sub    %eax,%edi
               :  13971c:	cmp    %ebx,%edi
               :  13971e:	cmova  %ebx,%edi
               :  139721:	test   %edi,%edi
               :  139723:	je     139855 <mlx5_hws_cnt_svc+0x515>
               :  139729:	lea    (%rax,%rdi,1),%edx
               :  13972c:	mov    %edx,0x100(%rbp)
               :  139732:	mov    %r8,0x28(%rsp)
               :  139737:	and    0x34(%rbp),%eax
               :  13973a:	mov    %eax,%edx
               :  13973c:	lea    0x180(%rbp),%r11
               :  139743:	lea    (%r11,%rdx,4),%r14
               :  139747:	mov    0x30(%rbp),%edx
               :  13974a:	lea    (%rax,%rdi,1),%r9d
               :  13974e:	cmp    %edx,%r9d
               :  139751:	ja     139860 <mlx5_hws_cnt_svc+0x520>
               :  139757:	cmp    %esi,%edi
               :  139759:	mov    %esi,%eax
               :  13975b:	cmovbe %edi,%eax
               :  13975e:	xor    %r11d,%r11d
               :  139761:	mov    %eax,%edx
               :  139763:	shl    $0x2,%rdx
               :  139767:	cmp    %eax,%edi
               :  139769:	jbe    139879 <mlx5_hws_cnt_svc+0x539>
               :  13976f:	mov    %edi,%r10d
               :  139772:	sub    %eax,%r10d
               :  139775:	lea    (%r14,%rdx,1),%rax
               :  139779:	mov    %rax,0x40(%rsp)
               :  13977e:	mov    %ebx,%eax
               :  139780:	sub    %edi,%eax
               :  139782:	mov    %eax,(%rsp)
               :  139785:	mov    %r10d,%r9d
               :  139788:	mov    0x28(%rsp),%rax
               :  13978d:	shl    $0x2,%r9
               :  139791:	mov    %r11,0x48(%rsp)
               :  139796:	mov    %rax,0x30(%rsp)
               :  13979b:	add    %r9,%r8
               :  13979e:	jmpq   1394c3 <mlx5_hws_cnt_svc+0x183>
               :  1397a3:	nopl   0x0(%rax,%rax,1)
               :  1397a8:	mov    0x30(%rsp),%r8
               :  1397ad:	xor    %esi,%esi
               :  1397af:	mov    0x100(%rbp),%rax
               :  1397b6:	mov    %rax,0xa0(%rsp)
               :  1397be:	lea    0x100(%rbp),%rdx
               :  1397c5:	mov    0x60(%rsp),%r9
               :  1397ca:	mov    0xa4(%rsp),%eax
               :  1397d1:	cmp    %eax,0xa0(%rsp)
               :  1397d8:	je     1397fa <mlx5_hws_cnt_svc+0x4ba>
               :  1397da:	nopw   0x0(%rax,%rax,1)
               :  1397e0:	pause  
               :  1397e2:	mov    (%rdx),%rcx
               :  1397e5:	mov    %rcx,%rdi
               :  1397e8:	shr    $0x20,%rdi
               :  1397ec:	mov    %rcx,0xa0(%rsp)
               :  1397f4:	mov    %edi,%eax
               :  1397f6:	cmp    %ecx,%edi
               :  1397f8:	jne    1397e0 <mlx5_hws_cnt_svc+0x4a0>
               :  1397fa:	mov    0x84(%rbp),%edi
               :  139800:	sub    %eax,%edi
               :  139802:	cmp    %ebx,%edi
               :  139804:	cmova  %ebx,%edi
               :  139807:	test   %edi,%edi
               :  139809:	je     139850 <mlx5_hws_cnt_svc+0x510>
               :  13980b:	mov    %rax,%rcx
               :  13980e:	shl    $0x20,%rcx
               :  139812:	mov    %r9d,%r9d
               :  139815:	or     %rcx,%r9
               :  139818:	movabs $0xffffffff00000000,%rcx
               :  139822:	add    %edi,%eax
               :  139824:	and    %rcx,%r9
               :  139827:	or     %rax,%r9
               :  13982a:	mov    0xa0(%rsp),%rax
               :  139832:	lock cmpxchg %r9,(%rdx)
               :  139837:	je     139958 <mlx5_hws_cnt_svc+0x618>
               :  13983d:	mov    %rax,0xa0(%rsp)
               :  139845:	jmp    1397ca <mlx5_hws_cnt_svc+0x48a>
               :  139847:	nopw   0x0(%rax,%rax,1)
               :  139850:	mov    %r9,0x60(%rsp)
               :  139855:	mov    %r8,0x28(%rsp)
               :  13985a:	jmpq   139737 <mlx5_hws_cnt_svc+0x3f7>
               :  13985f:	nop
               :  139860:	mov    %edx,%edi
               :  139862:	sub    %eax,%edi
               :  139864:	cmp    %esi,%edi
               :  139866:	mov    %esi,%eax
               :  139868:	cmovbe %edi,%eax
               :  13986b:	mov    %eax,%edx
               :  13986d:	shl    $0x2,%rdx
               :  139871:	cmp    %eax,%edi
               :  139873:	ja     13976f <mlx5_hws_cnt_svc+0x42f>
               :  139879:	mov    %r8,0x30(%rsp)
               :  13987e:	mov    %r11,0x48(%rsp)
               :  139883:	jmpq   13948e <mlx5_hws_cnt_svc+0x14e>
               :  139888:	nopl   0x0(%rax,%rax,1)
               :  139890:	mov    0x80(%r12),%edx
               :  139898:	mov    0x84(%r12),%eax
               :  1398a0:	sub    %eax,%edx
               :  1398a2:	lea    (%rax,%rbx,1),%esi
               :  1398a5:	cmp    %edx,%ebx
               :  1398a7:	cmovbe %esi,%eax
               :  1398aa:	mov    %eax,0x80(%r12)
               :  1398b2:	mov    %eax,0x84(%r12)
               :  1398ba:	jmpq   13958e <mlx5_hws_cnt_svc+0x24e>
               :  1398bf:	nop
               :  1398c0:	mov    0x100(%rbp),%edx
               :  1398c6:	mov    0x104(%rbp),%eax
               :  1398cc:	sub    %eax,%edx
               :  1398ce:	lea    (%rax,%rbx,1),%esi
               :  1398d1:	cmp    %edx,%ebx
               :  1398d3:	cmovbe %esi,%eax
               :  1398d6:	mov    %eax,0x100(%rbp)
               :  1398dc:	mov    %eax,0x104(%rbp)
               :  1398e2:	jmpq   13954b <mlx5_hws_cnt_svc+0x20b>
               :  1398e7:	nopw   0x0(%rax,%rax,1)
               :  1398f0:	mov    (%rsp),%edx
               :  1398f3:	mov    %r11,%rsi
               :  1398f6:	shl    $0x2,%rdx
               :  1398fa:	mov    %r8,%rdi
               :  1398fd:	callq  aeb0 <memcpy@plt>
               :  139902:	jmpq   13950c <mlx5_hws_cnt_svc+0x1cc>
               :  139907:	nopw   0x0(%rax,%rax,1)
               :  139910:	mov    0x40(%rsp),%rsi
               :  139915:	mov    0x28(%rsp),%rdi
               :  13991a:	mov    %r9,%rdx
               :  13991d:	mov    %r8,0x10(%rsp)
               :  139922:	mov    %r11,0x8(%rsp)
               :  139927:	callq  aeb0 <memcpy@plt>
               :  13992c:	mov    0x10(%rsp),%r8
               :  139931:	mov    0x8(%rsp),%r11
               :  139936:	jmpq   1394ff <mlx5_hws_cnt_svc+0x1bf>
               :  13993b:	nopl   0x0(%rax,%rax,1)
               :  139940:	mov    %r9,0x58(%rsp)
               :  139945:	mov    0xa0(%rsp),%eax
               :  13994c:	jmpq   1396b5 <mlx5_hws_cnt_svc+0x375>
               :  139951:	nopl   0x0(%rax)
               :  139958:	mov    %r9,0x60(%rsp)
               :  13995d:	mov    %r8,0x28(%rsp)
               :  139962:	mov    0xa0(%rsp),%eax
               :  139969:	jmpq   139737 <mlx5_hws_cnt_svc+0x3f7>
               :  13996e:	xchg   %ax,%ax
               :  139970:	rdtsc  
               :  139972:	shl    $0x20,%rdx
               :  139976:	mov    %eax,%ebx
               :  139978:	or     %rdx,%rbx
               :  13997b:	sub    0x68(%rsp),%rbx
               :  139980:	callq  a2d0 <rte_get_tsc_hz@plt>
               :  139985:	movabs $0x431bde82d7b634db,%rcx
               :  13998f:	mul    %rcx
               :  139992:	mov    %rbx,%rax
               :  139995:	mov    %rdx,%rcx
               :  139998:	shr    $0x12,%rcx
               :  13999c:	xor    %edx,%edx
               :  13999e:	div    %rcx
               :  1399a1:	cmp    %rax,0x78(%rsp)
               :  1399a6:	ja     139d4a <mlx5_hws_cnt_svc+0xa0a>
               :  1399ac:	mov    0x838(%r14),%rax
               :  1399b3:	cmpb   $0x0,0x18(%rax)
               :  1399b7:	jne    139390 <mlx5_hws_cnt_svc+0x50>
               :  1399bd:	mov    0xa8(%rsp),%rax
               :  1399c5:	xor    %fs:0x28,%rax
               :  1399ce:	jne    13a023 <mlx5_hws_cnt_svc+0xce3>
               :  1399d4:	add    $0xb8,%rsp
               :  1399db:	pop    %rbx
               :  1399dc:	pop    %rbp
               :  1399dd:	pop    %r12
               :  1399df:	pop    %r13
               :  1399e1:	pop    %r14
               :  1399e3:	xor    %eax,%eax
               :  1399e5:	pop    %r15
               :  1399e7:	retq   
               :  1399e8:	nopl   0x0(%rax,%rax,1)
               :  1399f0:	mov    0x30(%rsp),%r8
               :  1399f5:	xor    %esi,%esi
               :  1399f7:	jmpq   13970e <mlx5_hws_cnt_svc+0x3ce>
               :  1399fc:	nopl   0x0(%rax)
               :  139a00:	mov    0x38(%rsp),%rax
               :  139a05:	movzwl 0x76(%rsp),%r15d
               :  139a0b:	mov    0x50(%rsp),%r14
               :  139a10:	testb  $0x2,0x3368(%rax)
               :  139a17:	je     1393c0 <mlx5_hws_cnt_svc+0x80>
               :  139a1d:	mov    0x3340(%rax),%r13
               :  139a24:	mov    0x8(%rax),%r12
               :  139a28:	mov    0x10(%rax),%eax
               :  139a2b:	lea    -0x1(%rax),%ebp
               :  139a2e:	mov    0xd0(%r13),%rax
               :  139a35:	mov    (%rax),%rax
               :  139a38:	mov    %rax,(%rsp)
               :  139a3c:	rdtsc  
               :  139a3e:	shl    $0x20,%rdx
               :  139a42:	mov    %eax,%ebx
               :  139a44:	or     %rdx,%rbx
               :  139a47:	callq  a2d0 <rte_get_tsc_hz@plt>
               :  139a4c:	mov    %rax,%r8
               :  139a4f:	xor    %edx,%edx
               :  139a51:	mov    %rbx,%rax
               :  139a54:	div    %r8
               :  139a57:	mov    0xe0(%r13),%rdx
               :  139a5e:	mov    0x38(%rdx),%edx
               :  139a61:	mov    %eax,%ecx
               :  139a63:	sub    0xf8(%r13),%ecx
               :  139a6a:	mov    %ecx,0x8(%rsp)
               :  139a6e:	mov    %rax,0xf8(%r13)
               :  139a75:	test   %edx,%edx
               :  139a77:	je     139b19 <mlx5_hws_cnt_svc+0x7d9>
               :  139a7d:	imul   $0x38,%rbp,%rbp
               :  139a81:	lea    -0x1(%rdx),%r11d
               :  139a85:	mov    $0x2,%edi
               :  139a8a:	mov    $0x1,%r8d
               :  139a90:	add    %r12,%rbp
               :  139a93:	mov    %di,0x10(%rsp)
               :  139a98:	mov    %r8w,0x18(%rsp)
               :  139a9e:	xor    %ebx,%ebx
               :  139aa0:	mov    %r11,%r12
               :  139aa3:	jmp    139aab <mlx5_hws_cnt_svc+0x76b>
               :  139aa5:	nopl   (%rax)
               :  139aa8:	mov    %rax,%rbx
               :  139aab:	mov    0xc8(%r13),%rdx
               :  139ab2:	lea    (%rbx,%rbx,2),%rax
               :  139ab6:	lea    (%rdx,%rax,8),%rax
               :  139aba:	mov    $0x1,%ecx
               :  139abf:	shrx   %ecx,0x14(%rax),%esi
               :  139ac5:	and    $0xffffff,%esi
               :  139acb:	cmpb   $0x1,0x10(%rax)
               :  139acf:	mov    %esi,0x9c(%rsp)
               :  139ad6:	jne    139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  139ad8:	test   %esi,%esi
               :  139ada:	je     139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  139adc:	mov    0x858(%rbp),%rdi
               :  139ae3:	callq  11b3c0 <mlx5_ipool_get>
               :  139ae8:	mov    %rax,%rdx
               :  139aeb:	test   %rax,%rax
               :  139aee:	je     1866c <mlx5_hws_cnt_svc.cold>
               :  139af4:	mov    (%rax),%esi
               :  139af6:	test   %esi,%esi
               :  139af8:	je     139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  139afa:	lea    0x8(%rax),%rsi
               :  139afe:	movzwl 0x8(%rax),%eax
               :  139b02:	dec    %eax
               :  139b04:	cmp    $0x1,%ax
               :  139b08:	jbe    139b40 <mlx5_hws_cnt_svc+0x800>
               :  139b0a:	nopw   0x0(%rax,%rax,1)
               :  139b10:	lea    0x1(%rbx),%rax
               :  139b14:	cmp    %r12,%rbx
               :  139b17:	jne    139aa8 <mlx5_hws_cnt_svc+0x768>
               :  139b19:	mov    0x38(%rsp),%rax
               :  139b1e:	testb  $0x1,0x3368(%rax)
               :  139b25:	jne    1393c0 <mlx5_hws_cnt_svc+0x80>
               :  139b2b:	mov    0x8(%rax),%rdi
               :  139b2f:	callq  22bf0 <mlx5_age_event_prepare>
               :  139b34:	jmpq   1393c0 <mlx5_hws_cnt_svc+0x80>
               :  139b39:	nopl   0x0(%rax)
               :  139b40:	mov    (%rsp),%rcx
               :  139b44:	mov    %rbx,%rax
               :  139b47:	shl    $0x4,%rax
               :  139b4b:	mov    (%rcx,%rax,1),%rax
               :  139b4f:	bswap  %rax
               :  139b52:	mov    0x1e(%rdx),%edi
               :  139b55:	cmp    $0x1,%edi
               :  139b58:	je     139d5c <mlx5_hws_cnt_svc+0xa1c>
               :  139b5e:	mov    0x1a(%rdx),%ecx
               :  139b61:	add    0x12(%rdx),%rax
               :  139b65:	inc    %ecx
               :  139b67:	mov    %rax,0x12(%rdx)
               :  139b6b:	cmp    %ecx,%edi
               :  139b6d:	ja     139dc4 <mlx5_hws_cnt_svc+0xa84>
               :  139b73:	movl   $0x0,0x1a(%rdx)
               :  139b7a:	lea    0x4(%rdx),%rcx
               :  139b7e:	cmp    0xa(%rdx),%rax
               :  139b82:	jne    139dcc <mlx5_hws_cnt_svc+0xa8c>
               :  139b88:	movq   $0x0,0x12(%rdx)
               :  139b90:	mov    0x8(%rsp),%edi
               :  139b94:	mov    %edi,%eax
               :  139b96:	lock xadd %eax,(%rcx)
               :  139b9a:	mov    (%rdx),%ecx
               :  139b9c:	add    %edi,%eax
               :  139b9e:	cmp    %ecx,%eax
               :  139ba0:	jbe    139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  139ba6:	mov    0x38(%rsp),%rax
               :  139bab:	mov    0x860(%rbp),%rcx
               :  139bb2:	testb  $0x1,0x3368(%rax)
               :  139bb9:	jne    139d7a <mlx5_hws_cnt_svc+0xa3a>
               :  139bbf:	movzwl 0x18(%rsp),%eax
               :  139bc4:	mov    $0x4,%edi
               :  139bc9:	lock cmpxchg %di,(%rsi)
               :  139bce:	mov    %ax,0x18(%rsp)
               :  139bd3:	mov    %eax,%r8d
               :  139bd6:	jne    13a00f <mlx5_hws_cnt_svc+0xccf>
               :  139bdc:	mov    0x88(%rcx),%eax
               :  139be2:	cmp    $0x2,%eax
               :  139be5:	je     139e63 <mlx5_hws_cnt_svc+0xb23>
               :  139beb:	ja     139c53 <mlx5_hws_cnt_svc+0x913>
               :  139bed:	test   %eax,%eax
               :  139bef:	je     139de8 <mlx5_hws_cnt_svc+0xaa8>
               :  139bf5:	mov    0x38(%rcx),%edi
               :  139bf8:	mov    0x80(%rcx),%eax
               :  139bfe:	mov    0x104(%rcx),%r9d
               :  139c05:	add    %r9d,%edi
               :  139c08:	cmp    %edi,%eax
               :  139c0a:	je     139d87 <mlx5_hws_cnt_svc+0xa47>
               :  139c10:	lea    0x1(%rax),%edi
               :  139c13:	mov    0x30(%rcx),%r8d
               :  139c17:	and    0x34(%rcx),%eax
               :  139c1a:	lea    0x1(%rax),%r9d
               :  139c1e:	mov    %edi,0x80(%rcx)
               :  139c24:	mov    0x9c(%rsp),%edx
               :  139c2b:	lea    0x180(%rcx),%rsi
               :  139c32:	cmp    %r9d,%r8d
               :  139c35:	jb     139fd5 <mlx5_hws_cnt_svc+0xc95>
               :  139c3b:	mov    %edx,(%rsi,%rax,4)
               :  139c3e:	mov    $0x4,%edx
               :  139c43:	mov    %edi,0x84(%rcx)
               :  139c49:	mov    %dx,0x10(%rsp)
               :  139c4e:	jmpq   139da6 <mlx5_hws_cnt_svc+0xa66>
               :  139c53:	cmp    $0x3,%eax
               :  139c56:	jne    139d87 <mlx5_hws_cnt_svc+0xa47>
               :  139c5c:	mov    0x38(%rcx),%r10d
               :  139c60:	mov    0x80(%rcx),%rax
               :  139c67:	lea    0x80(%rcx),%r9
               :  139c6e:	mov    %rax,0xa0(%rsp)
               :  139c76:	mov    0xa4(%rsp),%r11d
               :  139c7e:	cmp    %r11d,0xa0(%rsp)
               :  139c86:	je     139ca3 <mlx5_hws_cnt_svc+0x963>
               :  139c88:	pause  
               :  139c8a:	mov    (%r9),%rax
               :  139c8d:	mov    %rax,%rdi
               :  139c90:	shr    $0x20,%rdi
               :  139c94:	mov    %rax,0xa0(%rsp)
               :  139c9c:	mov    %edi,%r11d
               :  139c9f:	cmp    %eax,%edi
               :  139ca1:	jne    139c88 <mlx5_hws_cnt_svc+0x948>
               :  139ca3:	mov    0x104(%rcx),%eax
               :  139ca9:	add    %r10d,%eax
               :  139cac:	cmp    %r11d,%eax
               :  139caf:	je     139d87 <mlx5_hws_cnt_svc+0xa47>
               :  139cb5:	mov    0x80(%rsp),%edi
               :  139cbc:	mov    %r11,%rax
               :  139cbf:	shl    $0x20,%rax
               :  139cc3:	or     %rdi,%rax
               :  139cc6:	lea    0x1(%r11),%edi
               :  139cca:	movabs $0xffffffff00000000,%r11
               :  139cd4:	and    %r11,%rax
               :  139cd7:	or     %rdi,%rax
               :  139cda:	mov    %rax,0x80(%rsp)
               :  139ce2:	mov    %rax,%rdi
               :  139ce5:	mov    0xa0(%rsp),%rax
               :  139ced:	lock cmpxchg %rdi,(%r9)
               :  139cf2:	jne    139c6e <mlx5_hws_cnt_svc+0x92e>
               :  139cf8:	mov    0xa0(%rsp),%edx
               :  139cff:	mov    0x30(%rcx),%edi
               :  139d02:	mov    %edx,%eax
               :  139d04:	and    0x34(%rcx),%eax
               :  139d07:	lea    0x1(%rax),%r9d
               :  139d0b:	mov    0x9c(%rsp),%esi
               :  139d12:	lea    0x180(%rcx),%r8
               :  139d19:	cmp    %r9d,%edi
               :  139d1c:	jb     139ffc <mlx5_hws_cnt_svc+0xcbc>
               :  139d22:	mov    %esi,(%r8,%rax,4)
               :  139d26:	inc    %edx
               :  139d28:	mov    %edx,0x84(%rcx)
               :  139d2e:	mov    $0x4,%eax
               :  139d33:	mov    %ax,0x10(%rsp)
               :  139d38:	jmp    139da6 <mlx5_hws_cnt_svc+0xa66>
               :  139d3a:	nopw   0x0(%rax,%rax,1)
               :  139d40:	mov    %r9,0x58(%rsp)
               :  139d45:	jmpq   1396b5 <mlx5_hws_cnt_svc+0x375>
               :  139d4a:	mov    0x78(%rsp),%rdi
               :  139d4f:	sub    %rax,%rdi
               :  139d52:	callq  ae30 <rte_delay_us_sleep@plt>
               :  139d57:	jmpq   1399ac <mlx5_hws_cnt_svc+0x66c>
               :  139d5c:	lea    0x4(%rdx),%rcx
               :  139d60:	cmp    0xa(%rdx),%rax
               :  139d64:	je     139b90 <mlx5_hws_cnt_svc+0x850>
               :  139d6a:	movl   $0x0,0x4(%rdx)
               :  139d71:	mov    %rax,0xa(%rdx)
               :  139d75:	jmpq   139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  139d7a:	mov    0x22(%rdx),%eax
               :  139d7d:	mov    0x8(%rcx,%rax,8),%rcx
               :  139d82:	jmpq   139bbf <mlx5_hws_cnt_svc+0x87f>
               :  139d87:	mov    $0x4,%eax
               :  139d8c:	lock cmpxchg %r8w,(%rsi)
               :  139d92:	sete   %cl
               :  139d95:	movzbl %cl,%ecx
               :  139d98:	or     %ax,%cx
               :  139d9b:	mov    %ax,0x10(%rsp)
               :  139da0:	je     13a028 <mlx5_hws_cnt_svc+0xce8>
               :  139da6:	mov    0x38(%rsp),%rax
               :  139dab:	testb  $0x1,0x3368(%rax)
               :  139db2:	jne    139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  139db8:	orb    $0x2,0x850(%rbp)
               :  139dbf:	jmpq   139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  139dc4:	mov    %ecx,0x1a(%rdx)
               :  139dc7:	jmpq   139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  139dcc:	movl   $0x0,0x4(%rdx)
               :  139dd3:	mov    0x12(%rdx),%rax
               :  139dd7:	movq   $0x0,0x12(%rdx)
               :  139ddf:	mov    %rax,0xa(%rdx)
               :  139de3:	jmpq   139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  139de8:	mov    0x38(%rcx),%r10d
 22281  0.6589 :  139dec:	mov    0x80(%rcx),%edi
               :  139df2:	mov    0x104(%rcx),%eax
               :  139df8:	add    %r10d,%eax
               :  139dfb:	cmp    %eax,%edi
   120  0.0035 :  139dfd:	je     139d87 <mlx5_hws_cnt_svc+0xa47>
     1 3.0e-05 :  139dff:	lea    0x1(%rdi),%r9d
               :  139e03:	mov    %edi,%eax
 11755  0.3476 :  139e05:	lock cmpxchg %r9d,0x80(%rcx)
               :  139e0e:	sete   %al
               :  139e11:	test   %al,%al
 11598  0.3430 :  139e13:	je     139dec <mlx5_hws_cnt_svc+0xaac>
               :  139e15:	mov    %edi,%eax
               :  139e17:	and    0x34(%rcx),%eax
               :  139e1a:	mov    0x30(%rcx),%esi
               :  139e1d:	lea    0x1(%rax),%r10d
   112  0.0033 :  139e21:	mov    0x9c(%rsp),%edx
               :  139e28:	lea    0x180(%rcx),%r8
               :  139e2f:	cmp    %r10d,%esi
 11623  0.3437 :  139e32:	jb     139fc2 <mlx5_hws_cnt_svc+0xc82>
               :  139e38:	mov    %edx,(%r8,%rax,4)
               :  139e3c:	lea    0x84(%rcx),%rdx
               :  139e43:	jmp    139e47 <mlx5_hws_cnt_svc+0xb07>
               :  139e45:	pause  
               :  139e47:	mov    (%rdx),%eax
               :  139e49:	cmp    %eax,%edi
               :  139e4b:	jne    139e45 <mlx5_hws_cnt_svc+0xb05>
   115  0.0034 :  139e4d:	mov    %r9d,0x84(%rcx)
  2625  0.0776 :  139e54:	mov    $0x4,%ecx
    25 7.4e-04 :  139e59:	mov    %cx,0x10(%rsp)
 11542  0.3413 :  139e5e:	jmpq   139da6 <mlx5_hws_cnt_svc+0xa66>
               :  139e63:	mov    0x38(%rcx),%eax
   364  0.0108 :  139e66:	lea    0x90(%rcx),%r9
               :  139e6d:	mov    %eax,0x10(%rsp)
   489  0.0145 :  139e71:	mov    0x90(%rcx),%rax
  2025  0.0599 :  139e78:	mov    %rax,0xa0(%rsp)
  4187  0.1238 :  139e80:	mov    0xa4(%rsp),%r10d
               :  139e88:	mov    0x84(%rcx),%eax
  5414  0.1601 :  139e8e:	mov    %r10d,%edi
     7 2.1e-04 :  139e91:	mov    0x8c(%rcx),%r11d
    42  0.0012 :  139e98:	sub    %eax,%edi
               :  139e9a:	cmp    %r11d,%edi
               :  139e9d:	jbe    139ec0 <mlx5_hws_cnt_svc+0xb80>
               :  139e9f:	pause  
               :  139ea1:	mov    (%r9),%rax
 13090  0.3871 :  139ea4:	mov    %rax,0xa0(%rsp)
               :  139eac:	shr    $0x20,%rax
               :  139eb0:	mov    %eax,%r10d
   493  0.0146 :  139eb3:	mov    0x84(%rcx),%edi
               :  139eb9:	sub    %edi,%eax
  9183  0.2715 :  139ebb:	cmp    %eax,%r11d
               :  139ebe:	jb     139e9f <mlx5_hws_cnt_svc+0xb5f>
 45382  1.3420 :  139ec0:	mov    0x104(%rcx),%eax
 17063  0.5046 :  139ec6:	add    0x10(%rsp),%eax
               :  139eca:	cmp    %r10d,%eax
  1142  0.0338 :  139ecd:	je     139d87 <mlx5_hws_cnt_svc+0xa47>
               :  139ed3:	lea    0x1(%r10),%eax
  6843  0.2024 :  139ed7:	shl    $0x20,%rax
  1063  0.0314 :  139edb:	mov    %rax,%rdi
    27 8.0e-04 :  139ede:	mov    0x88(%rsp),%eax
   736  0.0218 :  139ee5:	movabs $0xffffffff00000000,%r11
  5635  0.1666 :  139eef:	or     %rdi,%rax
     1 3.0e-05 :  139ef2:	mov    0xa0(%rsp),%edi
               :  139ef9:	and    %r11,%rax
               :  139efc:	inc    %edi
    78  0.0023 :  139efe:	or     %rdi,%rax
               :  139f01:	mov    %rax,0x88(%rsp)
               :  139f09:	mov    %rax,%r11
               :  139f0c:	mov    0xa0(%rsp),%rax
               :  139f14:	lea    0xa0(%rsp),%rdi
               :  139f1c:	lock cmpxchg %r11,(%r9)
               :  139f21:	jne    139e78 <mlx5_hws_cnt_svc+0xb38>
               :  139f27:	mov    0xa4(%rsp),%eax
               :  139f2e:	mov    0x30(%rcx),%esi
               :  139f31:	and    0x34(%rcx),%eax
               :  139f34:	lea    0x1(%rax),%r10d
               :  139f38:	mov    0x9c(%rsp),%edx
               :  139f3f:	lea    0x180(%rcx),%r8
               :  139f46:	cmp    %r10d,%esi
               :  139f49:	jb     139fe9 <mlx5_hws_cnt_svc+0xca9>
               :  139f4f:	mov    %edx,(%r8,%rax,4)
               :  139f53:	mov    0x80(%rcx),%rax
               :  139f5a:	mov    %rax,0xa0(%rsp)
               :  139f62:	lea    0x80(%rcx),%rsi
               :  139f69:	mov    (%r9),%rcx
               :  139f6c:	mov    0xa0(%rsp),%rax
               :  139f74:	movabs $0xffffffff00000000,%r11
               :  139f7e:	lea    0x1(%rax),%edx
               :  139f81:	mov    %rdx,%r8
               :  139f84:	and    %r11,%rax
               :  139f87:	or     %rax,%rdx
               :  139f8a:	cmp    %ecx,%r8d
               :  139f8d:	je     139fa2 <mlx5_hws_cnt_svc+0xc62>
               :  139f8f:	mov    (%rdi),%rax
               :  139f92:	lock cmpxchg %rdx,(%rsi)
               :  139f97:	je     139d2e <mlx5_hws_cnt_svc+0x9ee>
               :  139f9d:	mov    %rax,(%rdi)
               :  139fa0:	jmp    139f69 <mlx5_hws_cnt_svc+0xc29>
               :  139fa2:	mov    %rcx,%rax
               :  139fa5:	shr    $0x20,%rax
               :  139fa9:	shl    $0x20,%rax
               :  139fad:	mov    %edx,%edx
               :  139faf:	or     %rax,%rdx
               :  139fb2:	mov    (%rdi),%rax
               :  139fb5:	lock cmpxchg %rdx,(%rsi)
               :  139fba:	je     139d2e <mlx5_hws_cnt_svc+0x9ee>
               :  139fc0:	jmp    139f9d <mlx5_hws_cnt_svc+0xc5d>
               :  139fc2:	cmp    %esi,%eax
               :  139fc4:	jb     139e38 <mlx5_hws_cnt_svc+0xaf8>
               :  139fca:	mov    %edx,0x180(%rcx)
               :  139fd0:	jmpq   139e3c <mlx5_hws_cnt_svc+0xafc>
               :  139fd5:	cmp    %r8d,%eax
               :  139fd8:	jb     139c3b <mlx5_hws_cnt_svc+0x8fb>
               :  139fde:	mov    %edx,0x180(%rcx)
               :  139fe4:	jmpq   139c3e <mlx5_hws_cnt_svc+0x8fe>
               :  139fe9:	cmp    %esi,%eax
               :  139feb:	jb     139f4f <mlx5_hws_cnt_svc+0xc0f>
               :  139ff1:	mov    %edx,0x180(%rcx)
               :  139ff7:	jmpq   139f53 <mlx5_hws_cnt_svc+0xc13>
               :  139ffc:	cmp    %edi,%eax
               :  139ffe:	jb     139d22 <mlx5_hws_cnt_svc+0x9e2>
               :  13a004:	mov    %esi,0x180(%rcx)
               :  13a00a:	jmpq   139d26 <mlx5_hws_cnt_svc+0x9e6>
               :  13a00f:	movzwl 0x10(%rsp),%eax
               :  13a014:	lock cmpxchg %di,(%rsi)
               :  13a019:	mov    %ax,0x10(%rsp)
               :  13a01e:	jmpq   139b10 <mlx5_hws_cnt_svc+0x7d0>
               :  13a023:	callq  aaf0 <__stack_chk_fail@plt>
               :  13a028:	mov    0x26(%rdx),%esi
               :  13a02b:	mov    0x9c(%rsp),%ecx
               :  13a032:	mov    0x858(%rbp),%rdx
               :  13a039:	mov    0x38(%rsp),%rdi
               :  13a03e:	callq  138f40 <mlx5_hws_age_param_free>
               :  13a043:	movw   $0x0,0x10(%rsp)
               :  13a04a:	jmpq   139da6 <mlx5_hws_cnt_svc+0xa66>
               :  13a04f:	nop
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000013a0f0 <mlx5_hws_cnt_pool_init>: /* mlx5_hws_cnt_pool_init total:  62991  1.8627 */
               :  13a0f0:	endbr64 
               :  13a0f4:	push   %r15
               :  13a0f6:	mov    $0xffffffff,%ecx
               :  13a0fb:	push   %r14
               :  13a0fd:	mov    %rsi,%r14
               :  13a100:	mov    $0x100,%esi
               :  13a105:	push   %r13
               :  13a107:	push   %r12
               :  13a109:	push   %rbp
               :  13a10a:	mov    %rdx,%rbp
               :  13a10d:	xor    %edx,%edx
               :  13a10f:	push   %rbx
               :  13a110:	mov    %rdi,%rbx
               :  13a113:	mov    $0x4,%edi
               :  13a118:	sub    $0x38,%rsp
               :  13a11c:	mov    %fs:0x28,%rax
               :  13a125:	mov    %rax,0x28(%rsp)
               :  13a12a:	xor    %eax,%eax
               :  13a12c:	callq  9ff0 <mlx5_malloc@plt>
               :  13a131:	mov    %rax,%r12
               :  13a134:	test   %rax,%rax
               :  13a137:	je     13a357 <mlx5_hws_cnt_pool_init+0x267>
               :  13a13d:	vmovdqu64 (%r14),%xmm1
               :  13a143:	mov    $0xffffffff,%ecx
               :  13a148:	vmovaps %xmm1,(%rax)
               :  13a14c:	mov    0x4(%rbp),%eax
               :  13a14f:	xor    %edx,%edx
               :  13a151:	lea    0x10(,%rax,8),%rsi
               :  13a159:	mov    $0x4,%edi
               :  13a15e:	callq  9ff0 <mlx5_malloc@plt>
               :  13a163:	mov    %rax,0xf0(%r12)
               :  13a16b:	test   %rax,%rax
               :  13a16e:	je     13a34c <mlx5_hws_cnt_pool_init+0x25c>
               :  13a174:	vpshufd $0x39,0x4(%rbp),%xmm0
               :  13a17a:	vmovups %xmm0,(%rax)
               :  13a17e:	mov    0x8(%r14),%ecx
               :  13a182:	mov    0x18(%rbx),%r8d
               :  13a186:	cmp    %r8d,%ecx
               :  13a189:	ja     186be <mlx5_hws_cnt_pool_init.cold+0x28>
               :  13a18f:	mov    0xc(%r14),%eax
               :  13a193:	mov    $0x4,%edi
               :  13a198:	lea    0x64(%rax),%r15d
               :  13a19c:	imul   %ecx,%r15d
               :  13a1a0:	mov    $0xffffffff,%ecx
               :  13a1a5:	imul   $0x51eb851f,%r15,%r15
               :  13a1ac:	shr    $0x25,%r15
               :  13a1b0:	cmp    %r8d,%r15d
               :  13a1b3:	cmova  %r8d,%r15d
               :  13a1b7:	xor    %edx,%edx
               :  13a1b9:	mov    %r15d,%eax
               :  13a1bc:	lea    (%rax,%rax,2),%rsi
               :  13a1c0:	shl    $0x3,%rsi
               :  13a1c4:	callq  9ff0 <mlx5_malloc@plt>
               :  13a1c9:	mov    %rax,0xc8(%r12)
               :  13a1d1:	test   %rax,%rax
               :  13a1d4:	je     13a34c <mlx5_hws_cnt_pool_init+0x25c>
               :  13a1da:	mov    (%r14),%r9
               :  13a1dd:	mov    %rsp,%r13
               :  13a1e0:	lea    0x39df9(%rip),%r8        # 173fe0 <rte_flow_item_vlan_mask+0x40>
               :  13a1e7:	mov    $0x20,%ecx
               :  13a1ec:	mov    $0x1,%edx
               :  13a1f1:	mov    $0x20,%esi
               :  13a1f6:	mov    %r13,%rdi
               :  13a1f9:	xor    %eax,%eax
               :  13a1fb:	callq  acf0 <__snprintf_chk@plt>
               :  13a200:	mov    $0x45,%r8d
               :  13a206:	mov    $0xffffffff,%ecx
               :  13a20b:	mov    %r15d,%edx
               :  13a20e:	mov    $0x4,%esi
               :  13a213:	mov    %r13,%rdi
               :  13a216:	callq  a0c0 <rte_ring_create_elem@plt>
               :  13a21b:	mov    %rax,0xe0(%r12)
               :  13a223:	test   %rax,%rax
               :  13a226:	je     1870e <mlx5_hws_cnt_pool_init.cold+0x78>
               :  13a22c:	mov    (%r14),%r9
               :  13a22f:	lea    0x39db4(%rip),%r8        # 173fea <rte_flow_item_vlan_mask+0x4a>
               :  13a236:	mov    $0x20,%ecx
               :  13a23b:	mov    $0x1,%edx
               :  13a240:	mov    $0x20,%esi
               :  13a245:	mov    %r13,%rdi
               :  13a248:	xor    %eax,%eax
               :  13a24a:	callq  acf0 <__snprintf_chk@plt>
               :  13a24f:	mov    $0x26,%r8d
               :  13a255:	mov    $0xffffffff,%ecx
               :  13a25a:	mov    %r15d,%edx
               :  13a25d:	mov    $0x4,%esi
               :  13a262:	mov    %r13,%rdi
               :  13a265:	callq  a0c0 <rte_ring_create_elem@plt>
               :  13a26a:	mov    %rax,0xe8(%r12)
               :  13a272:	test   %rax,%rax
               :  13a275:	je     186e6 <mlx5_hws_cnt_pool_init.cold+0x50>
               :  13a27b:	mov    (%r14),%r9
               :  13a27e:	lea    0x39d6f(%rip),%r8        # 173ff4 <rte_flow_item_vlan_mask+0x54>
               :  13a285:	mov    $0x20,%ecx
               :  13a28a:	mov    $0x1,%edx
               :  13a28f:	mov    $0x20,%esi
               :  13a294:	mov    %r13,%rdi
               :  13a297:	xor    %eax,%eax
               :  13a299:	callq  acf0 <__snprintf_chk@plt>
               :  13a29e:	mov    $0x45,%r8d
               :  13a2a4:	mov    $0xffffffff,%ecx
               :  13a2a9:	mov    %r15d,%edx
               :  13a2ac:	mov    $0x4,%esi
   784  0.0232 :  13a2b1:	mov    %r13,%rdi
   626  0.0185 :  13a2b4:	callq  a0c0 <rte_ring_create_elem@plt>
    47  0.0014 :  13a2b9:	mov    %rax,0xd8(%r12)
               :  13a2c1:	test   %rax,%rax
    74  0.0022 :  13a2c4:	je     18696 <mlx5_hws_cnt_pool_init.cold>
    85  0.0025 :  13a2ca:	mov    0x4(%rbp),%edi
   744  0.0220 :  13a2cd:	xor    %ebx,%ebx
               :  13a2cf:	lea    0x39d28(%rip),%r8        # 173ffe <rte_flow_item_vlan_mask+0x5e>
               :  13a2d6:	test   %edi,%edi
               :  13a2d8:	jne    13a2f2 <mlx5_hws_cnt_pool_init+0x202>
               :  13a2da:	jmpq   13a380 <mlx5_hws_cnt_pool_init+0x290>
               :  13a2df:	nop
               :  13a2e0:	inc    %ebx
               :  13a2e2:	cmp    %ebx,0x4(%rbp)
               :  13a2e5:	lea    0x39d12(%rip),%r8        # 173ffe <rte_flow_item_vlan_mask+0x5e>
               :  13a2ec:	jbe    13a380 <mlx5_hws_cnt_pool_init+0x290>
               :  13a2f2:	sub    $0x8,%rsp
               :  13a2f6:	push   %rbx
               :  13a2f7:	mov    (%r14),%r9
               :  13a2fa:	mov    $0x20,%ecx
               :  13a2ff:	mov    $0x1,%edx
               :  13a304:	mov    $0x20,%esi
               :  13a309:	mov    %r13,%rdi
               :  13a30c:	xor    %eax,%eax
               :  13a30e:	callq  acf0 <__snprintf_chk@plt>
               :  13a313:	mov    0x0(%rbp),%esi
               :  13a316:	mov    $0x7,%ecx
               :  13a31b:	mov    $0xffffffff,%edx
               :  13a320:	mov    %r13,%rdi
               :  13a323:	mov    0xf0(%r12),%r15
               :  13a32b:	callq  ad00 <rte_ring_create@plt>
               :  13a330:	mov    %rax,%r9
               :  13a333:	mov    %ebx,%eax
               :  13a335:	mov    %r9,0x10(%r15,%rax,8)
               :  13a33a:	mov    0xf0(%r12),%rdx
               :  13a342:	pop    %rcx
               :  13a343:	cmpq   $0x0,0x10(%rdx,%rax,8)
               :  13a349:	pop    %rsi
               :  13a34a:	jne    13a2e0 <mlx5_hws_cnt_pool_init+0x1f0>
               :  13a34c:	mov    %r12,%rdi
               :  13a34f:	callq  13a050 <mlx5_hws_cnt_pool_deinit>
               :  13a354:	xor    %r12d,%r12d
               :  13a357:	mov    0x28(%rsp),%rax
 10793  0.3192 :  13a35c:	xor    %fs:0x28,%rax
    36  0.0011 :  13a365:	jne    13a3a5 <mlx5_hws_cnt_pool_init+0x2b5>
    44  0.0013 :  13a367:	add    $0x38,%rsp
               :  13a36b:	pop    %rbx
    73  0.0022 :  13a36c:	pop    %rbp
   113  0.0033 :  13a36d:	mov    %r12,%rax
               :  13a370:	pop    %r12
  5781  0.1709 :  13a372:	pop    %r13
               :  13a374:	pop    %r14
               :  13a376:	pop    %r15
   641  0.0190 :  13a378:	retq   
  3874  0.1146 :  13a379:	nopl   0x0(%rax)
  3386  0.1001 :  13a380:	rdtsc  
    16 4.7e-04 :  13a382:	shl    $0x20,%rdx
               :  13a386:	mov    %eax,%ebx
  3092  0.0914 :  13a388:	or     %rdx,%rbx
   642  0.0190 :  13a38b:	callq  a2d0 <rte_get_tsc_hz@plt>
  3192  0.0944 :  13a390:	mov    %rax,%r8
   145  0.0043 :  13a393:	xor    %edx,%edx
   899  0.0266 :  13a395:	mov    %rbx,%rax
               :  13a398:	div    %r8
  6270  0.1854 :  13a39b:	mov    %rax,0xf8(%r12)
   558  0.0165 :  13a3a3:	jmp    13a357 <mlx5_hws_cnt_pool_init+0x267>
   848  0.0251 :  13a3a5:	callq  aaf0 <__stack_chk_fail@plt>
               :  13a3aa:	nopw   0x0(%rax,%rax,1)
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000013a3b0 <mlx5_hws_cnt_service_thread_create>: /* mlx5_hws_cnt_service_thread_create total:  25779  0.7623 */
  4149  0.1227 :  13a3b0:	endbr64 
   569  0.0168 :  13a3b4:	push   %r14
               :  13a3b6:	xor    %edx,%edx
   181  0.0054 :  13a3b8:	push   %r13
               :  13a3ba:	push   %r12
               :  13a3bc:	push   %rbp
  1230  0.0364 :  13a3bd:	push   %rbx
               :  13a3be:	mov    %rdi,%rbx
   850  0.0251 :  13a3c1:	sub    $0x190,%rsp
               :  13a3c8:	mov    %fs:0x28,%rax
               :  13a3d1:	mov    %rax,0x188(%rsp)
               :  13a3d9:	xor    %eax,%eax
               :  13a3db:	mov    0x838(%rdi),%rdi
               :  13a3e2:	mov    %rsp,%r12
               :  13a3e5:	mov    0x4(%rdi),%ebp
               :  13a3e8:	mov    %eax,%ecx
               :  13a3ea:	add    $0x20,%eax
               :  13a3ed:	mov    %rdx,(%r12,%rcx,1)
               :  13a3f1:	mov    %rdx,0x8(%r12,%rcx,1)
               :  13a3f6:	mov    %rdx,0x10(%r12,%rcx,1)
               :  13a3fb:	mov    %rdx,0x18(%r12,%rcx,1)
               :  13a400:	cmp    $0x80,%eax
               :  13a405:	jb     13a3e8 <mlx5_hws_cnt_service_thread_create+0x38>
               :  13a407:	movb   $0x1,0x18(%rdi)
               :  13a40b:	mov    %rbx,%rcx
               :  13a40e:	add    $0x10,%rdi
               :  13a412:	lea    -0x10d9(%rip),%rdx        # 139340 <mlx5_hws_cnt_svc>
               :  13a419:	xor    %esi,%esi
  4240  0.1254 :  13a41b:	callq  a650 <pthread_create@plt>
               :  13a420:	mov    %eax,%r13d
               :  13a423:	test   %eax,%eax
   553  0.0164 :  13a425:	jne    18736 <mlx5_hws_cnt_service_thread_create.cold>
  1356  0.0401 :  13a42b:	lea    0x80(%rsp),%r14
   855  0.0253 :  13a433:	sub    $0x8,%rsp
  4461  0.1319 :  13a437:	push   %rbp
  4218  0.1247 :  13a438:	mov    $0x100,%ecx
   802  0.0237 :  13a43d:	mov    $0x1,%edx
  2130  0.0630 :  13a442:	lea    0x8c(%rbx),%r9
               :  13a449:	lea    0x39bba(%rip),%r8        # 17400a <rte_flow_item_vlan_mask+0x6a>
               :  13a450:	mov    $0xff,%esi
               :  13a455:	mov    %r14,%rdi
               :  13a458:	xor    %eax,%eax
               :  13a45a:	callq  acf0 <__snprintf_chk@plt>
               :  13a45f:	mov    0x838(%rbx),%rax
               :  13a466:	mov    %r14,%rsi
               :  13a469:	mov    0x10(%rax),%rdi
               :  13a46d:	callq  ae00 <rte_thread_setname@plt>
               :  13a472:	pop    %rdx
               :  13a473:	mov    %ebp,%eax
               :  13a475:	pop    %rcx
               :  13a476:	cmp    $0x3ff,%ebp
               :  13a47c:	ja     13a490 <mlx5_hws_cnt_service_thread_create+0xe0>
               :  13a47e:	shr    $0x6,%rax
               :  13a482:	mov    $0x1,%edx
               :  13a487:	shlx   %rbp,%rdx,%rbp
               :  13a48c:	or     %rbp,(%r12,%rax,8)
               :  13a490:	mov    0x838(%rbx),%rax
               :  13a497:	mov    %r12,%rdx
               :  13a49a:	mov    0x10(%rax),%rdi
               :  13a49e:	mov    $0x80,%esi
               :  13a4a3:	callq  aed0 <pthread_setaffinity_np@plt>
               :  13a4a8:	mov    0x188(%rsp),%rax
               :  13a4b0:	xor    %fs:0x28,%rax
               :  13a4b9:	jne    13a4ce <mlx5_hws_cnt_service_thread_create+0x11e>
               :  13a4bb:	add    $0x190,%rsp
               :  13a4c2:	pop    %rbx
               :  13a4c3:	pop    %rbp
               :  13a4c4:	pop    %r12
               :  13a4c6:	mov    %r13d,%eax
               :  13a4c9:	pop    %r13
               :  13a4cb:	pop    %r14
               :  13a4cd:	retq   
               :  13a4ce:	callq  aaf0 <__stack_chk_fail@plt>
               :  13a4d3:	data16 nopw %cs:0x0(%rax,%rax,1)
               :  13a4de:	xchg   %ax,%ax
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000013a520 <mlx5_hws_cnt_pool_dcs_alloc>: /* mlx5_hws_cnt_pool_dcs_alloc total:  16164  0.4780 */
               :  13a520:	endbr64 
               :  13a524:	push   %r15
               :  13a526:	push   %r14
               :  13a528:	push   %r13
               :  13a52a:	push   %r12
               :  13a52c:	push   %rbp
               :  13a52d:	push   %rbx
               :  13a52e:	sub    $0x28,%rsp
               :  13a532:	movzbl 0x16(%rdi),%ebx
               :  13a536:	mov    %fs:0x28,%rax
               :  13a53f:	mov    %rax,0x18(%rsp)
               :  13a544:	xor    %eax,%eax
               :  13a546:	mov    0xe0(%rsi),%rdx
               :  13a54d:	mov    0x80(%rdi),%rax
               :  13a554:	shr    %bl
               :  13a556:	movq   $0x0,0x10(%rsp)
               :  13a55f:	mov    0x38(%rdx),%r13d
               :  13a563:	and    $0x1f,%ebx
               :  13a566:	testb  $0x1f,0x154(%rax)
               :  13a56d:	je     18764 <mlx5_hws_cnt_pool_dcs_alloc.cold>
               :  13a573:	add    $0x3,%r13d
               :  13a577:	mov    %r13d,%ecx
               :  13a57a:	and    $0xfffffffc,%ecx
               :  13a57d:	mov    %ecx,0xc(%rsp)
               :  13a581:	mov    %rdi,%r15
               :  13a584:	mov    %rsi,%rbp
               :  13a587:	je     13a6d0 <mlx5_hws_cnt_pool_dcs_alloc+0x1b0>
               :  13a58d:	lea    -0x1(%rcx),%edx
               :  13a590:	mov    %edx,%r12d
               :  13a593:	shr    %r12d
               :  13a596:	or     %edx,%r12d
               :  13a599:	mov    %r12d,%edx
               :  13a59c:	shr    $0x2,%edx
               :  13a59f:	or     %edx,%r12d
               :  13a5a2:	mov    %r12d,%edx
               :  13a5a5:	shr    $0x4,%edx
               :  13a5a8:	or     %edx,%r12d
               :  13a5ab:	mov    %r12d,%edx
               :  13a5ae:	shr    $0x8,%edx
               :  13a5b1:	or     %edx,%r12d
               :  13a5b4:	mov    %r12d,%edx
               :  13a5b7:	shr    $0x10,%edx
               :  13a5ba:	or     %edx,%r12d
               :  13a5bd:	inc    %r12d
               :  13a5c0:	tzcnt  %r12d,%r12d
               :  13a5c5:	cmp    %ebx,%r12d
               :  13a5c8:	cmova  %ebx,%r12d
               :  13a5cc:	mov    %r12d,%esi
               :  13a5cf:	mov    0x30(%rax),%ecx
               :  13a5d2:	lea    0x10(%rsp),%r14
               :  13a5d7:	lea    (%rcx,%rcx,1),%edx
               :  13a5da:	mov    0x10(%rsp),%ecx
               :  13a5de:	and    $0x1fffffe,%edx
               :  13a5e4:	or     $0x2000001,%edx
               :  13a5ea:	and    $0xfc000000,%ecx
               :  13a5f0:	mov    0x20(%rax),%rdi
               :  13a5f4:	or     %ecx,%edx
               :  13a5f6:	mov    %sil,0x14(%rsp)
               :  13a5fb:	mov    %r14,%rsi
               :  13a5fe:	mov    %edx,0x10(%rsp)
               :  13a602:	callq  a3f0 <mlx5_devx_cmd_flow_counter_alloc_general@plt>
               :  13a607:	test   %rax,%rax
               :  13a60a:	je     1878f <mlx5_hws_cnt_pool_dcs_alloc.cold+0x2b>
               :  13a610:	mov    $0x1,%ecx
               :  13a615:	shlx   %r12d,%ecx,%r12d
               :  13a61a:	incl   0x40(%rbp)
  4572  0.1352 :  13a61d:	mov    %rax,0x58(%rbp)
               :  13a621:	mov    %r12d,0x50(%rbp)
               :  13a625:	movl   $0x0,0x54(%rbp)
  4211  0.1245 :  13a62c:	cmp    0xc(%rsp),%r12d
     2 5.9e-05 :  13a631:	jae    13a6ab <mlx5_hws_cnt_pool_dcs_alloc+0x18b>
               :  13a633:	dec    %ebx
   796  0.0235 :  13a635:	mov    $0x1,%r13d
  1209  0.0358 :  13a63b:	nopl   0x0(%rax,%rax,1)
   861  0.0255 :  13a640:	mov    $0x1,%eax
  4513  0.1335 :  13a645:	shlx   %ebx,%eax,%edx
               :  13a64a:	lea    (%rdx,%r12,1),%eax
               :  13a64e:	mov    %bl,0x14(%rsp)
               :  13a652:	mov    %edx,0x8(%rsp)
               :  13a656:	cmp    0x18(%r15),%eax
               :  13a65a:	ja     13a6a3 <mlx5_hws_cnt_pool_dcs_alloc+0x183>
               :  13a65c:	mov    0x80(%r15),%rax
               :  13a663:	mov    %r14,%rsi
               :  13a666:	mov    0x20(%rax),%rdi
               :  13a66a:	callq  a3f0 <mlx5_devx_cmd_flow_counter_alloc_general@plt>
               :  13a66f:	test   %rax,%rax
               :  13a672:	je     18792 <mlx5_hws_cnt_pool_dcs_alloc.cold+0x2e>
               :  13a678:	mov    %r13d,%esi
               :  13a67b:	mov    0x8(%rsp),%edx
               :  13a67f:	lea    (%rsi,%rsi,2),%rsi
               :  13a683:	lea    0x0(%rbp,%rsi,8),%rsi
               :  13a688:	mov    %r12d,0x54(%rsi)
               :  13a68c:	add    %edx,%r12d
               :  13a68f:	mov    %rax,0x58(%rsi)
               :  13a693:	mov    %edx,0x50(%rsi)
               :  13a696:	incl   0x40(%rbp)
               :  13a699:	cmp    %r12d,0xc(%rsp)
               :  13a69e:	jbe    13a6ab <mlx5_hws_cnt_pool_dcs_alloc+0x18b>
               :  13a6a0:	inc    %r13d
               :  13a6a3:	dec    %ebx
               :  13a6a5:	cmp    $0x4,%r13d
               :  13a6a9:	jne    13a640 <mlx5_hws_cnt_pool_dcs_alloc+0x120>
               :  13a6ab:	xor    %eax,%eax
               :  13a6ad:	mov    0x18(%rsp),%rdi
               :  13a6b2:	xor    %fs:0x28,%rdi
               :  13a6bb:	jne    13a6da <mlx5_hws_cnt_pool_dcs_alloc+0x1ba>
               :  13a6bd:	add    $0x28,%rsp
               :  13a6c1:	pop    %rbx
               :  13a6c2:	pop    %rbp
               :  13a6c3:	pop    %r12
               :  13a6c5:	pop    %r13
               :  13a6c7:	pop    %r14
               :  13a6c9:	pop    %r15
               :  13a6cb:	retq   
               :  13a6cc:	nopl   0x0(%rax)
               :  13a6d0:	xor    %r12d,%r12d
               :  13a6d3:	xor    %esi,%esi
               :  13a6d5:	jmpq   13a5cf <mlx5_hws_cnt_pool_dcs_alloc+0xaf>
               :  13a6da:	callq  aaf0 <__stack_chk_fail@plt>
               :  13a6df:	nop
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000523d0 <flow_dv_translate>: /* flow_dv_translate total:      7 2.1e-04 */
               :   523d0:	endbr64 
               :   523d4:	lea    0x8(%rsp),%r10
               :   523d9:	and    $0xffffffffffffffe0,%rsp
               :   523dd:	pushq  -0x8(%r10)
               :   523e1:	push   %rbp
               :   523e2:	mov    %rsp,%rbp
               :   523e5:	push   %r15
               :   523e7:	mov    %rsi,%r15
               :   523ea:	push   %r14
               :   523ec:	push   %r13
               :   523ee:	push   %r12
               :   523f0:	push   %r10
               :   523f2:	push   %rbx
               :   523f3:	mov    %r8,%rbx
               :   523f6:	sub    $0x7a0,%rsp
               :   523fd:	mov    %rdx,-0x740(%rbp)
               :   52404:	mov    %rcx,-0x768(%rbp)
               :   5240b:	mov    %rdi,-0x738(%rbp)
               :   52412:	mov    %r9,-0x728(%rbp)
               :   52419:	mov    %fs:0x28,%rax
               :   52422:	mov    %rax,-0x38(%rbp)
               :   52426:	xor    %eax,%eax
               :   52428:	mov    0x30(%rdi),%rax
               :   5242c:	mov    0x60(%rax),%rax
               :   52430:	mov    %rax,-0x760(%rbp)
               :   52437:	mov    0x8(%rax),%rax
               :   5243b:	mov    %rax,-0x778(%rbp)
               :   52442:	mov    (%rsi),%rax
               :   52445:	mov    %rax,-0x750(%rbp)
               :   5244c:	mov    0x278(%rsi),%rax
               :   52453:	mov    %rax,-0x798(%rbp)
               :   5245a:	callq  2bbb0 <mlx5_flow_get_thread_workspace>
               :   5245f:	mov    %rax,-0x748(%rbp)
               :   52466:	xor    %ecx,%ecx
               :   52468:	xor    %edx,%edx
               :   5246a:	mov    %edx,%eax
               :   5246c:	add    $0x20,%edx
               :   5246f:	mov    %rcx,-0x250(%rbp,%rax,1)
               :   52477:	mov    %rcx,-0x248(%rbp,%rax,1)
               :   5247f:	mov    %rcx,-0x240(%rbp,%rax,1)
               :   52487:	mov    %rcx,-0x238(%rbp,%rax,1)
               :   5248f:	cmp    $0x200,%edx
               :   52495:	jb     5246a <flow_dv_translate+0x9a>
               :   52497:	mov    -0x740(%rbp),%rax
               :   5249e:	mov    -0x760(%rbp),%rdi
               :   524a5:	movzbl 0x8(%rax),%esi
               :   524a9:	vpxor  %xmm0,%xmm0,%xmm0
               :   524ad:	mov    %esi,%eax
               :   524af:	shr    %al
               :   524b1:	and    $0x2,%eax
               :   524b4:	or     0x20(%r15),%al
               :   524b8:	or     $0x8,%eax
               :   524bb:	cmpb   $0x0,0x3169(%rdi)
               :   524c2:	setne  %dl
               :   524c5:	movzbl 0x21(%r15),%edi
               :   524ca:	shl    $0x2,%edx
               :   524cd:	or     %edx,%eax
               :   524cf:	lea    0x0(,%rdi,8),%edx
               :   524d6:	and    $0x10,%edx
               :   524d9:	or     %edx,%eax
               :   524db:	movzbl -0x708(%rbp),%edx
               :   524e2:	and    $0x3f,%eax
               :   524e5:	and    $0xffffffc0,%edx
               :   524e8:	or     %edx,%eax
               :   524ea:	cmpq   $0x0,-0x748(%rbp)
               :   524f2:	movq   $0x1c0,-0x218(%rbp)
               :   524fd:	movl   $0x0,-0x718(%rbp)
               :   52507:	movl   $0x0,-0x70c(%rbp)
               :   52511:	mov    %al,-0x708(%rbp)
               :   52517:	vmovaps %xmm0,-0x590(%rbp)
               :   5251f:	vmovaps %xmm0,-0x580(%rbp)
               :   52527:	vmovaps %xmm0,-0x570(%rbp)
               :   5252f:	vmovaps %xmm0,-0x560(%rbp)
               :   52537:	je     547bc <flow_dv_translate+0x23ec>
               :   5253d:	lea    -0x470(%rbp),%rdi
               :   52544:	mov    %rdi,-0x7b8(%rbp)
               :   5254b:	xor    %ecx,%ecx
               :   5254d:	xor    %edx,%edx
               :   5254f:	mov    %edx,%eax
               :   52551:	add    $0x20,%edx
               :   52554:	mov    %rcx,(%rdi,%rax,1)
               :   52558:	mov    %rcx,0x8(%rdi,%rax,1)
               :   5255d:	mov    %rcx,0x10(%rdi,%rax,1)
               :   52562:	mov    %rcx,0x18(%rdi,%rax,1)
               :   52567:	cmp    $0xe0,%edx
               :   5256d:	jb     5254f <flow_dv_translate+0x17f>
               :   5256f:	lea    -0x670(%rbp),%rdi
               :   52576:	mov    %rdi,-0x7d0(%rbp)
               :   5257d:	xor    %ecx,%ecx
               :   5257f:	xor    %edx,%edx
               :   52581:	mov    %edx,%eax
               :   52583:	add    $0x20,%edx
               :   52586:	mov    %rcx,(%rdi,%rax,1)
               :   5258a:	mov    %rcx,0x8(%rdi,%rax,1)
               :   5258f:	mov    %rcx,0x10(%rdi,%rax,1)
               :   52594:	mov    %rcx,0x18(%rdi,%rax,1)
               :   52599:	cmp    $0xa0,%edx
               :   5259f:	jb     52581 <flow_dv_translate+0x1b1>
               :   525a1:	mov    -0x7d0(%rbp),%rax
               :   525a8:	shr    %sil
               :   525ab:	movq   $0x0,(%rax,%rdx,1)
               :   525b3:	mov    -0x738(%rbp),%rax
               :   525ba:	and    $0x1,%esi
               :   525bd:	mov    0x30(%rax),%rax
               :   525c1:	mov    %sil,-0x364(%rbp)
               :   525c8:	mov    0x60(%rax),%rax
               :   525cc:	mov    0x8(%rax),%rax
               :   525d0:	movzbl 0x255(%rax),%r12d
               :   525d8:	and    $0x1,%r12d
               :   525dc:	je     54770 <flow_dv_translate+0x23a0>
               :   525e2:	mov    0x288(%r15),%rax
               :   525e9:	mov    %rax,-0x758(%rbp)
               :   525f0:	test   %rax,%rax
               :   525f3:	je     54cda <flow_dv_translate+0x290a>
               :   525f9:	cmpl   $0x3,0x290(%r15)
               :   52601:	jne    eb86 <flow_dv_translate.cold>
               :   52607:	mov    -0x740(%rbp),%rax
               :   5260e:	xor    %r12d,%r12d
               :   52611:	mov    (%rax),%eax
               :   52613:	mov    %eax,%edx
               :   52615:	movzbl -0x708(%rbp),%eax
               :   5261c:	shl    $0x3,%r12d
               :   52620:	and    $0xfffffff7,%eax
               :   52623:	or     %r12d,%eax
               :   52626:	mov    %al,-0x708(%rbp)
               :   5262c:	lea    -0x714(%rbp),%rax
               :   52633:	mov    %sil,-0x364(%rbp)
               :   5263a:	mov    -0x728(%rbp),%r9
               :   52641:	mov    -0x758(%rbp),%rsi
               :   52648:	mov    -0x738(%rbp),%rdi
               :   5264f:	lea    -0x708(%rbp),%r8
               :   52656:	mov    %rax,%rcx
               :   52659:	mov    %r8,-0x790(%rbp)
               :   52660:	mov    %rax,-0x788(%rbp)
               :   52667:	callq  d983 <mlx5_flow_group_to_table>
               :   5266c:	mov    %eax,%r12d
               :   5266f:	test   %eax,%eax
               :   52671:	jne    54646 <flow_dv_translate+0x2276>
               :   52677:	mov    -0x714(%rbp),%eax
               :   5267d:	mov    %eax,0x28(%r15)
               :   52681:	mov    -0x740(%rbp),%rax
               :   52688:	movzbl 0x8(%rax),%ecx
               :   5268c:	test   $0x4,%cl
               :   5268f:	je     52698 <flow_dv_translate+0x2c8>
               :   52691:	movb   $0x2,-0x364(%rbp)
               :   52698:	xor    %r14d,%r14d
               :   5269b:	cmpl   $0x2,0x290(%r15)
               :   526a3:	movb   $0x0,-0x363(%rbp)
               :   526aa:	je     54790 <flow_dv_translate+0x23c0>
               :   526b0:	movl   $0x0,-0x76c(%rbp)
               :   526ba:	movl   $0xffffffff,-0x780(%rbp)
               :   526c4:	movl   $0xffffffff,-0x770(%rbp)
               :   526ce:	movq   $0x0,-0x7b0(%rbp)
               :   526d9:	movl   $0xffffffff,-0x730(%rbp)
               :   526e3:	movq   $0x0,-0x7a0(%rbp)
               :   526ee:	movq   $0x0,-0x7a8(%rbp)
               :   526f9:	lea    0x118294(%rip),%r13        # 16a994 <srtcm.62771+0x4be4>
               :   52700:	mov    (%rbx),%eax
               :   52702:	movl   $0x0,-0x710(%rbp)
               :   5270c:	cmp    $0x80000009,%eax
               :   52711:	jl     54490 <flow_dv_translate+0x20c0>
               :   52717:	cmp    $0x39,%eax
               :   5271a:	ja     528d7 <flow_dv_translate+0x507>
               :   52720:	mov    %eax,%edx
               :   52722:	movslq 0x0(%r13,%rdx,4),%rdx
               :   52727:	add    %r13,%rdx
               :   5272a:	notrack jmpq *%rdx
               :   5272d:	mov    %rbx,%rax
               :   52730:	mov    0x10(%rax),%edx
               :   52733:	add    $0x10,%rax
               :   52737:	cmp    $0x1,%edx
               :   5273a:	je     52730 <flow_dv_translate+0x360>
               :   5273c:	cmp    $0x1a,%edx
               :   5273f:	je     527f6 <flow_dv_translate+0x426>
               :   52745:	mov    -0x740(%rbp),%rax
               :   5274c:	lea    -0x550(%rbp),%r10
               :   52753:	movzbl 0x8(%rax),%eax
               :   52757:	xor    %ecx,%ecx
               :   52759:	mov    %eax,%esi
               :   5275b:	shr    $0x2,%sil
               :   5275f:	mov    %al,-0x7c0(%rbp)
               :   52765:	and    $0x1,%esi
               :   52768:	xor    %eax,%eax
               :   5276a:	mov    %eax,%edx
               :   5276c:	add    $0x20,%eax
               :   5276f:	mov    %rcx,-0x550(%rbp,%rdx,1)
               :   52777:	mov    %rcx,-0x548(%rbp,%rdx,1)
               :   5277f:	mov    %rcx,-0x540(%rbp,%rdx,1)
               :   52787:	mov    %rcx,-0x538(%rbp,%rdx,1)
               :   5278f:	cmp    $0xc0,%eax
               :   52794:	jb     5276a <flow_dv_translate+0x39a>
               :   52796:	add    %r10,%rax
               :   52799:	test   %sil,%sil
               :   5279c:	movq   $0x0,(%rax)
               :   527a3:	movq   $0x0,0x8(%rax)
               :   527ab:	movq   $0x0,0x10(%rax)
               :   527b3:	setne  %al
               :   527b6:	add    %eax,%eax
               :   527b8:	mov    %al,-0x48f(%rbp)
               :   527be:	mov    -0x738(%rbp),%rax
               :   527c5:	mov    -0x728(%rbp),%rcx
               :   527cc:	mov    0x30(%rax),%rdi
               :   527d0:	mov    %r15,%rdx
               :   527d3:	mov    %r10,%rsi
               :   527d6:	callq  3cf70 <flow_dv_encap_decap_resource_register.isra.0>
               :   527db:	test   %eax,%eax
               :   527dd:	jne    55bbe <flow_dv_translate+0x37ee>
               :   527e3:	mov    0x78(%r15),%rdx
               :   527e7:	movslq %r12d,%rax
               :   527ea:	mov    0x28(%rdx),%rdx
               :   527ee:	inc    %r12d
               :   527f1:	mov    %rdx,0x38(%r15,%rax,8)
               :   527f6:	movzbl -0x363(%rbp),%eax
               :   527fd:	or     $0x800000,%r14
               :   52804:	add    $0x10,%rbx
               :   52808:	xor    %edx,%edx
               :   5280a:	jmpq   528e4 <flow_dv_translate+0x514>
               :   5280f:	mov    0x8(%rbx),%rdx
               :   52813:	mov    (%rdx),%edx
               :   52815:	bswap  %edx
               :   52817:	mov    %rdx,%rdi
               :   5281a:	mov    %edx,%r8d
               :   5281d:	shl    $0x20,%rdi
               :   52821:	vpxor  %xmm0,%xmm0,%xmm0
               :   52825:	sub    %r8,%rdi
               :   52828:	cmp    $0x2a,%eax
               :   5282b:	movl   $0x0,-0x6e0(%rbp)
               :   52835:	movl   $0x0,-0x6c0(%rbp)
               :   5283f:	cmove  %edi,%edx
               :   52842:	lea    -0x6f0(%rbp),%rsi
               :   52849:	vmovaps %xmm0,-0x6f0(%rbp)
               :   52851:	lea    -0x6d0(%rbp),%rcx
               :   52858:	vmovaps %xmm0,-0x6d0(%rbp)
               :   52860:	bswap  %edx
               :   52862:	mov    %rsi,-0x6a8(%rbp)
               :   52869:	mov    -0x728(%rbp),%r9
               :   52870:	lea    0x144029(%rip),%rsi        # 1968a0 <modify_tcp>
               :   52877:	mov    %edx,-0x6e8(%rbp)
               :   5287d:	mov    %rcx,-0x698(%rbp)
               :   52884:	xor    %edx,%edx
               :   52886:	lea    -0x390(%rbp),%rcx
               :   5288d:	lea    -0x6b0(%rbp),%rdi
               :   52894:	mov    $0x2,%r8d
               :   5289a:	movl   $0xffffffff,-0x6c8(%rbp)
               :   528a4:	movl   $0xc,-0x6b0(%rbp)
               :   528ae:	callq  42b80 <flow_dv_convert_modify_action>
               :   528b3:	test   %eax,%eax
               :   528b5:	jne    54630 <flow_dv_translate+0x2260>
               :   528bb:	cmpl   $0x29,(%rbx)
               :   528be:	mov    $0x4000000,%eax
               :   528c3:	mov    $0x8000000,%edx
               :   528c8:	nopl   0x0(%rax,%rax,1)
               :   528d0:	cmovne %rdx,%rax
               :   528d4:	or     %rax,%r14
               :   528d7:	movzbl -0x363(%rbp),%eax
               :   528de:	add    $0x10,%rbx
               :   528e2:	xor    %edx,%edx
               :   528e4:	test   %al,%al
               :   528e6:	je     528f5 <flow_dv_translate+0x525>
               :   528e8:	cmpl   $0xffffffff,-0x730(%rbp)
               :   528ef:	je     54738 <flow_dv_translate+0x2368>
               :   528f5:	test   %dl,%dl
               :   528f7:	je     52700 <flow_dv_translate+0x330>
               :   528fd:	mov    %r14,0x18(%r15)
               :   52901:	lea    -0x250(%rbp),%rax
               :   52908:	mov    -0x728(%rbp),%r9
               :   5290f:	mov    -0x768(%rbp),%rcx
               :   52916:	mov    -0x740(%rbp),%rdx
               :   5291d:	mov    -0x738(%rbp),%rdi
               :   52924:	mov    %rax,%r8
               :   52927:	mov    %r15,%rsi
               :   5292a:	mov    %rax,-0x750(%rbp)
               :   52931:	callq  4d2c0 <flow_dv_translate_items_sws>
               :   52936:	test   %eax,%eax
               :   52938:	jne    54630 <flow_dv_translate+0x2260>
               :   5293e:	test   $0x4,%r14b
               :   52942:	jne    557a3 <flow_dv_translate+0x33d3>
               :   52948:	bt     $0x24,%r14
               :   5294d:	jb     54ed7 <flow_dv_translate+0x2b07>
               :   52953:	cmpl   $0x1,-0x76c(%rbp)
               :   5295a:	jbe    52b59 <flow_dv_translate+0x789>
               :   52960:	mov    -0x3a8(%rbp),%rax
               :   52967:	test   %rax,%rax
               :   5296a:	je     55c20 <flow_dv_translate+0x3850>
               :   52970:	vpxor  %xmm0,%xmm0,%xmm0
               :   52974:	vmovaps %xmm0,-0x550(%rbp)
               :   5297c:	vmovaps %xmm0,-0x540(%rbp)
               :   52984:	vmovaps %xmm0,-0x530(%rbp)
               :   5298c:	vmovaps %xmm0,-0x520(%rbp)
               :   52994:	test   %r12d,%r12d
               :   52997:	je     56139 <flow_dv_translate+0x3d69>
               :   5299d:	mov    -0x3a0(%rbp),%rcx
               :   529a4:	mov    -0x398(%rbp),%rdx
               :   529ab:	test   %rcx,%rcx
               :   529ae:	je     55c55 <flow_dv_translate+0x3885>
               :   529b4:	test   %rdx,%rdx
               :   529b7:	je     5598f <flow_dv_translate+0x35bf>
               :   529bd:	test   %rax,%rax
               :   529c0:	je     55e37 <flow_dv_translate+0x3a67>
               :   529c6:	mov    0x38(%r15),%rsi
               :   529ca:	cmp    %rcx,%rsi
               :   529cd:	je     55f9e <flow_dv_translate+0x3bce>
               :   529d3:	cmp    %rax,%rsi
               :   529d6:	je     55f9e <flow_dv_translate+0x3bce>
               :   529dc:	cmp    %rdx,%rsi
               :   529df:	je     55f9e <flow_dv_translate+0x3bce>
               :   529e5:	mov    %rsi,-0x550(%rbp)
               :   529ec:	mov    $0x1,%esi
               :   529f1:	cmp    $0x1,%r12d
               :   529f5:	je     55da3 <flow_dv_translate+0x39d3>
               :   529fb:	mov    0x40(%r15),%rdi
               :   529ff:	cmp    %rdi,%rcx
               :   52a02:	je     52a1b <flow_dv_translate+0x64b>
               :   52a04:	cmp    %rdi,%rax
               :   52a07:	je     52a1b <flow_dv_translate+0x64b>
               :   52a09:	cmp    %rdi,%rdx
               :   52a0c:	je     52a1b <flow_dv_translate+0x64b>
               :   52a0e:	movslq %esi,%r8
               :   52a11:	mov    %rdi,-0x550(%rbp,%r8,8)
               :   52a19:	inc    %esi
               :   52a1b:	cmp    $0x2,%r12d
               :   52a1f:	je     55da3 <flow_dv_translate+0x39d3>
               :   52a25:	mov    0x48(%r15),%rdi
               :   52a29:	cmp    %rdi,%rcx
               :   52a2c:	je     52a45 <flow_dv_translate+0x675>
               :   52a2e:	cmp    %rdi,%rax
               :   52a31:	je     52a45 <flow_dv_translate+0x675>
               :   52a33:	cmp    %rdi,%rdx
               :   52a36:	je     52a45 <flow_dv_translate+0x675>
               :   52a38:	movslq %esi,%r8
               :   52a3b:	mov    %rdi,-0x550(%rbp,%r8,8)
               :   52a43:	inc    %esi
               :   52a45:	cmp    $0x3,%r12d
               :   52a49:	je     55da3 <flow_dv_translate+0x39d3>
               :   52a4f:	mov    0x50(%r15),%r8
               :   52a53:	cmp    %r8,%rcx
               :   52a56:	je     56147 <flow_dv_translate+0x3d77>
               :   52a5c:	cmp    %r8,%rax
               :   52a5f:	je     56147 <flow_dv_translate+0x3d77>
               :   52a65:	cmp    %r8,%rdx
               :   52a68:	je     56147 <flow_dv_translate+0x3d77>
               :   52a6e:	lea    0x1(%rsi),%edi
               :   52a71:	movslq %esi,%rsi
               :   52a74:	mov    %r8,-0x550(%rbp,%rsi,8)
               :   52a7c:	cmp    $0x4,%r12d
               :   52a80:	je     566cf <flow_dv_translate+0x42ff>
               :   52a86:	mov    0x58(%r15),%r8
               :   52a8a:	cmp    %rcx,%r8
               :   52a8d:	je     562cc <flow_dv_translate+0x3efc>
               :   52a93:	cmp    %rax,%r8
               :   52a96:	je     562cc <flow_dv_translate+0x3efc>
               :   52a9c:	cmp    %rdx,%r8
               :   52a9f:	je     562cc <flow_dv_translate+0x3efc>
               :   52aa5:	lea    0x1(%rdi),%esi
               :   52aa8:	movslq %edi,%rdi
               :   52aab:	mov    %r8,-0x550(%rbp,%rdi,8)
               :   52ab3:	cmp    $0x5,%r12d
               :   52ab7:	je     55da3 <flow_dv_translate+0x39d3>
               :   52abd:	mov    0x60(%r15),%rdi
               :   52ac1:	cmp    %rdi,%rcx
               :   52ac4:	je     52add <flow_dv_translate+0x70d>
               :   52ac6:	cmp    %rdi,%rax
               :   52ac9:	je     52add <flow_dv_translate+0x70d>
               :   52acb:	cmp    %rdi,%rdx
               :   52ace:	je     52add <flow_dv_translate+0x70d>
               :   52ad0:	movslq %esi,%r8
               :   52ad3:	mov    %rdi,-0x550(%rbp,%r8,8)
               :   52adb:	inc    %esi
               :   52add:	cmp    $0x6,%r12d
               :   52ae1:	je     55da3 <flow_dv_translate+0x39d3>
               :   52ae7:	mov    0x68(%r15),%rdi
               :   52aeb:	cmp    %rdi,%rcx
               :   52aee:	je     52b07 <flow_dv_translate+0x737>
               :   52af0:	cmp    %rdi,%rax
               :   52af3:	je     52b07 <flow_dv_translate+0x737>
               :   52af5:	cmp    %rdi,%rdx
               :   52af8:	je     52b07 <flow_dv_translate+0x737>
               :   52afa:	movslq %esi,%r8
               :   52afd:	mov    %rdi,-0x550(%rbp,%r8,8)
               :   52b05:	inc    %esi
               :   52b07:	cmp    $0x7,%r12d
               :   52b0b:	je     55da3 <flow_dv_translate+0x39d3>
               :   52b11:	mov    0x70(%r15),%rdi
               :   52b15:	cmp    %rdi,%rcx
               :   52b18:	je     55da3 <flow_dv_translate+0x39d3>
               :   52b1e:	cmp    %rdi,%rax
               :   52b21:	je     55da3 <flow_dv_translate+0x39d3>
               :   52b27:	cmp    %rdi,%rdx
               :   52b2a:	je     55da3 <flow_dv_translate+0x39d3>
               :   52b30:	lea    0x1(%rsi),%r12d
               :   52b34:	movslq %esi,%rsi
               :   52b37:	mov    %rdi,-0x550(%rbp,%rsi,8)
               :   52b3f:	lea    -0x550(%rbp),%r8
               :   52b46:	movslq %r12d,%rdx
               :   52b49:	shl    $0x3,%rdx
               :   52b4d:	lea    0x38(%r15),%rdi
               :   52b51:	mov    %r8,%rsi
               :   52b54:	callq  aeb0 <memcpy@plt>
               :   52b59:	mov    %r12d,0x34(%r15)
               :   52b5d:	mov    -0x748(%rbp),%rax
               :   52b64:	testb  $0x1,0x5398(%rax)
               :   52b6b:	jne    52df2 <flow_dv_translate+0xa22>
               :   52b71:	mov    -0x218(%rbp),%r8
               :   52b78:	lea    -0x210(%rbp),%rdx
               :   52b7f:	mov    %r8,%rax
               :   52b82:	and    $0xfffffffffffffffe,%rax
               :   52b86:	lea    (%rdx,%rax,1),%rsi
               :   52b8a:	cmp    %rdx,%rsi
               :   52b8d:	je     56132 <flow_dv_translate+0x3d62>
               :   52b93:	sub    $0x2,%rax
               :   52b97:	mov    %rax,%rdi
               :   52b9a:	shr    %rdi
               :   52b9d:	inc    %rdi
               :   52ba0:	cmp    $0x1c,%rax
               :   52ba4:	jbe    562b4 <flow_dv_translate+0x3ee4>
               :   52baa:	mov    %rdi,%rcx
               :   52bad:	shr    $0x4,%rcx
               :   52bb1:	shl    $0x5,%rcx
               :   52bb5:	mov    %rdx,%rax
               :   52bb8:	add    %rdx,%rcx
               :   52bbb:	vpxor  %xmm2,%xmm2,%xmm2
               :   52bbf:	nop
               :   52bc0:	vmovdqa64 (%rax),%ymm0
               :   52bc6:	add    $0x20,%rax
               :   52bca:	vextracti128 $0x1,%ymm0,%xmm1
               :   52bd0:	vpmovzxwd %xmm1,%ymm1
               :   52bd5:	vpmovzxwd %xmm0,%ymm0
               :   52bda:	vpaddd %ymm0,%ymm1,%ymm0
               :   52bde:	vpaddd %ymm0,%ymm2,%ymm2
               :   52be2:	cmp    %rcx,%rax
               :   52be5:	jne    52bc0 <flow_dv_translate+0x7f0>
               :   52be7:	vextracti128 $0x1,%ymm2,%xmm0
               :   52bed:	vpaddd %xmm2,%xmm0,%xmm2
               :   52bf1:	vpsrldq $0x8,%xmm2,%xmm0
               :   52bf6:	vpaddd %xmm0,%xmm2,%xmm0
               :   52bfa:	vpsrldq $0x4,%xmm0,%xmm1
               :   52bff:	mov    %rdi,%rcx
               :   52c02:	vpaddd %xmm1,%xmm0,%xmm0
               :   52c06:	and    $0xfffffffffffffff0,%rcx
               :   52c0a:	vmovd  %xmm0,%eax
               :   52c0e:	lea    (%rdx,%rcx,2),%rdx
               :   52c12:	cmp    %rcx,%rdi
               :   52c15:	je     565a6 <flow_dv_translate+0x41d6>
               :   52c1b:	vzeroupper 
               :   52c1e:	movzwl (%rdx),%ecx
               :   52c21:	add    %ecx,%eax
               :   52c23:	lea    0x2(%rdx),%rcx
               :   52c27:	cmp    %rcx,%rsi
               :   52c2a:	je     52d09 <flow_dv_translate+0x939>
               :   52c30:	movzwl 0x2(%rdx),%ecx
               :   52c34:	add    %ecx,%eax
               :   52c36:	lea    0x4(%rdx),%rcx
               :   52c3a:	cmp    %rcx,%rsi
               :   52c3d:	je     52d09 <flow_dv_translate+0x939>
               :   52c43:	movzwl 0x4(%rdx),%ecx
               :   52c47:	add    %ecx,%eax
               :   52c49:	lea    0x6(%rdx),%rcx
               :   52c4d:	cmp    %rcx,%rsi
               :   52c50:	je     52d09 <flow_dv_translate+0x939>
               :   52c56:	movzwl 0x6(%rdx),%ecx
               :   52c5a:	add    %ecx,%eax
               :   52c5c:	lea    0x8(%rdx),%rcx
               :   52c60:	cmp    %rcx,%rsi
               :   52c63:	je     52d09 <flow_dv_translate+0x939>
               :   52c69:	movzwl 0x8(%rdx),%ecx
               :   52c6d:	add    %ecx,%eax
               :   52c6f:	lea    0xa(%rdx),%rcx
               :   52c73:	cmp    %rcx,%rsi
               :   52c76:	je     52d09 <flow_dv_translate+0x939>
               :   52c7c:	movzwl 0xa(%rdx),%ecx
               :   52c80:	add    %ecx,%eax
               :   52c82:	lea    0xc(%rdx),%rcx
               :   52c86:	cmp    %rcx,%rsi
               :   52c89:	je     52d09 <flow_dv_translate+0x939>
               :   52c8b:	movzwl 0xc(%rdx),%ecx
               :   52c8f:	add    %ecx,%eax
               :   52c91:	lea    0xe(%rdx),%rcx
               :   52c95:	cmp    %rcx,%rsi
               :   52c98:	je     52d09 <flow_dv_translate+0x939>
               :   52c9a:	movzwl 0xe(%rdx),%ecx
               :   52c9e:	add    %ecx,%eax
               :   52ca0:	lea    0x10(%rdx),%rcx
               :   52ca4:	cmp    %rcx,%rsi
               :   52ca7:	je     52d09 <flow_dv_translate+0x939>
               :   52ca9:	movzwl 0x10(%rdx),%ecx
               :   52cad:	add    %ecx,%eax
               :   52caf:	lea    0x12(%rdx),%rcx
               :   52cb3:	cmp    %rcx,%rsi
               :   52cb6:	je     52d09 <flow_dv_translate+0x939>
               :   52cb8:	movzwl 0x12(%rdx),%ecx
               :   52cbc:	add    %ecx,%eax
               :   52cbe:	lea    0x14(%rdx),%rcx
               :   52cc2:	cmp    %rcx,%rsi
               :   52cc5:	je     52d09 <flow_dv_translate+0x939>
               :   52cc7:	movzwl 0x14(%rdx),%ecx
               :   52ccb:	add    %ecx,%eax
               :   52ccd:	lea    0x16(%rdx),%rcx
               :   52cd1:	cmp    %rcx,%rsi
               :   52cd4:	je     52d09 <flow_dv_translate+0x939>
               :   52cd6:	movzwl 0x16(%rdx),%ecx
               :   52cda:	add    %ecx,%eax
               :   52cdc:	lea    0x18(%rdx),%rcx
               :   52ce0:	cmp    %rcx,%rsi
               :   52ce3:	je     52d09 <flow_dv_translate+0x939>
               :   52ce5:	movzwl 0x18(%rdx),%ecx
               :   52ce9:	add    %ecx,%eax
               :   52ceb:	lea    0x1a(%rdx),%rcx
               :   52cef:	cmp    %rcx,%rsi
               :   52cf2:	je     52d09 <flow_dv_translate+0x939>
               :   52cf4:	movzwl 0x1a(%rdx),%ecx
               :   52cf8:	add    %ecx,%eax
               :   52cfa:	lea    0x1c(%rdx),%rcx
               :   52cfe:	cmp    %rsi,%rcx
               :   52d01:	je     52d09 <flow_dv_translate+0x939>
               :   52d03:	movzwl 0x1c(%rdx),%edx
               :   52d07:	add    %edx,%eax
               :   52d09:	and    $0x1,%r8d
               :   52d0d:	jne    56264 <flow_dv_translate+0x3e94>
               :   52d13:	mov    %eax,%edx
               :   52d15:	shr    $0x10,%edx
               :   52d18:	movzwl %ax,%eax
               :   52d1b:	add    %edx,%eax
               :   52d1d:	mov    %eax,%edx
               :   52d1f:	mov    -0x740(%rbp),%rbx
               :   52d26:	shr    $0x10,%edx
               :   52d29:	movzwl %ax,%eax
               :   52d2c:	add    %edx,%eax
               :   52d2e:	movzbl 0x20(%r15),%ecx
               :   52d33:	movzwl -0x21e(%rbp),%edx
               :   52d3a:	mov    -0x738(%rbp),%rdi
               :   52d41:	mov    %rbx,%rsi
               :   52d44:	mov    %ax,-0x220(%rbp)
               :   52d4b:	callq  2df50 <mlx5_get_matcher_priority>
               :   52d50:	mov    (%rbx),%ecx
               :   52d52:	mov    %ax,-0x21e(%rbp)
               :   52d59:	mov    0x2c(%r15),%esi
               :   52d5d:	mov    %eax,%edx
               :   52d5f:	cmp    $0xfffc,%ecx
               :   52d65:	je     55c33 <flow_dv_translate+0x3863>
               :   52d6b:	mov    -0x740(%rbp),%rax
               :   52d72:	and    $0x3fffff,%esi
               :   52d78:	movzbl 0x8(%rax),%edx
               :   52d7c:	pushq  -0x728(%rbp)
               :   52d82:	mov    %edx,%eax
               :   52d84:	shr    $0x2,%al
               :   52d87:	shr    %dl
               :   52d89:	and    $0x1,%eax
               :   52d8c:	shl    $0x17,%eax
               :   52d8f:	and    $0x1,%edx
               :   52d92:	or     %esi,%eax
               :   52d94:	shl    $0x18,%edx
               :   52d97:	mov    0x28(%r15),%edi
               :   52d9b:	or     %edx,%eax
               :   52d9d:	mov    -0x6ac(%rbp),%edx
               :   52da3:	push   %rcx
               :   52da4:	movzbl 0x20(%r15),%r10d
               :   52da9:	mov    %edi,-0x6b0(%rbp)
               :   52daf:	and    $0xfe400000,%edx
               :   52db5:	mov    -0x758(%rbp),%r9
               :   52dbc:	mov    -0x750(%rbp),%rsi
               :   52dc3:	mov    -0x738(%rbp),%rdi
               :   52dca:	or     %edx,%eax
               :   52dcc:	mov    %r10d,%ecx
               :   52dcf:	lea    -0x6b0(%rbp),%rdx
               :   52dd6:	lea    0x278(%r15),%r8
               :   52ddd:	mov    %eax,-0x6ac(%rbp)
               :   52de3:	callq  50940 <flow_dv_matcher_register.isra.0>
               :   52de8:	pop    %rdx
               :   52de9:	pop    %rcx
               :   52dea:	test   %eax,%eax
               :   52dec:	jne    54630 <flow_dv_translate+0x2260>
               :   52df2:	xor    %r12d,%r12d
               :   52df5:	jmpq   54646 <flow_dv_translate+0x2276>
               :   52dfa:	test   $0x800000,%r14d
               :   52e01:	je     549d0 <flow_dv_translate+0x2600>
               :   52e07:	lea    -0x550(%rbp),%r10
               :   52e0e:	xor    %ecx,%ecx
               :   52e10:	xor    %eax,%eax
               :   52e12:	mov    %eax,%edx
               :   52e14:	add    $0x20,%eax
               :   52e17:	mov    %rcx,(%r10,%rdx,1)
               :   52e1b:	mov    %rcx,0x8(%r10,%rdx,1)
               :   52e20:	mov    %rcx,0x10(%r10,%rdx,1)
               :   52e25:	mov    %rcx,0x18(%r10,%rdx,1)
               :   52e2a:	cmp    $0xc0,%eax
               :   52e2f:	jb     52e12 <flow_dv_translate+0xa42>
               :   52e31:	add    %r10,%rax
               :   52e34:	movq   $0x0,(%rax)
               :   52e3b:	movq   $0x0,0x10(%rax)
               :   52e43:	movq   $0x0,0x8(%rax)
               :   52e4b:	mov    0x8(%rbx),%rax
               :   52e4f:	lea    -0x520(%rbp),%rdi
               :   52e56:	mov    0x10(%rax),%rdx
               :   52e5a:	mov    (%rax),%rsi
               :   52e5d:	mov    $0xa8,%ecx
               :   52e62:	mov    %r10,-0x7c0(%rbp)
               :   52e69:	mov    %rdx,-0x498(%rbp)
               :   52e70:	callq  a420 <__memcpy_chk@plt>
               :   52e75:	cmpq   $0x21,-0x498(%rbp)
               :   52e7d:	seta   %al
               :   52e80:	add    $0x2,%eax
               :   52e83:	mov    %al,-0x490(%rbp)
               :   52e89:	mov    -0x740(%rbp),%rax
               :   52e90:	mov    -0x7c0(%rbp),%r10
               :   52e97:	movzbl 0x8(%rax),%edx
               :   52e9b:	mov    -0x728(%rbp),%rcx
               :   52ea2:	mov    %edx,%eax
               :   52ea4:	shr    %al
               :   52ea6:	and    $0x1,%eax
               :   52ea9:	and    $0x4,%edx
               :   52eac:	mov    $0x2,%edx
               :   52eb1:	cmovne %edx,%eax
               :   52eb4:	mov    %r10,%rsi
               :   52eb7:	mov    %al,-0x48f(%rbp)
               :   52ebd:	mov    -0x738(%rbp),%rax
               :   52ec4:	mov    %r15,%rdx
               :   52ec7:	mov    0x30(%rax),%rdi
               :   52ecb:	callq  3cf70 <flow_dv_encap_decap_resource_register.isra.0>
               :   52ed0:	test   %eax,%eax
               :   52ed2:	jne    55bf0 <flow_dv_translate+0x3820>
               :   52ed8:	mov    0x78(%r15),%rdx
               :   52edc:	movslq %r12d,%rax
               :   52edf:	mov    0x28(%rdx),%rdx
               :   52ee3:	inc    %r12d
               :   52ee6:	mov    %rdx,0x38(%r15,%rax,8)
               :   52eeb:	mov    %r14,%rdx
               :   52eee:	or     $0x400000,%rdx
               :   52ef5:	add    $0x10,%rbx
               :   52ef9:	bt     $0x24,%r14
               :   52efe:	movzbl -0x363(%rbp),%eax
               :   52f05:	jae    54a10 <flow_dv_translate+0x2640>
               :   52f0b:	mov    %rdx,%r14
               :   52f0e:	orq    $0x400000,-0x3c8(%rbp)
               :   52f19:	xor    %edx,%edx
               :   52f1b:	jmpq   528e4 <flow_dv_translate+0x514>
               :   52f20:	test   $0x200,%r14d
               :   52f27:	je     54b47 <flow_dv_translate+0x2777>
               :   52f2d:	mov    0x8(%rbx),%rax
               :   52f31:	movzwl (%rax),%eax
               :   52f34:	xchg   %al,%ah
               :   52f36:	add    $0x10,%rbx
               :   52f3a:	mov    $0x12,%esi
               :   52f3f:	mov    %rbx,%rdi
               :   52f42:	mov    %ax,-0x70a(%rbp)
               :   52f49:	callq  29620 <mlx5_flow_find_action>
               :   52f4e:	test   %rax,%rax
               :   52f51:	je     52f88 <flow_dv_translate+0xbb8>
               :   52f53:	mov    (%rax),%edx
               :   52f55:	cmp    $0x13,%edx
               :   52f58:	je     557ca <flow_dv_translate+0x33fa>
               :   52f5e:	cmp    $0x12,%edx
               :   52f61:	jne    52f88 <flow_dv_translate+0xbb8>
               :   52f63:	mov    0x8(%rax),%rax
               :   52f67:	movzwl (%rax),%eax
               :   52f6a:	mov    %eax,%edx
               :   52f6c:	xchg   %dl,%dh
               :   52f6e:	movzwl -0x70c(%rbp),%eax
               :   52f75:	and    $0xf000,%ax
               :   52f79:	or     %edx,%eax
               :   52f7b:	mov    %ax,-0x70c(%rbp)
               :   52f82:	nopw   0x0(%rax,%rax,1)
               :   52f88:	mov    $0x13,%esi
               :   52f8d:	mov    %rbx,%rdi
               :   52f90:	callq  29620 <mlx5_flow_find_action>
               :   52f95:	test   %rax,%rax
               :   52f98:	je     52fd0 <flow_dv_translate+0xc00>
               :   52f9a:	mov    (%rax),%ecx
               :   52f9c:	movzwl -0x70c(%rbp),%edx
               :   52fa3:	cmp    $0x13,%ecx
               :   52fa6:	je     557ed <flow_dv_translate+0x341d>
               :   52fac:	cmp    $0x12,%ecx
               :   52faf:	jne    52fd0 <flow_dv_translate+0xc00>
               :   52fb1:	mov    0x8(%rax),%rax
               :   52fb5:	movzwl (%rax),%eax
               :   52fb8:	xchg   %al,%ah
               :   52fba:	and    $0xf000,%dx
               :   52fbf:	or     %eax,%edx
               :   52fc1:	mov    %dx,-0x70c(%rbp)
               :   52fc8:	nopl   0x0(%rax,%rax,1)
               :   52fd0:	vpxor  %xmm0,%xmm0,%xmm0
               :   52fd4:	movq   $0x0,-0x680(%rbp)
               :   52fdf:	mov    -0x70c(%rbp),%eax
               :   52fe5:	lea    -0x6b0(%rbp),%rcx
               :   52fec:	vmovaps %xmm0,-0x6b0(%rbp)
               :   52ff4:	vmovaps %xmm0,-0x6a0(%rbp)
               :   52ffc:	vmovaps %xmm0,-0x690(%rbp)
               :   53004:	bswap  %eax
               :   53006:	mov    %eax,-0x684(%rbp)
               :   5300c:	mov    -0x740(%rbp),%rax
               :   53013:	mov    -0x728(%rbp),%rdi
               :   5301a:	movzbl 0x8(%rax),%edx
               :   5301e:	lea    -0x6d0(%rbp),%rsi
               :   53025:	mov    %edx,%eax
               :   53027:	shr    %al
               :   53029:	and    $0x1,%eax
               :   5302c:	and    $0x4,%edx
               :   5302f:	mov    $0x2,%edx
               :   53034:	cmovne %edx,%eax
               :   53037:	mov    %al,-0x688(%rbp)
               :   5303d:	mov    -0x738(%rbp),%rax
               :   53044:	mov    0x30(%rax),%rax
               :   53048:	mov    0x60(%rax),%rax
               :   5304c:	vmovaps %xmm0,-0x6d0(%rbp)
               :   53054:	mov    0x8(%rax),%rax
               :   53058:	mov    %rdi,-0x6c8(%rbp)
               :   5305f:	mov    0x428(%rax),%rdi
               :   53066:	vmovaps %xmm0,-0x6c0(%rbp)
               :   5306e:	mov    %rcx,-0x6c0(%rbp)
               :   53075:	callq  a380 <mlx5_list_register@plt>
               :   5307a:	test   %rax,%rax
               :   5307d:	je     5580a <flow_dv_translate+0x343a>
               :   53083:	mov    0x30(%rax),%ecx
               :   53086:	mov    0x278(%r15),%rdx
               :   5308d:	mov    %ecx,0x34(%rdx)
               :   53090:	mov    %rax,0x80(%r15)
               :   53097:	mov    0x20(%rax),%rax
               :   5309b:	movslq %r12d,%rdx
               :   5309e:	mov    %rax,0x38(%r15,%rdx,8)
               :   530a3:	or     $0x100,%r14
               :   530aa:	movzbl -0x363(%rbp),%eax
               :   530b1:	inc    %r12d
               :   530b4:	xor    %edx,%edx
               :   530b6:	jmpq   528e4 <flow_dv_translate+0x514>
               :   530bb:	mov    -0x760(%rbp),%rsi
               :   530c2:	movslq %r12d,%rax
               :   530c5:	mov    0x8(%rsi),%rdx
               :   530c9:	or     $0x80,%r14b
               :   530cd:	mov    0x3f0(%rdx),%rdx
               :   530d4:	add    $0x10,%rbx
               :   530d8:	mov    %rdx,0x38(%r15,%rax,8)
               :   530dd:	inc    %r12d
               :   530e0:	movzbl -0x363(%rbp),%eax
               :   530e7:	xor    %edx,%edx
               :   530e9:	jmpq   528e4 <flow_dv_translate+0x514>
               :   530ee:	mov    -0x740(%rbp),%rax
               :   530f5:	mov    -0x728(%rbp),%r8
               :   530fc:	movzbl 0x8(%rax),%eax
               :   53100:	mov    -0x738(%rbp),%rdi
               :   53107:	mov    %eax,%ecx
               :   53109:	shr    $0x2,%cl
               :   5310c:	and    $0x1,%ecx
               :   5310f:	mov    %r15,%rdx
               :   53112:	mov    %rbx,%rsi
               :   53115:	mov    %al,-0x7c0(%rbp)
               :   5311b:	callq  4ad80 <flow_dv_create_action_l2_encap>
               :   53120:	test   %eax,%eax
               :   53122:	jne    54630 <flow_dv_translate+0x2260>
               :   53128:	mov    0x78(%r15),%rax
               :   5312c:	mov    %r14,%rdx
               :   5312f:	mov    0x28(%rax),%rax
               :   53133:	lea    0x1(%r12),%ecx
               :   53138:	or     $0x400000,%rdx
               :   5313f:	movslq %r12d,%r12
               :   53142:	add    $0x10,%rbx
               :   53146:	bt     $0x24,%r14
               :   5314b:	mov    %rax,0x38(%r15,%r12,8)
               :   53150:	jae    5315d <flow_dv_translate+0xd8d>
               :   53152:	orq    $0x400000,-0x3c8(%rbp)
               :   5315d:	mov    %rdx,%r14
               :   53160:	movzbl -0x363(%rbp),%eax
               :   53167:	mov    %ecx,%r12d
               :   5316a:	xor    %edx,%edx
               :   5316c:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53171:	test   $0x100,%r14d
               :   53178:	jne    528d7 <flow_dv_translate+0x507>
               :   5317e:	mov    -0x768(%rbp),%rdi
               :   53185:	lea    -0x70c(%rbp),%rsi
               :   5318c:	callq  3a0f0 <flow_dev_get_vlan_info_from_items>
               :   53191:	mov    (%rbx),%eax
               :   53193:	mov    0x8(%rbx),%rsi
               :   53197:	cmp    $0x13,%eax
               :   5319a:	je     55b3c <flow_dv_translate+0x376c>
               :   531a0:	cmp    $0x12,%eax
               :   531a3:	jne    531be <flow_dv_translate+0xdee>
               :   531a5:	movzwl (%rsi),%edx
               :   531a8:	xchg   %dl,%dh
               :   531aa:	movzwl -0x70c(%rbp),%eax
               :   531b1:	and    $0xf000,%ax
               :   531b5:	or     %edx,%eax
               :   531b7:	mov    %ax,-0x70c(%rbp)
               :   531be:	movzbl -0x363(%rbp),%eax
               :   531c5:	cmp    $0x1f,%al
               :   531c7:	ja     55ddb <flow_dv_translate+0x3a0b>
               :   531cd:	lea    0x14382c(%rip),%rdi        # 196a00 <modify_vlan_out_first_vid>
               :   531d4:	movzbl %al,%edx
               :   531d7:	mov    (%rdi),%r8d
               :   531da:	lea    -0x361(%rbp,%rdx,8),%rcx
               :   531e2:	mov    0x4(%rdi),%edx
               :   531e5:	mov    0x8(%rdi),%edi
               :   531e8:	shl    $0x8,%edx
               :   531eb:	and    $0x1f,%r8d
               :   531ef:	and    $0x1f00,%edx
               :   531f5:	or     $0x10000000,%r8d
               :   531fc:	shl    $0x10,%edi
               :   531ff:	or     %r8d,%edx
               :   53202:	and    $0xfff0000,%edi
               :   53208:	or     %edi,%edx
               :   5320a:	bswap  %edx
               :   5320c:	mov    %edx,(%rcx)
               :   5320e:	movzwl (%rsi),%edx
               :   53211:	inc    %eax
               :   53213:	shl    $0x10,%edx
               :   53216:	mov    %edx,0x4(%rcx)
               :   53219:	mov    %al,-0x363(%rbp)
               :   5321f:	or     $0x200,%r14
               :   53226:	add    $0x10,%rbx
               :   5322a:	xor    %edx,%edx
               :   5322c:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53231:	mov    -0x740(%rbp),%rax
               :   53238:	lea    -0x550(%rbp),%r10
     1 3.0e-05 :   5323f:	movzbl 0x8(%rax),%eax
               :   53243:	xor    %ecx,%ecx
               :   53245:	mov    %eax,%esi
     2 5.9e-05 :   53247:	shr    $0x2,%sil
     3 8.9e-05 :   5324b:	mov    %al,-0x7c0(%rbp)
               :   53251:	and    $0x1,%esi
               :   53254:	xor    %eax,%eax
               :   53256:	mov    %eax,%edx
     1 3.0e-05 :   53258:	add    $0x20,%eax
               :   5325b:	mov    %rcx,-0x550(%rbp,%rdx,1)
               :   53263:	mov    %rcx,-0x548(%rbp,%rdx,1)
               :   5326b:	mov    %rcx,-0x540(%rbp,%rdx,1)
               :   53273:	mov    %rcx,-0x538(%rbp,%rdx,1)
               :   5327b:	cmp    $0xc0,%eax
               :   53280:	jb     53256 <flow_dv_translate+0xe86>
               :   53282:	add    %r10,%rax
               :   53285:	test   %sil,%sil
               :   53288:	movq   $0x0,(%rax)
               :   5328f:	movq   $0x0,0x8(%rax)
               :   53297:	movq   $0x0,0x10(%rax)
               :   5329f:	setne  %al
               :   532a2:	add    %eax,%eax
               :   532a4:	mov    %al,-0x48f(%rbp)
               :   532aa:	mov    -0x738(%rbp),%rax
               :   532b1:	mov    -0x728(%rbp),%rcx
               :   532b8:	mov    0x30(%rax),%rdi
               :   532bc:	mov    %r15,%rdx
               :   532bf:	mov    %r10,%rsi
               :   532c2:	callq  3cf70 <flow_dv_encap_decap_resource_register.isra.0>
               :   532c7:	test   %eax,%eax
               :   532c9:	jne    54e6f <flow_dv_translate+0x2a9f>
               :   532cf:	mov    0x78(%r15),%rdx
               :   532d3:	movslq %r12d,%rax
               :   532d6:	mov    0x28(%rdx),%rdx
               :   532da:	or     $0x800000,%r14
               :   532e1:	mov    %rdx,0x38(%r15,%rax,8)
               :   532e6:	add    $0x10,%rbx
               :   532ea:	movzbl -0x363(%rbp),%eax
               :   532f1:	inc    %r12d
               :   532f4:	xor    %edx,%edx
               :   532f6:	jmpq   528e4 <flow_dv_translate+0x514>
               :   532fb:	mov    -0x748(%rbp),%rax
               :   53302:	mov    0x5380(%rax),%rax
               :   53309:	test   %rax,%rax
               :   5330c:	je     55174 <flow_dv_translate+0x2da4>
               :   53312:	mov    0x40(%rax),%rax
               :   53316:	movslq %r12d,%rdx
               :   53319:	mov    %rax,0x38(%r15,%rdx,8)
               :   5331e:	bts    $0x1f,%r14
               :   53323:	movzbl -0x363(%rbp),%eax
               :   5332a:	add    $0x10,%rbx
               :   5332e:	inc    %r12d
               :   53331:	xor    %edx,%edx
               :   53333:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53338:	mov    -0x738(%rbp),%rax
               :   5333f:	mov    -0x728(%rbp),%rcx
               :   53346:	lea    -0x710(%rbp),%rdx
               :   5334d:	lea    0x30(%rax),%rdi
               :   53351:	mov    %rbx,%rsi
               :   53354:	callq  3d370 <flow_dv_translate_action_port_id.isra.0>
               :   53359:	test   %eax,%eax
               :   5335b:	jne    54630 <flow_dv_translate+0x2260>
               :   53361:	mov    -0x710(%rbp),%eax
               :   53367:	mov    -0x728(%rbp),%rsi
               :   5336e:	mov    %eax,-0x688(%rbp)
               :   53374:	mov    -0x738(%rbp),%rax
               :   5337b:	vpxor  %xmm0,%xmm0,%xmm0
               :   5337f:	mov    0x30(%rax),%rax
               :   53383:	lea    -0x6b0(%rbp),%rdx
               :   5338a:	mov    0x60(%rax),%rax
               :   5338e:	vmovaps %xmm0,-0x6d0(%rbp)
               :   53396:	mov    0x8(%rax),%rax
               :   5339a:	mov    %rsi,-0x6c8(%rbp)
               :   533a1:	mov    0x420(%rax),%rdi
               :   533a8:	lea    -0x6d0(%rbp),%rsi
               :   533af:	vmovaps %xmm0,-0x6c0(%rbp)
               :   533b7:	mov    %rdx,-0x6c0(%rbp)
               :   533be:	callq  a380 <mlx5_list_register@plt>
               :   533c3:	test   %rax,%rax
               :   533c6:	je     55830 <flow_dv_translate+0x3460>
               :   533cc:	mov    0x278(%r15),%rdx
               :   533d3:	mov    0x2c(%rax),%ecx
               :   533d6:	mov    %rax,0x90(%r15)
               :   533dd:	mov    %ecx,0x1c(%rdx)
               :   533e0:	mov    0x20(%rax),%rax
               :   533e4:	movslq %r12d,%rcx
               :   533e7:	mov    %rax,0x38(%r15,%rcx,8)
               :   533ec:	or     $0x40,%r14
               :   533f0:	movzbl 0x1b(%rdx),%eax
               :   533f4:	and    $0xf,%eax
               :   533f7:	or     $0x30,%eax
               :   533fa:	mov    %al,0x1b(%rdx)
               :   533fd:	orq    $0x40,-0x3c8(%rbp)
               :   53405:	incl   -0x76c(%rbp)
               :   5340b:	movzbl -0x363(%rbp),%eax
               :   53412:	add    $0x10,%rbx
               :   53416:	inc    %r12d
               :   53419:	xor    %edx,%edx
               :   5341b:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53420:	mov    -0x738(%rbp),%rax
               :   53427:	mov    0x8(%rbx),%rcx
               :   5342b:	mov    0x30(%rax),%rdx
               :   5342f:	mov    %ecx,%eax
               :   53431:	mov    0x60(%rdx),%rsi
               :   53435:	shr    $0x16,%eax
               :   53438:	mov    (%rsi),%rdi
               :   5343b:	mov    %ecx,%r8d
               :   5343e:	and    $0xf,%eax
               :   53441:	and    $0x3fffff,%r8d
               :   53448:	cmp    0xd70(%rdi),%ax
               :   5344f:	je     54e1b <flow_dv_translate+0x2a4b>
               :   53455:	testb  $0x8,0xd72(%rdx)
               :   5345c:	je     54a1a <flow_dv_translate+0x264a>
               :   53462:	movzwl %ax,%eax
               :   53465:	imul   $0x4080,%rax,%rax
               :   5346c:	mov    0x142b25(%rip),%rdx        # 195f98 <rte_eth_devices@INTERNAL>
               :   53473:	dec    %r8d
               :   53476:	mov    0x30(%rax,%rdx,1),%rax
               :   5347b:	mov    0x60(%rax),%rax
               :   5347f:	mov    0x8(%rax),%rax
               :   53483:	mov    0x7b0(%rax),%r9
               :   5348a:	lea    0x14(%r9),%rdx
               :   5348e:	jmp    53492 <flow_dv_translate+0x10c2>
               :   53490:	pause  
               :   53492:	mov    (%rdx),%eax
               :   53494:	test   $0x3,%al
               :   53496:	jne    53490 <flow_dv_translate+0x10c0>
               :   53498:	mov    $0x4,%eax
               :   5349d:	lock xadd %eax,(%rdx)
               :   534a1:	test   $0x3,%al
               :   534a3:	jne    55e0e <flow_dv_translate+0x3a3e>
               :   534a9:	mov    (%r9),%rax
               :   534ac:	mov    %r8d,%edi
               :   534af:	shr    $0x6,%edi
               :   534b2:	mov    (%rax,%rdi,8),%r9
               :   534b6:	lock subl $0x4,(%rdx)
               :   534ba:	mov    (%rsi),%rdx
               :   534bd:	mov    %r8d,%eax
               :   534c0:	and    $0x3f,%eax
               :   534c3:	lea    (%rax,%rax,2),%rdi
               :   534c7:	movzwl 0xd70(%rdx),%esi
               :   534ce:	shl    $0x4,%rdi
               :   534d2:	cmp    %si,0x56(%r9,%rdi,1)
               :   534d8:	jne    54a1a <flow_dv_translate+0x264a>
               :   534de:	lea    0x3(%rax,%rax,2),%rdx
               :   534e3:	shl    $0x4,%rdx
               :   534e7:	add    %r9,%rdx
               :   534ea:	mov    -0x760(%rbp),%rax
               :   534f1:	mov    $0xffffffff,%esi
               :   534f6:	mov    0x8(%rax),%rdi
               :   534fa:	mov    %rcx,-0x7c8(%rbp)
               :   53501:	mov    %rdx,-0x7c0(%rbp)
               :   53508:	callq  5cdb0 <mlx5_aso_ct_available>
               :   5350d:	test   %eax,%eax
               :   5350f:	mov    -0x7c0(%rbp),%rdx
               :   53516:	mov    -0x7c8(%rbp),%rcx
               :   5351d:	jne    562d3 <flow_dv_translate+0x3f03>
               :   53523:	mov    0x18(%rdx),%rax
               :   53527:	cmpb   $0x0,0x2c(%rdx)
               :   5352b:	cmovne 0x10(%rdx),%rax
               :   53530:	movslq %r12d,%rsi
               :   53533:	mov    %rax,0x38(%r15,%rsi,8)
               :   53538:	mov    -0x750(%rbp),%rax
               :   5353f:	mov    0x14(%rax),%r11d
               :   53543:	test   %r11d,%r11d
               :   53546:	je     54bf2 <flow_dv_translate+0x2822>
               :   5354c:	movabs $0x20000000000,%rax
               :   53556:	or     %rax,%r14
               :   53559:	inc    %r12d
               :   5355c:	movzbl -0x363(%rbp),%eax
               :   53563:	add    $0x10,%rbx
               :   53567:	xor    %edx,%edx
               :   53569:	jmpq   528e4 <flow_dv_translate+0x514>
               :   5356e:	mov    0x8(%rbx),%rcx
               :   53572:	mov    -0x748(%rbp),%rax
               :   53579:	mov    0x14(%rcx),%edx
               :   5357c:	mov    0x20(%rcx),%rsi
               :   53580:	mov    0x5370(%rax),%rdi
               :   53587:	add    %rdx,%rdx
               :   5358a:	mov    %rcx,-0x7c0(%rbp)
               :   53591:	callq  aeb0 <memcpy@plt>
               :   53596:	mov    -0x7c0(%rbp),%rcx
               :   5359d:	mov    -0x748(%rbp),%rsi
               :   535a4:	mov    0x14(%rcx),%eax
               :   535a7:	mov    %eax,0x531c(%rsi)
               :   535ad:	mov    0x18(%rcx),%rax
               :   535b1:	test   %rax,%rax
               :   535b4:	je     54c02 <flow_dv_translate+0x2832>
               :   535ba:	mov    -0x748(%rbp),%rsi
               :   535c1:	vmovdqu64 (%rax),%xmm3
               :   535c7:	or     $0x4,%r14
               :   535cb:	vmovups %xmm3,0x5330(%rsi)
               :   535d3:	vmovdqu64 0x10(%rax),%xmm4
               :   535da:	cmpl   $0x1,0x5364(%rsi)
               :   535e1:	vmovups %xmm4,0x5340(%rsi)
               :   535e9:	mov    0x20(%rax),%rax
               :   535ed:	mov    %rax,0x5350(%rsi)
               :   535f4:	sbb    %eax,%eax
               :   535f6:	and    $0xfffffffb,%eax
               :   535f9:	mov    0x278(%r15),%rcx
               :   53600:	add    $0x6,%eax
               :   53603:	movzbl 0x1b(%rcx),%edx
               :   53607:	shl    $0x4,%eax
               :   5360a:	and    $0xf,%edx
               :   5360d:	or     %edx,%eax
               :   5360f:	mov    %al,0x1b(%rcx)
               :   53612:	add    $0x10,%rbx
               :   53616:	xor    %edx,%edx
               :   53618:	movzbl -0x363(%rbp),%eax
               :   5361f:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53624:	mov    0x278(%r15),%rdx
               :   5362b:	or     $0x1,%r14
               :   5362f:	movzbl 0x1b(%rdx),%eax
               :   53633:	add    $0x10,%rbx
               :   53637:	and    $0xf,%eax
               :   5363a:	or     $0x40,%eax
               :   5363d:	mov    %al,0x1b(%rdx)
               :   53640:	xor    %edx,%edx
               :   53642:	movzbl -0x363(%rbp),%eax
               :   53649:	jmpq   528e4 <flow_dv_translate+0x514>
               :   5364e:	mov    0x8(%rbx),%rax
               :   53652:	mov    -0x748(%rbp),%rsi
               :   53659:	movzwl (%rax),%edx
               :   5365c:	mov    0x5370(%rsi),%rax
               :   53663:	movl   $0x1,0x531c(%rsi)
               :   5366d:	mov    %dx,(%rax)
               :   53670:	mov    0x278(%r15),%rdx
               :   53677:	or     $0x2,%r14
               :   5367b:	movzbl 0x1b(%rdx),%eax
               :   5367f:	add    $0x10,%rbx
               :   53683:	and    $0xf,%eax
               :   53686:	or     $0x10,%eax
               :   53689:	mov    %al,0x1b(%rdx)
               :   5368c:	xor    %edx,%edx
               :   5368e:	orq    $0x2,-0x3c8(%rbp)
               :   53696:	incl   -0x76c(%rbp)
               :   5369c:	movzbl -0x363(%rbp),%eax
               :   536a3:	jmpq   528e4 <flow_dv_translate+0x514>
               :   536a8:	mov    0x8(%rbx),%rdx
               :   536ac:	mov    (%rdx),%edx
               :   536ae:	bswap  %edx
               :   536b0:	mov    %rdx,%rdi
               :   536b3:	mov    %edx,%r8d
               :   536b6:	shl    $0x20,%rdi
               :   536ba:	vpxor  %xmm0,%xmm0,%xmm0
               :   536be:	sub    %r8,%rdi
               :   536c1:	cmp    $0x28,%eax
               :   536c4:	movl   $0x0,-0x6e0(%rbp)
               :   536ce:	movl   $0x0,-0x6c0(%rbp)
               :   536d8:	cmove  %edi,%edx
               :   536db:	lea    -0x6f0(%rbp),%rsi
               :   536e2:	vmovaps %xmm0,-0x6f0(%rbp)
               :   536ea:	lea    -0x6d0(%rbp),%rcx
               :   536f1:	vmovaps %xmm0,-0x6d0(%rbp)
               :   536f9:	bswap  %edx
               :   536fb:	mov    %rsi,-0x6a8(%rbp)
               :   53702:	mov    -0x728(%rbp),%r9
               :   53709:	lea    0x143190(%rip),%rsi        # 1968a0 <modify_tcp>
               :   53710:	mov    %edx,-0x6ec(%rbp)
               :   53716:	mov    %rcx,-0x698(%rbp)
               :   5371d:	xor    %edx,%edx
               :   5371f:	lea    -0x390(%rbp),%rcx
               :   53726:	lea    -0x6b0(%rbp),%rdi
               :   5372d:	mov    $0x2,%r8d
               :   53733:	movl   $0xffffffff,-0x6cc(%rbp)
               :   5373d:	movl   $0xc,-0x6b0(%rbp)
               :   53747:	callq  42b80 <flow_dv_convert_modify_action>
               :   5374c:	test   %eax,%eax
               :   5374e:	jne    54630 <flow_dv_translate+0x2260>
               :   53754:	cmpl   $0x27,(%rbx)
               :   53757:	mov    $0x1000000,%eax
               :   5375c:	mov    $0x2000000,%edx
               :   53761:	jmpq   528d0 <flow_dv_translate+0x500>
               :   53766:	vpxor  %xmm0,%xmm0,%xmm0
               :   5376a:	vmovaps %xmm0,-0x6b0(%rbp)
               :   53772:	movl   $0x0,-0x5b0(%rbp)
               :   5377c:	movl   $0x6,-0x6b0(%rbp)
               :   53786:	movl   $0x0,-0x540(%rbp)
               :   53790:	mov    0x8(%rbx),%rcx
               :   53794:	vmovaps %xmm0,-0x6a0(%rbp)
               :   5379c:	vmovaps %xmm0,-0x5c0(%rbp)
               :   537a4:	vmovaps %xmm0,-0x550(%rbp)
               :   537ac:	cmp    $0x25,%eax
               :   537af:	lea    -0x5c0(%rbp),%rdx
               :   537b6:	mov    (%rcx),%eax
               :   537b8:	lea    -0x550(%rbp),%r10
               :   537bf:	je     54a41 <flow_dv_translate+0x2671>
               :   537c5:	mov    %eax,-0x5c0(%rbp)
               :   537cb:	mov    $0xffffffff,%edi
               :   537d0:	movzwl 0x4(%rcx),%eax
               :   537d4:	movl   $0xffffffff,-0x550(%rbp)
               :   537de:	mov    %ax,-0x5bc(%rbp)
               :   537e5:	mov    %di,-0x54c(%rbp)
               :   537ec:	mov    -0x728(%rbp),%r9
               :   537f3:	lea    0x143226(%rip),%rsi        # 196a20 <modify_eth>
               :   537fa:	mov    %rdx,-0x6a8(%rbp)
               :   53801:	lea    -0x390(%rbp),%rcx
               :   53808:	xor    %edx,%edx
               :   5380a:	lea    -0x6b0(%rbp),%rdi
               :   53811:	mov    $0x1,%r8d
               :   53817:	mov    %r10,-0x698(%rbp)
               :   5381e:	callq  42b80 <flow_dv_convert_modify_action>
               :   53823:	test   %eax,%eax
               :   53825:	jne    54630 <flow_dv_translate+0x2260>
               :   5382b:	cmpl   $0x25,(%rbx)
               :   5382e:	mov    $0x100000,%eax
               :   53833:	mov    $0x200000,%edx
               :   53838:	jmpq   528d0 <flow_dv_translate+0x500>
               :   5383d:	movzbl -0x718(%rbp),%eax
               :   53844:	mov    0x8(%rbx),%r11
               :   53848:	test   $0x1,%al
               :   5384a:	je     54b9a <flow_dv_translate+0x27ca>
               :   53850:	test   $0x2,%al
               :   53852:	je     54828 <flow_dv_translate+0x2458>
               :   53858:	movl   $0x0,-0x6e0(%rbp)
               :   53862:	movl   $0x0,-0x6c0(%rbp)
               :   5386c:	vpxor  %xmm0,%xmm0,%xmm0
               :   53870:	vmovaps %xmm0,-0x6f0(%rbp)
               :   53878:	vmovaps %xmm0,-0x6d0(%rbp)
               :   53880:	movzbl (%r11),%ecx
               :   53884:	lea    -0x6f0(%rbp),%rdx
               :   5388b:	lea    -0x6d0(%rbp),%rax
               :   53892:	mov    %cl,-0x6e8(%rbp)
               :   53898:	movb   $0xff,-0x6c8(%rbp)
               :   5389f:	movl   $0x8,-0x6b0(%rbp)
               :   538a9:	mov    %rdx,-0x6a8(%rbp)
               :   538b0:	mov    %rax,-0x698(%rbp)
               :   538b7:	lea    0x143102(%rip),%rsi        # 1969c0 <modify_ipv4>
               :   538be:	mov    -0x728(%rbp),%r9
               :   538c5:	xor    %edx,%edx
               :   538c7:	lea    -0x390(%rbp),%rcx
               :   538ce:	lea    -0x6b0(%rbp),%rdi
               :   538d5:	mov    $0x1,%r8d
               :   538db:	callq  42b80 <flow_dv_convert_modify_action>
               :   538e0:	test   %eax,%eax
               :   538e2:	jne    54630 <flow_dv_translate+0x2260>
               :   538e8:	movzbl -0x363(%rbp),%eax
               :   538ef:	or     $0x40000,%r14
               :   538f6:	add    $0x10,%rbx
               :   538fa:	xor    %edx,%edx
               :   538fc:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53901:	mov    -0x738(%rbp),%rax
               :   53908:	mov    0x30(%rax),%rax
               :   5390c:	mov    0x60(%rax),%rax
               :   53910:	mov    0x8(%rax),%r10
               :   53914:	mov    0x3f8(%r10),%rax
               :   5391b:	test   %rax,%rax
               :   5391e:	je     54c19 <flow_dv_translate+0x2849>
               :   53924:	movslq %r12d,%rdx
               :   53927:	mov    %rax,0x38(%r15,%rdx,8)
               :   5392c:	mov    0x278(%r15),%rdx
               :   53933:	inc    %r12d
               :   53936:	movzbl 0x1b(%rdx),%eax
               :   5393a:	bts    $0x2a,%r14
               :   5393f:	and    $0xf,%eax
               :   53942:	or     $0xffffff80,%eax
               :   53945:	mov    %al,0x1b(%rdx)
               :   53948:	jmpq   528d7 <flow_dv_translate+0x507>
               :   5394d:	vpxor  %xmm0,%xmm0,%xmm0
               :   53951:	vmovaps %xmm0,-0x6b0(%rbp)
               :   53959:	movq   $0x0,-0x6a0(%rbp)
               :   53964:	movl   $0x9,-0x6b0(%rbp)
               :   5396e:	movq   $0x0,-0x5a0(%rbp)
               :   53979:	movl   $0x0,-0x598(%rbp)
               :   53983:	movq   $0x0,-0x530(%rbp)
               :   5398e:	movl   $0x0,-0x528(%rbp)
               :   53998:	mov    0x8(%rbx),%rdx
               :   5399c:	vmovaps %xmm0,-0x5c0(%rbp)
               :   539a4:	vmovaps %xmm0,-0x550(%rbp)
               :   539ac:	vmovaps %xmm0,-0x5b0(%rbp)
               :   539b4:	vmovaps %xmm0,-0x540(%rbp)
               :   539bc:	movzbl (%rdx),%edx
               :   539bf:	mov    -0x728(%rbp),%r9
               :   539c6:	lea    0x142f53(%rip),%rsi        # 196920 <modify_ipv6>
               :   539cd:	mov    %edx,-0x5c0(%rbp)
               :   539d3:	lea    -0x5c0(%rbp),%rax
               :   539da:	lea    -0x550(%rbp),%r10
               :   539e1:	xor    %edx,%edx
               :   539e3:	lea    -0x390(%rbp),%rcx
               :   539ea:	lea    -0x6b0(%rbp),%rdi
               :   539f1:	mov    $0x1,%r8d
               :   539f7:	movl   $0x3f,-0x550(%rbp)
               :   53a01:	mov    %rax,-0x6a8(%rbp)
               :   53a08:	mov    %r10,-0x698(%rbp)
               :   53a0f:	callq  42b80 <flow_dv_convert_modify_action>
               :   53a14:	test   %eax,%eax
               :   53a16:	jne    54630 <flow_dv_translate+0x2260>
               :   53a1c:	movzbl -0x363(%rbp),%eax
               :   53a23:	bts    $0x21,%r14
               :   53a28:	add    $0x10,%rbx
               :   53a2c:	xor    %edx,%edx
               :   53a2e:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53a33:	mov    -0x748(%rbp),%rax
               :   53a3a:	orb    $0x2,0x5398(%rax)
               :   53a41:	mov    -0x778(%rbp),%rax
               :   53a48:	testb  $0xe0,0x254(%rax)
               :   53a4f:	je     547e8 <flow_dv_translate+0x2418>
               :   53a55:	mov    -0x728(%rbp),%rcx
               :   53a5c:	mov    -0x738(%rbp),%rdi
               :   53a63:	lea    -0x390(%rbp),%rdx
               :   53a6a:	lea    -0x6b0(%rbp),%rsi
               :   53a71:	movl   $0xffffff,-0x6b0(%rbp)
               :   53a7b:	callq  43000 <flow_dv_convert_action_mark.isra.0>
               :   53a80:	test   %eax,%eax
               :   53a82:	jne    54630 <flow_dv_translate+0x2260>
               :   53a88:	movzbl -0x363(%rbp),%eax
               :   53a8f:	or     $0x20000008,%r14
               :   53a96:	add    $0x10,%rbx
               :   53a9a:	xor    %edx,%edx
               :   53a9c:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53aa1:	mov    -0x748(%rbp),%rax
               :   53aa8:	orb    $0x2,0x5398(%rax)
               :   53aaf:	mov    -0x778(%rbp),%rax
               :   53ab6:	mov    0x8(%rbx),%rsi
               :   53aba:	testb  $0xe0,0x254(%rax)
               :   53ac1:	jne    54b5f <flow_dv_translate+0x278f>
               :   53ac7:	or     $0x10,%r14
               :   53acb:	mov    (%rsi),%esi
               :   53acd:	xor    %eax,%eax
               :   53acf:	cmp    $0xffffff,%esi
               :   53ad5:	setne  %al
               :   53ad8:	add    %eax,%esi
               :   53ada:	bswap  %esi
               :   53adc:	mov    -0x738(%rbp),%rax
               :   53ae3:	mov    -0x728(%rbp),%r8
               :   53aea:	mov    0x30(%rax),%rdi
               :   53aee:	shr    $0x8,%esi
               :   53af1:	lea    0x278(%r15),%rcx
               :   53af8:	lea    0x88(%r15),%rdx
               :   53aff:	callq  3e580 <flow_dv_tag_resource_register.isra.0>
               :   53b04:	test   %eax,%eax
               :   53b06:	jne    54630 <flow_dv_translate+0x2260>
               :   53b0c:	mov    0x88(%r15),%rdx
               :   53b13:	movslq %r12d,%rax
               :   53b16:	mov    0x20(%rdx),%rdx
               :   53b1a:	add    $0x10,%rbx
               :   53b1e:	mov    %rdx,0x38(%r15,%rax,8)
               :   53b23:	inc    %r12d
               :   53b26:	movzbl -0x363(%rbp),%eax
               :   53b2d:	xor    %edx,%edx
               :   53b2f:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53b34:	movzbl -0x718(%rbp),%eax
               :   53b3b:	test   $0x1,%al
               :   53b3d:	je     54bc6 <flow_dv_translate+0x27f6>
               :   53b43:	test   $0x2,%al
               :   53b45:	je     548c0 <flow_dv_translate+0x24f0>
               :   53b4b:	vpxor  %xmm0,%xmm0,%xmm0
               :   53b4f:	lea    -0x6f0(%rbp),%rdx
               :   53b56:	lea    -0x6d0(%rbp),%rax
               :   53b5d:	vmovaps %xmm0,-0x6f0(%rbp)
               :   53b65:	vmovaps %xmm0,-0x6d0(%rbp)
               :   53b6d:	movl   $0x0,-0x6e0(%rbp)
               :   53b77:	movl   $0x0,-0x6c0(%rbp)
               :   53b81:	movb   $0xff,-0x6e8(%rbp)
               :   53b88:	movb   $0xff,-0x6c8(%rbp)
               :   53b8f:	movl   $0x8,-0x6b0(%rbp)
               :   53b99:	mov    %rdx,-0x6a8(%rbp)
               :   53ba0:	mov    %rax,-0x698(%rbp)
               :   53ba7:	lea    0x142e12(%rip),%rsi        # 1969c0 <modify_ipv4>
               :   53bae:	mov    -0x728(%rbp),%r9
               :   53bb5:	xor    %edx,%edx
               :   53bb7:	lea    -0x390(%rbp),%rcx
               :   53bbe:	lea    -0x6b0(%rbp),%rdi
               :   53bc5:	mov    $0x2,%r8d
               :   53bcb:	callq  42b80 <flow_dv_convert_modify_action>
               :   53bd0:	test   %eax,%eax
               :   53bd2:	jne    54630 <flow_dv_translate+0x2260>
               :   53bd8:	movzbl -0x363(%rbp),%eax
               :   53bdf:	or     $0x80000,%r14
               :   53be6:	add    $0x10,%rbx
               :   53bea:	xor    %edx,%edx
               :   53bec:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53bf1:	mov    -0x760(%rbp),%rax
               :   53bf8:	mov    0x8(%rax),%rax
               :   53bfc:	mov    0x80(%rax),%rax
               :   53c03:	testb  $0x1,0x164(%rax)
               :   53c0a:	je     56284 <flow_dv_translate+0x3eb4>
               :   53c10:	mov    0x8(%rbx),%rax
               :   53c14:	or     $0x20,%r14
               :   53c18:	mov    %rax,-0x7a8(%rbp)
               :   53c1f:	add    $0x10,%rbx
               :   53c23:	movzbl -0x363(%rbp),%eax
               :   53c2a:	xor    %edx,%edx
               :   53c2c:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53c31:	mov    0x8(%rbx),%rax
               :   53c35:	mov    %r14,%rcx
               :   53c38:	and    $0x400040,%ecx
               :   53c3e:	mov    %r12d,-0x770(%rbp)
               :   53c45:	mov    %rax,-0x7b0(%rbp)
               :   53c4c:	inc    %r12d
               :   53c4f:	movzbl -0x363(%rbp),%eax
               :   53c56:	add    $0x10,%rbx
               :   53c5a:	bts    $0x24,%r14
               :   53c5f:	xor    %edx,%edx
               :   53c61:	cmp    $0x400040,%rcx
               :   53c68:	jne    528e4 <flow_dv_translate+0x514>
               :   53c6e:	orq    $0x400000,-0x3c8(%rbp)
               :   53c79:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53c7e:	mov    0x8(%rbx),%rax
               :   53c82:	mov    %rax,-0x7a0(%rbp)
               :   53c89:	movabs $0x400000000,%rax
               :   53c93:	mov    %r12d,-0x780(%rbp)
               :   53c9a:	or     %rax,%r14
               :   53c9d:	add    $0x10,%rbx
               :   53ca1:	movzbl -0x363(%rbp),%eax
               :   53ca8:	inc    %r12d
               :   53cab:	xor    %edx,%edx
               :   53cad:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53cb2:	mov    0x8(%rbx),%rdx
               :   53cb6:	mov    -0x728(%rbp),%r8
               :   53cbd:	mov    -0x740(%rbp),%rcx
               :   53cc4:	mov    -0x738(%rbp),%rdi
               :   53ccb:	lea    -0x390(%rbp),%rsi
               :   53cd2:	callq  49ec0 <flow_dv_convert_action_modify_field.isra.0>
               :   53cd7:	test   %eax,%eax
               :   53cd9:	jne    54630 <flow_dv_translate+0x2260>
               :   53cdf:	movabs $0x8000000000,%rax
               :   53ce9:	or     %rax,%r14
               :   53cec:	add    $0x10,%rbx
               :   53cf0:	movzbl -0x363(%rbp),%eax
               :   53cf7:	xor    %edx,%edx
               :   53cf9:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53cfe:	mov    0x8(%rbx),%rax
               :   53d02:	mov    (%rax),%edx
               :   53d04:	mov    0x4(%rax),%eax
               :   53d07:	bswap  %eax
               :   53d09:	mov    %eax,-0x6f0(%rbp)
               :   53d0f:	bswap  %edx
               :   53d11:	and    %edx,%eax
               :   53d13:	vpxor  %xmm0,%xmm0,%xmm0
               :   53d17:	mov    %eax,-0x6d0(%rbp)
               :   53d1d:	lea    -0x6d0(%rbp),%rax
               :   53d24:	vmovaps %xmm0,-0x6b0(%rbp)
               :   53d2c:	mov    %rax,-0x6a8(%rbp)
               :   53d33:	lea    -0x6f0(%rbp),%rax
               :   53d3a:	mov    %rax,-0x698(%rbp)
               :   53d41:	mov    -0x740(%rbp),%rax
               :   53d48:	movq   $0x0,-0x6a0(%rbp)
               :   53d53:	movzbl 0x8(%rax),%eax
               :   53d57:	movq   $0x0,-0x540(%rbp)
               :   53d62:	vmovaps %xmm0,-0x550(%rbp)
               :   53d6a:	mov    $0x4,%esi
               :   53d6f:	test   $0x4,%al
               :   53d71:	jne    53d7e <flow_dv_translate+0x19ae>
               :   53d73:	xor    %esi,%esi
               :   53d75:	test   $0x2,%al
               :   53d77:	setne  %sil
               :   53d7b:	add    $0x2,%esi
               :   53d7e:	mov    -0x728(%rbp),%rcx
               :   53d85:	mov    -0x738(%rbp),%rdi
               :   53d8c:	xor    %edx,%edx
               :   53d8e:	callq  28400 <mlx5_flow_get_reg_id>
               :   53d93:	test   %eax,%eax
               :   53d95:	js     54d68 <flow_dv_translate+0x2998>
               :   53d9b:	cmp    $0x3,%eax
               :   53d9e:	jne    53deb <flow_dv_translate+0x1a1b>
               :   53da0:	mov    -0x738(%rbp),%rdi
               :   53da7:	xor    %esi,%esi
               :   53da9:	mov    0x30(%rdi),%rdx
               :   53dad:	mov    -0x6d0(%rbp),%ecx
               :   53db3:	mov    0x60(%rdx),%rdx
               :   53db7:	mov    0x8(%rdx),%rdx
               :   53dbb:	mov    0x3b8(%rdx),%edx
               :   53dc1:	tzcnt  %edx,%esi
               :   53dc5:	bswap  %ecx
               :   53dc7:	shlx   %esi,%ecx,%ecx
               :   53dcc:	bswap  %ecx
               :   53dce:	mov    %ecx,-0x6d0(%rbp)
               :   53dd4:	mov    -0x6f0(%rbp),%ecx
               :   53dda:	bswap  %ecx
               :   53ddc:	and    %ecx,%edx
               :   53dde:	shlx   %esi,%edx,%edx
               :   53de3:	bswap  %edx
               :   53de5:	mov    %edx,-0x6f0(%rbp)
               :   53deb:	lea    0x1170ce(%rip),%rdx        # 16aec0 <reg_to_field>
               :   53df2:	cltq   
               :   53df4:	mov    (%rdx,%rax,4),%eax
               :   53df7:	lea    -0x550(%rbp),%r10
               :   53dfe:	mov    -0x728(%rbp),%r9
               :   53e05:	xor    %edx,%edx
               :   53e07:	lea    -0x390(%rbp),%rcx
               :   53e0e:	lea    -0x6b0(%rbp),%rdi
               :   53e15:	mov    $0x1,%r8d
               :   53e1b:	mov    %r10,%rsi
               :   53e1e:	movq   $0x4,-0x550(%rbp)
               :   53e29:	mov    %eax,-0x548(%rbp)
               :   53e2f:	callq  42b80 <flow_dv_convert_modify_action>
               :   53e34:	test   %eax,%eax
               :   53e36:	jne    54630 <flow_dv_translate+0x2260>
               :   53e3c:	movzbl -0x363(%rbp),%eax
               :   53e43:	or     $0x40000000,%r14
               :   53e4a:	add    $0x10,%rbx
               :   53e4e:	xor    %edx,%edx
               :   53e50:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53e55:	mov    0x8(%rbx),%rdx
               :   53e59:	mov    -0x728(%rbp),%rcx
               :   53e60:	mov    -0x738(%rbp),%rdi
               :   53e67:	lea    -0x390(%rbp),%rsi
               :   53e6e:	callq  42f30 <flow_dv_convert_action_set_tag>
               :   53e73:	test   %eax,%eax
               :   53e75:	jne    54630 <flow_dv_translate+0x2260>
               :   53e7b:	movzbl -0x363(%rbp),%eax
               :   53e82:	or     $0x10000000,%r14
               :   53e89:	add    $0x10,%rbx
               :   53e8d:	xor    %edx,%edx
               :   53e8f:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53e94:	vpxor  %xmm0,%xmm0,%xmm0
               :   53e98:	vmovaps %xmm0,-0x6b0(%rbp)
               :   53ea0:	movq   $0x0,-0x6a0(%rbp)
               :   53eab:	movl   $0x8,-0x6b0(%rbp)
               :   53eb5:	movl   $0x0,-0x6e0(%rbp)
               :   53ebf:	movl   $0x0,-0x6c0(%rbp)
               :   53ec9:	mov    0x8(%rbx),%rcx
               :   53ecd:	vmovaps %xmm0,-0x6f0(%rbp)
               :   53ed5:	vmovaps %xmm0,-0x6d0(%rbp)
               :   53edd:	movzbl (%rcx),%ecx
               :   53ee0:	lea    -0x6f0(%rbp),%rdx
               :   53ee7:	mov    -0x728(%rbp),%r9
               :   53eee:	lea    0x142acb(%rip),%rsi        # 1969c0 <modify_ipv4>
               :   53ef5:	mov    %cl,-0x6ef(%rbp)
               :   53efb:	mov    %rdx,-0x6a8(%rbp)
               :   53f02:	lea    -0x6d0(%rbp),%rax
               :   53f09:	xor    %edx,%edx
               :   53f0b:	lea    -0x390(%rbp),%rcx
               :   53f12:	lea    -0x6b0(%rbp),%rdi
               :   53f19:	mov    $0x1,%r8d
               :   53f1f:	movb   $0x3f,-0x6cf(%rbp)
               :   53f26:	mov    %rax,-0x698(%rbp)
               :   53f2d:	callq  42b80 <flow_dv_convert_modify_action>
               :   53f32:	test   %eax,%eax
               :   53f34:	jne    54630 <flow_dv_translate+0x2260>
               :   53f3a:	movzbl -0x363(%rbp),%eax
               :   53f41:	bts    $0x20,%r14
               :   53f46:	add    $0x10,%rbx
               :   53f4a:	xor    %edx,%edx
               :   53f4c:	jmpq   528e4 <flow_dv_translate+0x514>
               :   53f51:	vpxor  %xmm0,%xmm0,%xmm0
               :   53f55:	vmovaps %xmm0,-0x6b0(%rbp)
               :   53f5d:	movq   $0x0,-0x5a0(%rbp)
               :   53f68:	movl   $0x9,-0x6b0(%rbp)
               :   53f72:	movl   $0x0,-0x598(%rbp)
               :   53f7c:	movq   $0x0,-0x530(%rbp)
               :   53f87:	movl   $0x0,-0x528(%rbp)
               :   53f91:	mov    0x8(%rbx),%rcx
               :   53f95:	vmovaps %xmm0,-0x6a0(%rbp)
               :   53f9d:	lea    -0x5c0(%rbp),%rdx
               :   53fa4:	vmovaps %xmm0,-0x5c0(%rbp)
               :   53fac:	vmovaps %xmm0,-0x5b0(%rbp)
               :   53fb4:	lea    -0x550(%rbp),%r10
               :   53fbb:	vmovaps %xmm0,-0x550(%rbp)
               :   53fc3:	vmovaps %xmm0,-0x540(%rbp)
               :   53fcb:	cmp    $0x1e,%eax
               :   53fce:	je     54a6f <flow_dv_translate+0x269f>
               :   53fd4:	vmovdqu64 (%rcx),%xmm5
               :   53fda:	vpcmpeqd %xmm0,%xmm0,%xmm0
               :   53fde:	vmovups %xmm5,-0x5a8(%rbp)
               :   53fe6:	vmovups %xmm0,-0x538(%rbp)
               :   53fee:	mov    -0x728(%rbp),%r9
               :   53ff5:	lea    0x142924(%rip),%rsi        # 196920 <modify_ipv6>
               :   53ffc:	mov    %rdx,-0x6a8(%rbp)
               :   54003:	lea    -0x390(%rbp),%rcx
               :   5400a:	xor    %edx,%edx
               :   5400c:	lea    -0x6b0(%rbp),%rdi
               :   54013:	mov    $0x1,%r8d
               :   54019:	mov    %r10,-0x698(%rbp)
               :   54020:	callq  42b80 <flow_dv_convert_modify_action>
               :   54025:	test   %eax,%eax
               :   54027:	jne    54630 <flow_dv_translate+0x2260>
               :   5402d:	cmpl   $0x1e,(%rbx)
               :   54030:	mov    $0x2000,%eax
               :   54035:	mov    $0x4000,%edx
               :   5403a:	jmpq   528d0 <flow_dv_translate+0x500>
               :   5403f:	movl   $0x0,-0x6e0(%rbp)
               :   54049:	movl   $0x0,-0x6c0(%rbp)
               :   54053:	vpxor  %xmm0,%xmm0,%xmm0
               :   54057:	mov    0x8(%rbx),%rdx
               :   5405b:	vmovaps %xmm0,-0x6f0(%rbp)
               :   54063:	vmovaps %xmm0,-0x6d0(%rbp)
               :   5406b:	cmp    $0x1c,%eax
               :   5406e:	vmovaps %xmm0,-0x6b0(%rbp)
               :   54076:	mov    (%rdx),%eax
               :   54078:	movl   $0x8,-0x6b0(%rbp)
               :   54082:	vmovaps %xmm0,-0x6a0(%rbp)
               :   5408a:	lea    -0x6f0(%rbp),%rsi
               :   54091:	lea    -0x6d0(%rbp),%rcx
               :   54098:	je     54a8e <flow_dv_translate+0x26be>
               :   5409e:	mov    %eax,-0x6e0(%rbp)
               :   540a4:	movl   $0xffffffff,-0x6c0(%rbp)
               :   540ae:	mov    %rsi,-0x6a8(%rbp)
               :   540b5:	mov    -0x728(%rbp),%r9
               :   540bc:	lea    0x1428fd(%rip),%rsi        # 1969c0 <modify_ipv4>
               :   540c3:	mov    %rcx,-0x698(%rbp)
               :   540ca:	xor    %edx,%edx
               :   540cc:	lea    -0x390(%rbp),%rcx
               :   540d3:	lea    -0x6b0(%rbp),%rdi
               :   540da:	mov    $0x1,%r8d
               :   540e0:	callq  42b80 <flow_dv_convert_modify_action>
               :   540e5:	test   %eax,%eax
               :   540e7:	jne    54630 <flow_dv_translate+0x2260>
               :   540ed:	cmpl   $0x1c,(%rbx)
               :   540f0:	mov    $0x800,%eax
               :   540f5:	mov    $0x1000,%edx
               :   540fa:	jmpq   528d0 <flow_dv_translate+0x500>
               :   540ff:	movzbl -0x718(%rbp),%eax
               :   54106:	mov    0x8(%rbx),%r10
               :   5410a:	test   $0x1,%al
               :   5410c:	je     54b1b <flow_dv_translate+0x274b>
               :   54112:	test   $0x10,%al
               :   54114:	je     54950 <flow_dv_translate+0x2580>
               :   5411a:	movq   $0x0,-0x700(%rbp)
               :   54125:	movq   $0x0,-0x6f8(%rbp)
               :   54130:	cmpl   $0x20,(%rbx)
               :   54133:	lea    -0x700(%rbp),%rdx
               :   5413a:	movzwl (%r10),%ecx
               :   5413e:	lea    -0x6f8(%rbp),%rax
               :   54145:	je     55903 <flow_dv_translate+0x3533>
               :   5414b:	mov    %cx,-0x6fe(%rbp)
               :   54152:	mov    $0xffffffff,%ecx
               :   54157:	mov    %cx,-0x6f6(%rbp)
               :   5415e:	movl   $0xb,-0x6b0(%rbp)
               :   54168:	mov    %rdx,-0x6a8(%rbp)
               :   5416f:	mov    %rax,-0x698(%rbp)
               :   54176:	lea    0x142763(%rip),%rsi        # 1968e0 <modify_udp>
               :   5417d:	mov    -0x728(%rbp),%r9
               :   54184:	xor    %edx,%edx
               :   54186:	lea    -0x390(%rbp),%rcx
               :   5418d:	lea    -0x6b0(%rbp),%rdi
               :   54194:	mov    $0x1,%r8d
               :   5419a:	callq  42b80 <flow_dv_convert_modify_action>
               :   5419f:	test   %eax,%eax
               :   541a1:	jne    54630 <flow_dv_translate+0x2260>
               :   541a7:	cmpl   $0x20,(%rbx)
               :   541aa:	mov    $0x8000,%eax
               :   541af:	mov    $0x10000,%edx
               :   541b4:	jmpq   528d0 <flow_dv_translate+0x500>
               :   541b9:	mov    0x8(%rbx),%rax
               :   541bd:	movzbl -0x708(%rbp),%edx
               :   541c4:	mov    (%rax),%r10d
               :   541c7:	movzbl 0x21(%r15),%eax
               :   541cc:	and    $0xffffffc7,%edx
               :   541cf:	shl    $0x2,%eax
               :   541d2:	and    $0x10,%eax
               :   541d5:	mov    -0x728(%rbp),%r9
               :   541dc:	mov    -0x790(%rbp),%r8
               :   541e3:	mov    -0x788(%rbp),%rcx
               :   541ea:	mov    -0x758(%rbp),%rsi
               :   541f1:	mov    -0x738(%rbp),%rdi
               :   541f8:	or     %edx,%eax
               :   541fa:	mov    %r10d,%edx
               :   541fd:	mov    %al,-0x708(%rbp)
               :   54203:	mov    %r10d,-0x7c0(%rbp)
               :   5420a:	callq  d983 <mlx5_flow_group_to_table>
               :   5420f:	test   %eax,%eax
               :   54211:	jne    551a0 <flow_dv_translate+0x2dd0>
               :   54217:	mov    -0x740(%rbp),%rax
               :   5421e:	mov    -0x7c0(%rbp),%r10d
               :   54225:	movzbl 0x8(%rax),%edx
               :   54229:	pushq  -0x728(%rbp)
               :   5422f:	mov    %edx,%ecx
               :   54231:	mov    -0x758(%rbp),%r9
               :   54238:	pushq  $0x0
               :   5423a:	movzbl 0x20(%r15),%r8d
               :   5423f:	mov    -0x714(%rbp),%esi
               :   54245:	pushq  $0x0
               :   54247:	mov    -0x738(%rbp),%rdi
               :   5424e:	shr    $0x2,%cl
               :   54251:	push   %r10
               :   54253:	shr    %dl
               :   54255:	and    $0x1,%ecx
               :   54258:	and    $0x1,%edx
               :   5425b:	callq  4e250 <flow_dv_tbl_resource_get>
               :   54260:	add    $0x20,%rsp
               :   54264:	test   %rax,%rax
               :   54267:	je     562bb <flow_dv_translate+0x3eeb>
               :   5426d:	mov    0x18(%rax),%esi
               :   54270:	mov    0x278(%r15),%rcx
               :   54277:	lea    -0x20(%rax),%rdx
               :   5427b:	add    $0x10,%rax
               :   5427f:	mov    %esi,0x1c(%rcx)
               :   54282:	mov    %rax,0x98(%r15)
               :   54289:	movslq %r12d,%rax
               :   5428c:	or     $0x20000,%r14
               :   54293:	mov    0x30(%rdx),%rdx
               :   54297:	mov    %rdx,0x38(%r15,%rax,8)
               :   5429c:	movzbl 0x1b(%rcx),%eax
               :   542a0:	and    $0xf,%eax
               :   542a3:	or     $0x20,%eax
               :   542a6:	mov    %al,0x1b(%rcx)
               :   542a9:	orq    $0x20000,-0x3c8(%rbp)
               :   542b4:	jmpq   53405 <flow_dv_translate+0x1035>
               :   542b9:	cmpb   $0x0,-0x363(%rbp)
               :   542c0:	jne    54acb <flow_dv_translate+0x26fb>
               :   542c6:	movabs $0x400000000,%rax
               :   542d0:	test   %rax,%r14
               :   542d3:	je     54471 <flow_dv_translate+0x20a1>
               :   542d9:	cmpq   $0x0,-0x7a0(%rbp)
               :   542e1:	setne  %al
               :   542e4:	cmpq   $0x0,-0x7a8(%rbp)
               :   542ec:	je     542f2 <flow_dv_translate+0x1f22>
               :   542ee:	test   %al,%al
               :   542f0:	jne    54310 <flow_dv_translate+0x1f40>
               :   542f2:	mov    -0x760(%rbp),%rsi
               :   542f9:	mov    0x8(%rsi),%rdx
               :   542fd:	testb  $0x2,0x14(%rdx)
               :   54301:	je     54310 <flow_dv_translate+0x1f40>
               :   54303:	mov    0x28(%r15),%r10d
               :   54307:	test   %r10d,%r10d
               :   5430a:	jne    54393 <flow_dv_translate+0x1fc3>
               :   54310:	mov    -0x750(%rbp),%rax
               :   54317:	mov    0xc(%rax),%eax
               :   5431a:	test   %eax,%eax
               :   5431c:	je     55b5b <flow_dv_translate+0x378b>
               :   54322:	mov    -0x738(%rbp),%rdi
               :   54329:	dec    %eax
               :   5432b:	mov    0x30(%rdi),%rdx
               :   5432f:	mov    -0x780(%rbp),%esi
               :   54335:	mov    0x60(%rdx),%rdx
               :   54339:	mov    0x8(%rdx),%rcx
               :   5433d:	mov    %eax,%edx
               :   5433f:	mov    0x480(%rcx),%rcx
               :   54346:	shr    $0x9,%edx
               :   54349:	and    $0x3fffff,%edx
               :   5434f:	mov    (%rcx,%rdx,8),%rcx
               :   54353:	and    $0x1ff,%eax
               :   54358:	movzbl 0x43(%rcx),%edx
               :   5435c:	and    $0x40,%edx
               :   5435f:	cmp    $0x1,%dl
               :   54362:	sbb    %rdx,%rdx
               :   54365:	and    $0xffffffffffffffe8,%rdx
               :   54369:	add    $0x40,%rdx
               :   5436d:	imul   %rdx,%rax
               :   54371:	add    $0x10,%rbx
               :   54375:	mov    $0x1,%edx
               :   5437a:	mov    0x80(%rcx,%rax,1),%rax
               :   54382:	mov    %rax,0x38(%r15,%rsi,8)
               :   54387:	movzbl -0x363(%rbp),%eax
               :   5438e:	jmpq   528e4 <flow_dv_translate+0x514>
               :   54393:	mov    -0x750(%rbp),%rdi
               :   5439a:	mov    0x14(%rdi),%esi
               :   5439d:	test   %esi,%esi
               :   5439f:	jne    54453 <flow_dv_translate+0x2083>
               :   543a5:	test   %al,%al
               :   543a7:	je     54453 <flow_dv_translate+0x2083>
               :   543ad:	mov    -0x728(%rbp),%rsi
               :   543b4:	mov    -0x738(%rbp),%rdi
               :   543bb:	callq  3ece0 <flow_dv_aso_age_alloc>
               :   543c0:	mov    %eax,%esi
               :   543c2:	mov    -0x750(%rbp),%rax
               :   543c9:	mov    %esi,0x14(%rax)
               :   543cc:	test   %esi,%esi
               :   543ce:	je     54630 <flow_dv_translate+0x2260>
               :   543d4:	mov    -0x7a0(%rbp),%rax
               :   543db:	mov    (%rax),%edi
               :   543dd:	mov    0x8(%rax),%rdx
               :   543e1:	and    $0xffffff,%edi
               :   543e7:	mov    %edi,-0x7c0(%rbp)
               :   543ed:	test   %rdx,%rdx
               :   543f0:	je     562ef <flow_dv_translate+0x3f1f>
               :   543f6:	mov    -0x738(%rbp),%rdi
               :   543fd:	mov    %rdx,-0x7c8(%rbp)
               :   54404:	callq  2b5c0 <flow_aso_age_get_by_idx>
               :   54409:	mov    -0x7c8(%rbp),%rdx
               :   54410:	mov    %rdx,0x30(%rax)
               :   54414:	mov    0x24(%rax),%edx
               :   54417:	and    $0xff000000,%edx
               :   5441d:	or     -0x7c0(%rbp),%edx
               :   54423:	mov    %edx,0x24(%rax)
               :   54426:	mov    -0x738(%rbp),%rsi
               :   5442d:	mov    0x30(%rsi),%rdx
               :   54431:	movzwl 0xd70(%rdx),%edx
               :   54438:	mov    %dx,0x22(%rax)
               :   5443c:	movl   $0x0,0x28(%rax)
               :   54443:	movw   $0x1,0x20(%rax)
               :   54449:	mov    -0x750(%rbp),%rax
               :   54450:	mov    0x14(%rax),%esi
               :   54453:	mov    -0x738(%rbp),%rdi
               :   5445a:	callq  2b5c0 <flow_aso_age_get_by_idx>
               :   5445f:	mov    %rax,%r8
               :   54462:	mov    0x10(%r8),%rdx
               :   54466:	mov    -0x780(%rbp),%eax
               :   5446c:	mov    %rdx,0x38(%r15,%rax,8)
               :   54471:	test   $0x20,%r14b
               :   54475:	jne    54d98 <flow_dv_translate+0x29c8>
               :   5447b:	movzbl -0x363(%rbp),%eax
               :   54482:	add    $0x10,%rbx
               :   54486:	mov    $0x1,%edx
               :   5448b:	jmpq   528e4 <flow_dv_translate+0x514>
               :   54490:	cmp    $0x80000000,%eax
               :   54495:	je     528d7 <flow_dv_translate+0x507>
               :   5449b:	add    $0x7ffffffe,%eax
               :   544a0:	cmp    $0x6,%eax
               :   544a3:	ja     54747 <flow_dv_translate+0x2377>
               :   544a9:	lea    0x1165cc(%rip),%rdx        # 16aa7c <srtcm.62771+0x4ccc>
               :   544b0:	movslq (%rdx,%rax,4),%rax
               :   544b4:	add    %rdx,%rax
               :   544b7:	notrack jmpq *%rax
               :   544ba:	mov    0x8(%rbx),%rdx
               :   544be:	mov    -0x738(%rbp),%rdi
               :   544c5:	mov    %edx,%esi
               :   544c7:	mov    %rdx,-0x780(%rbp)
               :   544ce:	callq  2b5c0 <flow_aso_age_get_by_idx>
               :   544d3:	mov    -0x750(%rbp),%rdi
               :   544da:	mov    -0x780(%rbp),%rdx
               :   544e1:	mov    0x14(%rdi),%r10d
               :   544e5:	test   %r10d,%r10d
               :   544e8:	jne    53c89 <flow_dv_translate+0x18b9>
               :   544ee:	mov    %edx,0x14(%rdi)
               :   544f1:	lock incl 0x18(%rax)
               :   544f5:	jmpq   53c89 <flow_dv_translate+0x18b9>
               :   544fa:	movzbl -0x363(%rbp),%eax
               :   54501:	bts    $0x25,%r14
               :   54506:	add    $0x10,%rbx
               :   5450a:	xor    %edx,%edx
               :   5450c:	jmpq   528e4 <flow_dv_translate+0x514>
               :   54511:	mov    0x278(%r15),%rdx
               :   54518:	bts    $0x23,%r14
               :   5451d:	movzbl 0x1b(%rdx),%eax
               :   54521:	add    $0x10,%rbx
               :   54525:	and    $0xf,%eax
               :   54528:	or     $0x50,%eax
               :   5452b:	mov    %al,0x1b(%rdx)
               :   5452e:	xor    %edx,%edx
               :   54530:	movzbl -0x363(%rbp),%eax
               :   54537:	jmpq   528e4 <flow_dv_translate+0x514>
               :   5453c:	movl   $0xffffffff,-0x6f0(%rbp)
               :   54546:	movq   $0x4,-0x550(%rbp)
               :   54551:	mov    0x8(%rbx),%rax
               :   54555:	lea    -0x6f0(%rbp),%rdx
               :   5455c:	mov    0x4(%rax),%esi
               :   5455f:	mov    %rdx,-0x698(%rbp)
               :   54566:	movq   $0x0,-0x540(%rbp)
               :   54571:	lea    0x116948(%rip),%rdx        # 16aec0 <reg_to_field>
               :   54578:	mov    %rsi,%rcx
               :   5457b:	mov    (%rdx,%rsi,4),%esi
               :   5457e:	vpxor  %xmm0,%xmm0,%xmm0
               :   54582:	mov    %esi,-0x548(%rbp)
               :   54588:	mov    (%rax),%esi
               :   5458a:	movq   $0x0,-0x6a0(%rbp)
               :   54595:	mov    (%rdx,%rsi,4),%edx
               :   54598:	movl   $0x0,-0x544(%rbp)
               :   545a2:	movq   $0x0,-0x6d0(%rbp)
               :   545ad:	mov    %edx,-0x6c8(%rbp)
               :   545b3:	vmovaps %xmm0,-0x6b0(%rbp)
               :   545bb:	cmp    $0x3,%esi
               :   545be:	je     54ea0 <flow_dv_translate+0x2ad0>
               :   545c4:	cmp    $0x3,%ecx
               :   545c7:	jne    545f4 <flow_dv_translate+0x2224>
               :   545c9:	mov    -0x738(%rbp),%rax
               :   545d0:	mov    0x30(%rax),%rax
               :   545d4:	mov    0x60(%rax),%rax
               :   545d8:	mov    0x8(%rax),%rax
               :   545dc:	mov    0x3b8(%rax),%eax
               :   545e2:	movl   $0x0,-0x6cc(%rbp)
               :   545ec:	bswap  %eax
               :   545ee:	mov    %eax,-0x6f0(%rbp)
               :   545f4:	lea    -0x550(%rbp),%r10
               :   545fb:	mov    -0x728(%rbp),%r9
               :   54602:	lea    -0x390(%rbp),%rcx
               :   54609:	lea    -0x6d0(%rbp),%rdx
               :   54610:	lea    -0x6b0(%rbp),%rdi
               :   54617:	mov    $0x3,%r8d
               :   5461d:	mov    %r10,%rsi
               :   54620:	callq  42b80 <flow_dv_convert_modify_action>
               :   54625:	test   %eax,%eax
               :   54627:	je     53e7b <flow_dv_translate+0x1aab>
               :   5462d:	nopl   (%rax)
               :   54630:	data16 lea 0x141898(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   54638:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   54640:	mov    (%rax),%r12d
               :   54643:	neg    %r12d
               :   54646:	mov    -0x38(%rbp),%rax
               :   5464a:	xor    %fs:0x28,%rax
               :   54653:	jne    56779 <flow_dv_translate+0x43a9>
               :   54659:	lea    -0x30(%rbp),%rsp
               :   5465d:	pop    %rbx
               :   5465e:	pop    %r10
               :   54660:	mov    %r12d,%eax
               :   54663:	pop    %r12
               :   54665:	pop    %r13
               :   54667:	pop    %r14
               :   54669:	pop    %r15
               :   5466b:	pop    %rbp
               :   5466c:	lea    -0x8(%r10),%rsp
               :   54670:	retq   
               :   54671:	mov    0x8(%rbx),%rsi
               :   54675:	jmpq   53acb <flow_dv_translate+0x16fb>
               :   5467a:	mov    -0x738(%rbp),%rsi
               :   54681:	mov    0x8(%rbx),%rcx
               :   54685:	mov    0x30(%rsi),%rdx
               :   54689:	lea    -0x1(%rcx),%eax
               :   5468c:	mov    0x60(%rdx),%rdx
               :   54690:	mov    -0x740(%rbp),%rdi
               :   54697:	mov    0x8(%rdx),%rsi
               :   5469b:	mov    %eax,%edx
               :   5469d:	shr    $0x9,%edx
               :   546a0:	mov    0x480(%rsi),%rsi
               :   546a7:	and    $0x3fffff,%edx
               :   546ad:	mov    (%rsi,%rdx,8),%rsi
               :   546b1:	and    $0x1ff,%eax
               :   546b6:	movzbl 0x43(%rsi),%edx
               :   546ba:	and    $0x40,%edx
               :   546bd:	cmp    $0x1,%dl
               :   546c0:	sbb    %rdx,%rdx
               :   546c3:	and    $0xffffffffffffffe8,%rdx
               :   546c7:	add    $0x40,%rdx
               :   546cb:	imul   %rdx,%rax
               :   546cf:	add    $0x10,%rbx
               :   546d3:	cmpl   $0xfffc,(%rdi)
               :   546d9:	lea    0x60(%rsi,%rax,1),%rax
               :   546de:	je     54aa3 <flow_dv_translate+0x26d3>
               :   546e4:	mov    -0x750(%rbp),%rdi
               :   546eb:	mov    0xc(%rdi),%r9d
               :   546ef:	test   %r9d,%r9d
               :   546f2:	je     54c0e <flow_dv_translate+0x283e>
               :   546f8:	movzbl -0x363(%rbp),%eax
               :   546ff:	or     $0x20,%r14
               :   54703:	xor    %edx,%edx
               :   54705:	jmpq   528e4 <flow_dv_translate+0x514>
               :   5470a:	mov    0x8(%rbx),%rdx
               :   5470e:	movslq %r12d,%rax
               :   54711:	mov    %rdx,0x38(%r15,%rax,8)
               :   54716:	or     $0x20000,%r14
               :   5471d:	movzbl -0x363(%rbp),%eax
               :   54724:	add    $0x10,%rbx
               :   54728:	inc    %r12d
               :   5472b:	xor    %edx,%edx
               :   5472d:	jmpq   528e4 <flow_dv_translate+0x514>
               :   54732:	nopw   0x0(%rax,%rax,1)
               :   54738:	mov    %r12d,-0x730(%rbp)
               :   5473f:	inc    %r12d
               :   54742:	jmpq   528f5 <flow_dv_translate+0x525>
               :   54747:	mov    0x8(%rbx),%rsi
               :   5474b:	mov    -0x728(%rbp),%rdx
               :   54752:	lea    -0x390(%rbp),%rdi
               :   54759:	callq  3cd30 <flow_dv_convert_action_set_reg.isra.0>
               :   5475e:	test   %eax,%eax
               :   54760:	je     53e7b <flow_dv_translate+0x1aab>
               :   54766:	jmpq   54630 <flow_dv_translate+0x2260>
               :   5476b:	nopl   0x0(%rax,%rax,1)
               :   54770:	mov    -0x740(%rbp),%rax
               :   54777:	movq   $0x0,-0x758(%rbp)
               :   54782:	mov    (%rax),%edx
               :   54784:	jmpq   5262c <flow_dv_translate+0x25c>
               :   54789:	nopl   0x0(%rax)
               :   54790:	mov    (%rbx),%eax
               :   54792:	test   %eax,%eax
               :   54794:	je     5585d <flow_dv_translate+0x348d>
               :   5479a:	mov    %rbx,%rdx
               :   5479d:	jmp    547af <flow_dv_translate+0x23df>
               :   5479f:	nop
               :   547a0:	mov    0x10(%rdx),%eax
               :   547a3:	add    $0x10,%rdx
               :   547a7:	test   %eax,%eax
               :   547a9:	je     5585d <flow_dv_translate+0x348d>
               :   547af:	cmp    $0x7,%eax
               :   547b2:	jne    547a0 <flow_dv_translate+0x23d0>
               :   547b4:	xor    %r14d,%r14d
               :   547b7:	jmpq   526b0 <flow_dv_translate+0x2e0>
               :   547bc:	mov    -0x728(%rbp),%rdi
               :   547c3:	lea    0x111f7e(%rip),%r8        # 166748 <srtcm.62771+0x998>
               :   547ca:	xor    %ecx,%ecx
               :   547cc:	mov    $0x1,%edx
               :   547d1:	mov    $0xc,%esi
               :   547d6:	callq  a8f0 <rte_flow_error_set@plt>
               :   547db:	mov    %eax,%r12d
               :   547de:	jmpq   54646 <flow_dv_translate+0x2276>
               :   547e3:	nopl   0x0(%rax,%rax,1)
               :   547e8:	mov    -0x738(%rbp),%rax
               :   547ef:	mov    -0x728(%rbp),%r8
               :   547f6:	mov    0x30(%rax),%rdi
               :   547fa:	lea    0x278(%r15),%rcx
               :   54801:	lea    0x88(%r15),%rdx
               :   54808:	mov    $0xffffff,%esi
               :   5480d:	callq  3e580 <flow_dv_tag_resource_register.isra.0>
               :   54812:	test   %eax,%eax
               :   54814:	jne    54630 <flow_dv_translate+0x2260>
               :   5481a:	or     $0x8,%r14
               :   5481e:	jmpq   53b0c <flow_dv_translate+0x173c>
               :   54823:	nopl   0x0(%rax,%rax,1)
               :   54828:	movq   $0x0,-0x5a0(%rbp)
               :   54833:	movl   $0x0,-0x598(%rbp)
               :   5483d:	movq   $0x0,-0x530(%rbp)
               :   54848:	movl   $0x0,-0x528(%rbp)
               :   54852:	vpxor  %xmm0,%xmm0,%xmm0
               :   54856:	vmovaps %xmm0,-0x5c0(%rbp)
               :   5485e:	vmovaps %xmm0,-0x550(%rbp)
               :   54866:	vmovaps %xmm0,-0x5b0(%rbp)
               :   5486e:	vmovaps %xmm0,-0x540(%rbp)
               :   54876:	movzbl (%r11),%edx
               :   5487a:	lea    -0x5c0(%rbp),%rax
               :   54881:	lea    -0x550(%rbp),%r10
               :   54888:	mov    %dl,-0x5b9(%rbp)
               :   5488e:	movb   $0xff,-0x549(%rbp)
               :   54895:	movl   $0x9,-0x6b0(%rbp)
               :   5489f:	mov    %rax,-0x6a8(%rbp)
               :   548a6:	mov    %r10,-0x698(%rbp)
               :   548ad:	lea    0x14206c(%rip),%rsi        # 196920 <modify_ipv6>
               :   548b4:	jmpq   538be <flow_dv_translate+0x14ee>
               :   548b9:	nopl   0x0(%rax)
               :   548c0:	vpxor  %xmm0,%xmm0,%xmm0
               :   548c4:	lea    -0x5c0(%rbp),%rax
               :   548cb:	lea    -0x550(%rbp),%r10
               :   548d2:	vmovaps %xmm0,-0x5c0(%rbp)
               :   548da:	vmovaps %xmm0,-0x550(%rbp)
               :   548e2:	movq   $0x0,-0x5a0(%rbp)
               :   548ed:	movl   $0x0,-0x598(%rbp)
               :   548f7:	movq   $0x0,-0x530(%rbp)
               :   54902:	movl   $0x0,-0x528(%rbp)
               :   5490c:	movb   $0xff,-0x5b9(%rbp)
               :   54913:	movb   $0xff,-0x549(%rbp)
               :   5491a:	movl   $0x9,-0x6b0(%rbp)
               :   54924:	mov    %rax,-0x6a8(%rbp)
               :   5492b:	mov    %r10,-0x698(%rbp)
               :   54932:	lea    0x141fe7(%rip),%rsi        # 196920 <modify_ipv6>
               :   54939:	vmovaps %xmm0,-0x5b0(%rbp)
               :   54941:	vmovaps %xmm0,-0x540(%rbp)
               :   54949:	jmpq   53bae <flow_dv_translate+0x17de>
               :   5494e:	xchg   %ax,%ax
               :   54950:	movl   $0x0,-0x6e0(%rbp)
               :   5495a:	movl   $0x0,-0x6c0(%rbp)
               :   54964:	vpxor  %xmm0,%xmm0,%xmm0
               :   54968:	vmovaps %xmm0,-0x6f0(%rbp)
               :   54970:	vmovaps %xmm0,-0x6d0(%rbp)
               :   54978:	cmpl   $0x20,(%rbx)
               :   5497b:	movzwl (%r10),%eax
               :   5497f:	lea    -0x6f0(%rbp),%rsi
               :   54986:	lea    -0x6d0(%rbp),%rcx
               :   5498d:	je     5591b <flow_dv_translate+0x354b>
               :   54993:	mov    %ax,-0x6ee(%rbp)
               :   5499a:	mov    $0xffffffff,%eax
               :   5499f:	mov    %ax,-0x6ce(%rbp)
               :   549a6:	mov    %rsi,-0x6a8(%rbp)
               :   549ad:	movl   $0xc,-0x6b0(%rbp)
               :   549b7:	mov    %rcx,-0x698(%rbp)
               :   549be:	lea    0x141edb(%rip),%rsi        # 1968a0 <modify_tcp>
               :   549c5:	jmpq   5417d <flow_dv_translate+0x1dad>
               :   549ca:	nopw   0x0(%rax,%rax,1)
               :   549d0:	mov    -0x740(%rbp),%rax
               :   549d7:	mov    -0x728(%rbp),%r8
               :   549de:	movzbl 0x8(%rax),%eax
               :   549e2:	mov    -0x738(%rbp),%rdi
               :   549e9:	mov    %eax,%ecx
               :   549eb:	shr    $0x2,%cl
               :   549ee:	and    $0x1,%ecx
               :   549f1:	mov    %r15,%rdx
               :   549f4:	mov    %rbx,%rsi
               :   549f7:	mov    %al,-0x7c0(%rbp)
               :   549fd:	callq  4ad80 <flow_dv_create_action_l2_encap>
               :   54a02:	test   %eax,%eax
               :   54a04:	je     52ed8 <flow_dv_translate+0xb08>
               :   54a0a:	jmpq   54630 <flow_dv_translate+0x2260>
               :   54a0f:	nop
               :   54a10:	mov    %rdx,%r14
               :   54a13:	xor    %edx,%edx
               :   54a15:	jmpq   528e4 <flow_dv_translate+0x514>
               :   54a1a:	mov    -0x728(%rbp),%rdi
               :   54a21:	lea    0x111d92(%rip),%r8        # 1667ba <srtcm.62771+0xa0a>
               :   54a28:	xor    %ecx,%ecx
               :   54a2a:	mov    $0x10,%edx
               :   54a2f:	mov    $0x16,%esi
               :   54a34:	callq  a8f0 <rte_flow_error_set@plt>
               :   54a39:	mov    %eax,%r12d
               :   54a3c:	jmpq   54646 <flow_dv_translate+0x2276>
               :   54a41:	mov    %eax,-0x5ba(%rbp)
               :   54a47:	mov    $0xffffffff,%r8d
               :   54a4d:	movzwl 0x4(%rcx),%eax
               :   54a51:	movl   $0xffffffff,-0x54a(%rbp)
               :   54a5b:	mov    %ax,-0x5b6(%rbp)
               :   54a62:	mov    %r8w,-0x546(%rbp)
               :   54a6a:	jmpq   537ec <flow_dv_translate+0x141c>
               :   54a6f:	vmovdqu64 (%rcx),%xmm6
               :   54a75:	vpcmpeqd %xmm0,%xmm0,%xmm0
               :   54a79:	vmovups %xmm6,-0x5b8(%rbp)
               :   54a81:	vmovups %xmm0,-0x548(%rbp)
               :   54a89:	jmpq   53fee <flow_dv_translate+0x1c1e>
               :   54a8e:	mov    %eax,-0x6e4(%rbp)
               :   54a94:	movl   $0xffffffff,-0x6c4(%rbp)
               :   54a9e:	jmpq   540ae <flow_dv_translate+0x1cde>
               :   54aa3:	cmpl   $0x2,0x2c(%r15)
               :   54aa8:	jne    546e4 <flow_dv_translate+0x2314>
               :   54aae:	mov    0x20(%rax),%rax
               :   54ab2:	movslq %r12d,%rdx
               :   54ab5:	mov    %rax,0x38(%r15,%rdx,8)
               :   54aba:	inc    %r12d
               :   54abd:	movzbl -0x363(%rbp),%eax
               :   54ac4:	xor    %edx,%edx
               :   54ac6:	jmpq   528e4 <flow_dv_translate+0x514>
               :   54acb:	mov    -0x738(%rbp),%rax
               :   54ad2:	mov    -0x728(%rbp),%r8
               :   54ad9:	mov    0x30(%rax),%rdi
               :   54add:	lea    0x278(%r15),%rcx
               :   54ae4:	lea    0x28(%r15),%rdx
               :   54ae8:	lea    -0x390(%rbp),%rsi
               :   54aef:	callq  3e700 <flow_dv_modify_hdr_resource_register.isra.0>
               :   54af4:	test   %eax,%eax
               :   54af6:	jne    54630 <flow_dv_translate+0x2260>
               :   54afc:	mov    -0x798(%rbp),%rdi
               :   54b03:	mov    -0x730(%rbp),%eax
               :   54b09:	mov    0x28(%rdi),%rdx
               :   54b0d:	mov    0x20(%rdx),%rdx
               :   54b11:	mov    %rdx,0x38(%r15,%rax,8)
               :   54b16:	jmpq   542c6 <flow_dv_translate+0x1ef6>
               :   54b1b:	mov    %r14,%rcx
               :   54b1e:	mov    -0x768(%rbp),%rdi
               :   54b25:	shr    $0x17,%rcx
               :   54b29:	and    $0x1,%ecx
               :   54b2c:	lea    -0x718(%rbp),%rsi
               :   54b33:	mov    %r15,%rdx
               :   54b36:	callq  3bce0 <flow_dv_attr_init>
               :   54b3b:	movzbl -0x718(%rbp),%eax
               :   54b42:	jmpq   54112 <flow_dv_translate+0x1d42>
               :   54b47:	mov    -0x768(%rbp),%rdi
               :   54b4e:	lea    -0x70c(%rbp),%rsi
               :   54b55:	callq  3a0f0 <flow_dev_get_vlan_info_from_items>
               :   54b5a:	jmpq   52f2d <flow_dv_translate+0xb5d>
               :   54b5f:	mov    -0x728(%rbp),%rcx
               :   54b66:	mov    -0x738(%rbp),%rdi
               :   54b6d:	lea    -0x390(%rbp),%rdx
               :   54b74:	callq  43000 <flow_dv_convert_action_mark.isra.0>
               :   54b79:	test   %eax,%eax
               :   54b7b:	jne    54630 <flow_dv_translate+0x2260>
               :   54b81:	movzbl -0x363(%rbp),%eax
               :   54b88:	or     $0x20000010,%r14
               :   54b8f:	add    $0x10,%rbx
               :   54b93:	xor    %edx,%edx
               :   54b95:	jmpq   528e4 <flow_dv_translate+0x514>
               :   54b9a:	mov    %r14,%rcx
               :   54b9d:	mov    -0x768(%rbp),%rdi
               :   54ba4:	shr    $0x17,%rcx
               :   54ba8:	and    $0x1,%ecx
               :   54bab:	lea    -0x718(%rbp),%rsi
               :   54bb2:	mov    %r15,%rdx
               :   54bb5:	callq  3bce0 <flow_dv_attr_init>
               :   54bba:	movzbl -0x718(%rbp),%eax
               :   54bc1:	jmpq   53850 <flow_dv_translate+0x1480>
               :   54bc6:	mov    %r14,%rcx
               :   54bc9:	mov    -0x768(%rbp),%rdi
               :   54bd0:	shr    $0x17,%rcx
               :   54bd4:	and    $0x1,%ecx
               :   54bd7:	lea    -0x718(%rbp),%rsi
               :   54bde:	mov    %r15,%rdx
               :   54be1:	callq  3bce0 <flow_dv_attr_init>
               :   54be6:	movzbl -0x718(%rbp),%eax
               :   54bed:	jmpq   53b43 <flow_dv_translate+0x1773>
               :   54bf2:	orb    $0x60,0x7(%rax)
               :   54bf6:	mov    %ecx,0x14(%rax)
               :   54bf9:	lock incl 0x20(%rdx)
               :   54bfd:	jmpq   5354c <flow_dv_translate+0x117c>
               :   54c02:	lea    0x141e57(%rip),%rax        # 196a60 <rss_hash_default_key>
               :   54c09:	jmpq   535ba <flow_dv_translate+0x11ea>
               :   54c0e:	mov    %ecx,0xc(%rdi)
               :   54c11:	lock incl (%rax)
               :   54c14:	jmpq   546f8 <flow_dv_translate+0x2328>
               :   54c19:	mov    -0x738(%rbp),%rdi
               :   54c20:	mov    %r10,-0x7c0(%rbp)
               :   54c27:	callq  2dfe0 <mlx5_get_send_to_kernel_priority>
               :   54c2c:	cmp    $0xffffffff,%eax
               :   54c2f:	mov    -0x7c0(%rbp),%r10
               :   54c36:	je     55faf <flow_dv_translate+0x3bdf>
               :   54c3c:	pushq  -0x728(%rbp)
               :   54c42:	mov    -0x738(%rbp),%rdi
               :   54c49:	xor    %r9d,%r9d
               :   54c4c:	pushq  $0x0
               :   54c4e:	xor    %r8d,%r8d
               :   54c51:	xor    %ecx,%ecx
               :   54c53:	pushq  $0x0
               :   54c55:	xor    %edx,%edx
               :   54c57:	xor    %esi,%esi
               :   54c59:	pushq  $0x0
               :   54c5b:	mov    %r10,-0x7c8(%rbp)
               :   54c62:	mov    %eax,-0x7c0(%rbp)
               :   54c68:	callq  4e250 <flow_dv_tbl_resource_get>
               :   54c6d:	add    $0x20,%rsp
               :   54c71:	test   %rax,%rax
               :   54c74:	mov    -0x7c0(%rbp),%r11d
               :   54c7b:	mov    -0x7c8(%rbp),%r10
               :   54c82:	mov    %rax,%r9
               :   54c85:	je     56513 <flow_dv_translate+0x4143>
               :   54c8b:	mov    0x1412ee(%rip),%rax        # 195f80 <mlx5_glue@INTERNAL>
               :   54c92:	mov    (%r9),%rdi
               :   54c95:	mov    (%rax),%rax
               :   54c98:	movzwl %r11w,%esi
               :   54c9c:	mov    %r10,-0x7c8(%rbp)
               :   54ca3:	mov    %r9,-0x7c0(%rbp)
               :   54caa:	callq  *0x3b0(%rax)
               :   54cb0:	test   %rax,%rax
               :   54cb3:	mov    -0x7c0(%rbp),%r9
               :   54cba:	mov    -0x7c8(%rbp),%r10
               :   54cc1:	je     56722 <flow_dv_translate+0x4352>
               :   54cc7:	mov    %rax,0x3f8(%r10)
               :   54cce:	mov    %r9,0x400(%r10)
               :   54cd5:	jmpq   53924 <flow_dv_translate+0x1554>
               :   54cda:	mov    -0x768(%rbp),%rdi
               :   54ce1:	lea    0x290(%r15),%rdx
               :   54ce8:	mov    %rbx,%rsi
               :   54ceb:	callq  2dcf0 <mlx5_get_tof>
               :   54cf0:	mov    %rax,-0x758(%rbp)
               :   54cf7:	mov    %rax,0x288(%r15)
               :   54cfe:	mov    -0x738(%rbp),%rax
               :   54d05:	mov    0x30(%rax),%rax
               :   54d09:	mov    0x60(%rax),%rax
               :   54d0d:	mov    0x8(%rax),%rax
               :   54d11:	testb  $0x1,0x255(%rax)
               :   54d18:	je     55e17 <flow_dv_translate+0x3a47>
               :   54d1e:	mov    -0x740(%rbp),%rdi
               :   54d25:	mov    (%rdi),%eax
               :   54d27:	movzbl 0x8(%rdi),%edi
               :   54d2b:	test   %eax,%eax
               :   54d2d:	mov    %edi,%esi
               :   54d2f:	sete   %r12b
               :   54d33:	shr    %sil
               :   54d36:	and    $0x1,%esi
               :   54d39:	cmpq   $0x0,-0x758(%rbp)
               :   54d41:	mov    %dil,-0x730(%rbp)
               :   54d48:	mov    %eax,%edx
               :   54d4a:	je     52615 <flow_dv_translate+0x245>
               :   54d50:	cmpl   $0x1,0x290(%r15)
               :   54d58:	sete   %dl
               :   54d5b:	and    %edx,%r12d
               :   54d5e:	jmpq   52613 <flow_dv_translate+0x243>
               :   54d63:	nopl   0x0(%rax,%rax,1)
               :   54d68:	mov    -0x728(%rbp),%rdi
               :   54d6f:	xor    %ecx,%ecx
               :   54d71:	lea    0x1114f7(%rip),%r8        # 16626f <srtcm.62771+0x4bf>
               :   54d78:	mov    $0xd,%edx
               :   54d7d:	mov    $0x5f,%esi
               :   54d82:	callq  a8f0 <rte_flow_error_set@plt>
               :   54d87:	test   %eax,%eax
               :   54d89:	js     54630 <flow_dv_translate+0x2260>
               :   54d8f:	jmpq   53d9b <flow_dv_translate+0x19cb>
               :   54d94:	nopl   0x0(%rax)
               :   54d98:	mov    -0x750(%rbp),%rax
               :   54d9f:	mov    0xc(%rax),%eax
               :   54da2:	test   %eax,%eax
               :   54da4:	je     55db2 <flow_dv_translate+0x39e2>
               :   54daa:	mov    -0x738(%rbp),%rdi
               :   54db1:	dec    %eax
               :   54db3:	mov    0x30(%rdi),%rdx
               :   54db7:	movslq %r12d,%rsi
               :   54dba:	mov    0x60(%rdx),%rdx
               :   54dbe:	mov    0x8(%rdx),%rcx
               :   54dc2:	mov    %eax,%edx
               :   54dc4:	mov    0x480(%rcx),%rcx
               :   54dcb:	shr    $0x9,%edx
               :   54dce:	and    $0x3fffff,%edx
               :   54dd4:	mov    (%rcx,%rdx,8),%rcx
               :   54dd8:	and    $0x1ff,%eax
               :   54ddd:	movzbl 0x43(%rcx),%edx
               :   54de1:	and    $0x40,%edx
               :   54de4:	cmp    $0x1,%dl
               :   54de7:	sbb    %rdx,%rdx
               :   54dea:	and    $0xffffffffffffffe8,%rdx
               :   54dee:	add    $0x40,%rdx
               :   54df2:	imul   %rdx,%rax
               :   54df6:	add    $0x10,%rbx
               :   54dfa:	inc    %r12d
               :   54dfd:	mov    0x80(%rcx,%rax,1),%rax
               :   54e05:	mov    $0x1,%edx
               :   54e0a:	mov    %rax,0x38(%r15,%rsi,8)
               :   54e0f:	movzbl -0x363(%rbp),%eax
               :   54e16:	jmpq   528e4 <flow_dv_translate+0x514>
               :   54e1b:	mov    0x8(%rsi),%rax
               :   54e1f:	dec    %r8d
               :   54e22:	mov    0x7b0(%rax),%rdx
               :   54e29:	lea    0x14(%rdx),%rsi
               :   54e2d:	jmp    54e32 <flow_dv_translate+0x2a62>
               :   54e2f:	nop
               :   54e30:	pause  
               :   54e32:	mov    (%rsi),%eax
               :   54e34:	test   $0x3,%al
               :   54e36:	jne    54e30 <flow_dv_translate+0x2a60>
               :   54e38:	mov    $0x4,%eax
               :   54e3d:	lock xadd %eax,(%rsi)
               :   54e41:	test   $0x3,%al
               :   54e43:	jne    562ab <flow_dv_translate+0x3edb>
               :   54e49:	mov    (%rdx),%rdx
               :   54e4c:	mov    %r8d,%eax
               :   54e4f:	shr    $0x6,%eax
               :   54e52:	mov    (%rdx,%rax,8),%rdx
               :   54e56:	lock subl $0x4,(%rsi)
               :   54e5a:	and    $0x3f,%r8d
               :   54e5e:	lea    0x3(%r8,%r8,2),%rax
               :   54e63:	shl    $0x4,%rax
               :   54e67:	add    %rax,%rdx
               :   54e6a:	jmpq   534ea <flow_dv_translate+0x111a>
               :   54e6f:	mov    -0x728(%rbp),%rdi
               :   54e76:	xor    %ecx,%ecx
               :   54e78:	lea    0x1118e7(%rip),%r8        # 166766 <srtcm.62771+0x9b6>
               :   54e7f:	mov    $0x10,%edx
               :   54e84:	mov    $0x16,%esi
               :   54e89:	callq  a8f0 <rte_flow_error_set@plt>
               :   54e8e:	test   %eax,%eax
               :   54e90:	je     532cf <flow_dv_translate+0xeff>
               :   54e96:	jmpq   54630 <flow_dv_translate+0x2260>
               :   54e9b:	nopl   0x0(%rax,%rax,1)
               :   54ea0:	mov    -0x738(%rbp),%rax
               :   54ea7:	xor    %edx,%edx
               :   54ea9:	mov    0x30(%rax),%rax
               :   54ead:	mov    0x60(%rax),%rax
               :   54eb1:	mov    0x8(%rax),%rax
               :   54eb5:	mov    0x3b8(%rax),%eax
               :   54ebb:	tzcnt  %eax,%edx
               :   54ebf:	mov    %edx,-0x6cc(%rbp)
               :   54ec5:	shrx   %edx,%eax,%eax
               :   54eca:	bswap  %eax
               :   54ecc:	mov    %eax,-0x6f0(%rbp)
               :   54ed2:	jmpq   545f4 <flow_dv_translate+0x2224>
               :   54ed7:	mov    -0x738(%rbp),%rax
               :   54ede:	mov    0x30(%rax),%rax
               :   54ee2:	mov    0x60(%rax),%rax
               :   54ee6:	mov    %rax,-0x7a0(%rbp)
               :   54eed:	callq  2bbb0 <mlx5_flow_get_thread_workspace>
               :   54ef2:	mov    %rax,%r13
               :   54ef5:	mov    (%r15),%rax
               :   54ef8:	mov    -0x7b0(%rbp),%rsi
               :   54eff:	mov    %rax,-0x780(%rbp)
               :   54f06:	lea    0x5318(%r13),%rax
               :   54f0d:	mov    %rax,-0x768(%rbp)
               :   54f14:	mov    0x8(%rsi),%r10
               :   54f18:	mov    (%rsi),%eax
               :   54f1a:	movq   $0x0,-0x730(%rbp)
               :   54f25:	mov    %eax,-0x634(%rbp)
               :   54f2b:	mov    (%r10),%eax
               :   54f2e:	test   %eax,%eax
               :   54f30:	je     5526b <flow_dv_translate+0x2e9b>
               :   54f36:	lea    -0x6b0(%rbp),%rsi
               :   54f3d:	lea    -0x6f0(%rbp),%rdi
               :   54f44:	mov    %rsi,-0x778(%rbp)
               :   54f4b:	mov    %rdi,-0x788(%rbp)
               :   54f52:	mov    %r12d,-0x760(%rbp)
               :   54f59:	mov    %r13,%rbx
               :   54f5c:	mov    %r10,%r12
               :   54f5f:	nop
               :   54f60:	sub    $0x4,%eax
               :   54f63:	cmp    $0x33,%eax
               :   54f66:	ja     54f80 <flow_dv_translate+0x2bb0>
               :   54f68:	lea    0x115b29(%rip),%rsi        # 16aa98 <srtcm.62771+0x4ce8>
               :   54f6f:	movslq (%rsi,%rax,4),%rax
               :   54f73:	add    %rsi,%rax
               :   54f76:	notrack jmpq *%rax
               :   54f79:	nopl   0x0(%rax)
               :   54f80:	mov    -0x728(%rbp),%rdi
               :   54f87:	lea    0x114ef2(%rip),%r8        # 169e80 <srtcm.62771+0x40d0>
               :   54f8e:	xor    %ecx,%ecx
               :   54f90:	mov    $0x1,%edx
               :   54f95:	mov    $0x16,%esi
               :   54f9a:	mov    -0x760(%rbp),%r12d
               :   54fa1:	callq  a8f0 <rte_flow_error_set@plt>
               :   54fa6:	test   %eax,%eax
               :   54fa8:	js     551a0 <flow_dv_translate+0x2dd0>
               :   54fae:	callq  2bbb0 <mlx5_flow_get_thread_workspace>
               :   54fb3:	cmpl   $0x1,-0x76c(%rbp)
               :   54fba:	mov    %rax,%rbx
               :   54fbd:	jbe    5609f <flow_dv_translate+0x3ccf>
               :   54fc3:	mov    -0x3c8(%rbp),%rdx
               :   54fca:	mov    $0x1,%ecx
               :   54fcf:	xor    %eax,%eax
               :   54fd1:	test   $0x2,%dl
               :   54fd4:	jne    55fdf <flow_dv_translate+0x3c0f>
               :   54fda:	test   $0x400000,%edx
               :   54fe0:	je     5500a <flow_dv_translate+0x2c3a>
               :   54fe2:	mov    0x278(%r15),%rax
               :   54fe9:	mov    0x30(%rax),%esi
               :   54fec:	mov    %esi,-0x418(%rbp)
               :   54ff2:	mov    0x78(%r15),%rsi
               :   54ff6:	mov    0x28(%rsi),%rsi
               :   54ffa:	mov    %rsi,-0x3a0(%rbp)
               :   55001:	movl   $0x0,0x30(%rax)
               :   55008:	mov    %ecx,%eax
               :   5500a:	test   $0x40,%dl
               :   5500d:	je     5503a <flow_dv_translate+0x2c6a>
               :   5500f:	mov    0x278(%r15),%rcx
               :   55016:	inc    %eax
               :   55018:	mov    0x1c(%rcx),%esi
               :   5501b:	mov    %esi,-0x41c(%rbp)
               :   55021:	mov    0x90(%r15),%rsi
               :   55028:	mov    0x20(%rsi),%rsi
               :   5502c:	mov    %rsi,-0x3a8(%rbp)
               :   55033:	movl   $0x0,0x1c(%rcx)
               :   5503a:	test   $0x20000,%edx
               :   55040:	je     5506c <flow_dv_translate+0x2c9c>
               :   55042:	mov    0x278(%r15),%rdx
               :   55049:	inc    %eax
               :   5504b:	mov    0x1c(%rdx),%ecx
               :   5504e:	mov    %ecx,-0x414(%rbp)
               :   55054:	mov    0x98(%r15),%rcx
               :   5505b:	mov    (%rcx),%rcx
               :   5505e:	mov    %rcx,-0x398(%rbp)
               :   55065:	movl   $0x0,0x1c(%rdx)
               :   5506c:	mov    %eax,-0x3d0(%rbp)
               :   55072:	movzbl -0x63c(%rbp),%eax
               :   55079:	vmovdqa64 -0x620(%rbp),%xmm7
               :   55080:	mov    %al,-0x44c(%rbp)
               :   55086:	mov    -0x610(%rbp),%eax
               :   5508c:	vmovdqu64 -0x608(%rbp),%xmm6
               :   55096:	vmovups %xmm7,-0x438(%rbp)
               :   5509e:	vmovdqu64 -0x5f8(%rbp),%xmm7
               :   550a8:	mov    -0x738(%rbp),%rdi
               :   550af:	mov    %eax,-0x428(%rbp)
               :   550b5:	movzbl -0x76c(%rbp),%eax
               :   550bc:	vmovaps %xmm6,-0x410(%rbp)
               :   550c4:	vmovaps %xmm7,-0x400(%rbp)
               :   550cc:	vmovdqu64 -0x5e8(%rbp),%xmm6
               :   550d6:	vmovdqu64 -0x5d8(%rbp),%xmm7
               :   550e0:	mov    %al,-0x44b(%rbp)
               :   550e6:	mov    0x30(%rdi),%rax
               :   550ea:	vmovaps %xmm6,-0x3f0(%rbp)
               :   550f2:	vmovaps %xmm7,-0x3e0(%rbp)
               :   550fa:	mov    0x60(%rax),%rax
               :   550fe:	mov    %rdi,-0x6b0(%rbp)
               :   55105:	mov    0x8(%rax),%rax
               :   55109:	mov    -0x7b8(%rbp),%rdi
               :   55110:	mov    -0x728(%rbp),%rsi
               :   55117:	mov    %rdi,-0x6a0(%rbp)
               :   5511e:	mov    0x438(%rax),%rdi
               :   55125:	mov    %rsi,-0x6a8(%rbp)
               :   5512c:	lea    -0x6b0(%rbp),%rsi
               :   55133:	movq   $0x0,-0x698(%rbp)
               :   5513e:	callq  a380 <mlx5_list_register@plt>
               :   55143:	test   %rax,%rax
               :   55146:	je     56543 <flow_dv_translate+0x4173>
               :   5514c:	mov    0x20(%rax),%ecx
               :   5514f:	mov    0x278(%r15),%rdx
               :   55156:	mov    %ecx,0x40(%rdx)
               :   55159:	mov    %rax,0x270(%r15)
               :   55160:	mov    -0x770(%rbp),%edx
               :   55166:	mov    0x30(%rax),%rax
               :   5516a:	mov    %rax,0x38(%r15,%rdx,8)
               :   5516f:	jmpq   52960 <flow_dv_translate+0x590>
               :   55174:	data16 lea 0x140d54(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   5517c:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   55184:	lea    0x111612(%rip),%r8        # 16679d <srtcm.62771+0x9ed>
               :   5518b:	mov    (%rax),%esi
               :   5518d:	mov    -0x728(%rbp),%rdi
               :   55194:	xor    %ecx,%ecx
               :   55196:	mov    $0x10,%edx
               :   5519b:	callq  a8f0 <rte_flow_error_set@plt>
               :   551a0:	mov    %eax,%r12d
               :   551a3:	jmpq   54646 <flow_dv_translate+0x2276>
               :   551a8:	mov    0x278(%r15),%rax
               :   551af:	mov    0x78(%r15),%r11
               :   551b3:	mov    0x30(%rax),%r13d
               :   551b7:	mov    -0x740(%rbp),%rax
               :   551be:	mov    -0x728(%rbp),%r8
               :   551c5:	movzbl 0x8(%rax),%eax
               :   551c9:	mov    -0x738(%rbp),%rdi
               :   551d0:	mov    %eax,%ecx
               :   551d2:	shr    $0x2,%cl
               :   551d5:	and    $0x1,%ecx
               :   551d8:	mov    %r15,%rdx
               :   551db:	mov    %r12,%rsi
               :   551de:	mov    %r11,-0x798(%rbp)
               :   551e5:	mov    %al,-0x790(%rbp)
               :   551eb:	callq  4ad80 <flow_dv_create_action_l2_encap>
               :   551f0:	test   %eax,%eax
               :   551f2:	mov    -0x798(%rbp),%r11
               :   551f9:	jne    565ae <flow_dv_translate+0x41de>
               :   551ff:	mov    0x78(%r15),%rax
               :   55203:	mov    0x278(%r15),%rdx
               :   5520a:	mov    0x28(%rax),%rcx
               :   5520e:	mov    0x30(%rdx),%eax
               :   55211:	orq    $0x400000,-0x730(%rbp)
               :   5521c:	mov    %eax,-0x614(%rbp)
               :   55222:	mov    -0x608(%rbp),%eax
               :   55228:	mov    %rcx,-0x5d8(%rbp)
               :   5522f:	lea    0x1(%rax),%esi
               :   55232:	mov    %esi,-0x608(%rbp)
               :   55238:	mov    %rcx,-0x590(%rbp,%rax,8)
               :   55240:	mov    %r11,0x78(%r15)
               :   55244:	mov    %r13d,0x30(%rdx)
               :   55248:	nopl   0x0(%rax,%rax,1)
               :   55250:	mov    0x10(%r12),%eax
               :   55255:	add    $0x10,%r12
               :   55259:	test   %eax,%eax
               :   5525b:	jne    54f60 <flow_dv_translate+0x2b90>
               :   55261:	mov    -0x760(%rbp),%r12d
               :   55268:	mov    %rbx,%r13
               :   5526b:	mov    -0x730(%rbp),%rax
               :   55272:	mov    %rax,-0x600(%rbp)
               :   55279:	mov    0x28(%r15),%eax
               :   5527d:	mov    %eax,-0x638(%rbp)
               :   55283:	mov    -0x740(%rbp),%rax
               :   5528a:	movzbl 0x8(%rax),%eax
               :   5528e:	test   $0x4,%al
               :   55290:	je     565ce <flow_dv_translate+0x41fe>
               :   55296:	mov    0x539c(%r13),%edx
               :   5529d:	test   %edx,%edx
               :   5529f:	jne    552ae <flow_dv_translate+0x2ede>
               :   552a1:	mov    -0x7a0(%rbp),%rax
               :   552a8:	mov    0x74c(%rax),%edx
               :   552ae:	movb   $0x2,-0x63c(%rbp)
               :   552b5:	mov    $0x10000000,%eax
               :   552ba:	bswap  %eax
               :   552bc:	bswap  %eax
               :   552be:	and    $0xf000ffff,%eax
               :   552c3:	or     $0x510000,%eax
               :   552c8:	bswap  %eax
               :   552ca:	mov    %eax,%eax
               :   552cc:	bswap  %edx
               :   552ce:	shl    $0x20,%rdx
               :   552d2:	or     %rdx,%rax
               :   552d5:	mov    %rax,-0x630(%rbp)
               :   552dc:	jmpq   54fae <flow_dv_translate+0x2bde>
               :   552e1:	nopl   0x0(%rax)
               :   552e8:	mov    -0x778(%rbp),%rax
               :   552ef:	vpxor  %xmm0,%xmm0,%xmm0
               :   552f3:	movl   $0x0,-0x6f0(%rbp)
               :   552fd:	vmovaps %xmm0,0x10(%rax)
               :   55302:	vmovaps %xmm0,(%rax)
               :   55306:	vmovaps %xmm0,0x20(%rax)
               :   5530b:	mov    0x278(%r15),%rax
               :   55312:	mov    -0x728(%rbp),%rcx
               :   55319:	mov    0x1c(%rax),%r13d
               :   5531d:	mov    0x90(%r15),%rax
               :   55324:	mov    -0x788(%rbp),%rdx
               :   5532b:	mov    %rax,-0x790(%rbp)
               :   55332:	mov    -0x738(%rbp),%rax
               :   55339:	mov    %r12,%rsi
               :   5533c:	lea    0x30(%rax),%rdi
               :   55340:	callq  3d370 <flow_dv_translate_action_port_id.isra.0>
               :   55345:	test   %eax,%eax
               :   55347:	vpxor  %xmm0,%xmm0,%xmm0
               :   5534b:	jne    565ae <flow_dv_translate+0x41de>
               :   55351:	mov    -0x6f0(%rbp),%eax
               :   55357:	mov    -0x728(%rbp),%rdi
               :   5535e:	mov    %eax,-0x688(%rbp)
               :   55364:	mov    -0x738(%rbp),%rax
               :   5536b:	mov    -0x778(%rbp),%rsi
               :   55372:	mov    0x30(%rax),%rax
               :   55376:	mov    0x60(%rax),%rax
               :   5537a:	vmovaps %xmm0,-0x6d0(%rbp)
               :   55382:	mov    0x8(%rax),%rax
               :   55386:	mov    %rdi,-0x6c8(%rbp)
               :   5538d:	mov    0x420(%rax),%rdi
               :   55394:	vmovaps %xmm0,-0x6c0(%rbp)
               :   5539c:	mov    %rsi,-0x6c0(%rbp)
               :   553a3:	lea    -0x6d0(%rbp),%rsi
               :   553aa:	callq  a380 <mlx5_list_register@plt>
               :   553af:	test   %rax,%rax
               :   553b2:	je     55b0c <flow_dv_translate+0x373c>
               :   553b8:	mov    0x278(%r15),%rdx
               :   553bf:	mov    0x2c(%rax),%esi
               :   553c2:	mov    %rax,0x90(%r15)
               :   553c9:	mov    %esi,0x1c(%rdx)
               :   553cc:	mov    0x20(%rax),%rcx
               :   553d0:	mov    -0x608(%rbp),%eax
               :   553d6:	mov    %esi,-0x618(%rbp)
               :   553dc:	mov    %rcx,-0x590(%rbp,%rax,8)
               :   553e4:	lea    0x1(%rax),%esi
               :   553e7:	mov    -0x790(%rbp),%rax
               :   553ee:	mov    %rcx,-0x5e0(%rbp)
               :   553f5:	mov    %esi,-0x608(%rbp)
               :   553fb:	mov    %rax,0x90(%r15)
               :   55402:	incl   -0x76c(%rbp)
               :   55408:	orq    $0x40,-0x730(%rbp)
               :   55410:	mov    %r13d,0x1c(%rdx)
               :   55414:	jmpq   55250 <flow_dv_translate+0x2e80>
               :   55419:	mov    0x8(%r12),%r13
               :   5541e:	mov    0x5370(%rbx),%rdi
               :   55425:	mov    0x14(%r13),%edx
               :   55429:	mov    0x20(%r13),%rsi
               :   5542d:	add    %rdx,%rdx
               :   55430:	callq  aeb0 <memcpy@plt>
               :   55435:	mov    0x14(%r13),%eax
               :   55439:	mov    %eax,0x531c(%rbx)
               :   5543f:	mov    0x18(%r13),%rax
               :   55443:	test   %rax,%rax
               :   55446:	je     55ad4 <flow_dv_translate+0x3704>
               :   5544c:	vmovdqu64 (%rax),%xmm7
               :   55452:	mov    -0x768(%rbp),%rsi
               :   55459:	vmovups %xmm7,0x5330(%rbx)
               :   55461:	vmovdqu64 0x10(%rax),%xmm7
               :   55468:	lea    0x10(%r15),%rdx
               :   5546c:	vmovups %xmm7,0x5340(%rbx)
               :   55474:	mov    0x20(%rax),%rax
               :   55478:	mov    %rax,0x5350(%rbx)
               :   5547f:	mov    0x278(%r15),%rax
               :   55486:	mov    0x8(%rax),%rdi
               :   5548a:	callq  521a0 <flow_dv_hashfields_set>
               :   5548f:	mov    0x278(%r15),%rdx
               :   55496:	movabs $0x801780f000,%rdi
               :   554a0:	test   %rdi,0x8(%rdx)
               :   554a4:	mov    0x10(%r15),%rax
               :   554a8:	setne  %dl
               :   554ab:	movzbl %dl,%edx
               :   554ae:	mov    0x5364(%rbx),%r13d
               :   554b5:	movl   $0x28,0x5358(%rbx)
               :   554bf:	mov    %rax,0x5328(%rbx)
               :   554c6:	mov    %edx,0x5360(%rbx)
               :   554cc:	movl   $0x0,0x5364(%rbx)
               :   554d6:	test   %rax,%rax
               :   554d9:	jne    554e5 <flow_dv_translate+0x3115>
               :   554db:	movl   $0x1,0x531c(%rbx)
               :   554e5:	mov    -0x768(%rbp),%rsi
               :   554ec:	mov    -0x738(%rbp),%rdi
               :   554f3:	callq  6a720 <mlx5_hrxq_get>
               :   554f8:	test   %rax,%rax
               :   554fb:	je     55ae0 <flow_dv_translate+0x3710>
               :   55501:	mov    0x54(%rax),%ecx
               :   55504:	mov    0x38(%rax),%rdx
               :   55508:	mov    -0x608(%rbp),%eax
               :   5550e:	mov    %r13d,0x5364(%rbx)
               :   55515:	lea    0x1(%rax),%esi
               :   55518:	mov    %rdx,-0x590(%rbp,%rax,8)
               :   55520:	mov    -0x730(%rbp),%rax
               :   55527:	mov    %esi,-0x608(%rbp)
               :   5552d:	mov    %rax,%rsi
               :   55530:	mov    %rdx,-0x5f8(%rbp)
               :   55537:	incl   -0x76c(%rbp)
               :   5553d:	mov    %ecx,-0x620(%rbp)
               :   55543:	mov    0x278(%r15),%rdx
               :   5554a:	or     $0x4,%rsi
               :   5554e:	test   $0x10,%al
               :   55550:	je     55555 <flow_dv_translate+0x3185>
               :   55552:	mov    %ecx,0x1c(%rdx)
               :   55555:	movzbl 0x1b(%rdx),%eax
               :   55559:	and    $0xf,%eax
               :   5555c:	or     $0x10,%eax
               :   5555f:	mov    %al,0x1b(%rdx)
               :   55562:	mov    %rsi,-0x730(%rbp)
               :   55569:	jmpq   55250 <flow_dv_translate+0x2e80>
               :   5556e:	mov    -0x780(%rbp),%rax
               :   55575:	mov    0xc(%rax),%eax
               :   55578:	test   %eax,%eax
               :   5557a:	je     55933 <flow_dv_translate+0x3563>
               :   55580:	mov    -0x738(%rbp),%rsi
               :   55587:	dec    %eax
               :   55589:	mov    0x30(%rsi),%rdx
               :   5558d:	mov    0x60(%rdx),%rdx
               :   55591:	mov    0x8(%rdx),%rcx
               :   55595:	mov    %eax,%edx
               :   55597:	mov    0x480(%rcx),%rcx
               :   5559e:	shr    $0x9,%edx
               :   555a1:	and    $0x3fffff,%edx
               :   555a7:	mov    (%rcx,%rdx,8),%rcx
               :   555ab:	and    $0x1ff,%eax
               :   555b0:	movzbl 0x43(%rcx),%edx
               :   555b4:	and    $0x40,%edx
               :   555b7:	cmp    $0x1,%dl
               :   555ba:	sbb    %rdx,%rdx
               :   555bd:	and    $0xffffffffffffffe8,%rdx
               :   555c1:	add    $0x40,%rdx
               :   555c5:	imul   %rdx,%rax
               :   555c9:	orq    $0x20,-0x730(%rbp)
               :   555d1:	mov    0x80(%rcx,%rax,1),%rdx
               :   555d9:	mov    -0x608(%rbp),%eax
               :   555df:	mov    %rdx,-0x5e8(%rbp)
               :   555e6:	lea    0x1(%rax),%ecx
               :   555e9:	mov    %ecx,-0x608(%rbp)
               :   555ef:	mov    %rdx,-0x590(%rbp,%rax,8)
               :   555f7:	jmpq   55250 <flow_dv_translate+0x2e80>
               :   555fc:	mov    0x8(%r12),%rax
               :   55601:	movl   $0x1,0x531c(%rbx)
               :   5560b:	movzwl (%rax),%edx
               :   5560e:	mov    0x5370(%rbx),%rax
               :   55615:	movabs $0x801780f000,%rsi
               :   5561f:	mov    %dx,(%rax)
               :   55622:	mov    0x278(%r15),%rdx
               :   55629:	mov    0x10(%r15),%rax
               :   5562d:	test   %rsi,0x8(%rdx)
               :   55631:	setne  %dl
               :   55634:	movzbl %dl,%edx
               :   55637:	mov    0x5364(%rbx),%r13d
               :   5563e:	movl   $0x28,0x5358(%rbx)
               :   55648:	mov    %rax,0x5328(%rbx)
               :   5564f:	mov    %edx,0x5360(%rbx)
               :   55655:	movl   $0x0,0x5364(%rbx)
               :   5565f:	test   %rax,%rax
               :   55662:	jne    5566e <flow_dv_translate+0x329e>
               :   55664:	movl   $0x1,0x531c(%rbx)
               :   5566e:	mov    -0x768(%rbp),%rsi
               :   55675:	mov    -0x738(%rbp),%rdi
               :   5567c:	callq  6a720 <mlx5_hrxq_get>
               :   55681:	test   %rax,%rax
               :   55684:	je     55ae0 <flow_dv_translate+0x3710>
               :   5568a:	mov    0x54(%rax),%ecx
               :   5568d:	mov    0x38(%rax),%rdx
               :   55691:	mov    -0x608(%rbp),%eax
               :   55697:	mov    %r13d,0x5364(%rbx)
               :   5569e:	lea    0x1(%rax),%esi
               :   556a1:	mov    %rdx,-0x590(%rbp,%rax,8)
               :   556a9:	mov    -0x730(%rbp),%rax
               :   556b0:	mov    %esi,-0x608(%rbp)
               :   556b6:	mov    %rax,%rsi
               :   556b9:	mov    %rdx,-0x5f8(%rbp)
               :   556c0:	incl   -0x76c(%rbp)
               :   556c6:	mov    %ecx,-0x620(%rbp)
               :   556cc:	mov    0x278(%r15),%rdx
               :   556d3:	or     $0x2,%rsi
               :   556d7:	test   $0x10,%al
               :   556d9:	jne    55552 <flow_dv_translate+0x3182>
               :   556df:	jmpq   55555 <flow_dv_translate+0x3185>
               :   556e4:	mov    0x8(%r12),%rax
               :   556e9:	xor    %edx,%edx
               :   556eb:	mov    (%rax),%eax
               :   556ed:	cmp    $0xffffff,%eax
               :   556f2:	setne  %dl
               :   556f5:	add    %edx,%eax
               :   556f7:	bswap  %eax
               :   556f9:	orb    $0x2,0x5398(%rbx)
               :   55700:	shr    $0x8,%eax
               :   55703:	mov    %eax,%esi
               :   55705:	mov    -0x738(%rbp),%rax
               :   5570c:	mov    0x278(%r15),%rdx
               :   55713:	mov    0x88(%r15),%r11
               :   5571a:	mov    0x30(%rax),%rdi
               :   5571e:	mov    -0x728(%rbp),%r8
               :   55725:	mov    0x38(%rdx),%r13d
               :   55729:	lea    0x278(%r15),%rcx
               :   55730:	lea    0x88(%r15),%rdx
               :   55737:	mov    %r11,-0x790(%rbp)
               :   5573e:	callq  3e580 <flow_dv_tag_resource_register.isra.0>
               :   55743:	test   %eax,%eax
               :   55745:	mov    -0x790(%rbp),%r11
               :   5574c:	jne    565ae <flow_dv_translate+0x41de>
               :   55752:	mov    0x88(%r15),%rax
               :   55759:	mov    0x278(%r15),%rdx
               :   55760:	mov    0x20(%rax),%rcx
               :   55764:	mov    0x38(%rdx),%eax
               :   55767:	mov    %rcx,-0x5f0(%rbp)
               :   5576e:	mov    %eax,-0x61c(%rbp)
               :   55774:	mov    -0x608(%rbp),%eax
               :   5577a:	mov    %r11,0x88(%r15)
               :   55781:	lea    0x1(%rax),%esi
               :   55784:	mov    %esi,-0x608(%rbp)
               :   5578a:	mov    %rcx,-0x590(%rbp,%rax,8)
               :   55792:	orq    $0x10,-0x730(%rbp)
               :   5579a:	mov    %r13d,0x38(%rdx)
               :   5579e:	jmpq   55250 <flow_dv_translate+0x2e80>
               :   557a3:	mov    -0x748(%rbp),%rax
               :   557aa:	lea    0x10(%r15),%rdx
               :   557ae:	lea    0x5318(%rax),%rsi
               :   557b5:	mov    0x278(%r15),%rax
               :   557bc:	mov    0x8(%rax),%rdi
               :   557c0:	callq  521a0 <flow_dv_hashfields_set>
               :   557c5:	jmpq   52948 <flow_dv_translate+0x578>
               :   557ca:	mov    0x8(%rax),%rax
               :   557ce:	movzbl (%rax),%edx
               :   557d1:	movzwl -0x70c(%rbp),%eax
               :   557d8:	shl    $0xd,%edx
               :   557db:	and    $0x1fff,%ax
               :   557df:	or     %edx,%eax
               :   557e1:	mov    %ax,-0x70c(%rbp)
               :   557e8:	jmpq   52f88 <flow_dv_translate+0xbb8>
               :   557ed:	mov    0x8(%rax),%rax
               :   557f1:	and    $0x1fff,%dx
               :   557f6:	movzbl (%rax),%eax
               :   557f9:	shl    $0xd,%eax
               :   557fc:	or     %eax,%edx
               :   557fe:	mov    %dx,-0x70c(%rbp)
               :   55805:	jmpq   52fd0 <flow_dv_translate+0xc00>
               :   5580a:	data16 lea 0x1406be(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   55812:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   5581a:	mov    (%rax),%eax
               :   5581c:	test   %eax,%eax
               :   5581e:	jne    55fa5 <flow_dv_translate+0x3bd5>
               :   55824:	mov    0x80(%r15),%rax
               :   5582b:	jmpq   53097 <flow_dv_translate+0xcc7>
               :   55830:	data16 lea 0x140698(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   55838:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   55840:	mov    (%rax),%eax
               :   55842:	test   %eax,%eax
               :   55844:	jne    55fa5 <flow_dv_translate+0x3bd5>
               :   5584a:	mov    0x90(%r15),%rax
               :   55851:	mov    0x278(%r15),%rdx
               :   55858:	jmpq   533e0 <flow_dv_translate+0x1010>
               :   5585d:	shr    $0x2,%cl
               :   55860:	and    $0x1,%ecx
               :   55863:	lea    -0x550(%rbp),%r8
               :   5586a:	xor    %esi,%esi
               :   5586c:	xor    %eax,%eax
               :   5586e:	mov    %eax,%edx
               :   55870:	add    $0x20,%eax
               :   55873:	mov    %rsi,-0x550(%rbp,%rdx,1)
               :   5587b:	mov    %rsi,-0x548(%rbp,%rdx,1)
               :   55883:	mov    %rsi,-0x540(%rbp,%rdx,1)
               :   5588b:	mov    %rsi,-0x538(%rbp,%rdx,1)
               :   55893:	cmp    $0xc0,%eax
               :   55898:	jb     5586e <flow_dv_translate+0x349e>
               :   5589a:	add    %r8,%rax
               :   5589d:	test   %cl,%cl
               :   5589f:	movq   $0x0,(%rax)
               :   558a6:	movq   $0x0,0x8(%rax)
               :   558ae:	movq   $0x0,0x10(%rax)
               :   558b6:	setne  %al
               :   558b9:	add    %eax,%eax
               :   558bb:	mov    %al,-0x48f(%rbp)
               :   558c1:	mov    -0x738(%rbp),%rax
               :   558c8:	mov    -0x728(%rbp),%rcx
               :   558cf:	mov    0x30(%rax),%rdi
               :   558d3:	mov    %r15,%rdx
               :   558d6:	mov    %r8,%rsi
               :   558d9:	callq  3cf70 <flow_dv_encap_decap_resource_register.isra.0>
               :   558de:	test   %eax,%eax
               :   558e0:	jne    55f72 <flow_dv_translate+0x3ba2>
               :   558e6:	mov    0x78(%r15),%rax
               :   558ea:	mov    $0x1,%r12d
               :   558f0:	mov    0x28(%rax),%rax
               :   558f4:	mov    $0x800000,%r14d
               :   558fa:	mov    %rax,0x38(%r15)
               :   558fe:	jmpq   526b0 <flow_dv_translate+0x2e0>
               :   55903:	mov    $0xffffffff,%esi
               :   55908:	mov    %cx,-0x700(%rbp)
               :   5590f:	mov    %si,-0x6f8(%rbp)
               :   55916:	jmpq   5415e <flow_dv_translate+0x1d8e>
               :   5591b:	mov    %ax,-0x6f0(%rbp)
               :   55922:	mov    $0xffffffff,%eax
               :   55927:	mov    %ax,-0x6d0(%rbp)
               :   5592e:	jmpq   549a6 <flow_dv_translate+0x25d6>
               :   55933:	mov    -0x738(%rbp),%rdi
               :   5593a:	lea    0x8(%r15),%rsi
               :   5593e:	xor    %edx,%edx
               :   55940:	callq  412e0 <flow_dv_translate_create_counter.isra.0>
               :   55945:	mov    -0x780(%rbp),%rdi
               :   5594c:	mov    %eax,0xc(%rdi)
               :   5594f:	test   %eax,%eax
               :   55951:	jne    55580 <flow_dv_translate+0x31b0>
               :   55957:	mov    -0x760(%rbp),%r12d
               :   5595e:	data16 lea 0x14056a(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   55966:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   5596e:	lea    0x110e71(%rip),%r8        # 1667e6 <srtcm.62771+0xa36>
               :   55975:	mov    (%rax),%esi
               :   55977:	mov    -0x728(%rbp),%rdi
               :   5597e:	xor    %ecx,%ecx
               :   55980:	mov    $0x10,%edx
               :   55985:	callq  a8f0 <rte_flow_error_set@plt>
               :   5598a:	jmpq   54fa6 <flow_dv_translate+0x2bd6>
               :   5598f:	test   %rax,%rax
               :   55992:	je     562f8 <flow_dv_translate+0x3f28>
               :   55998:	mov    0x38(%r15),%rdx
               :   5599c:	cmp    %rdx,%rcx
               :   5599f:	je     5660d <flow_dv_translate+0x423d>
               :   559a5:	cmp    %rdx,%rax
               :   559a8:	je     5660d <flow_dv_translate+0x423d>
               :   559ae:	mov    %rdx,-0x550(%rbp)
               :   559b5:	mov    $0x1,%esi
               :   559ba:	cmp    $0x1,%r12d
               :   559be:	je     55da3 <flow_dv_translate+0x39d3>
               :   559c4:	mov    0x40(%r15),%rdi
               :   559c8:	cmp    %rdi,%rcx
               :   559cb:	je     56606 <flow_dv_translate+0x4236>
               :   559d1:	cmp    %rdi,%rax
               :   559d4:	je     56606 <flow_dv_translate+0x4236>
               :   559da:	mov    %rdi,-0x550(%rbp,%rsi,8)
               :   559e2:	lea    0x1(%rsi),%edx
               :   559e5:	cmp    $0x2,%r12d
               :   559e9:	je     55ac5 <flow_dv_translate+0x36f5>
               :   559ef:	mov    0x48(%r15),%rdi
               :   559f3:	cmp    %rdi,%rcx
               :   559f6:	je     5661b <flow_dv_translate+0x424b>
               :   559fc:	cmp    %rdi,%rax
               :   559ff:	je     5661b <flow_dv_translate+0x424b>
               :   55a05:	lea    0x1(%rdx),%esi
               :   55a08:	movslq %edx,%rdx
               :   55a0b:	mov    %rdi,-0x550(%rbp,%rdx,8)
               :   55a13:	cmp    $0x3,%r12d
               :   55a17:	je     55da3 <flow_dv_translate+0x39d3>
               :   55a1d:	mov    0x50(%r15),%rdi
               :   55a21:	cmp    %rdi,%rcx
               :   55a24:	je     56614 <flow_dv_translate+0x4244>
               :   55a2a:	cmp    %rdi,%rax
               :   55a2d:	je     56614 <flow_dv_translate+0x4244>
               :   55a33:	lea    0x1(%rsi),%edx
               :   55a36:	movslq %esi,%rsi
               :   55a39:	mov    %rdi,-0x550(%rbp,%rsi,8)
               :   55a41:	cmp    $0x4,%r12d
               :   55a45:	je     55ac5 <flow_dv_translate+0x36f5>
               :   55a47:	mov    0x58(%r15),%rsi
               :   55a4b:	cmp    %rsi,%rcx
               :   55a4e:	je     55a62 <flow_dv_translate+0x3692>
               :   55a50:	cmp    %rsi,%rax
               :   55a53:	je     55a62 <flow_dv_translate+0x3692>
               :   55a55:	movslq %edx,%rdi
               :   55a58:	mov    %rsi,-0x550(%rbp,%rdi,8)
               :   55a60:	inc    %edx
               :   55a62:	cmp    $0x5,%r12d
               :   55a66:	je     55ac5 <flow_dv_translate+0x36f5>
               :   55a68:	mov    0x60(%r15),%rsi
               :   55a6c:	cmp    %rsi,%rcx
               :   55a6f:	je     55a83 <flow_dv_translate+0x36b3>
               :   55a71:	cmp    %rsi,%rax
               :   55a74:	je     55a83 <flow_dv_translate+0x36b3>
               :   55a76:	movslq %edx,%rdi
               :   55a79:	mov    %rsi,-0x550(%rbp,%rdi,8)
               :   55a81:	inc    %edx
               :   55a83:	cmp    $0x6,%r12d
               :   55a87:	je     55ac5 <flow_dv_translate+0x36f5>
               :   55a89:	mov    0x68(%r15),%rsi
               :   55a8d:	cmp    %rsi,%rcx
               :   55a90:	je     55aa4 <flow_dv_translate+0x36d4>
               :   55a92:	cmp    %rsi,%rax
               :   55a95:	je     55aa4 <flow_dv_translate+0x36d4>
               :   55a97:	movslq %edx,%rdi
               :   55a9a:	mov    %rsi,-0x550(%rbp,%rdi,8)
               :   55aa2:	inc    %edx
               :   55aa4:	cmp    $0x7,%r12d
               :   55aa8:	je     55ac5 <flow_dv_translate+0x36f5>
               :   55aaa:	mov    0x70(%r15),%rsi
               :   55aae:	cmp    %rsi,%rcx
               :   55ab1:	je     55ac5 <flow_dv_translate+0x36f5>
               :   55ab3:	cmp    %rsi,%rax
               :   55ab6:	je     55ac5 <flow_dv_translate+0x36f5>
               :   55ab8:	movslq %edx,%rax
               :   55abb:	mov    %rsi,-0x550(%rbp,%rax,8)
               :   55ac3:	inc    %edx
               :   55ac5:	mov    %edx,%r12d
               :   55ac8:	lea    -0x550(%rbp),%r8
               :   55acf:	jmpq   52b46 <flow_dv_translate+0x776>
               :   55ad4:	lea    0x140f85(%rip),%rax        # 196a60 <rss_hash_default_key>
               :   55adb:	jmpq   5544c <flow_dv_translate+0x307c>
               :   55ae0:	mov    %r13d,%eax
               :   55ae3:	mov    %eax,0x5364(%rbx)
               :   55ae9:	mov    -0x760(%rbp),%r12d
               :   55af0:	data16 lea 0x1403d8(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   55af8:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   55b00:	lea    0x110d4b(%rip),%r8        # 166852 <srtcm.62771+0xaa2>
               :   55b07:	jmpq   55975 <flow_dv_translate+0x35a5>
               :   55b0c:	data16 lea 0x1403bc(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   55b14:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   55b1c:	mov    (%rax),%eax
               :   55b1e:	test   %eax,%eax
               :   55b20:	jne    5677e <flow_dv_translate+0x43ae>
               :   55b26:	mov    0x278(%r15),%rdx
               :   55b2d:	mov    0x90(%r15),%rax
               :   55b34:	mov    0x1c(%rdx),%esi
               :   55b37:	jmpq   553cc <flow_dv_translate+0x2ffc>
               :   55b3c:	movzbl (%rsi),%edx
               :   55b3f:	movzwl -0x70c(%rbp),%eax
               :   55b46:	shl    $0xd,%edx
               :   55b49:	and    $0x1fff,%ax
               :   55b4d:	or     %edx,%eax
               :   55b4f:	mov    %ax,-0x70c(%rbp)
               :   55b56:	jmpq   531be <flow_dv_translate+0xdee>
               :   55b5b:	mov    -0x7a0(%rbp),%rdx
               :   55b62:	mov    -0x738(%rbp),%rdi
               :   55b69:	lea    0x8(%r15),%rsi
               :   55b6d:	callq  412e0 <flow_dv_translate_create_counter.isra.0>
               :   55b72:	mov    -0x750(%rbp),%rsi
               :   55b79:	mov    %eax,0xc(%rsi)
               :   55b7c:	test   %eax,%eax
               :   55b7e:	jne    54322 <flow_dv_translate+0x1f52>
               :   55b84:	data16 lea 0x140344(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   55b8c:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   55b94:	mov    -0x728(%rbp),%rdi
               :   55b9b:	lea    0x110c44(%rip),%r8        # 1667e6 <srtcm.62771+0xa36>
               :   55ba2:	xor    %ecx,%ecx
               :   55ba4:	mov    $0x10,%edx
               :   55ba9:	mov    (%rax),%esi
               :   55bab:	mov    %rax,%rbx
               :   55bae:	callq  a8f0 <rte_flow_error_set@plt>
               :   55bb3:	mov    (%rbx),%r12d
               :   55bb6:	neg    %r12d
               :   55bb9:	jmpq   54646 <flow_dv_translate+0x2276>
               :   55bbe:	mov    -0x728(%rbp),%rdi
               :   55bc5:	xor    %ecx,%ecx
               :   55bc7:	lea    0x110b98(%rip),%r8        # 166766 <srtcm.62771+0x9b6>
               :   55bce:	mov    $0x10,%edx
               :   55bd3:	mov    $0x16,%esi
               :   55bd8:	callq  a8f0 <rte_flow_error_set@plt>
               :   55bdd:	test   %eax,%eax
               :   55bdf:	je     527e3 <flow_dv_translate+0x413>
               :   55be5:	jmpq   54630 <flow_dv_translate+0x2260>
               :   55bea:	nopw   0x0(%rax,%rax,1)
               :   55bf0:	mov    -0x728(%rbp),%rdi
               :   55bf7:	xor    %ecx,%ecx
               :   55bf9:	lea    0x110b83(%rip),%r8        # 166783 <srtcm.62771+0x9d3>
               :   55c00:	mov    $0x10,%edx
               :   55c05:	mov    $0x16,%esi
               :   55c0a:	callq  a8f0 <rte_flow_error_set@plt>
               :   55c0f:	test   %eax,%eax
               :   55c11:	je     52ed8 <flow_dv_translate+0xb08>
               :   55c17:	jmpq   54630 <flow_dv_translate+0x2260>
               :   55c1c:	nopl   0x0(%rax)
               :   55c20:	cmpq   $0x0,-0x398(%rbp)
               :   55c28:	jne    52970 <flow_dv_translate+0x5a0>
               :   55c2e:	jmpq   52b59 <flow_dv_translate+0x789>
               :   55c33:	cmp    $0x20,%ax
               :   55c37:	ja     52d6b <flow_dv_translate+0x99b>
               :   55c3d:	cmp    $0x2,%esi
               :   55c40:	jne    52d6b <flow_dv_translate+0x99b>
               :   55c46:	add    $0x20,%edx
               :   55c49:	mov    %dx,-0x21e(%rbp)
               :   55c50:	jmpq   52d6b <flow_dv_translate+0x99b>
               :   55c55:	test   %rax,%rax
               :   55c58:	je     5614e <flow_dv_translate+0x3d7e>
               :   55c5e:	test   %rdx,%rdx
               :   55c61:	je     56405 <flow_dv_translate+0x4035>
               :   55c67:	mov    0x38(%r15),%rcx
               :   55c6b:	cmp    %rcx,%rax
               :   55c6e:	je     565ff <flow_dv_translate+0x422f>
               :   55c74:	cmp    %rcx,%rdx
               :   55c77:	je     565ff <flow_dv_translate+0x422f>
               :   55c7d:	mov    %rcx,-0x550(%rbp)
               :   55c84:	mov    $0x1,%esi
               :   55c89:	cmp    $0x1,%r12d
               :   55c8d:	je     55da3 <flow_dv_translate+0x39d3>
               :   55c93:	mov    0x40(%r15),%rdi
               :   55c97:	cmp    %rdi,%rax
               :   55c9a:	je     565f8 <flow_dv_translate+0x4228>
               :   55ca0:	cmp    %rdi,%rdx
               :   55ca3:	je     565f8 <flow_dv_translate+0x4228>
               :   55ca9:	mov    %rdi,-0x550(%rbp,%rsi,8)
               :   55cb1:	lea    0x1(%rsi),%ecx
               :   55cb4:	cmp    $0x2,%r12d
               :   55cb8:	je     55d94 <flow_dv_translate+0x39c4>
               :   55cbe:	mov    0x48(%r15),%rdi
               :   55cc2:	cmp    %rdi,%rax
               :   55cc5:	je     565f1 <flow_dv_translate+0x4221>
               :   55ccb:	cmp    %rdi,%rdx
               :   55cce:	je     565f1 <flow_dv_translate+0x4221>
               :   55cd4:	lea    0x1(%rcx),%esi
               :   55cd7:	movslq %ecx,%rcx
               :   55cda:	mov    %rdi,-0x550(%rbp,%rcx,8)
               :   55ce2:	cmp    $0x3,%r12d
               :   55ce6:	je     55da3 <flow_dv_translate+0x39d3>
               :   55cec:	mov    0x50(%r15),%rdi
               :   55cf0:	cmp    %rdi,%rax
               :   55cf3:	je     56622 <flow_dv_translate+0x4252>
               :   55cf9:	cmp    %rdi,%rdx
               :   55cfc:	je     56622 <flow_dv_translate+0x4252>
               :   55d02:	lea    0x1(%rsi),%ecx
               :   55d05:	movslq %esi,%rsi
               :   55d08:	mov    %rdi,-0x550(%rbp,%rsi,8)
               :   55d10:	cmp    $0x4,%r12d
               :   55d14:	je     55d94 <flow_dv_translate+0x39c4>
               :   55d16:	mov    0x58(%r15),%rsi
               :   55d1a:	cmp    %rsi,%rax
               :   55d1d:	je     55d31 <flow_dv_translate+0x3961>
               :   55d1f:	cmp    %rsi,%rdx
               :   55d22:	je     55d31 <flow_dv_translate+0x3961>
               :   55d24:	movslq %ecx,%rdi
               :   55d27:	mov    %rsi,-0x550(%rbp,%rdi,8)
               :   55d2f:	inc    %ecx
               :   55d31:	cmp    $0x5,%r12d
               :   55d35:	je     55d94 <flow_dv_translate+0x39c4>
               :   55d37:	mov    0x60(%r15),%rsi
               :   55d3b:	cmp    %rsi,%rax
               :   55d3e:	je     55d52 <flow_dv_translate+0x3982>
               :   55d40:	cmp    %rsi,%rdx
               :   55d43:	je     55d52 <flow_dv_translate+0x3982>
               :   55d45:	movslq %ecx,%rdi
               :   55d48:	mov    %rsi,-0x550(%rbp,%rdi,8)
               :   55d50:	inc    %ecx
               :   55d52:	cmp    $0x6,%r12d
               :   55d56:	je     55d94 <flow_dv_translate+0x39c4>
               :   55d58:	mov    0x68(%r15),%rsi
               :   55d5c:	cmp    %rsi,%rax
               :   55d5f:	je     55d73 <flow_dv_translate+0x39a3>
               :   55d61:	cmp    %rsi,%rdx
               :   55d64:	je     55d73 <flow_dv_translate+0x39a3>
               :   55d66:	movslq %ecx,%rdi
               :   55d69:	mov    %rsi,-0x550(%rbp,%rdi,8)
               :   55d71:	inc    %ecx
               :   55d73:	cmp    $0x7,%r12d
               :   55d77:	je     55d94 <flow_dv_translate+0x39c4>
               :   55d79:	mov    0x70(%r15),%rsi
               :   55d7d:	cmp    %rsi,%rax
               :   55d80:	je     55d94 <flow_dv_translate+0x39c4>
               :   55d82:	cmp    %rsi,%rdx
               :   55d85:	je     55d94 <flow_dv_translate+0x39c4>
               :   55d87:	movslq %ecx,%rax
               :   55d8a:	mov    %rsi,-0x550(%rbp,%rax,8)
               :   55d92:	inc    %ecx
               :   55d94:	mov    %ecx,%r12d
               :   55d97:	lea    -0x550(%rbp),%r8
               :   55d9e:	jmpq   52b46 <flow_dv_translate+0x776>
               :   55da3:	mov    %esi,%r12d
               :   55da6:	lea    -0x550(%rbp),%r8
               :   55dad:	jmpq   52b46 <flow_dv_translate+0x776>
               :   55db2:	mov    -0x738(%rbp),%rdi
               :   55db9:	lea    0x8(%r15),%rsi
               :   55dbd:	xor    %edx,%edx
               :   55dbf:	callq  412e0 <flow_dv_translate_create_counter.isra.0>
               :   55dc4:	mov    -0x750(%rbp),%rsi
               :   55dcb:	mov    %eax,0xc(%rsi)
               :   55dce:	test   %eax,%eax
               :   55dd0:	jne    54daa <flow_dv_translate+0x29da>
               :   55dd6:	jmpq   55b84 <flow_dv_translate+0x37b4>
               :   55ddb:	mov    -0x728(%rbp),%rdi
               :   55de2:	xor    %ecx,%ecx
               :   55de4:	lea    0x1101fa(%rip),%r8        # 165fe5 <srtcm.62771+0x235>
               :   55deb:	mov    $0x10,%edx
               :   55df0:	mov    $0x16,%esi
               :   55df5:	callq  a8f0 <rte_flow_error_set@plt>
               :   55dfa:	test   %eax,%eax
               :   55dfc:	jne    54630 <flow_dv_translate+0x2260>
               :   55e02:	movzbl -0x363(%rbp),%eax
               :   55e09:	jmpq   5321f <flow_dv_translate+0xe4f>
               :   55e0e:	lock subl $0x4,(%rdx)
               :   55e12:	jmpq   53492 <flow_dv_translate+0x10c2>
               :   55e17:	mov    -0x740(%rbp),%rax
               :   55e1e:	mov    (%rax),%edx
               :   55e20:	movzbl 0x8(%rax),%eax
               :   55e24:	mov    %eax,%esi
               :   55e26:	shr    %sil
               :   55e29:	mov    %al,-0x730(%rbp)
               :   55e2f:	and    $0x1,%esi
               :   55e32:	jmpq   52615 <flow_dv_translate+0x245>
               :   55e37:	mov    0x38(%r15),%rax
               :   55e3b:	cmp    %rax,%rcx
               :   55e3e:	je     565ea <flow_dv_translate+0x421a>
               :   55e44:	cmp    %rax,%rdx
               :   55e47:	je     565ea <flow_dv_translate+0x421a>
               :   55e4d:	mov    %rax,-0x550(%rbp)
               :   55e54:	mov    $0x1,%esi
               :   55e59:	cmp    $0x1,%r12d
               :   55e5d:	je     55da3 <flow_dv_translate+0x39d3>
               :   55e63:	mov    0x40(%r15),%rdi
               :   55e67:	cmp    %rdi,%rcx
               :   55e6a:	je     565e3 <flow_dv_translate+0x4213>
               :   55e70:	cmp    %rdi,%rdx
               :   55e73:	je     565e3 <flow_dv_translate+0x4213>
               :   55e79:	mov    %rdi,-0x550(%rbp,%rsi,8)
               :   55e81:	lea    0x1(%rsi),%eax
               :   55e84:	cmp    $0x2,%r12d
               :   55e88:	je     55f63 <flow_dv_translate+0x3b93>
               :   55e8e:	mov    0x48(%r15),%rdi
               :   55e92:	cmp    %rdi,%rcx
               :   55e95:	je     565dc <flow_dv_translate+0x420c>
               :   55e9b:	cmp    %rdi,%rdx
               :   55e9e:	je     565dc <flow_dv_translate+0x420c>
               :   55ea4:	lea    0x1(%rax),%esi
               :   55ea7:	cltq   
               :   55ea9:	mov    %rdi,-0x550(%rbp,%rax,8)
               :   55eb1:	cmp    $0x3,%r12d
               :   55eb5:	je     55da3 <flow_dv_translate+0x39d3>
               :   55ebb:	mov    0x50(%r15),%rdi
               :   55ebf:	cmp    %rdi,%rcx
               :   55ec2:	je     56661 <flow_dv_translate+0x4291>
               :   55ec8:	cmp    %rdi,%rdx
               :   55ecb:	je     56661 <flow_dv_translate+0x4291>
               :   55ed1:	lea    0x1(%rsi),%eax
               :   55ed4:	movslq %esi,%rsi
               :   55ed7:	mov    %rdi,-0x550(%rbp,%rsi,8)
               :   55edf:	cmp    $0x4,%r12d
               :   55ee3:	je     55f63 <flow_dv_translate+0x3b93>
               :   55ee5:	mov    0x58(%r15),%rsi
               :   55ee9:	cmp    %rsi,%rcx
               :   55eec:	je     55f00 <flow_dv_translate+0x3b30>
               :   55eee:	cmp    %rsi,%rdx
               :   55ef1:	je     55f00 <flow_dv_translate+0x3b30>
               :   55ef3:	movslq %eax,%rdi
               :   55ef6:	mov    %rsi,-0x550(%rbp,%rdi,8)
               :   55efe:	inc    %eax
               :   55f00:	cmp    $0x5,%r12d
               :   55f04:	je     55f63 <flow_dv_translate+0x3b93>
               :   55f06:	mov    0x60(%r15),%rsi
               :   55f0a:	cmp    %rsi,%rcx
               :   55f0d:	je     55f21 <flow_dv_translate+0x3b51>
               :   55f0f:	cmp    %rsi,%rdx
               :   55f12:	je     55f21 <flow_dv_translate+0x3b51>
               :   55f14:	movslq %eax,%rdi
               :   55f17:	mov    %rsi,-0x550(%rbp,%rdi,8)
               :   55f1f:	inc    %eax
               :   55f21:	cmp    $0x6,%r12d
               :   55f25:	je     55f63 <flow_dv_translate+0x3b93>
               :   55f27:	mov    0x68(%r15),%rsi
               :   55f2b:	cmp    %rcx,%rsi
               :   55f2e:	je     55f42 <flow_dv_translate+0x3b72>
               :   55f30:	cmp    %rdx,%rsi
               :   55f33:	je     55f42 <flow_dv_translate+0x3b72>
               :   55f35:	movslq %eax,%rdi
               :   55f38:	mov    %rsi,-0x550(%rbp,%rdi,8)
               :   55f40:	inc    %eax
               :   55f42:	cmp    $0x7,%r12d
               :   55f46:	je     55f63 <flow_dv_translate+0x3b93>
               :   55f48:	mov    0x70(%r15),%rsi
               :   55f4c:	cmp    %rsi,%rcx
               :   55f4f:	je     55f63 <flow_dv_translate+0x3b93>
               :   55f51:	cmp    %rsi,%rdx
               :   55f54:	je     55f63 <flow_dv_translate+0x3b93>
               :   55f56:	movslq %eax,%rdx
               :   55f59:	mov    %rsi,-0x550(%rbp,%rdx,8)
               :   55f61:	inc    %eax
               :   55f63:	mov    %eax,%r12d
               :   55f66:	lea    -0x550(%rbp),%r8
               :   55f6d:	jmpq   52b46 <flow_dv_translate+0x776>
               :   55f72:	mov    -0x728(%rbp),%rdi
               :   55f79:	xor    %ecx,%ecx
               :   55f7b:	lea    0x1107e4(%rip),%r8        # 166766 <srtcm.62771+0x9b6>
               :   55f82:	mov    $0x10,%edx
               :   55f87:	mov    $0x16,%esi
               :   55f8c:	callq  a8f0 <rte_flow_error_set@plt>
               :   55f91:	test   %eax,%eax
               :   55f93:	jne    54630 <flow_dv_translate+0x2260>
               :   55f99:	jmpq   558e6 <flow_dv_translate+0x3516>
               :   55f9e:	xor    %esi,%esi
               :   55fa0:	jmpq   529f1 <flow_dv_translate+0x621>
               :   55fa5:	neg    %eax
               :   55fa7:	mov    %eax,%r12d
               :   55faa:	jmpq   54646 <flow_dv_translate+0x2276>
               :   55faf:	mov    -0x728(%rbp),%rdi
               :   55fb6:	lea    0x113e73(%rip),%r8        # 169e30 <srtcm.62771+0x4080>
               :   55fbd:	xor    %ecx,%ecx
               :   55fbf:	mov    $0x1,%edx
               :   55fc4:	mov    $0x5f,%esi
               :   55fc9:	movslq %r12d,%r12
               :   55fcc:	callq  a8f0 <rte_flow_error_set@plt>
               :   55fd1:	movq   $0x0,0x38(%r15,%r12,8)
               :   55fda:	jmpq   54630 <flow_dv_translate+0x2260>
               :   55fdf:	mov    0x278(%r15),%rdx
               :   55fe6:	movabs $0x801780f000,%rcx
               :   55ff0:	test   %rcx,0x8(%rdx)
               :   55ff4:	mov    0x10(%r15),%rax
               :   55ff8:	setne  %dl
               :   55ffb:	movzbl %dl,%edx
               :   55ffe:	mov    0x5364(%rbx),%r13d
               :   56005:	movl   $0x28,0x5358(%rbx)
               :   5600f:	mov    %rax,0x5328(%rbx)
               :   56016:	mov    %edx,0x5360(%rbx)
               :   5601c:	movl   $0x0,0x5364(%rbx)
               :   56026:	test   %rax,%rax
               :   56029:	jne    56035 <flow_dv_translate+0x3c65>
               :   5602b:	movl   $0x1,0x531c(%rbx)
               :   56035:	mov    -0x738(%rbp),%rdi
               :   5603c:	lea    0x5318(%rbx),%rsi
               :   56043:	callq  6a720 <mlx5_hrxq_get>
               :   56048:	test   %rax,%rax
               :   5604b:	je     56629 <flow_dv_translate+0x4259>
               :   56051:	mov    0x54(%rax),%ecx
               :   56054:	mov    0x38(%rax),%rax
               :   56058:	and    $0x10,%r14d
               :   5605c:	mov    %r13d,0x5364(%rbx)
               :   56063:	mov    %ecx,-0x424(%rbp)
               :   56069:	mov    %rax,-0x3c0(%rbp)
               :   56070:	mov    0x278(%r15),%rdx
               :   56077:	je     5607c <flow_dv_translate+0x3cac>
               :   56079:	mov    %ecx,0x1c(%rdx)
               :   5607c:	movzbl 0x1b(%rdx),%eax
               :   56080:	mov    $0x2,%ecx
               :   56085:	and    $0xf,%eax
               :   56088:	or     $0x10,%eax
               :   5608b:	mov    %al,0x1b(%rdx)
               :   5608e:	mov    $0x1,%eax
               :   56093:	mov    -0x3c8(%rbp),%rdx
               :   5609a:	jmpq   54fda <flow_dv_translate+0x2c0a>
               :   5609f:	mov    -0x738(%rbp),%rsi
               :   560a6:	lea    -0x590(%rbp),%rax
               :   560ad:	mov    %rax,-0x650(%rbp)
               :   560b4:	mov    0x30(%rsi),%rax
               :   560b8:	mov    -0x7d0(%rbp),%rdi
               :   560bf:	mov    0x60(%rax),%rax
               :   560c3:	mov    %rsi,-0x6b0(%rbp)
               :   560ca:	mov    0x8(%rax),%rax
               :   560ce:	mov    -0x728(%rbp),%rsi
               :   560d5:	mov    %rdi,-0x6a0(%rbp)
               :   560dc:	mov    0x430(%rax),%rdi
               :   560e3:	mov    %rsi,-0x6a8(%rbp)
               :   560ea:	lea    -0x6b0(%rbp),%rsi
               :   560f1:	movq   $0x0,-0x698(%rbp)
               :   560fc:	callq  a380 <mlx5_list_register@plt>
               :   56101:	test   %rax,%rax
               :   56104:	je     5666f <flow_dv_translate+0x429f>
               :   5610a:	mov    0x30(%rax),%ecx
               :   5610d:	mov    0x278(%r15),%rdx
               :   56114:	mov    %ecx,0x3c(%rdx)
               :   56117:	mov    %rax,0x268(%r15)
               :   5611e:	mov    -0x770(%rbp),%edx
               :   56124:	mov    0x20(%rax),%rax
               :   56128:	mov    %rax,0x38(%r15,%rdx,8)
               :   5612d:	jmpq   52b59 <flow_dv_translate+0x789>
               :   56132:	xor    %eax,%eax
               :   56134:	jmpq   52d09 <flow_dv_translate+0x939>
               :   56139:	xor    %edx,%edx
               :   5613b:	lea    -0x550(%rbp),%r8
               :   56142:	jmpq   52b4d <flow_dv_translate+0x77d>
               :   56147:	mov    %esi,%edi
               :   56149:	jmpq   52a7c <flow_dv_translate+0x6ac>
               :   5614e:	test   %rdx,%rdx
               :   56151:	je     566ec <flow_dv_translate+0x431c>
               :   56157:	mov    0x38(%r15),%rax
               :   5615b:	cmp    %rax,%rdx
               :   5615e:	je     566e5 <flow_dv_translate+0x4315>
               :   56164:	mov    %rax,-0x550(%rbp)
               :   5616b:	mov    $0x1,%ecx
               :   56170:	cmp    $0x1,%r12d
               :   56174:	je     55d94 <flow_dv_translate+0x39c4>
               :   5617a:	mov    0x40(%r15),%rsi
               :   5617e:	cmp    %rsi,%rdx
               :   56181:	je     566de <flow_dv_translate+0x430e>
               :   56187:	mov    %rsi,-0x550(%rbp,%rcx,8)
               :   5618f:	lea    0x1(%rcx),%eax
               :   56192:	cmp    $0x2,%r12d
               :   56196:	je     55f63 <flow_dv_translate+0x3b93>
               :   5619c:	mov    0x48(%r15),%rsi
               :   561a0:	cmp    %rsi,%rdx
               :   561a3:	je     56714 <flow_dv_translate+0x4344>
               :   561a9:	lea    0x1(%rax),%ecx
               :   561ac:	cltq   
               :   561ae:	mov    %rsi,-0x550(%rbp,%rax,8)
               :   561b6:	cmp    $0x3,%r12d
               :   561ba:	je     55d94 <flow_dv_translate+0x39c4>
               :   561c0:	mov    0x50(%r15),%rsi
               :   561c4:	cmp    %rsi,%rdx
               :   561c7:	je     5671b <flow_dv_translate+0x434b>
               :   561cd:	lea    0x1(%rcx),%eax
               :   561d0:	movslq %ecx,%rcx
               :   561d3:	mov    %rsi,-0x550(%rbp,%rcx,8)
               :   561db:	cmp    $0x4,%r12d
               :   561df:	je     55f63 <flow_dv_translate+0x3b93>
               :   561e5:	mov    0x58(%r15),%rcx
               :   561e9:	cmp    %rcx,%rdx
               :   561ec:	je     561fb <flow_dv_translate+0x3e2b>
               :   561ee:	movslq %eax,%rsi
               :   561f1:	mov    %rcx,-0x550(%rbp,%rsi,8)
               :   561f9:	inc    %eax
               :   561fb:	cmp    $0x5,%r12d
               :   561ff:	je     55f63 <flow_dv_translate+0x3b93>
               :   56205:	mov    0x60(%r15),%rcx
               :   56209:	cmp    %rcx,%rdx
               :   5620c:	je     5621b <flow_dv_translate+0x3e4b>
               :   5620e:	movslq %eax,%rsi
               :   56211:	mov    %rcx,-0x550(%rbp,%rsi,8)
               :   56219:	inc    %eax
               :   5621b:	cmp    $0x6,%r12d
               :   5621f:	je     55f63 <flow_dv_translate+0x3b93>
               :   56225:	mov    0x68(%r15),%rcx
               :   56229:	cmp    %rcx,%rdx
               :   5622c:	je     5623b <flow_dv_translate+0x3e6b>
               :   5622e:	movslq %eax,%rsi
               :   56231:	mov    %rcx,-0x550(%rbp,%rsi,8)
               :   56239:	inc    %eax
               :   5623b:	cmp    $0x7,%r12d
               :   5623f:	je     55f63 <flow_dv_translate+0x3b93>
               :   56245:	mov    0x70(%r15),%rcx
               :   56249:	cmp    %rcx,%rdx
               :   5624c:	je     55f63 <flow_dv_translate+0x3b93>
               :   56252:	movslq %eax,%rdx
               :   56255:	mov    %rcx,-0x550(%rbp,%rdx,8)
               :   5625d:	inc    %eax
               :   5625f:	jmpq   55f63 <flow_dv_translate+0x3b93>
               :   56264:	xor    %edi,%edi
               :   56266:	mov    %di,-0x6b0(%rbp)
               :   5626d:	movzbl (%rsi),%edx
               :   56270:	mov    %dl,-0x6b0(%rbp)
               :   56276:	movzwl -0x6b0(%rbp),%edx
               :   5627d:	add    %edx,%eax
               :   5627f:	jmpq   52d13 <flow_dv_translate+0x943>
               :   56284:	mov    -0x728(%rbp),%rdi
               :   5628b:	lea    0x10fb2e(%rip),%r8        # 165dc0 <srtcm.62771+0x10>
               :   56292:	xor    %ecx,%ecx
               :   56294:	mov    $0x1,%edx
               :   56299:	mov    $0x5f,%esi
               :   5629e:	callq  a8f0 <rte_flow_error_set@plt>
               :   562a3:	mov    %eax,%r12d
               :   562a6:	jmpq   54646 <flow_dv_translate+0x2276>
               :   562ab:	lock subl $0x4,(%rsi)
               :   562af:	jmpq   54e32 <flow_dv_translate+0x2a62>
               :   562b4:	xor    %eax,%eax
               :   562b6:	jmpq   52c1e <flow_dv_translate+0x84e>
               :   562bb:	callq  aa60 <__errno_location@plt>
               :   562c0:	lea    0x110432(%rip),%r8        # 1666f9 <srtcm.62771+0x949>
               :   562c7:	jmpq   5518b <flow_dv_translate+0x2dbb>
               :   562cc:	mov    %edi,%esi
               :   562ce:	jmpq   52ab3 <flow_dv_translate+0x6e3>
               :   562d3:	data16 lea 0x13fbf5(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   562db:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   562e3:	lea    0x1104e9(%rip),%r8        # 1667d3 <srtcm.62771+0xa23>
               :   562ea:	jmpq   5518b <flow_dv_translate+0x2dbb>
               :   562ef:	mov    0x8(%r15),%edx
               :   562f3:	jmpq   543f6 <flow_dv_translate+0x2026>
               :   562f8:	mov    0x38(%r15),%rax
               :   562fc:	cmp    %rax,%rcx
               :   562ff:	je     56668 <flow_dv_translate+0x4298>
               :   56305:	mov    %rax,-0x550(%rbp)
               :   5630c:	mov    $0x1,%edx
               :   56311:	cmp    $0x1,%r12d
               :   56315:	je     55ac5 <flow_dv_translate+0x36f5>
               :   5631b:	mov    0x40(%r15),%rsi
               :   5631f:	cmp    %rsi,%rcx
               :   56322:	je     566c8 <flow_dv_translate+0x42f8>
               :   56328:	mov    %rsi,-0x550(%rbp,%rdx,8)
               :   56330:	lea    0x1(%rdx),%eax
               :   56333:	cmp    $0x2,%r12d
               :   56337:	je     55f63 <flow_dv_translate+0x3b93>
               :   5633d:	mov    0x48(%r15),%rsi
               :   56341:	cmp    %rsi,%rcx
               :   56344:	je     5678c <flow_dv_translate+0x43bc>
               :   5634a:	lea    0x1(%rax),%edx
               :   5634d:	cltq   
               :   5634f:	mov    %rsi,-0x550(%rbp,%rax,8)
               :   56357:	cmp    $0x3,%r12d
               :   5635b:	je     55ac5 <flow_dv_translate+0x36f5>
               :   56361:	mov    0x50(%r15),%rsi
               :   56365:	cmp    %rsi,%rcx
               :   56368:	je     56793 <flow_dv_translate+0x43c3>
               :   5636e:	lea    0x1(%rdx),%eax
               :   56371:	movslq %edx,%rdx
               :   56374:	mov    %rsi,-0x550(%rbp,%rdx,8)
               :   5637c:	cmp    $0x4,%r12d
               :   56380:	je     55f63 <flow_dv_translate+0x3b93>
               :   56386:	mov    0x58(%r15),%rdx
               :   5638a:	cmp    %rdx,%rcx
               :   5638d:	je     5639c <flow_dv_translate+0x3fcc>
               :   5638f:	movslq %eax,%rsi
               :   56392:	mov    %rdx,-0x550(%rbp,%rsi,8)
               :   5639a:	inc    %eax
               :   5639c:	cmp    $0x5,%r12d
               :   563a0:	je     55f63 <flow_dv_translate+0x3b93>
               :   563a6:	mov    0x60(%r15),%rdx
               :   563aa:	cmp    %rdx,%rcx
               :   563ad:	je     563bc <flow_dv_translate+0x3fec>
               :   563af:	movslq %eax,%rsi
               :   563b2:	mov    %rdx,-0x550(%rbp,%rsi,8)
               :   563ba:	inc    %eax
               :   563bc:	cmp    $0x6,%r12d
               :   563c0:	je     55f63 <flow_dv_translate+0x3b93>
               :   563c6:	mov    0x68(%r15),%rdx
               :   563ca:	cmp    %rdx,%rcx
               :   563cd:	je     563dc <flow_dv_translate+0x400c>
               :   563cf:	movslq %eax,%rsi
               :   563d2:	mov    %rdx,-0x550(%rbp,%rsi,8)
               :   563da:	inc    %eax
               :   563dc:	cmp    $0x7,%r12d
               :   563e0:	je     55f63 <flow_dv_translate+0x3b93>
               :   563e6:	mov    0x70(%r15),%rdx
               :   563ea:	cmp    %rdx,%rcx
               :   563ed:	je     55f63 <flow_dv_translate+0x3b93>
               :   563f3:	movslq %eax,%rcx
               :   563f6:	mov    %rdx,-0x550(%rbp,%rcx,8)
               :   563fe:	inc    %eax
               :   56400:	jmpq   55f63 <flow_dv_translate+0x3b93>
               :   56405:	mov    0x38(%r15),%rdx
               :   56409:	cmp    %rdx,%rax
               :   5640c:	je     566c1 <flow_dv_translate+0x42f1>
               :   56412:	mov    %rdx,-0x550(%rbp)
               :   56419:	mov    $0x1,%ecx
               :   5641e:	cmp    $0x1,%r12d
               :   56422:	je     55d94 <flow_dv_translate+0x39c4>
               :   56428:	mov    0x40(%r15),%rsi
               :   5642c:	cmp    %rsi,%rax
               :   5642f:	je     566ba <flow_dv_translate+0x42ea>
               :   56435:	mov    %rsi,-0x550(%rbp,%rcx,8)
               :   5643d:	lea    0x1(%rcx),%edx
               :   56440:	cmp    $0x2,%r12d
               :   56444:	je     55ac5 <flow_dv_translate+0x36f5>
               :   5644a:	mov    0x48(%r15),%rsi
               :   5644e:	cmp    %rsi,%rax
               :   56451:	je     567a1 <flow_dv_translate+0x43d1>
               :   56457:	lea    0x1(%rdx),%ecx
               :   5645a:	movslq %edx,%rdx
               :   5645d:	mov    %rsi,-0x550(%rbp,%rdx,8)
               :   56465:	cmp    $0x3,%r12d
               :   56469:	je     55d94 <flow_dv_translate+0x39c4>
               :   5646f:	mov    0x50(%r15),%rsi
               :   56473:	cmp    %rsi,%rax
               :   56476:	je     5679a <flow_dv_translate+0x43ca>
               :   5647c:	lea    0x1(%rcx),%edx
               :   5647f:	movslq %ecx,%rcx
               :   56482:	mov    %rsi,-0x550(%rbp,%rcx,8)
               :   5648a:	cmp    $0x4,%r12d
               :   5648e:	je     55ac5 <flow_dv_translate+0x36f5>
               :   56494:	mov    0x58(%r15),%rcx
               :   56498:	cmp    %rcx,%rax
               :   5649b:	je     564aa <flow_dv_translate+0x40da>
               :   5649d:	movslq %edx,%rsi
               :   564a0:	mov    %rcx,-0x550(%rbp,%rsi,8)
               :   564a8:	inc    %edx
               :   564aa:	cmp    $0x5,%r12d
               :   564ae:	je     55ac5 <flow_dv_translate+0x36f5>
               :   564b4:	mov    0x60(%r15),%rcx
               :   564b8:	cmp    %rcx,%rax
               :   564bb:	je     564ca <flow_dv_translate+0x40fa>
               :   564bd:	movslq %edx,%rsi
               :   564c0:	mov    %rcx,-0x550(%rbp,%rsi,8)
               :   564c8:	inc    %edx
               :   564ca:	cmp    $0x6,%r12d
               :   564ce:	je     55ac5 <flow_dv_translate+0x36f5>
               :   564d4:	mov    0x68(%r15),%rcx
               :   564d8:	cmp    %rcx,%rax
               :   564db:	je     564ea <flow_dv_translate+0x411a>
               :   564dd:	movslq %edx,%rsi
               :   564e0:	mov    %rcx,-0x550(%rbp,%rsi,8)
               :   564e8:	inc    %edx
               :   564ea:	cmp    $0x7,%r12d
               :   564ee:	je     55ac5 <flow_dv_translate+0x36f5>
               :   564f4:	mov    0x70(%r15),%rcx
               :   564f8:	cmp    %rcx,%rax
               :   564fb:	je     55ac5 <flow_dv_translate+0x36f5>
               :   56501:	movslq %edx,%rax
               :   56504:	mov    %rcx,-0x550(%rbp,%rax,8)
               :   5650c:	inc    %edx
               :   5650e:	jmpq   55ac5 <flow_dv_translate+0x36f5>
               :   56513:	mov    -0x728(%rbp),%rdi
               :   5651a:	lea    0x113937(%rip),%r8        # 169e58 <srtcm.62771+0x40a8>
               :   56521:	xor    %ecx,%ecx
               :   56523:	mov    $0x1,%edx
               :   56528:	mov    $0x3d,%esi
               :   5652d:	movslq %r12d,%r12
               :   56530:	callq  a8f0 <rte_flow_error_set@plt>
               :   56535:	movq   $0x0,0x38(%r15,%r12,8)
               :   5653e:	jmpq   54630 <flow_dv_translate+0x2260>
               :   56543:	data16 lea 0x13f985(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   5654b:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   56553:	mov    (%rax),%r9d
               :   56556:	test   %r9d,%r9d
               :   56559:	jne    56567 <flow_dv_translate+0x4197>
               :   5655b:	mov    0x270(%r15),%rax
               :   56562:	jmpq   55160 <flow_dv_translate+0x2d90>
               :   56567:	mov    -0x728(%rbp),%rdi
               :   5656e:	lea    0x11028f(%rip),%r8        # 166804 <srtcm.62771+0xa54>
               :   56575:	xor    %ecx,%ecx
               :   56577:	mov    $0x10,%edx
               :   5657c:	mov    $0x16,%esi
               :   56581:	callq  a8f0 <rte_flow_error_set@plt>
               :   56586:	test   %eax,%eax
               :   56588:	jns    5655b <flow_dv_translate+0x418b>
               :   5658a:	data16 lea 0x13f93e(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   56592:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   5659a:	lea    0x11027e(%rip),%r8        # 16681f <srtcm.62771+0xa6f>
               :   565a1:	jmpq   5518b <flow_dv_translate+0x2dbb>
               :   565a6:	vzeroupper 
               :   565a9:	jmpq   52d09 <flow_dv_translate+0x939>
               :   565ae:	data16 lea 0x13f91a(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   565b6:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   565be:	mov    -0x760(%rbp),%r12d
               :   565c5:	mov    (%rax),%eax
               :   565c7:	neg    %eax
               :   565c9:	jmpq   54fa6 <flow_dv_translate+0x2bd6>
               :   565ce:	test   $0x1,%al
               :   565d0:	sete   -0x63c(%rbp)
               :   565d7:	jmpq   54fae <flow_dv_translate+0x2bde>
               :   565dc:	mov    %eax,%esi
               :   565de:	jmpq   55eb1 <flow_dv_translate+0x3ae1>
               :   565e3:	mov    %esi,%eax
               :   565e5:	jmpq   55e84 <flow_dv_translate+0x3ab4>
               :   565ea:	xor    %esi,%esi
               :   565ec:	jmpq   55e59 <flow_dv_translate+0x3a89>
               :   565f1:	mov    %ecx,%esi
               :   565f3:	jmpq   55ce2 <flow_dv_translate+0x3912>
               :   565f8:	mov    %esi,%ecx
               :   565fa:	jmpq   55cb4 <flow_dv_translate+0x38e4>
               :   565ff:	xor    %esi,%esi
               :   56601:	jmpq   55c89 <flow_dv_translate+0x38b9>
               :   56606:	mov    %esi,%edx
               :   56608:	jmpq   559e5 <flow_dv_translate+0x3615>
               :   5660d:	xor    %esi,%esi
               :   5660f:	jmpq   559ba <flow_dv_translate+0x35ea>
               :   56614:	mov    %esi,%edx
               :   56616:	jmpq   55a41 <flow_dv_translate+0x3671>
               :   5661b:	mov    %edx,%esi
               :   5661d:	jmpq   55a13 <flow_dv_translate+0x3643>
               :   56622:	mov    %esi,%ecx
               :   56624:	jmpq   55d10 <flow_dv_translate+0x3940>
               :   56629:	mov    %r13d,0x5364(%rbx)
               :   56630:	data16 lea 0x13f898(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   56638:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   56640:	mov    -0x728(%rbp),%rdi
               :   56647:	lea    0x1101ed(%rip),%r8        # 16683b <srtcm.62771+0xa8b>
               :   5664e:	xor    %ecx,%ecx
               :   56650:	mov    $0x10,%edx
               :   56655:	mov    (%rax),%esi
               :   56657:	callq  a8f0 <rte_flow_error_set@plt>
               :   5665c:	jmpq   56586 <flow_dv_translate+0x41b6>
               :   56661:	mov    %esi,%eax
               :   56663:	jmpq   55edf <flow_dv_translate+0x3b0f>
               :   56668:	xor    %edx,%edx
               :   5666a:	jmpq   56311 <flow_dv_translate+0x3f41>
               :   5666f:	data16 lea 0x13f859(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   56677:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   5667f:	mov    (%rax),%r8d
               :   56682:	test   %r8d,%r8d
               :   56685:	je     566ae <flow_dv_translate+0x42de>
               :   56687:	mov    -0x728(%rbp),%rdi
               :   5668e:	xor    %ecx,%ecx
               :   56690:	lea    0x11016d(%rip),%r8        # 166804 <srtcm.62771+0xa54>
               :   56697:	mov    $0x10,%edx
               :   5669c:	mov    $0x16,%esi
               :   566a1:	callq  a8f0 <rte_flow_error_set@plt>
               :   566a6:	test   %eax,%eax
               :   566a8:	js     5658a <flow_dv_translate+0x41ba>
               :   566ae:	mov    0x268(%r15),%rax
               :   566b5:	jmpq   5611e <flow_dv_translate+0x3d4e>
               :   566ba:	mov    %ecx,%edx
               :   566bc:	jmpq   56440 <flow_dv_translate+0x4070>
               :   566c1:	xor    %ecx,%ecx
               :   566c3:	jmpq   5641e <flow_dv_translate+0x404e>
               :   566c8:	mov    %edx,%eax
               :   566ca:	jmpq   56333 <flow_dv_translate+0x3f63>
               :   566cf:	mov    %edi,%r12d
               :   566d2:	lea    -0x550(%rbp),%r8
               :   566d9:	jmpq   52b46 <flow_dv_translate+0x776>
               :   566de:	mov    %ecx,%eax
               :   566e0:	jmpq   56192 <flow_dv_translate+0x3dc2>
               :   566e5:	xor    %ecx,%ecx
               :   566e7:	jmpq   56170 <flow_dv_translate+0x3da0>
               :   566ec:	lea    -0x550(%rbp),%r8
               :   566f3:	lea    -0x1(%r12),%eax
               :   566f8:	mov    %r8,%rdi
               :   566fb:	lea    0x8(,%rax,8),%rdx
               :   56703:	lea    0x38(%r15),%rsi
               :   56707:	callq  aeb0 <memcpy@plt>
               :   5670c:	mov    %rax,%r8
               :   5670f:	jmpq   52b46 <flow_dv_translate+0x776>
               :   56714:	mov    %eax,%ecx
               :   56716:	jmpq   561b6 <flow_dv_translate+0x3de6>
               :   5671b:	mov    %ecx,%eax
               :   5671d:	jmpq   561db <flow_dv_translate+0x3e0b>
               :   56722:	mov    -0x728(%rbp),%rdi
               :   56729:	lea    0x10f6d5(%rip),%r8        # 165e05 <srtcm.62771+0x55>
               :   56730:	xor    %ecx,%ecx
               :   56732:	mov    $0x1,%edx
               :   56737:	mov    $0xc,%esi
               :   5673c:	mov    %r10,-0x738(%rbp)
               :   56743:	mov    %r9,-0x730(%rbp)
               :   5674a:	callq  a8f0 <rte_flow_error_set@plt>
               :   5674f:	mov    -0x730(%rbp),%r9
               :   56756:	mov    -0x738(%rbp),%r10
               :   5675d:	mov    %r9,%rsi
               :   56760:	mov    %r10,%rdi
               :   56763:	movslq %r12d,%r12
               :   56766:	callq  50770 <flow_dv_tbl_resource_release>
               :   5676b:	movq   $0x0,0x38(%r15,%r12,8)
               :   56774:	jmpq   54630 <flow_dv_translate+0x2260>
               :   56779:	callq  aaf0 <__stack_chk_fail@plt>
               :   5677e:	mov    -0x760(%rbp),%r12d
               :   56785:	neg    %eax
               :   56787:	jmpq   54fa6 <flow_dv_translate+0x2bd6>
               :   5678c:	mov    %eax,%edx
               :   5678e:	jmpq   56357 <flow_dv_translate+0x3f87>
               :   56793:	mov    %edx,%eax
               :   56795:	jmpq   5637c <flow_dv_translate+0x3fac>
               :   5679a:	mov    %ecx,%edx
               :   5679c:	jmpq   5648a <flow_dv_translate+0x40ba>
               :   567a1:	mov    %edx,%ecx
               :   567a3:	jmpq   56465 <flow_dv_translate+0x4095>
               :   567a8:	nopl   0x0(%rax,%rax,1)
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000063510 <mlx5_rx_burst_mprq>: /* mlx5_rx_burst_mprq total:      2 5.9e-05 */
               :   63510:	endbr64 
               :   63514:	push   %rbp
               :   63515:	mov    %rdi,%r8
               :   63518:	mov    %rsp,%rbp
               :   6351b:	push   %r15
               :   6351d:	push   %r14
               :   6351f:	push   %r13
               :   63521:	push   %r12
               :   63523:	push   %rbx
               :   63524:	and    $0xffffffffffffffe0,%rsp
               :   63528:	sub    $0xc0,%rsp
               :   6352f:	mov    %rsi,0x40(%rsp)
               :   63534:	movzbl 0x2(%rdi),%ecx
               :   63538:	mov    %fs:0x28,%rax
               :   63541:	mov    %rax,0xb8(%rsp)
               :   63549:	xor    %eax,%eax
               :   6354b:	shr    $0x2,%cl
               :   6354e:	mov    $0x1,%eax
               :   63553:	shlx   %ecx,%eax,%ecx
               :   63558:	mov    %ecx,0x48(%rsp)
               :   6355c:	movzwl 0x2(%rdi),%ecx
               :   63560:	shr    $0x7,%cx
               :   63564:	mov    %ecx,%edi
               :   63566:	mov    %ecx,%ebx
               :   63568:	movzbl 0x1(%r8),%ecx
               :   6356d:	and    $0xf,%ebx
               :   63570:	mov    %ecx,%esi
               :   63572:	and    $0xf,%esi
               :   63575:	shr    $0x4,%cl
               :   63578:	shlx   %esi,%eax,%esi
               :   6357d:	mov    %ebx,0x24(%rsp)
               :   63581:	lea    -0x1(%rsi),%ebx
               :   63584:	shlx   %ecx,%eax,%eax
               :   63589:	mov    %ebx,0x4c(%rsp)
               :   6358d:	lea    -0x1(%rax),%ebx
               :   63590:	movzwl 0x24(%r8),%eax
               :   63595:	mov    0x20(%r8),%esi
               :   63599:	mov    %ax,0x76(%rsp)
               :   6359e:	mov    %ebx,%ecx
               :   635a0:	mov    0x120(%r8),%rax
               :   635a7:	and    %esi,%ecx
               :   635a9:	mov    (%rax,%rcx,8),%rax
               :   635ad:	and    $0xf,%edi
               :   635b0:	and    $0xffff,%edx
               :   635b6:	mov    %ebx,0x28(%rsp)
               :   635ba:	mov    %esi,0x38(%rsp)
               :   635be:	mov    %rax,0x30(%rsp)
               :   635c3:	mov    %edx,0x2c(%rsp)
               :   635c7:	je     66359 <mlx5_rx_burst_mprq+0x2e49>
               :   635cd:	mov    $0xffffffff,%eax
               :   635d2:	shlx   %edi,%eax,%edi
               :   635d7:	lea    0x86(%rsp),%rax
               :   635df:	not    %edi
               :   635e1:	mov    %edi,0x20(%rsp)
               :   635e5:	movl   $0x0,0x70(%rsp)
               :   635ed:	mov    %rax,0x18(%rsp)
               :   635f2:	mov    %r8,%r12
               :   635f5:	nopl   (%rax)
               :   635f8:	movzwl 0x76(%rsp),%eax
               :   635fd:	cmp    0x48(%rsp),%eax
               :   63601:	je     64370 <mlx5_rx_burst_mprq+0xe60>
               :   63607:	mov    0x4c(%rsp),%eax
               :   6360b:	mov    0x2c(%r12),%esi
               :   63610:	mov    %eax,%r14d
               :   63613:	mov    0x110(%r12),%rdi
               :   6361b:	and    %esi,%r14d
               :   6361e:	shl    $0x6,%r14
               :   63622:	movq   $0x0,0x78(%rsp)
               :   6362b:	add    %rdi,%r14
               :   6362e:	mov    %eax,%r15d
               :   63631:	lea    0x1(%rax),%r8d
               :   63635:	mov    %r14,%r13
               :   63638:	xor    %r9d,%r9d
               :   6363b:	movzwl 0x38(%r12),%edx
               :   63641:	test   %dx,%dx
               :   63644:	jne    63cf8 <mlx5_rx_burst_mprq+0x7e8>
               :   6364a:	movzbl 0x3f(%r13),%eax
               :   6364f:	mov    %eax,%edx
               :   63651:	shr    $0x4,%dl
               :   63654:	test   %si,%r8w
               :   63658:	setne  %cl
               :   6365b:	and    $0x1,%eax
               :   6365e:	cmp    %al,%cl
               :   63660:	jne    64c10 <mlx5_rx_burst_mprq+0x1700>
               :   63666:	cmp    $0xf,%dl
               :   63669:	je     64c10 <mlx5_rx_burst_mprq+0x1700>
               :   6366f:	sub    $0xd,%edx
               :   63672:	mov    $0xffffffff,%r9d
               :   63678:	cmp    $0x1,%dl
               :   6367b:	jbe    64c20 <mlx5_rx_burst_mprq+0x1710>
               :   63681:	movzbl 0x3f(%r13),%eax
               :   63686:	mov    0x2c(%r12),%r10d
               :   6368b:	xor    $0xc,%eax
               :   6368e:	lea    0x1(%r10),%esi
               :   63692:	test   $0xc,%al
               :   63694:	je     644f0 <mlx5_rx_burst_mprq+0xfe0>
               :   6369a:	mov    %esi,0x2c(%r12)
               :   6369f:	mov    0x2c(%r13),%r13d
               :   636a3:	bswap  %r13d
               :   636a6:	mov    %r13d,%ebx
               :   636a9:	movzbl 0x3(%r12),%eax
               :   636af:	mov    %eax,%edx
               :   636b1:	and    $0x30,%edx
               :   636b4:	jne    63da0 <mlx5_rx_burst_mprq+0x890>
               :   636ba:	test   $0x40000000,%ebx
               :   636c0:	jne    64578 <mlx5_rx_burst_mprq+0x1068>
               :   636c6:	test   %ebx,%ebx
               :   636c8:	je     64c88 <mlx5_rx_burst_mprq+0x1778>
               :   636ce:	movzwl %r13w,%r8d
               :   636d2:	testb  $0x10,(%r12)
               :   636d7:	lea    -0x4(%r8),%eax
               :   636db:	cmove  %r8d,%eax
               :   636df:	cmpq   $0x0,0x78(%rsp)
               :   636e5:	movzwl %r13w,%r15d
               :   636e9:	mov    %eax,%edx
               :   636eb:	je     63de8 <mlx5_rx_burst_mprq+0x8d8>
               :   636f1:	movzbl 0x4(%r12),%eax
               :   636f7:	and    $0xe,%eax
               :   636fa:	cmp    $0x4,%al
               :   636fc:	je     641a0 <mlx5_rx_burst_mprq+0xc90>
               :   63702:	shr    $0x10,%r13d
               :   63706:	and    $0x3fff,%r13w
               :   6370c:	add    %r13w,0x76(%rsp)
               :   63712:	test   %ebx,%ebx
               :   63714:	js     63b18 <mlx5_rx_burst_mprq+0x608>
               :   6371a:	mov    0x78(%rsp),%rax
               :   6371f:	movzwl 0x2(%rax),%ecx
               :   63723:	mov    %r8d,0x50(%rsp)
               :   63728:	xchg   %cl,%ch
               :   6372a:	mov    0x128(%r12),%rdi
               :   63732:	mov    %ecx,0x58(%rsp)
               :   63736:	mov    %ecx,0x60(%rsp)
               :   6373a:	mov    %rdi,0x68(%rsp)
               :   6373f:	data16 lea 0x132701(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   63747:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   6374f:	mov    0x68(%rsp),%rdi
               :   63754:	mov    0x58(%rsp),%ecx
               :   63758:	mov    0x50(%rsp),%r8d
               :   6375d:	mov    (%rax),%ebx
               :   6375f:	mov    0x44(%rdi),%eax
               :   63762:	test   %eax,%eax
               :   63764:	je     641d0 <mlx5_rx_burst_mprq+0xcc0>
               :   6376a:	cmp    $0x7f,%ebx
               :   6376d:	ja     641d0 <mlx5_rx_burst_mprq+0xcc0>
               :   63773:	imul   $0x2040,%rbx,%rbx
               :   6377a:	add    0x60(%rdi),%rbx
               :   6377e:	je     641d2 <mlx5_rx_burst_mprq+0xcc2>
               :   63784:	mov    0x8(%rbx),%edx
               :   63787:	mov    $0x1,%esi
               :   6378c:	mov    %rdx,%rax
               :   6378f:	test   %eax,%eax
               :   63791:	cmove  %eax,%esi
               :   63794:	mov    %eax,%r11d
               :   63797:	sub    %esi,%r11d
               :   6379a:	mov    %r11d,0x8(%rbx)
               :   6379e:	lea    0x40(%rbx,%rdx,8),%rdx
               :   637a3:	test   %eax,%eax
               :   637a5:	je     63b30 <mlx5_rx_burst_mprq+0x620>
               :   637ab:	mov    -0x8(%rdx),%rax
               :   637af:	mov    %rax,0xa8(%rsp)
               :   637b7:	mov    0xa8(%rsp),%rbx
               :   637bf:	test   %rbx,%rbx
               :   637c2:	je     63b9e <mlx5_rx_burst_mprq+0x68e>
               :   637c8:	xor    %eax,%eax
               :   637ca:	movzwl 0x36(%rbx),%esi
               :   637ce:	mov    %ax,0x34(%rbx)
               :   637d2:	movabs $0x2000000000000000,%rax
               :   637dc:	and    %rax,0x18(%rbx)
               :   637e0:	cmp    $0x80,%si
               :   637e5:	mov    $0x80,%eax
               :   637ea:	cmovbe %rsi,%rax
               :   637ee:	movl   $0xffff0001,0x14(%rbx)
               :   637f5:	mov    %ax,0x10(%rbx)
               :   637f9:	movq   $0x0,0x20(%rbx)
               :   63801:	movl   $0x0,0x28(%rbx)
               :   63808:	movq   $0x0,0x40(%rbx)
               :   63810:	movq   $0x0,0x48(%rbx)
               :   63818:	sub    $0x4,%r8d
               :   6381c:	mov    0x30(%rsp),%r10
               :   63821:	testb  $0x10,(%r12)
               :   63826:	cmovne %r8d,%r15d
               :   6382a:	movzbl 0x2(%r12),%r8d
               :   63830:	mov    $0x1,%edi
               :   63835:	shr    $0x2,%r8b
               :   63839:	shlx   %r8d,%edi,%edi
               :   6383e:	lea    (%rdi,%rdi,2),%rdi
               :   63842:	lea    (%r10,%rdi,8),%rdi
               :   63846:	movzbl 0x3(%r12),%r10d
               :   6384c:	movzwl 0x2(%r12),%edx
               :   63852:	mov    %r10d,%r8d
               :   63855:	shr    $0x3,%r8b
               :   63859:	and    $0x1,%r8d
               :   6385d:	shr    $0x7,%dx
               :   63861:	add    %r8d,%r8d
               :   63864:	and    $0xf,%edx
               :   63867:	movzwl %r8w,%r8d
               :   6386b:	movzwl %cx,%r9d
               :   6386f:	shlx   %edx,%r9d,%r9d
               :   63874:	add    %r9d,%r8d
               :   63877:	movslq %r8d,%r8
               :   6387a:	add    %r8,%rdi
               :   6387d:	movzwl 0x104(%r12),%r11d
               :   63886:	lea    0xc0(%rdi),%r9
               :   6388d:	mov    %r9,%r8
               :   63890:	cmp    %r11d,%r15d
               :   63893:	jbe    63c10 <mlx5_rx_burst_mprq+0x700>
               :   63899:	cmpq   $0x0,0x138(%r12)
               :   638a2:	je     63c10 <mlx5_rx_burst_mprq+0x700>
               :   638a8:	movzwl %r13w,%r11d
               :   638ac:	shlx   %edx,%r11d,%r11d
               :   638b1:	mov    %r11d,0x68(%rsp)
               :   638b6:	mov    $0x80,%r11d
               :   638bc:	sub    0x68(%rsp),%r11d
               :   638c1:	mov    %r11d,0x60(%rsp)
               :   638c6:	add    %r15d,%r11d
               :   638c9:	test   %r11d,%r11d
               :   638cc:	jle    64468 <mlx5_rx_burst_mprq+0xf58>
               :   638d2:	and    $0x40,%r10d
               :   638d6:	jne    64468 <mlx5_rx_burst_mprq+0xf58>
               :   638dc:	add    $0xffffff80,%esi
               :   638df:	cmp    %esi,%r15d
               :   638e2:	ja     65d2c <mlx5_rx_burst_mprq+0x281c>
               :   638e8:	nopl   0x0(%rax,%rax,1)
               :   638f0:	add    (%rbx),%rax
               :   638f3:	mov    %r9,%rdx
               :   638f6:	or     %rax,%rdx
               :   638f9:	and    $0x1f,%edx
               :   638fc:	mov    %r15d,%ecx
               :   638ff:	jne    64230 <mlx5_rx_burst_mprq+0xd20>
               :   63905:	cmp    $0xf,%rcx
               :   63909:	jbe    643f0 <mlx5_rx_burst_mprq+0xee0>
               :   6390f:	cmp    $0x20,%rcx
               :   63913:	jbe    65020 <mlx5_rx_burst_mprq+0x1b10>
               :   63919:	cmp    $0x40,%rcx
               :   6391d:	jbe    652b8 <mlx5_rx_burst_mprq+0x1da8>
               :   63923:	lea    -0x40(%rcx),%r10
               :   63927:	shr    $0x6,%r10
               :   6392b:	lea    0x1(%r10),%rsi
               :   6392f:	shl    $0x6,%rsi
               :   63933:	sub    %rax,%rdi
               :   63936:	lea    (%rax,%rsi,1),%r8
               :   6393a:	add    $0xc0,%rdi
               :   63941:	nopl   0x0(%rax)
               :   63948:	lea    (%rax,%rdi,1),%rdx
               :   6394c:	vmovdqu64 (%rdx),%ymm3
               :   63952:	add    $0x40,%rax
               :   63956:	vmovdqu64 %ymm3,-0x40(%rax)
               :   6395d:	vmovdqu64 0x20(%rdx),%ymm4
               :   63964:	vmovdqu64 %ymm4,-0x20(%rax)
               :   6396b:	cmp    %r8,%rax
               :   6396e:	jne    63948 <mlx5_rx_burst_mprq+0x438>
               :   63970:	neg    %r10
               :   63973:	shl    $0x6,%r10
               :   63977:	lea    -0x80(%rcx,%r10,1),%rdx
               :   6397c:	add    %rdx,%rsi
               :   6397f:	add    %rsi,%r9
               :   63982:	vmovdqu64 (%r9),%ymm7
               :   63988:	add    %rdx,%rax
               :   6398b:	vmovdqu64 %ymm7,(%rax)
               :   63991:	vmovdqu64 0x20(%r9),%ymm7
               :   63998:	vmovdqu64 %ymm7,0x20(%rax)
               :   6399f:	nop
               :   639a0:	mov    %r15w,0x28(%rbx)
               :   639a5:	movzbl (%r14),%eax
               :   639a9:	shl    $0x6,%eax
               :   639ac:	cmpq   $0x0,0x78(%rsp)
               :   639b2:	je     639c6 <mlx5_rx_burst_mprq+0x4b6>
               :   639b4:	movzbl 0x4(%r12),%edx
               :   639ba:	and    $0xe,%edx
               :   639bd:	cmp    $0x8,%dl
               :   639c0:	je     64450 <mlx5_rx_burst_mprq+0xf40>
               :   639c6:	movzwl 0x1c(%r14),%edx
               :   639cb:	shr    $0xa,%edx
               :   639ce:	and    $0x3f,%edx
               :   639d1:	or     %eax,%edx
               :   639d3:	shr    $0x6,%al
               :   639d6:	and    $0x1,%eax
               :   639d9:	imul   0x250(%r12),%eax
               :   639e2:	lea    0x1330d7(%rip),%rsi        # 196ac0 <mlx5_ptype_table>
               :   639e9:	movzbl %dl,%edx
               :   639ec:	or     (%rsi,%rdx,4),%eax
               :   639ef:	mov    %eax,0x20(%rbx)
               :   639f2:	testb  $0x10,0x4(%r12)
               :   639f8:	jne    64c90 <mlx5_rx_burst_mprq+0x1780>
               :   639fe:	movzwl 0x18(%r12),%eax
               :   63a04:	mov    %ax,0x16(%rbx)
               :   63a08:	movzbl 0x2(%r12),%edx
               :   63a0e:	test   $0x1,%dl
               :   63a11:	je     63a3f <mlx5_rx_burst_mprq+0x52f>
               :   63a13:	cmpq   $0x0,0x78(%rsp)
               :   63a19:	je     63a27 <mlx5_rx_burst_mprq+0x517>
               :   63a1b:	testb  $0xe,0x4(%r12)
               :   63a21:	je     64ad0 <mlx5_rx_burst_mprq+0x15c0>
               :   63a27:	mov    0xc(%r14),%eax
               :   63a2b:	bswap  %eax
               :   63a2d:	test   %eax,%eax
               :   63a2f:	je     63a3f <mlx5_rx_burst_mprq+0x52f>
               :   63a31:	orq    $0x2,0x18(%rbx)
               :   63a36:	mov    %eax,0x2c(%rbx)
               :   63a39:	movzbl 0x2(%r12),%edx
               :   63a3f:	and    $0x2,%edx
               :   63a42:	je     63a90 <mlx5_rx_burst_mprq+0x580>
               :   63a44:	cmpq   $0x0,0x78(%rsp)
               :   63a4a:	je     63a5d <mlx5_rx_burst_mprq+0x54d>
               :   63a4c:	movzbl 0x4(%r12),%eax
               :   63a52:	and    $0xe,%eax
               :   63a55:	cmp    $0x4,%al
               :   63a57:	je     64be0 <mlx5_rx_burst_mprq+0x16d0>
               :   63a5d:	mov    0x38(%r14),%eax
               :   63a61:	mov    %eax,%edx
               :   63a63:	xor    %dl,%dl
               :   63a65:	test   %edx,%edx
               :   63a67:	je     63a90 <mlx5_rx_burst_mprq+0x580>
               :   63a69:	mov    0x18(%rbx),%rdx
               :   63a6d:	cmp    $0xffffff00,%eax
               :   63a72:	je     64fe8 <mlx5_rx_burst_mprq+0x1ad8>
               :   63a78:	shr    $0x8,%eax
               :   63a7b:	or     $0x2004,%rdx
               :   63a82:	dec    %eax
               :   63a84:	mov    %rdx,0x18(%rbx)
               :   63a88:	mov    %eax,0x30(%rbx)
               :   63a8b:	nopl   0x0(%rax,%rax,1)
               :   63a90:	testb  $0x1,0x4(%r12)
               :   63a96:	jne    642f8 <mlx5_rx_burst_mprq+0xde8>
               :   63a9c:	movzbl (%r12),%eax
               :   63aa1:	test   $0x1,%al
               :   63aa3:	jne    642c8 <mlx5_rx_burst_mprq+0xdb8>
               :   63aa9:	test   $0x8,%al
               :   63aab:	je     63ad5 <mlx5_rx_burst_mprq+0x5c5>
               :   63aad:	cmpq   $0x0,0x78(%rsp)
               :   63ab3:	je     63ac7 <mlx5_rx_burst_mprq+0x5b7>
               :   63ab5:	movzbl 0x4(%r12),%edx
               :   63abb:	and    $0xe,%edx
               :   63abe:	cmp    $0x8,%dl
               :   63ac1:	je     64c00 <mlx5_rx_burst_mprq+0x16f0>
               :   63ac7:	movzwl 0x1c(%r14),%edx
               :   63acc:	and    $0x1,%dh
               :   63acf:	jne    64bc0 <mlx5_rx_burst_mprq+0x16b0>
               :   63ad5:	test   $0x2,%al
               :   63ad7:	jne    64330 <mlx5_rx_burst_mprq+0xe20>
               :   63add:	movzbl 0x20(%r14),%eax
               :   63ae2:	cmp    $0x1,%al
               :   63ae4:	ja     63e10 <mlx5_rx_burst_mprq+0x900>
               :   63aea:	movzwl 0x18(%r12),%eax
               :   63af0:	mov    %r15d,0x24(%rbx)
               :   63af4:	mov    %ax,0x16(%rbx)
               :   63af8:	incl   0x70(%rsp)
               :   63afc:	add    %rcx,0x158(%r12)
               :   63b04:	mov    0x40(%rsp),%rax
               :   63b09:	mov    %rbx,(%rax)
               :   63b0c:	add    $0x8,%rax
               :   63b10:	mov    %rax,0x40(%rsp)
               :   63b15:	vzeroupper 
               :   63b18:	mov    0x70(%rsp),%ebx
               :   63b1c:	cmp    %ebx,0x2c(%rsp)
               :   63b20:	ja     635f8 <mlx5_rx_burst_mprq+0xe8>
               :   63b26:	mov    %ebx,%ecx
               :   63b28:	mov    %r12,%r8
               :   63b2b:	mov    %rcx,%rax
               :   63b2e:	jmp    63baf <mlx5_rx_burst_mprq+0x69f>
               :   63b30:	mov    (%rbx),%eax
               :   63b32:	lea    0x40(%rbx),%rsi
               :   63b36:	lea    0x1(%rax),%edx
               :   63b39:	movslq 0x58(%rdi),%rax
               :   63b3d:	cmp    $0xf,%eax
               :   63b40:	ja     66941 <mlx5_rx_burst_mprq+0x3431>
               :   63b46:	shl    $0x7,%rax
               :   63b4a:	add    0x1323bf(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   63b51:	mov    %r8d,0x58(%rsp)
               :   63b56:	mov    %ecx,0x60(%rsp)
               :   63b5a:	mov    %rdi,0x68(%rsp)
               :   63b5f:	callq  *0x78(%rax)
               :   63b62:	test   %eax,%eax
               :   63b64:	mov    0x68(%rsp),%rdi
               :   63b69:	mov    0x60(%rsp),%ecx
               :   63b6d:	mov    0x58(%rsp),%r8d
               :   63b72:	js     641d2 <mlx5_rx_burst_mprq+0xcc2>
               :   63b78:	mov    (%rbx),%eax
               :   63b7a:	lea    0x1(%rax),%edx
               :   63b7d:	mov    0x38(%rbx,%rdx,8),%rdx
               :   63b82:	mov    %rdx,0xa8(%rsp)
               :   63b8a:	mov    %eax,0x8(%rbx)
               :   63b8d:	mov    0xa8(%rsp),%rbx
               :   63b95:	test   %rbx,%rbx
               :   63b98:	jne    637c8 <mlx5_rx_burst_mprq+0x2b8>
               :   63b9e:	mov    %r12,%r8
               :   63ba1:	incq   0x168(%r8)
               :   63ba8:	mov    0x70(%rsp),%ecx
               :   63bac:	mov    %rcx,%rax
               :   63baf:	movzwl 0x76(%rsp),%ebx
               :   63bb4:	mov    %bx,0x24(%r8)
               :   63bb9:	mov    0x2c(%r8),%edx
               :   63bbd:	bswap  %edx
               :   63bbf:	mov    0x10(%r8),%rsi
               :   63bc3:	mov    0x38(%rsp),%ebx
               :   63bc7:	mov    %edx,(%rsi)
               :   63bc9:	cmp    %ebx,0x20(%r8)
               :   63bcd:	je     63bdf <mlx5_rx_burst_mprq+0x6cf>
               :   63bcf:	mov    %ebx,0x20(%r8)
               :   63bd3:	mov    0x20(%r8),%edx
               :   63bd7:	bswap  %edx
               :   63bd9:	mov    0x8(%r8),%rsi
               :   63bdd:	mov    %edx,(%rsi)
               :   63bdf:	add    %rcx,0x150(%r8)
               :   63be6:	mov    0xb8(%rsp),%rcx
               :   63bee:	xor    %fs:0x28,%rcx
               :   63bf7:	jne    668d4 <mlx5_rx_burst_mprq+0x33c4>
               :   63bfd:	lea    -0x28(%rbp),%rsp
               :   63c01:	pop    %rbx
               :   63c02:	pop    %r12
               :   63c04:	pop    %r13
               :   63c06:	pop    %r14
               :   63c08:	pop    %r15
               :   63c0a:	pop    %rbp
               :   63c0b:	retq   
               :   63c0c:	nopl   0x0(%rax)
               :   63c10:	add    $0xffffff80,%esi
               :   63c13:	cmp    %esi,%r15d
               :   63c16:	jbe    638f0 <mlx5_rx_burst_mprq+0x3e0>
               :   63c1c:	and    $0x40,%r10d
               :   63c20:	je     65d2c <mlx5_rx_burst_mprq+0x281c>
               :   63c26:	add    (%rbx),%rax
               :   63c29:	mov    %r9,%rdx
               :   63c2c:	mov    %r15d,%ecx
               :   63c2f:	or     %rax,%rdx
               :   63c32:	sub    %esi,%ecx
               :   63c34:	and    $0x1f,%edx
               :   63c37:	mov    %ecx,0x68(%rsp)
               :   63c3b:	mov    %esi,%r13d
               :   63c3e:	mov    %esi,%r10d
               :   63c41:	jne    65463 <mlx5_rx_burst_mprq+0x1f53>
               :   63c47:	cmp    $0xf,%r10
               :   63c4b:	jbe    65810 <mlx5_rx_burst_mprq+0x2300>
               :   63c51:	cmp    $0x20,%r10
               :   63c55:	jbe    662f0 <mlx5_rx_burst_mprq+0x2de0>
               :   63c5b:	cmp    $0x40,%r10
               :   63c5f:	jbe    66215 <mlx5_rx_burst_mprq+0x2d05>
               :   63c65:	lea    -0x40(%r10),%rdx
               :   63c69:	shr    $0x6,%rdx
               :   63c6d:	mov    %rdx,%r11
               :   63c70:	lea    0x1(%rdx),%rdx
               :   63c74:	shl    $0x6,%rdx
               :   63c78:	mov    %rdx,0x60(%rsp)
               :   63c7d:	sub    %rax,%rdi
               :   63c80:	lea    (%rax,%rdx,1),%rcx
               :   63c84:	add    $0xc0,%rdi
               :   63c8b:	nopl   0x0(%rax,%rax,1)
               :   63c90:	lea    (%rax,%rdi,1),%rdx
               :   63c94:	vmovdqu64 (%rdx),%ymm6
               :   63c9a:	add    $0x40,%rax
               :   63c9e:	vmovdqu64 %ymm6,-0x40(%rax)
               :   63ca5:	vmovdqu64 0x20(%rdx),%ymm5
               :   63cac:	vmovdqu64 %ymm5,-0x20(%rax)
               :   63cb3:	cmp    %rcx,%rax
               :   63cb6:	jne    63c90 <mlx5_rx_burst_mprq+0x780>
               :   63cb8:	mov    %r11,%rdx
               :   63cbb:	neg    %rdx
               :   63cbe:	shl    $0x6,%rdx
               :   63cc2:	lea    -0x80(%r10,%rdx,1),%rcx
               :   63cc7:	mov    0x60(%rsp),%rdx
               :   63ccc:	add    %rcx,%rax
               :   63ccf:	add    %rcx,%rdx
               :   63cd2:	add    %rdx,%r9
               :   63cd5:	vmovdqu64 (%r9),%ymm4
               :   63cdb:	vmovdqu64 %ymm4,(%rax)
               :   63ce1:	vmovdqu64 0x20(%r9),%ymm5
               :   63ce8:	vmovdqu64 %ymm5,0x20(%rax)
               :   63cef:	jmpq   65860 <mlx5_rx_burst_mprq+0x2350>
               :   63cf4:	nopl   0x0(%rax)
               :   63cf8:	movzwl 0x3a(%r12),%ecx
               :   63cfe:	mov    %r15d,%eax
               :   63d01:	and    %ecx,%eax
               :   63d03:	movzwl %ax,%eax
               :   63d06:	shl    $0x6,%rax
               :   63d0a:	mov    %rdx,%r11
               :   63d0d:	add    %rdi,%rax
               :   63d10:	and    $0x7,%r11d
               :   63d14:	mov    0x4(%rax,%r11,8),%r13d
               :   63d19:	mov    %edx,%r10d
               :   63d1c:	and    $0x7,%r10d
               :   63d20:	and    0x34(%r12),%r13d
               :   63d25:	bswap  %r13d
               :   63d28:	movzwl %r10w,%r10d
               :   63d2c:	lea    (%rax,%r10,8),%rax
               :   63d30:	inc    %edx
               :   63d32:	mov    %rax,0x78(%rsp)
               :   63d37:	mov    %dx,0x38(%r12)
               :   63d3d:	mov    %r13d,%ebx
               :   63d40:	test   $0x7,%dl
               :   63d43:	je     64810 <mlx5_rx_burst_mprq+0x1300>
               :   63d49:	movzwl %dx,%edx
               :   63d4c:	cmp    0x40(%r12),%edx
               :   63d51:	jne    636a9 <mlx5_rx_burst_mprq+0x199>
               :   63d57:	movzwl 0x3e(%r12),%esi
               :   63d5d:	cmp    %cx,%si
               :   63d60:	je     63d82 <mlx5_rx_burst_mprq+0x872>
               :   63d62:	nopw   0x0(%rax,%rax,1)
               :   63d68:	mov    %r15d,%eax
               :   63d6b:	and    %ecx,%eax
               :   63d6d:	movzwl %ax,%eax
               :   63d70:	shl    $0x6,%rax
               :   63d74:	add    %rdi,%rax
               :   63d77:	inc    %ecx
               :   63d79:	movb   $0xf0,0x3f(%rax)
               :   63d7d:	cmp    %cx,%si
               :   63d80:	jne    63d68 <mlx5_rx_burst_mprq+0x858>
               :   63d82:	xor    %eax,%eax
               :   63d84:	mov    %ax,0x38(%r12)
               :   63d8a:	movzbl 0x3(%r12),%eax
               :   63d90:	mov    %esi,0x2c(%r12)
               :   63d95:	mov    %eax,%edx
               :   63d97:	and    $0x30,%edx
               :   63d9a:	je     636ba <mlx5_rx_burst_mprq+0x1aa>
               :   63da0:	cmp    $0x30,%dl
               :   63da3:	jne    63daf <mlx5_rx_burst_mprq+0x89f>
               :   63da5:	cmp    $0xffffffff,%r9d
               :   63da9:	je     64c71 <mlx5_rx_burst_mprq+0x1761>
               :   63daf:	mov    0x4c(%rsp),%r13d
               :   63db4:	mov    0x110(%r12),%rdi
               :   63dbc:	and    %esi,%r13d
               :   63dbf:	sar    $0x10,%ebx
               :   63dc2:	shl    $0x6,%r13
               :   63dc6:	and    $0x3fff,%bx
               :   63dcb:	incq   0x160(%r12)
               :   63dd3:	add    %bx,0x86(%rsp)
               :   63ddb:	add    %rdi,%r13
               :   63dde:	jmpq   6363b <mlx5_rx_burst_mprq+0x12b>
               :   63de3:	nopl   0x0(%rax,%rax,1)
               :   63de8:	shr    $0x10,%r13d
               :   63dec:	and    $0x3fff,%r13w
               :   63df2:	add    %r13w,0x76(%rsp)
               :   63df8:	test   %ebx,%ebx
               :   63dfa:	js     63b18 <mlx5_rx_burst_mprq+0x608>
               :   63e00:	movzwl 0x3c(%r14),%ecx
               :   63e05:	jmpq   63723 <mlx5_rx_burst_mprq+0x213>
               :   63e0a:	nopw   0x0(%rax,%rax,1)
               :   63e10:	movzwl 0x10(%rbx),%edi
               :   63e14:	add    (%rbx),%rdi
               :   63e17:	movzwl 0xc(%rdi),%edx
               :   63e1b:	lea    0xe(%rdi),%rax
               :   63e1f:	cmp    $0xa888,%dx
               :   63e24:	je     63e31 <mlx5_rx_burst_mprq+0x921>
               :   63e26:	cmp    $0x81,%dx
               :   63e2b:	jne    65320 <mlx5_rx_burst_mprq+0x1e10>
               :   63e31:	lea    0x12(%rdi),%rsi
               :   63e35:	nopl   (%rax)
               :   63e38:	movzwl -0x2(%rsi),%edx
               :   63e3c:	mov    %rsi,%rax
               :   63e3f:	lea    0x4(%rsi),%rsi
               :   63e43:	cmp    $0x81,%dx
               :   63e48:	je     63e38 <mlx5_rx_burst_mprq+0x928>
               :   63e4a:	cmp    $0xa888,%dx
               :   63e4f:	je     63e38 <mlx5_rx_burst_mprq+0x928>
               :   63e51:	mov    %eax,%esi
               :   63e53:	sub    %edi,%esi
               :   63e55:	cmp    $0x8,%dx
               :   63e59:	movzbl 0x5(%r14),%edx
               :   63e5e:	je     64858 <mlx5_rx_burst_mprq+0x1348>
               :   63e64:	mov    %dl,0x7(%rax)
               :   63e67:	lea    -0x28(%r15),%edx
               :   63e6b:	sub    %esi,%edx
               :   63e6d:	xchg   %dl,%dh
               :   63e6f:	movzbl 0x6(%rax),%edi
               :   63e73:	mov    %dx,0x4(%rax)
               :   63e77:	mov    %edi,%esi
               :   63e79:	shl    $0x18,%esi
               :   63e7c:	mov    %esi,0xac(%rsp)
               :   63e83:	movzwl %dx,%esi
               :   63e86:	mov    %esi,0xa8(%rsp)
               :   63e8d:	shl    $0x8,%edi
               :   63e90:	add    $0x28,%rax
               :   63e94:	movzwl -0x20(%rax),%edx
               :   63e98:	add    %edx,%edi
               :   63e9a:	movzwl -0x1e(%rax),%edx
               :   63e9e:	add    %edx,%edi
               :   63ea0:	movzwl -0x1c(%rax),%edx
               :   63ea4:	add    %edi,%edx
               :   63ea6:	movzwl -0x1a(%rax),%edi
               :   63eaa:	add    %edi,%edx
               :   63eac:	movzwl -0x18(%rax),%edi
               :   63eb0:	add    %edx,%edi
               :   63eb2:	movzwl -0x16(%rax),%edx
               :   63eb6:	add    %edx,%edi
               :   63eb8:	movzwl -0x14(%rax),%edx
               :   63ebc:	add    %edi,%edx
               :   63ebe:	movzwl -0x12(%rax),%edi
               :   63ec2:	add    %edi,%edx
               :   63ec4:	movzwl -0x10(%rax),%edi
               :   63ec8:	add    %edx,%edi
               :   63eca:	movzwl -0xe(%rax),%edx
               :   63ece:	add    %edx,%edi
               :   63ed0:	movzwl -0xc(%rax),%edx
               :   63ed4:	add    %edi,%edx
               :   63ed6:	movzwl -0xa(%rax),%edi
               :   63eda:	add    %edi,%edx
               :   63edc:	movzwl -0x8(%rax),%edi
               :   63ee0:	add    %edx,%edi
               :   63ee2:	movzwl -0x6(%rax),%edx
               :   63ee6:	add    %edx,%edi
               :   63ee8:	movzwl -0x4(%rax),%edx
               :   63eec:	add    %edi,%edx
               :   63eee:	movzwl -0x2(%rax),%edi
               :   63ef2:	add    %edi,%edx
               :   63ef4:	add    %esi,%edx
               :   63ef6:	mov    %edx,%r8d
               :   63ef9:	shr    $0x10,%r8d
               :   63efd:	movzwl %dx,%edx
               :   63f00:	add    %r8d,%edx
               :   63f03:	mov    %edx,%edi
               :   63f05:	shr    $0x10,%edi
               :   63f08:	add    %edi,%edx
               :   63f0a:	movzwl %dx,%r11d
               :   63f0e:	cmpq   $0x0,0x78(%rsp)
               :   63f14:	je     63f29 <mlx5_rx_burst_mprq+0xa19>
               :   63f16:	movzbl 0x4(%r12),%esi
               :   63f1c:	and    $0xe,%esi
               :   63f1f:	cmp    $0x8,%sil
               :   63f23:	je     64ca0 <mlx5_rx_burst_mprq+0x1790>
               :   63f29:	movzwl 0x1c(%r14),%esi
               :   63f2e:	mov    %esi,%edx
               :   63f30:	xchg   %dl,%dh
               :   63f32:	mov    %edx,%esi
               :   63f34:	shr    $0x4,%sil
               :   63f38:	movzwl 0x14(%r14),%edi
               :   63f3d:	and    $0x7,%esi
               :   63f40:	sub    $0x3,%esi
               :   63f43:	add    %r11d,%edi
               :   63f46:	cmp    $0x1,%sil
               :   63f4a:	ja     63f60 <mlx5_rx_burst_mprq+0xa50>
               :   63f4c:	mov    0x8(%r14),%edx
               :   63f50:	orb    $0x10,0xd(%rax)
               :   63f54:	mov    %edx,0x8(%rax)
               :   63f57:	movzwl 0x6(%r14),%edx
               :   63f5c:	mov    %dx,0xe(%rax)
               :   63f60:	movzbl 0x4(%r14),%edx
               :   63f65:	and    $0x40,%edx
               :   63f68:	je     63f6e <mlx5_rx_burst_mprq+0xa5e>
               :   63f6a:	orb    $0x8,0xd(%rax)
               :   63f6e:	movzbl 0xc(%rax),%esi
               :   63f72:	xor    %edx,%edx
               :   63f74:	shr    $0x4,%sil
               :   63f78:	shl    $0x2,%rsi
               :   63f7c:	and    $0x3c,%esi
               :   63f7f:	lea    (%rsi,%rax,1),%r8
               :   63f83:	mov    %dx,0x10(%rax)
               :   63f87:	mov    %rax,%rdx
               :   63f8a:	cmp    %r8,%rax
               :   63f8d:	je     64146 <mlx5_rx_burst_mprq+0xc36>
               :   63f93:	sub    $0x2,%rsi
               :   63f97:	mov    %rsi,%r9
               :   63f9a:	shr    %r9
               :   63f9d:	inc    %r9
               :   63fa0:	cmp    $0x1c,%rsi
               :   63fa4:	jbe    656a8 <mlx5_rx_burst_mprq+0x2198>
               :   63faa:	mov    %r9,%rsi
               :   63fad:	shr    $0x4,%rsi
               :   63fb1:	shl    $0x5,%rsi
               :   63fb5:	add    %rax,%rsi
               :   63fb8:	vpxor  %xmm2,%xmm2,%xmm2
               :   63fbc:	nopl   0x0(%rax)
               :   63fc0:	vmovdqu16 (%rdx),%ymm0
               :   63fc6:	add    $0x20,%rdx
               :   63fca:	vextracti128 $0x1,%ymm0,%xmm1
               :   63fd0:	vpmovzxwd %xmm1,%ymm1
               :   63fd5:	vpmovzxwd %xmm0,%ymm0
               :   63fda:	vpaddd %ymm0,%ymm1,%ymm0
               :   63fde:	vpaddd %ymm0,%ymm2,%ymm2
               :   63fe2:	cmp    %rdx,%rsi
               :   63fe5:	jne    63fc0 <mlx5_rx_burst_mprq+0xab0>
               :   63fe7:	vextracti128 $0x1,%ymm2,%xmm0
               :   63fed:	vpaddd %xmm2,%xmm0,%xmm2
               :   63ff1:	vpsrldq $0x8,%xmm2,%xmm0
               :   63ff6:	vpaddd %xmm0,%xmm2,%xmm2
               :   63ffa:	vpsrldq $0x4,%xmm2,%xmm0
               :   63fff:	mov    %r9,%r10
               :   64002:	vpaddd %xmm0,%xmm2,%xmm2
               :   64006:	and    $0xfffffffffffffff0,%r10
               :   6400a:	vmovd  %xmm2,%edx
               :   6400e:	lea    (%rax,%r10,2),%rsi
               :   64012:	cmp    %r9,%r10
               :   64015:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   6401b:	movzwl (%rsi),%r9d
               :   6401f:	add    %r9d,%edx
               :   64022:	lea    0x2(%rsi),%r9
               :   64026:	cmp    %r8,%r9
               :   64029:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   6402f:	movzwl 0x2(%rsi),%r9d
               :   64034:	add    %r9d,%edx
               :   64037:	lea    0x4(%rsi),%r9
               :   6403b:	cmp    %r9,%r8
               :   6403e:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   64044:	movzwl 0x4(%rsi),%r9d
               :   64049:	add    %r9d,%edx
               :   6404c:	lea    0x6(%rsi),%r9
               :   64050:	cmp    %r9,%r8
               :   64053:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   64059:	movzwl 0x6(%rsi),%r9d
               :   6405e:	add    %r9d,%edx
               :   64061:	lea    0x8(%rsi),%r9
               :   64065:	cmp    %r9,%r8
               :   64068:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   6406e:	movzwl 0x8(%rsi),%r9d
               :   64073:	add    %r9d,%edx
               :   64076:	lea    0xa(%rsi),%r9
               :   6407a:	cmp    %r9,%r8
               :   6407d:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   64083:	movzwl 0xa(%rsi),%r9d
               :   64088:	add    %r9d,%edx
               :   6408b:	lea    0xc(%rsi),%r9
               :   6408f:	cmp    %r9,%r8
               :   64092:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   64098:	movzwl 0xc(%rsi),%r9d
               :   6409d:	add    %r9d,%edx
               :   640a0:	lea    0xe(%rsi),%r9
               :   640a4:	cmp    %r9,%r8
               :   640a7:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   640ad:	movzwl 0xe(%rsi),%r9d
               :   640b2:	add    %r9d,%edx
               :   640b5:	lea    0x10(%rsi),%r9
               :   640b9:	cmp    %r9,%r8
               :   640bc:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   640be:	movzwl 0x10(%rsi),%r9d
               :   640c3:	add    %r9d,%edx
               :   640c6:	lea    0x12(%rsi),%r9
               :   640ca:	cmp    %r9,%r8
               :   640cd:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   640cf:	movzwl 0x12(%rsi),%r9d
               :   640d4:	add    %r9d,%edx
               :   640d7:	lea    0x14(%rsi),%r9
               :   640db:	cmp    %r9,%r8
               :   640de:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   640e0:	movzwl 0x14(%rsi),%r9d
               :   640e5:	add    %r9d,%edx
               :   640e8:	lea    0x16(%rsi),%r9
               :   640ec:	cmp    %r9,%r8
               :   640ef:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   640f1:	movzwl 0x16(%rsi),%r9d
               :   640f6:	add    %r9d,%edx
               :   640f9:	lea    0x18(%rsi),%r9
               :   640fd:	cmp    %r9,%r8
               :   64100:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   64102:	movzwl 0x18(%rsi),%r9d
               :   64107:	add    %r9d,%edx
               :   6410a:	lea    0x1a(%rsi),%r9
               :   6410e:	cmp    %r9,%r8
               :   64111:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   64113:	movzwl 0x1a(%rsi),%r9d
               :   64118:	add    %r9d,%edx
               :   6411b:	lea    0x1c(%rsi),%r9
               :   6411f:	cmp    %r9,%r8
               :   64122:	je     64130 <mlx5_rx_burst_mprq+0xc20>
               :   64124:	movzwl 0x1c(%rsi),%esi
               :   64128:	add    %esi,%edx
               :   6412a:	nopw   0x0(%rax,%rax,1)
               :   64130:	mov    %edx,%esi
               :   64132:	shr    $0x10,%esi
               :   64135:	movzwl %dx,%edx
               :   64138:	add    %edx,%esi
               :   6413a:	mov    %esi,%edx
               :   6413c:	shr    $0x10,%edx
               :   6413f:	add    %esi,%edx
               :   64141:	movzwl %dx,%edx
               :   64144:	add    %edx,%edi
               :   64146:	mov    %edi,%edx
               :   64148:	shr    $0x10,%edx
               :   6414b:	movzwl %di,%edi
               :   6414e:	add    %edx,%edi
               :   64150:	not    %edi
               :   64152:	test   %di,%di
               :   64155:	mov    $0xffff,%edx
               :   6415a:	cmove  %edx,%edi
               :   6415d:	xor    %edx,%edx
               :   6415f:	mov    %di,0x10(%rax)
               :   64163:	orq    $0x10000,0x18(%rbx)
               :   6416b:	mov    %r15d,%eax
               :   6416e:	movzbl 0x20(%r14),%esi
               :   64173:	div    %esi
               :   64175:	movabs $0xffffff0000ffffff,%rdx
               :   6417f:	and    0x48(%rbx),%rdx
               :   64183:	movzwl %ax,%eax
               :   64186:	shl    $0x18,%rax
               :   6418a:	or     %rdx,%rax
               :   6418d:	mov    %rax,0x48(%rbx)
               :   64191:	jmpq   63aea <mlx5_rx_burst_mprq+0x5da>
               :   64196:	nopw   %cs:0x0(%rax,%rax,1)
               :   641a0:	xor    %r13d,%r13d
               :   641a3:	movzbl 0x24(%rsp),%eax
               :   641a8:	test   %edx,0x20(%rsp)
               :   641ac:	setne  %r13b
               :   641b0:	shrx   %eax,%edx,%eax
               :   641b5:	add    %eax,%r13d
               :   641b8:	add    %r13w,0x76(%rsp)
               :   641be:	test   %ebx,%ebx
               :   641c0:	jns    6371a <mlx5_rx_burst_mprq+0x20a>
               :   641c6:	jmpq   63b18 <mlx5_rx_burst_mprq+0x608>
               :   641cb:	nopl   0x0(%rax,%rax,1)
               :   641d0:	xor    %ebx,%ebx
               :   641d2:	movslq 0x58(%rdi),%rax
               :   641d6:	mov    %r8d,0x60(%rsp)
               :   641db:	mov    %ecx,0x68(%rsp)
               :   641df:	cmp    $0xf,%eax
               :   641e2:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   641e8:	shl    $0x7,%rax
               :   641ec:	add    0x131d1d(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   641f3:	lea    0xa8(%rsp),%rsi
               :   641fb:	mov    $0x1,%edx
               :   64200:	callq  *0x78(%rax)
               :   64203:	test   %eax,%eax
               :   64205:	mov    0x68(%rsp),%ecx
               :   64209:	mov    0x60(%rsp),%r8d
               :   6420e:	jns    637b7 <mlx5_rx_burst_mprq+0x2a7>
               :   64214:	mov    %r12,%r8
               :   64217:	test   %rbx,%rbx
               :   6421a:	je     63ba1 <mlx5_rx_burst_mprq+0x691>
               :   64220:	movl   $0x0,0x8(%rbx)
               :   64227:	jmpq   63ba1 <mlx5_rx_burst_mprq+0x691>
               :   6422c:	nopl   0x0(%rax)
               :   64230:	cmp    $0xf,%rcx
               :   64234:	jbe    643f0 <mlx5_rx_burst_mprq+0xee0>
               :   6423a:	cmp    $0x20,%rcx
               :   6423e:	jbe    64ff8 <mlx5_rx_burst_mprq+0x1ae8>
               :   64244:	cmp    $0x30,%rcx
               :   64248:	jbe    65288 <mlx5_rx_burst_mprq+0x1d78>
               :   6424e:	vmovdqu64 0xc0(%rdi),%ymm0
               :   64255:	cmp    $0x40,%rcx
               :   64259:	jbe    65448 <mlx5_rx_burst_mprq+0x1f38>
               :   6425f:	cmp    $0x100,%rcx
               :   64266:	ja     6577a <mlx5_rx_burst_mprq+0x226a>
               :   6426c:	cmp    $0x7f,%rcx
               :   64270:	ja     6551a <mlx5_rx_burst_mprq+0x200a>
               :   64276:	mov    %rcx,%rdx
               :   64279:	vmovdqu64 %ymm0,(%rax)
               :   6427f:	vmovdqu64 0x20(%r8),%ymm5
               :   64286:	sub    $0x40,%rdx
               :   6428a:	vmovdqu64 %ymm5,0x20(%rax)
               :   64291:	add    $0x40,%r8
               :   64295:	add    $0x40,%rax
               :   64299:	cmp    $0x20,%rdx
               :   6429d:	jbe    656b2 <mlx5_rx_burst_mprq+0x21a2>
               :   642a3:	vmovdqu64 (%r8),%ymm6
               :   642a9:	vmovdqu64 %ymm6,(%rax)
               :   642af:	vmovdqu64 -0x20(%r8,%rdx,1),%ymm7
               :   642b7:	vmovdqu64 %ymm7,-0x20(%rax,%rdx,1)
               :   642bf:	jmpq   639a0 <mlx5_rx_burst_mprq+0x490>
               :   642c4:	nopl   0x0(%rax)
               :   642c8:	movzwl 0x1c(%r14),%eax
               :   642cd:	xchg   %al,%ah
               :   642cf:	mov    %eax,%edx
               :   642d1:	and    $0x200,%dx
               :   642d6:	and    $0x400,%ax
               :   642da:	movzwl %dx,%edx
               :   642dd:	movzwl %ax,%eax
               :   642e0:	or     %rdx,%rax
               :   642e3:	shr    $0x2,%rax
               :   642e7:	or     %rax,0x18(%rbx)
               :   642eb:	movzbl (%r12),%eax
               :   642f0:	jmpq   63aa9 <mlx5_rx_burst_mprq+0x599>
               :   642f5:	nopl   (%rax)
               :   642f8:	mov    0x24(%r14),%eax
               :   642fc:	bswap  %eax
               :   642fe:	and    0x26c(%r12),%eax
               :   64306:	je     63a9c <mlx5_rx_burst_mprq+0x58c>
               :   6430c:	mov    0x260(%r12),%rdx
               :   64314:	or     %rdx,0x18(%rbx)
               :   64318:	movslq 0x268(%r12),%rdx
               :   64320:	mov    %eax,(%rbx,%rdx,1)
               :   64323:	jmpq   63a9c <mlx5_rx_burst_mprq+0x58c>
               :   64328:	nopl   0x0(%rax,%rax,1)
               :   64330:	mov    0x30(%r14),%rdx
               :   64334:	bswap  %rdx
               :   64337:	test   $0x4,%al
               :   64339:	je     6434e <mlx5_rx_burst_mprq+0xe3e>
               :   6433b:	mov    %rdx,%rax
               :   6433e:	shr    $0x20,%rax
               :   64342:	imul   $0x3b9aca00,%rax,%rax
               :   64349:	mov    %edx,%edx
               :   6434b:	add    %rax,%rdx
               :   6434e:	movslq 0x254(%r12),%rax
               :   64356:	mov    %rdx,(%rbx,%rax,1)
               :   6435a:	mov    0x258(%r12),%rax
               :   64362:	or     %rax,0x18(%rbx)
               :   64366:	jmpq   63add <mlx5_rx_burst_mprq+0x5cd>
               :   6436b:	nopl   0x0(%rax,%rax,1)
               :   64370:	mov    0x138(%r12),%rdx
               :   64378:	movzwl 0x38(%rsp),%ecx
               :   6437d:	mov    %rdx,0x88(%rsp)
               :   64385:	mov    0x120(%r12),%rsi
               :   6438d:	and    0x28(%rsp),%cx
               :   64392:	movzwl %cx,%edi
               :   64395:	mov    (%rsi,%rdi,8),%r13
               :   64399:	movzbl 0x2(%r12),%eax
               :   6439f:	mov    0x108(%r12),%r8
               :   643a7:	movzwl 0x8(%r13),%r9d
               :   643ac:	shr    $0x2,%al
               :   643af:	and    $0x1f,%eax
               :   643b2:	cmp    $0x1,%r9w
               :   643b7:	ja     64ae0 <mlx5_rx_burst_mprq+0x15d0>
               :   643bd:	mov    %rdx,%rbx
               :   643c0:	test   %rdx,%rdx
               :   643c3:	je     65c6a <mlx5_rx_burst_mprq+0x275a>
               :   643c9:	incl   0x38(%rsp)
               :   643cd:	mov    0x28(%rsp),%eax
               :   643d1:	mov    0x38(%rsp),%ebx
               :   643d5:	and    %ebx,%eax
               :   643d7:	mov    (%rsi,%rax,8),%rax
               :   643db:	mov    %rax,0x30(%rsp)
               :   643e0:	xor    %eax,%eax
               :   643e2:	mov    %ax,0x76(%rsp)
               :   643e7:	jmpq   63607 <mlx5_rx_burst_mprq+0xf7>
               :   643ec:	nopl   0x0(%rax)
               :   643f0:	test   $0x8,%r15b
               :   643f4:	je     64408 <mlx5_rx_burst_mprq+0xef8>
               :   643f6:	mov    0xc0(%rdi),%rdx
               :   643fd:	lea    0x8(%r9),%r8
               :   64401:	mov    %rdx,(%rax)
               :   64404:	add    $0x8,%rax
               :   64408:	test   $0x4,%r15b
               :   6440c:	je     6441c <mlx5_rx_burst_mprq+0xf0c>
               :   6440e:	mov    (%r8),%edx
               :   64411:	add    $0x4,%rax
               :   64415:	mov    %edx,-0x4(%rax)
               :   64418:	add    $0x4,%r8
               :   6441c:	test   $0x2,%r15b
               :   64420:	je     64432 <mlx5_rx_burst_mprq+0xf22>
               :   64422:	movzwl (%r8),%edx
               :   64426:	add    $0x2,%rax
               :   6442a:	mov    %dx,-0x2(%rax)
               :   6442e:	add    $0x2,%r8
               :   64432:	test   $0x1,%r15b
               :   64436:	je     639a0 <mlx5_rx_burst_mprq+0x490>
               :   6443c:	movzbl (%r8),%edx
               :   64440:	mov    %dl,(%rax)
               :   64442:	jmpq   639a0 <mlx5_rx_burst_mprq+0x490>
               :   64447:	nopw   0x0(%rax,%rax,1)
               :   64450:	mov    0x78(%rsp),%rdi
               :   64455:	movzbl 0x1(%rdi),%edx
               :   64459:	shr    $0x2,%dl
               :   6445c:	jmpq   639d1 <mlx5_rx_burst_mprq+0x4c1>
               :   64461:	nopl   0x0(%rax)
               :   64468:	mov    0x30(%rsp),%r10
               :   6446d:	lock incw 0x8(%r10)
               :   64473:	add    $0x40,%rdi
               :   64477:	movzwl %cx,%ecx
               :   6447a:	mov    %rdi,%rsi
               :   6447d:	lea    (%rcx,%rcx,2),%rax
               :   64481:	sub    %r10,%rsi
               :   64484:	shl    $0x3,%rax
               :   64488:	add    -0x8(%r10),%rsi
               :   6448c:	movw   $0x1,0x20(%r10,%rax,1)
               :   64494:	mov    $0x1,%ecx
               :   64499:	shlx   %edx,%ecx,%edx
               :   6449e:	imul   %edx,%r13d
               :   644a2:	lea    0x10(%r10,%rax,1),%rax
               :   644a7:	mov    %rdi,(%rbx)
               :   644aa:	mov    $0x80,%r10d
               :   644b0:	movabs $0x2000000000000000,%rdi
               :   644ba:	or     %rdi,0x18(%rbx)
               :   644be:	mov    %rsi,0x8(%rbx)
               :   644c2:	mov    %r13w,0x36(%rbx)
               :   644c7:	mov    %rax,0x50(%rbx)
               :   644cb:	mov    %r10w,0x10(%rbx)
               :   644d0:	mov    %r15w,0x28(%rbx)
               :   644d5:	test   %r11d,%r11d
               :   644d8:	jg     64cf0 <mlx5_rx_burst_mprq+0x17e0>
               :   644de:	mov    %r15d,%ecx
               :   644e1:	jmpq   639a5 <mlx5_rx_burst_mprq+0x495>
               :   644e6:	nopw   %cs:0x0(%rax,%rax,1)
               :   644f0:	mov    0x4c(%rsp),%eax
               :   644f4:	mov    0x110(%r12),%r11
               :   644fc:	and    %esi,%eax
               :   644fe:	shl    $0x6,%rax
               :   64502:	lea    (%r11,%rax,1),%rbx
               :   64506:	mov    %rbx,0x78(%rsp)
               :   6450b:	mov    0x2c(%r13),%edi
               :   6450f:	bswap  %edi
               :   64511:	mov    0x4(%rbx),%r13d
               :   64515:	mov    %edi,0x40(%r12)
               :   6451a:	lea    0x7(%rsi),%eax
               :   6451d:	add    %r10d,%edi
               :   64520:	mov    %si,0x3a(%r12)
               :   64526:	mov    %ax,0x3c(%r12)
               :   6452c:	mov    %di,0x3e(%r12)
               :   64532:	mov    %esi,%ecx
               :   64534:	and    0x34(%r12),%r13d
               :   64539:	bswap  %r13d
               :   6453c:	mov    $0x1,%eax
               :   64541:	mov    %ax,0x38(%r12)
               :   64547:	mov    %r13d,%ebx
               :   6454a:	cmp    %di,%si
               :   6454d:	je     64569 <mlx5_rx_burst_mprq+0x1059>
               :   6454f:	nop
               :   64550:	mov    %r15d,%eax
               :   64553:	and    %ecx,%eax
               :   64555:	movzwl %ax,%eax
               :   64558:	shl    $0x6,%rax
               :   6455c:	add    %r11,%rax
               :   6455f:	prefetcht0 (%rax)
               :   64562:	inc    %ecx
               :   64564:	cmp    %cx,%di
               :   64567:	jne    64550 <mlx5_rx_burst_mprq+0x1040>
               :   64569:	mov    %r10d,%esi
               :   6456c:	jmpq   636a9 <mlx5_rx_burst_mprq+0x199>
               :   64571:	nopl   0x0(%rax)
               :   64578:	cmp    $0xfffffffc,%ebx
               :   6457b:	je     64c55 <mlx5_rx_burst_mprq+0x1745>
               :   64581:	movzwl 0x86(%rsp),%eax
               :   64589:	mov    0x48(%rsp),%r15d
               :   6458e:	add    %ax,0x76(%rsp)
               :   64593:	movzwl 0x76(%rsp),%eax
               :   64598:	mov    %eax,%r13d
               :   6459b:	cmp    %eax,%r15d
               :   6459e:	ja     64737 <mlx5_rx_burst_mprq+0x1227>
               :   645a4:	movzwl 0x28(%rsp),%eax
               :   645a9:	mov    %ebx,0x58(%rsp)
               :   645ad:	mov    %ax,0x76(%rsp)
               :   645b2:	lea    0xa8(%rsp),%rax
               :   645ba:	mov    %rax,0x50(%rsp)
               :   645bf:	mov    0x120(%r12),%rsi
               :   645c7:	mov    0x38(%rsp),%r14d
               :   645cc:	jmp    645ec <mlx5_rx_burst_mprq+0x10dc>
               :   645ce:	xchg   %ax,%ax
               :   645d0:	test   %rdx,%rdx
               :   645d3:	je     65090 <mlx5_rx_burst_mprq+0x1b80>
               :   645d9:	sub    %r15d,%r13d
               :   645dc:	movzwl %r13w,%eax
               :   645e0:	inc    %r14d
               :   645e3:	cmp    %r15d,%eax
               :   645e6:	jb     64718 <mlx5_rx_burst_mprq+0x1208>
               :   645ec:	mov    0x138(%r12),%rdx
               :   645f4:	movzwl 0x76(%rsp),%ecx
               :   645f9:	mov    %rdx,0x90(%rsp)
               :   64601:	and    %r14d,%ecx
               :   64604:	movzwl %cx,%edi
               :   64607:	mov    (%rsi,%rdi,8),%r9
               :   6460b:	movzbl 0x2(%r12),%eax
               :   64611:	mov    0x108(%r12),%r10
               :   64619:	movzwl 0x8(%r9),%r11d
               :   6461e:	shr    $0x2,%al
               :   64621:	and    $0x1f,%eax
               :   64624:	cmp    $0x1,%r11w
               :   64629:	jbe    645d0 <mlx5_rx_burst_mprq+0x10c0>
               :   6462b:	mov    %rdx,(%rsi,%rdi,8)
               :   6462f:	mov    $0x1,%esi
               :   64634:	shlx   %eax,%esi,%eax
               :   64639:	movzwl %cx,%ecx
               :   6463c:	lea    (%rax,%rax,2),%rax
               :   64640:	shl    $0x5,%rcx
               :   64644:	lea    0xc0(%rdx,%rax,8),%rdx
               :   6464c:	add    %r10,%rcx
               :   6464f:	mov    %rdx,%rax
               :   64652:	bswap  %rax
               :   64655:	mov    %rax,0x18(%rcx)
               :   64659:	mov    0xf4(%r12),%eax
               :   64661:	dec    %eax
               :   64663:	cmp    $0x1,%eax
     1 3.0e-05 :   64666:	ja     652e0 <mlx5_rx_burst_mprq+0x1dd0>
               :   6466c:	mov    %r9,0x68(%rsp)
               :   64671:	data16 lea 0x1317cf(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   64679:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   64681:	mov    0x130(%r12),%rbx
               :   64689:	mov    0x68(%rsp),%r9
               :   6468e:	mov    0x44(%rbx),%esi
               :   64691:	test   %esi,%esi
               :   64693:	mov    (%rax),%ecx
               :   64695:	je     647b8 <mlx5_rx_burst_mprq+0x12a8>
               :   6469b:	cmp    $0x7f,%ecx
               :   6469e:	ja     647b8 <mlx5_rx_burst_mprq+0x12a8>
               :   646a4:	imul   $0x2040,%rcx,%rcx
               :   646ab:	add    0x60(%rbx),%rcx
               :   646af:	je     647ba <mlx5_rx_burst_mprq+0x12aa>
               :   646b5:	mov    0x8(%rcx),%eax
               :   646b8:	mov    $0x1,%esi
               :   646bd:	mov    %rax,%rdx
               :   646c0:	test   %edx,%edx
               :   646c2:	cmove  %edx,%esi
               :   646c5:	mov    %edx,%edi
               :   646c7:	sub    %esi,%edi
               :   646c9:	mov    %edi,0x8(%rcx)
               :   646cc:	lea    0x40(%rcx,%rax,8),%rax
               :   646d1:	test   %edx,%edx
               :   646d3:	je     64758 <mlx5_rx_burst_mprq+0x1248>
               :   646d9:	mov    -0x8(%rax),%rax
               :   646dd:	mov    %rax,0x90(%rsp)
               :   646e5:	mov    0x90(%rsp),%rcx
               :   646ed:	mov    %rcx,0x138(%r12)
               :   646f5:	mov    %r9,%rdi
               :   646f8:	sub    %r15d,%r13d
               :   646fb:	callq  63500 <mlx5_mprq_buf_free>
               :   64700:	movzwl %r13w,%eax
               :   64704:	mov    0x120(%r12),%rsi
               :   6470c:	inc    %r14d
               :   6470f:	cmp    %r15d,%eax
               :   64712:	jae    645ec <mlx5_rx_burst_mprq+0x10dc>
               :   64718:	mov    0x28(%rsp),%eax
               :   6471c:	mov    %r13w,0x76(%rsp)
               :   64722:	and    %r14d,%eax
               :   64725:	mov    (%rsi,%rax,8),%rax
               :   64729:	mov    %r14d,0x38(%rsp)
               :   6472e:	mov    %rax,0x30(%rsp)
               :   64733:	mov    0x58(%rsp),%ebx
               :   64737:	mov    0x4c(%rsp),%r14d
               :   6473c:	mov    %ebx,%r13d
               :   6473f:	and    0x2c(%r12),%r14d
               :   64744:	shl    $0x6,%r14
               :   64748:	add    0x110(%r12),%r14
               :   64750:	jmpq   636ce <mlx5_rx_burst_mprq+0x1be>
               :   64755:	nopl   (%rax)
               :   64758:	mov    (%rcx),%eax
               :   6475a:	lea    0x40(%rcx),%rsi
               :   6475e:	lea    0x1(%rax),%edx
               :   64761:	movslq 0x58(%rbx),%rax
               :   64765:	cmp    $0xf,%eax
               :   64768:	ja     66932 <mlx5_rx_burst_mprq+0x3422>
               :   6476e:	shl    $0x7,%rax
               :   64772:	add    0x131797(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   64779:	mov    %rbx,%rdi
               :   6477c:	mov    %r9,0x60(%rsp)
               :   64781:	mov    %rcx,0x68(%rsp)
               :   64786:	callq  *0x78(%rax)
               :   64789:	test   %eax,%eax
               :   6478b:	mov    0x68(%rsp),%rcx
               :   64790:	mov    0x60(%rsp),%r9
               :   64795:	js     647ba <mlx5_rx_burst_mprq+0x12aa>
               :   64797:	mov    (%rcx),%eax
               :   64799:	lea    0x1(%rax),%edx
               :   6479c:	mov    0x38(%rcx,%rdx,8),%rdx
               :   647a1:	mov    %eax,0x8(%rcx)
               :   647a4:	mov    %rdx,0x90(%rsp)
               :   647ac:	jmpq   646e5 <mlx5_rx_burst_mprq+0x11d5>
               :   647b1:	nopl   0x0(%rax)
               :   647b8:	xor    %ecx,%ecx
               :   647ba:	movslq 0x58(%rbx),%rax
               :   647be:	mov    %r9,0x68(%rsp)
               :   647c3:	mov    %rcx,0x60(%rsp)
               :   647c8:	cmp    $0xf,%eax
               :   647cb:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   647d1:	shl    $0x7,%rax
               :   647d5:	add    0x131734(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   647dc:	lea    0x90(%rsp),%rsi
               :   647e4:	mov    $0x1,%edx
               :   647e9:	mov    %rbx,%rdi
               :   647ec:	callq  *0x78(%rax)
               :   647ef:	test   %eax,%eax
               :   647f1:	mov    0x68(%rsp),%r9
               :   647f6:	js     656d0 <mlx5_rx_burst_mprq+0x21c0>
               :   647fc:	je     646e5 <mlx5_rx_burst_mprq+0x11d5>
               :   64802:	xor    %ecx,%ecx
               :   64804:	jmpq   646ed <mlx5_rx_burst_mprq+0x11dd>
               :   64809:	nopl   0x0(%rax)
               :   64810:	movzwl 0x3c(%r12),%r10d
               :   64816:	cmp    %r10w,%cx
               :   6481a:	je     6483b <mlx5_rx_burst_mprq+0x132b>
               :   6481c:	nopl   0x0(%rax)
               :   64820:	mov    %r15d,%eax
               :   64823:	and    %ecx,%eax
               :   64825:	movzwl %ax,%eax
               :   64828:	shl    $0x6,%rax
               :   6482c:	add    %rdi,%rax
               :   6482f:	inc    %ecx
               :   64831:	movb   $0xf0,0x3f(%rax)
               :   64835:	cmp    %cx,%r10w
               :   64839:	jne    64820 <mlx5_rx_burst_mprq+0x1310>
               :   6483b:	lea    0x8(%r10),%eax
               :   6483f:	mov    %r10w,0x3a(%r12)
               :   64845:	mov    %ax,0x3c(%r12)
               :   6484b:	mov    %r10d,%ecx
               :   6484e:	jmpq   63d49 <mlx5_rx_burst_mprq+0x839>
               :   64853:	nopl   0x0(%rax,%rax,1)
               :   64858:	mov    %dl,0x8(%rax)
               :   6485b:	mov    %r15d,%edx
               :   6485e:	sub    %esi,%edx
               :   64860:	xchg   %dl,%dh
               :   64862:	movzbl (%rax),%r11d
               :   64866:	xor    %esi,%esi
               :   64868:	and    $0xf,%r11d
               :   6486c:	shl    $0x2,%r11d
               :   64870:	movzbl %r11b,%edi
               :   64874:	lea    (%rdi,%rax,1),%r8
               :   64878:	mov    %si,0xa(%rax)
               :   6487c:	mov    %dx,0x2(%rax)
               :   64880:	mov    %rax,%rsi
               :   64883:	cmp    %r8,%rax
               :   64886:	je     65d9e <mlx5_rx_burst_mprq+0x288e>
               :   6488c:	sub    $0x2,%rdi
               :   64890:	mov    %rdi,%r9
               :   64893:	shr    %r9
               :   64896:	inc    %r9
               :   64899:	cmp    $0x1c,%rdi
               :   6489d:	jbe    65de2 <mlx5_rx_burst_mprq+0x28d2>
               :   648a3:	mov    %r9,%rdi
               :   648a6:	shr    $0x4,%rdi
               :   648aa:	shl    $0x5,%rdi
               :   648ae:	add    %rax,%rdi
               :   648b1:	vpxor  %xmm2,%xmm2,%xmm2
               :   648b5:	nopl   (%rax)
               :   648b8:	vmovdqu16 (%rsi),%ymm0
               :   648be:	add    $0x20,%rsi
               :   648c2:	vextracti128 $0x1,%ymm0,%xmm1
               :   648c8:	vpmovzxwd %xmm1,%ymm1
               :   648cd:	vpmovzxwd %xmm0,%ymm0
               :   648d2:	vpaddd %ymm0,%ymm1,%ymm0
               :   648d6:	vpaddd %ymm0,%ymm2,%ymm2
               :   648da:	cmp    %rdi,%rsi
               :   648dd:	jne    648b8 <mlx5_rx_burst_mprq+0x13a8>
               :   648df:	vextracti128 $0x1,%ymm2,%xmm0
               :   648e5:	vpaddd %xmm2,%xmm0,%xmm2
               :   648e9:	vpsrldq $0x8,%xmm2,%xmm0
               :   648ee:	vpaddd %xmm0,%xmm2,%xmm2
               :   648f2:	vpsrldq $0x4,%xmm2,%xmm0
               :   648f7:	mov    %r9,%r10
               :   648fa:	vpaddd %xmm0,%xmm2,%xmm2
               :   648fe:	and    $0xfffffffffffffff0,%r10
               :   64902:	vmovd  %xmm2,%esi
               :   64906:	lea    (%rax,%r10,2),%rdi
               :   6490a:	cmp    %r9,%r10
               :   6490d:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   64913:	movzwl (%rdi),%r9d
               :   64917:	add    %r9d,%esi
               :   6491a:	lea    0x2(%rdi),%r9
               :   6491e:	cmp    %r9,%r8
               :   64921:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   64927:	movzwl 0x2(%rdi),%r9d
               :   6492c:	add    %r9d,%esi
               :   6492f:	lea    0x4(%rdi),%r9
               :   64933:	cmp    %r9,%r8
               :   64936:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   6493c:	movzwl 0x4(%rdi),%r9d
               :   64941:	add    %r9d,%esi
               :   64944:	lea    0x6(%rdi),%r9
               :   64948:	cmp    %r9,%r8
               :   6494b:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   64951:	movzwl 0x6(%rdi),%r9d
               :   64956:	add    %r9d,%esi
               :   64959:	lea    0x8(%rdi),%r9
               :   6495d:	cmp    %r9,%r8
               :   64960:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   64966:	movzwl 0x8(%rdi),%r9d
               :   6496b:	add    %r9d,%esi
               :   6496e:	lea    0xa(%rdi),%r9
               :   64972:	cmp    %r9,%r8
               :   64975:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   6497b:	movzwl 0xa(%rdi),%r9d
               :   64980:	add    %r9d,%esi
               :   64983:	lea    0xc(%rdi),%r9
               :   64987:	cmp    %r9,%r8
               :   6498a:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   64990:	movzwl 0xc(%rdi),%r9d
               :   64995:	add    %r9d,%esi
               :   64998:	lea    0xe(%rdi),%r9
               :   6499c:	cmp    %r9,%r8
               :   6499f:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   649a1:	movzwl 0xe(%rdi),%r9d
               :   649a6:	add    %r9d,%esi
               :   649a9:	lea    0x10(%rdi),%r9
               :   649ad:	cmp    %r9,%r8
               :   649b0:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   649b2:	movzwl 0x10(%rdi),%r9d
               :   649b7:	add    %r9d,%esi
               :   649ba:	lea    0x12(%rdi),%r9
               :   649be:	cmp    %r9,%r8
               :   649c1:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   649c3:	movzwl 0x12(%rdi),%r9d
               :   649c8:	add    %r9d,%esi
               :   649cb:	lea    0x14(%rdi),%r9
               :   649cf:	cmp    %r9,%r8
               :   649d2:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   649d4:	movzwl 0x14(%rdi),%r9d
               :   649d9:	add    %r9d,%esi
               :   649dc:	lea    0x16(%rdi),%r9
               :   649e0:	cmp    %r9,%r8
               :   649e3:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   649e5:	movzwl 0x16(%rdi),%r9d
               :   649ea:	add    %r9d,%esi
               :   649ed:	lea    0x18(%rdi),%r9
               :   649f1:	cmp    %r9,%r8
               :   649f4:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   649f6:	movzwl 0x18(%rdi),%r9d
               :   649fb:	add    %r9d,%esi
               :   649fe:	lea    0x1a(%rdi),%r9
               :   64a02:	cmp    %r9,%r8
               :   64a05:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   64a07:	movzwl 0x1a(%rdi),%r9d
               :   64a0c:	add    %r9d,%esi
               :   64a0f:	lea    0x1c(%rdi),%r9
               :   64a13:	cmp    %r9,%r8
               :   64a16:	je     64a20 <mlx5_rx_burst_mprq+0x1510>
               :   64a18:	movzwl 0x1c(%rdi),%edi
               :   64a1c:	add    %edi,%esi
               :   64a1e:	xchg   %ax,%ax
               :   64a20:	mov    %esi,%edi
               :   64a22:	shr    $0x10,%edi
               :   64a25:	movzwl %si,%r8d
               :   64a29:	add    %edi,%r8d
               :   64a2c:	shr    $0x10,%r8d
               :   64a30:	add    %edi,%esi
               :   64a32:	add    %r8d,%esi
               :   64a35:	not    %esi
               :   64a37:	mov    0xc(%rax),%rdi
               :   64a3b:	mov    %si,0xa(%rax)
               :   64a3f:	mov    0xc(%rax),%esi
               :   64a42:	mov    %rdi,0xa8(%rsp)
               :   64a4a:	movb   $0x0,0xb0(%rsp)
               :   64a52:	movzbl 0x9(%rax),%edi
               :   64a56:	mov    %dil,0xb1(%rsp)
               :   64a5e:	xchg   %dl,%dh
               :   64a60:	movzbl %r11b,%r11d
               :   64a64:	sub    %r11d,%edx
               :   64a67:	xchg   %dl,%dh
               :   64a69:	movzwl 0xac(%rsp),%r8d
               :   64a72:	movzwl 0xaa(%rsp),%edi
               :   64a7a:	mov    %dx,0xb2(%rsp)
               :   64a82:	add    %r8d,%edi
               :   64a85:	movzwl 0xae(%rsp),%r8d
               :   64a8e:	movzwl %dx,%edx
               :   64a91:	add    %edi,%r8d
               :   64a94:	movzwl 0xb0(%rsp),%edi
               :   64a9c:	movzwl %si,%esi
               :   64a9f:	add    %r8d,%edi
               :   64aa2:	add    %edi,%edx
               :   64aa4:	add    %esi,%edx
               :   64aa6:	mov    %edx,%r8d
               :   64aa9:	shr    $0x10,%r8d
               :   64aad:	movzwl %dx,%edx
               :   64ab0:	add    %r8d,%edx
               :   64ab3:	mov    %edx,%edi
               :   64ab5:	shr    $0x10,%edi
               :   64ab8:	add    %edi,%edx
               :   64aba:	movzwl %dx,%r11d
               :   64abe:	add    $0x14,%rax
               :   64ac2:	jmpq   63f0e <mlx5_rx_burst_mprq+0x9fe>
               :   64ac7:	nopw   0x0(%rax,%rax,1)
               :   64ad0:	mov    0x78(%rsp),%rax
               :   64ad5:	mov    (%rax),%eax
               :   64ad7:	bswap  %eax
               :   64ad9:	jmpq   63a2d <mlx5_rx_burst_mprq+0x51d>
               :   64ade:	xchg   %ax,%ax
               :   64ae0:	movzwl %cx,%ecx
               :   64ae3:	shl    $0x5,%rcx
               :   64ae7:	lea    (%r8,%rcx,1),%rbx
               :   64aeb:	mov    $0x1,%ecx
               :   64af0:	shlx   %eax,%ecx,%eax
               :   64af5:	lea    (%rax,%rax,2),%rax
               :   64af9:	mov    %rdx,(%rsi,%rdi,8)
               :   64afd:	lea    0xc0(%rdx,%rax,8),%rdx
               :   64b05:	mov    %rdx,%rax
               :   64b08:	bswap  %rax
               :   64b0b:	mov    %rax,0x18(%rbx)
               :   64b0f:	mov    0xf4(%r12),%eax
               :   64b17:	dec    %eax
               :   64b19:	cmp    $0x1,%eax
               :   64b1c:	ja     65da8 <mlx5_rx_burst_mprq+0x2898>
               :   64b22:	data16 lea 0x13131e(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   64b2a:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   64b32:	mov    0x130(%r12),%r14
               :   64b3a:	mov    0x44(%r14),%ecx
               :   64b3e:	mov    (%rax),%eax
               :   64b40:	test   %ecx,%ecx
               :   64b42:	je     64cae <mlx5_rx_burst_mprq+0x179e>
               :   64b48:	cmp    $0x7f,%eax
               :   64b4b:	ja     64cae <mlx5_rx_burst_mprq+0x179e>
               :   64b51:	mov    %eax,%ebx
               :   64b53:	imul   $0x2040,%rbx,%rbx
               :   64b5a:	add    0x60(%r14),%rbx
               :   64b5e:	je     64cb0 <mlx5_rx_burst_mprq+0x17a0>
               :   64b64:	mov    0x8(%rbx),%eax
               :   64b67:	mov    $0x1,%ecx
               :   64b6c:	mov    %rax,%rdx
               :   64b6f:	test   %edx,%edx
               :   64b71:	cmove  %edx,%ecx
               :   64b74:	mov    %edx,%edi
               :   64b76:	sub    %ecx,%edi
               :   64b78:	mov    %edi,0x8(%rbx)
               :   64b7b:	lea    0x40(%rbx,%rax,8),%rax
               :   64b80:	test   %edx,%edx
               :   64b82:	je     6503e <mlx5_rx_burst_mprq+0x1b2e>
               :   64b88:	mov    -0x8(%rax),%rax
               :   64b8c:	mov    %rax,0x88(%rsp)
               :   64b94:	mov    0x88(%rsp),%rbx
               :   64b9c:	mov    %rbx,0x138(%r12)
               :   64ba4:	mov    %r13,%rdi
               :   64ba7:	callq  63500 <mlx5_mprq_buf_free>
               :   64bac:	mov    0x120(%r12),%rsi
               :   64bb4:	jmpq   643c9 <mlx5_rx_burst_mprq+0xeb9>
               :   64bb9:	nopl   0x0(%rax)
               :   64bc0:	orq    $0x41,0x18(%rbx)
               :   64bc5:	movzwl 0x1e(%r14),%eax
               :   64bca:	xchg   %al,%ah
               :   64bcc:	mov    %ax,0x2a(%rbx)
               :   64bd0:	movzbl (%r12),%eax
               :   64bd5:	jmpq   63ad5 <mlx5_rx_burst_mprq+0x5c5>
               :   64bda:	nopw   0x0(%rax,%rax,1)
               :   64be0:	mov    0x78(%rsp),%rdi
               :   64be5:	mov    0x4(%rdi),%eax
               :   64be8:	movzwl (%rdi),%edx
               :   64beb:	shl    $0x8,%eax
               :   64bee:	shl    $0x10,%edx
               :   64bf1:	movzwl %ax,%eax
               :   64bf4:	or     %edx,%eax
               :   64bf6:	mov    %eax,%edx
               :   64bf8:	jmpq   63a65 <mlx5_rx_burst_mprq+0x555>
               :   64bfd:	nopl   (%rax)
               :   64c00:	mov    0x78(%rsp),%rdi
               :   64c05:	movzbl 0x1(%rdi),%edx
               :   64c09:	jmpq   63ad5 <mlx5_rx_burst_mprq+0x5c5>
               :   64c0e:	xchg   %ax,%ax
               :   64c10:	testb  $0x30,0x3(%r12)
               :   64c16:	je     64c88 <mlx5_rx_burst_mprq+0x1778>
               :   64c18:	nopl   0x0(%rax,%rax,1)
               :   64c20:	mov    0x18(%rsp),%rcx
               :   64c25:	xor    %esi,%esi
               :   64c27:	mov    $0x1,%edx
               :   64c2c:	mov    %r12,%rdi
               :   64c2f:	mov    %r8d,0x68(%rsp)
               :   64c34:	callq  60ef0 <mlx5_rx_err_handle>
               :   64c39:	cmp    $0xfffffffe,%eax
               :   64c3c:	mov    0x68(%rsp),%r8d
               :   64c41:	mov    %eax,%r9d
               :   64c44:	je     666fc <mlx5_rx_burst_mprq+0x31ec>
               :   64c4a:	test   $0xfffffffd,%eax
     1 3.0e-05 :   64c4f:	jne    63681 <mlx5_rx_burst_mprq+0x171>
               :   64c55:	mov    0x20(%r12),%eax
               :   64c5a:	mov    %r12,%r8
               :   64c5d:	mov    %eax,0x38(%rsp)
               :   64c61:	movzwl 0x24(%r12),%eax
               :   64c67:	mov    %ax,0x76(%rsp)
               :   64c6c:	jmpq   63ba8 <mlx5_rx_burst_mprq+0x698>
               :   64c71:	and    $0xffffffcf,%eax
               :   64c74:	mov    %al,0x3(%r12)
               :   64c79:	and    $0x40000000,%ebx
               :   64c7f:	jne    64581 <mlx5_rx_burst_mprq+0x1071>
               :   64c85:	nopl   (%rax)
               :   64c88:	mov    %r12,%r8
               :   64c8b:	jmpq   63ba8 <mlx5_rx_burst_mprq+0x698>
               :   64c90:	movzwl 0x22(%r14),%eax
               :   64c95:	jmpq   63a04 <mlx5_rx_burst_mprq+0x4f4>
               :   64c9a:	nopw   0x0(%rax,%rax,1)
               :   64ca0:	mov    0x78(%rsp),%rdi
               :   64ca5:	movzbl 0x1(%rdi),%esi
               :   64ca9:	jmpq   63f2e <mlx5_rx_burst_mprq+0xa1e>
               :   64cae:	xor    %ebx,%ebx
               :   64cb0:	movslq 0x58(%r14),%rax
               :   64cb4:	cmp    $0xf,%eax
               :   64cb7:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   64cbd:	shl    $0x7,%rax
               :   64cc1:	add    0x131248(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   64cc8:	lea    0x88(%rsp),%rsi
               :   64cd0:	mov    $0x1,%edx
               :   64cd5:	mov    %r14,%rdi
               :   64cd8:	callq  *0x78(%rax)
               :   64cdb:	test   %eax,%eax
               :   64cdd:	js     662ba <mlx5_rx_burst_mprq+0x2daa>
               :   64ce3:	je     64b94 <mlx5_rx_burst_mprq+0x1684>
               :   64ce9:	xor    %ebx,%ebx
               :   64ceb:	jmpq   64b9c <mlx5_rx_burst_mprq+0x168c>
               :   64cf0:	mov    0x128(%r12),%rdi
               :   64cf8:	mov    %r9,0x10(%rsp)
               :   64cfd:	mov    %r11d,0x50(%rsp)
               :   64d02:	mov    %rdi,0x58(%rsp)
               :   64d07:	data16 lea 0x131139(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   64d0f:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   64d17:	mov    0x58(%rsp),%rdi
               :   64d1c:	mov    0x50(%rsp),%r11d
               :   64d21:	mov    0x44(%rdi),%r8d
               :   64d25:	mov    0x10(%rsp),%r9
               :   64d2a:	test   %r8d,%r8d
               :   64d2d:	mov    (%rax),%eax
               :   64d2f:	je     656ec <mlx5_rx_burst_mprq+0x21dc>
               :   64d35:	cmp    $0x7f,%eax
               :   64d38:	ja     656ec <mlx5_rx_burst_mprq+0x21dc>
               :   64d3e:	mov    %eax,%r13d
               :   64d41:	imul   $0x2040,%r13,%r13
               :   64d48:	add    0x60(%rdi),%r13
               :   64d4c:	je     656ef <mlx5_rx_burst_mprq+0x21df>
               :   64d52:	mov    0x8(%r13),%eax
               :   64d56:	mov    $0x1,%ecx
               :   64d5b:	mov    %rax,%rdx
               :   64d5e:	test   %edx,%edx
               :   64d60:	cmove  %edx,%ecx
               :   64d63:	mov    %edx,%esi
               :   64d65:	sub    %ecx,%esi
               :   64d67:	mov    %esi,0x8(%r13)
               :   64d6b:	lea    0x40(%r13,%rax,8),%rax
               :   64d70:	test   %edx,%edx
               :   64d72:	je     65218 <mlx5_rx_burst_mprq+0x1d08>
               :   64d78:	mov    -0x8(%rax),%rax
               :   64d7c:	mov    %rax,0xa8(%rsp)
               :   64d84:	mov    0xa8(%rsp),%rax
               :   64d8c:	test   %rax,%rax
               :   64d8f:	je     64ef0 <mlx5_rx_burst_mprq+0x19e0>
               :   64d95:	movabs $0x2000000000000000,%rcx
               :   64d9f:	and    %rcx,0x18(%rax)
               :   64da3:	mov    0x68(%rsp),%ecx
               :   64da7:	xor    %esi,%esi
               :   64da9:	lea    -0x80(%rcx),%edx
               :   64dac:	add    %rdx,%r9
               :   64daf:	mov    (%rax),%rdx
               :   64db2:	xor    %edi,%edi
               :   64db4:	mov    %rdx,%rcx
               :   64db7:	or     %r9,%rcx
               :   64dba:	and    $0x1f,%ecx
               :   64dbd:	mov    %si,0x34(%rax)
               :   64dc1:	movq   $0x0,0x40(%rax)
               :   64dc9:	movq   $0x0,0x48(%rax)
               :   64dd1:	movl   $0xffff0001,0x14(%rax)
               :   64dd8:	movq   $0x0,0x20(%rax)
               :   64de0:	movl   $0x0,0x28(%rax)
               :   64de7:	mov    %di,0x10(%rax)
               :   64deb:	movslq %r11d,%rsi
               :   64dee:	mov    %r9,%r8
               :   64df1:	jne    6538c <mlx5_rx_burst_mprq+0x1e7c>
               :   64df7:	cmp    $0xf,%r11d
               :   64dfb:	jle    65631 <mlx5_rx_burst_mprq+0x2121>
               :   64e01:	cmp    $0x20,%r11d
               :   64e05:	jle    6629d <mlx5_rx_burst_mprq+0x2d8d>
               :   64e0b:	cmp    $0x40,%rsi
               :   64e0f:	jbe    66338 <mlx5_rx_burst_mprq+0x2e28>
               :   64e15:	lea    -0x40(%rsi),%rcx
               :   64e19:	shr    $0x6,%rcx
               :   64e1d:	mov    %rcx,%r10
               :   64e20:	lea    0x1(%rcx),%rcx
               :   64e24:	shl    $0x6,%rcx
               :   64e28:	mov    %r9,%rdi
               :   64e2b:	mov    %rcx,%r13
               :   64e2e:	lea    (%rdx,%rcx,1),%r8
               :   64e32:	sub    %rdx,%rdi
               :   64e35:	nopl   (%rax)
               :   64e38:	lea    (%rdx,%rdi,1),%rcx
               :   64e3c:	vmovdqu64 (%rcx),%ymm7
               :   64e42:	add    $0x40,%rdx
               :   64e46:	vmovdqu64 %ymm7,-0x40(%rdx)
               :   64e4d:	vmovdqu64 0x20(%rcx),%ymm5
               :   64e54:	vmovdqu64 %ymm5,-0x20(%rdx)
               :   64e5b:	cmp    %r8,%rdx
               :   64e5e:	jne    64e38 <mlx5_rx_burst_mprq+0x1928>
               :   64e60:	mov    %r10,%rcx
               :   64e63:	neg    %rcx
               :   64e66:	shl    $0x6,%rcx
               :   64e6a:	lea    -0x80(%rsi,%rcx,1),%rsi
               :   64e6f:	lea    (%rsi,%r13,1),%rcx
               :   64e73:	add    %rcx,%r9
               :   64e76:	vmovdqu64 (%r9),%ymm5
               :   64e7c:	add    %rsi,%rdx
               :   64e7f:	vmovdqu64 %ymm5,(%rdx)
               :   64e85:	vmovdqu64 0x20(%r9),%ymm3
               :   64e8c:	vmovdqu64 %ymm3,0x20(%rdx)
               :   64e93:	jmpq   65680 <mlx5_rx_burst_mprq+0x2170>
               :   64e98:	nopl   0x0(%rax,%rax,1)
               :   64ea0:	xor    %ecx,%ecx
               :   64ea2:	movslq 0x58(%r13),%rax
               :   64ea6:	mov    %rcx,0x58(%rsp)
               :   64eab:	cmp    $0xf,%eax
               :   64eae:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   64eb4:	shl    $0x7,%rax
               :   64eb8:	add    0x131051(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   64ebf:	lea    0xa8(%rsp),%rsi
               :   64ec7:	mov    $0x1,%edx
               :   64ecc:	mov    %r13,%rdi
               :   64ecf:	callq  *0x78(%rax)
               :   64ed2:	test   %eax,%eax
               :   64ed4:	jns    65907 <mlx5_rx_burst_mprq+0x23f7>
               :   64eda:	mov    0x58(%rsp),%rcx
               :   64edf:	mov    0x60(%rsp),%r12
               :   64ee4:	test   %rcx,%rcx
               :   64ee7:	je     64ef0 <mlx5_rx_burst_mprq+0x19e0>
               :   64ee9:	movl   $0x0,0x8(%rcx)
               :   64ef0:	mov    $0x1,%r14d
               :   64ef6:	movzwl 0x12(%rbx),%eax
               :   64efa:	lea    0x12(%rbx),%rdx
               :   64efe:	cmp    $0x1,%ax
               :   64f02:	jne    65f11 <mlx5_rx_burst_mprq+0x2a01>
               :   64f08:	mov    0x38(%rbx),%r15
               :   64f0c:	mov    0x18(%rbx),%rax
               :   64f10:	movabs $0x6000000000000000,%rdx
               :   64f1a:	mov    %r15,%r13
               :   64f1d:	test   %rdx,%rax
               :   64f20:	je     65170 <mlx5_rx_burst_mprq+0x1c60>
               :   64f26:	movabs $0x2000000000000000,%rcx
               :   64f30:	test   %rcx,%rax
               :   64f33:	je     6556e <mlx5_rx_burst_mprq+0x205e>
               :   64f39:	cmpl   $0x1,0x44(%r15)
               :   64f3e:	sbb    %rax,%rax
               :   64f41:	and    $0xffffffffffefe000,%rax
               :   64f47:	testb  $0x1,0x1020c4(%r15,%rax,1)
               :   64f50:	mov    0x50(%rbx),%rax
               :   64f54:	jne    65138 <mlx5_rx_burst_mprq+0x1c28>
               :   64f5a:	movzwl 0x10(%rax),%ecx
               :   64f5e:	lea    0x10(%rax),%rdx
               :   64f62:	cmp    $0x1,%cx
               :   64f66:	jne    66725 <mlx5_rx_burst_mprq+0x3215>
               :   64f6c:	movw   $0x0,0x10(%rax)
               :   64f72:	mov    0x50(%rbx),%rax
               :   64f76:	mov    (%rbx),%rdi
               :   64f79:	mov    0x8(%rax),%rsi
               :   64f7d:	callq  *(%rax)
               :   64f7f:	cmpl   $0x1,0x44(%r13)
               :   64f84:	sbb    %rax,%rax
               :   64f87:	and    $0xffffffffffefe000,%rax
               :   64f8d:	lea    0x1020c0(%r13,%rax,1),%rax
               :   64f95:	movzwl 0x2(%rax),%edx
               :   64f99:	movzwl (%rax),%eax
               :   64f9c:	mov    %dx,0x58(%rbx)
               :   64fa0:	sub    $0xffffffffffffff80,%rdx
               :   64fa4:	lea    (%rbx,%rdx,1),%rcx
               :   64fa8:	add    -0x8(%rbx),%rdx
               :   64fac:	mov    %rdx,0x8(%rbx)
               :   64fb0:	cmp    $0x80,%ax
               :   64fb4:	mov    $0x80,%edx
               :   64fb9:	mov    %ax,0x36(%rbx)
               :   64fbd:	mov    0x38(%rbx),%r15
               :   64fc1:	cmova  %edx,%eax
               :   64fc4:	xor    %r13d,%r13d
               :   64fc7:	mov    %r13w,0x28(%rbx)
               :   64fcc:	mov    %rcx,(%rbx)
               :   64fcf:	mov    %ax,0x10(%rbx)
               :   64fd3:	movq   $0x0,0x18(%rbx)
               :   64fdb:	mov    0x44(%r15),%r13d
               :   64fdf:	jmpq   65174 <mlx5_rx_burst_mprq+0x1c64>
               :   64fe4:	nopl   0x0(%rax)
               :   64fe8:	or     $0x4,%rdx
               :   64fec:	mov    %rdx,0x18(%rbx)
               :   64ff0:	jmpq   63a90 <mlx5_rx_burst_mprq+0x580>
               :   64ff5:	nopl   (%rax)
               :   64ff8:	vmovdqu64 0xc0(%rdi),%xmm5
               :   64fff:	vmovups %xmm5,(%rax)
               :   65003:	vmovdqu64 0xb0(%rdi,%rcx,1),%xmm7
               :   6500b:	vmovups %xmm7,-0x10(%rax,%rcx,1)
               :   65011:	jmpq   639a0 <mlx5_rx_burst_mprq+0x490>
               :   65016:	nopw   %cs:0x0(%rax,%rax,1)
               :   65020:	vmovdqu64 0xc0(%rdi),%xmm7
               :   65027:	vmovups %xmm7,(%rax)
               :   6502b:	vmovdqu64 0xb0(%rdi,%rcx,1),%xmm6
               :   65033:	vmovups %xmm6,-0x10(%rax,%rcx,1)
               :   65039:	jmpq   639a0 <mlx5_rx_burst_mprq+0x490>
               :   6503e:	mov    (%rbx),%eax
               :   65040:	lea    0x40(%rbx),%rsi
               :   65044:	lea    0x1(%rax),%edx
               :   65047:	movslq 0x58(%r14),%rax
               :   6504b:	cmp    $0xf,%eax
               :   6504e:	ja     6694b <mlx5_rx_burst_mprq+0x343b>
               :   65054:	shl    $0x7,%rax
               :   65058:	add    0x130eb1(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   6505f:	mov    %r14,%rdi
               :   65062:	callq  *0x78(%rax)
               :   65065:	test   %eax,%eax
               :   65067:	js     64cb0 <mlx5_rx_burst_mprq+0x17a0>
               :   6506d:	mov    (%rbx),%eax
               :   6506f:	lea    0x1(%rax),%edx
               :   65072:	mov    0x38(%rbx,%rdx,8),%rdx
               :   65077:	mov    %eax,0x8(%rbx)
               :   6507a:	mov    %rdx,0x88(%rsp)
               :   65082:	jmpq   64b94 <mlx5_rx_burst_mprq+0x1684>
               :   65087:	nopw   0x0(%rax,%rax,1)
               :   65090:	mov    0x130(%r12),%rdi
               :   65098:	mov    %rdx,0x38(%rsp)
               :   6509d:	mov    %rdi,0x60(%rsp)
               :   650a2:	mov    %rsi,0x68(%rsp)
               :   650a7:	data16 lea 0x130d99(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   650af:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   650b7:	mov    0x60(%rsp),%rdi
               :   650bc:	mov    0x38(%rsp),%rcx
               :   650c1:	mov    0x44(%rdi),%edx
               :   650c4:	test   %edx,%edx
               :   650c6:	mov    (%rax),%eax
               :   650c8:	je     65e71 <mlx5_rx_burst_mprq+0x2961>
               :   650ce:	cmp    $0x7f,%eax
               :   650d1:	ja     65e71 <mlx5_rx_burst_mprq+0x2961>
               :   650d7:	imul   $0x2040,%rax,%rdx
               :   650de:	mov    %rdx,%rcx
               :   650e1:	add    0x60(%rdi),%rcx
               :   650e5:	je     65e71 <mlx5_rx_burst_mprq+0x2961>
               :   650eb:	mov    0x8(%rcx),%eax
               :   650ee:	mov    $0x1,%r9d
               :   650f4:	mov    %rax,%rdx
               :   650f7:	test   %edx,%edx
               :   650f9:	cmove  %edx,%r9d
               :   650fd:	mov    %edx,%ebx
               :   650ff:	sub    %r9d,%ebx
               :   65102:	mov    %ebx,0x8(%rcx)
               :   65105:	lea    0x40(%rcx,%rax,8),%rax
               :   6510a:	test   %edx,%edx
               :   6510c:	je     6532a <mlx5_rx_burst_mprq+0x1e1a>
               :   65112:	mov    -0x8(%rax),%rax
               :   65116:	mov    0x68(%rsp),%rsi
               :   6511b:	mov    %rax,0xa8(%rsp)
               :   65123:	mov    0xa8(%rsp),%rax
               :   6512b:	mov    %rax,0x138(%r12)
               :   65133:	jmpq   645d9 <mlx5_rx_burst_mprq+0x10c9>
               :   65138:	movabs $0x2000000000000000,%rcx
               :   65142:	mov    %rcx,0x18(%rbx)
               :   65146:	lea    0x10(%rax),%rdx
               :   6514a:	movzwl 0x10(%rax),%ecx
               :   6514e:	cmp    $0x1,%cx
               :   65152:	je     65170 <mlx5_rx_burst_mprq+0x1c60>
               :   65154:	lock decw (%rdx)
               :   65158:	jne    65201 <mlx5_rx_burst_mprq+0x1cf1>
               :   6515e:	movw   $0x1,0x10(%rax)
               :   65164:	mov    0x38(%rbx),%r15
               :   65168:	nopl   0x0(%rax,%rax,1)
               :   65170:	mov    0x44(%r15),%r13d
               :   65174:	cmpq   $0x0,0x40(%rbx)
               :   65179:	je     65183 <mlx5_rx_burst_mprq+0x1c73>
               :   6517b:	movq   $0x0,0x40(%rbx)
               :   65183:	cmpw   $0x1,0x14(%rbx)
               :   65188:	je     65195 <mlx5_rx_burst_mprq+0x1c85>
               :   6518a:	mov    $0x1,%r11d
               :   65190:	mov    %r11w,0x14(%rbx)
               :   65195:	mov    %rbx,0x98(%rsp)
               :   6519d:	data16 lea 0x130ca3(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   651a5:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   651ad:	mov    (%rax),%eax
               :   651af:	cmp    $0x7f,%eax
               :   651b2:	ja     65cfc <mlx5_rx_burst_mprq+0x27ec>
               :   651b8:	test   %r13d,%r13d
               :   651bb:	je     65cfc <mlx5_rx_burst_mprq+0x27ec>
               :   651c1:	mov    %eax,%ebx
               :   651c3:	imul   $0x2040,%rbx,%rbx
               :   651ca:	add    0x60(%r15),%rbx
               :   651ce:	je     65cfc <mlx5_rx_burst_mprq+0x27ec>
               :   651d4:	mov    0x4(%rbx),%eax
               :   651d7:	test   %eax,%eax
               :   651d9:	je     65cfc <mlx5_rx_burst_mprq+0x27ec>
               :   651df:	mov    0x8(%rbx),%edx
               :   651e2:	lea    0x1(%rdx),%ecx
               :   651e5:	cmp    %ecx,%eax
               :   651e7:	jb     65749 <mlx5_rx_burst_mprq+0x2239>
               :   651ed:	mov    %ecx,0x8(%rbx)
               :   651f0:	lea    0x40(%rbx,%rdx,8),%r13
               :   651f5:	mov    0x98(%rsp),%rax
               :   651fd:	mov    %rax,0x0(%r13)
               :   65201:	cmp    $0x2,%r14d
               :   65205:	jne    63b9e <mlx5_rx_burst_mprq+0x68e>
               :   6520b:	incq   0x160(%r12)
               :   65213:	jmpq   63b18 <mlx5_rx_burst_mprq+0x608>
               :   65218:	mov    0x0(%r13),%eax
               :   6521c:	lea    0x40(%r13),%rsi
               :   65220:	lea    0x1(%rax),%edx
               :   65223:	movslq 0x58(%rdi),%rax
               :   65227:	cmp    $0xf,%eax
               :   6522a:	ja     66950 <mlx5_rx_burst_mprq+0x3440>
               :   65230:	shl    $0x7,%rax
               :   65234:	add    0x130cd5(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   6523b:	mov    %r9,0x10(%rsp)
               :   65240:	mov    %r11d,0x50(%rsp)
               :   65245:	mov    %rdi,0x58(%rsp)
               :   6524a:	callq  *0x78(%rax)
               :   6524d:	test   %eax,%eax
               :   6524f:	mov    0x58(%rsp),%rdi
               :   65254:	mov    0x50(%rsp),%r11d
               :   65259:	mov    0x10(%rsp),%r9
               :   6525e:	js     656ef <mlx5_rx_burst_mprq+0x21df>
               :   65264:	mov    0x0(%r13),%eax
               :   65268:	lea    0x1(%rax),%edx
               :   6526b:	mov    0x38(%r13,%rdx,8),%rdx
               :   65270:	mov    %rdx,0xa8(%rsp)
               :   65278:	mov    %eax,0x8(%r13)
               :   6527c:	jmpq   64d84 <mlx5_rx_burst_mprq+0x1874>
               :   65281:	nopl   0x0(%rax)
               :   65288:	vmovdqu64 0xc0(%rdi),%xmm5
               :   6528f:	vmovups %xmm5,(%rax)
               :   65293:	vmovdqu64 0x10(%r9),%xmm7
               :   6529a:	vmovups %xmm7,0x10(%rax)
               :   6529f:	vmovdqu64 0xb0(%rdi,%rcx,1),%xmm6
               :   652a7:	vmovups %xmm6,-0x10(%rax,%rcx,1)
               :   652ad:	jmpq   639a0 <mlx5_rx_burst_mprq+0x490>
               :   652b2:	nopw   0x0(%rax,%rax,1)
               :   652b8:	vmovdqu64 0xc0(%rdi),%ymm7
               :   652bf:	vmovdqu64 %ymm7,(%rax)
               :   652c5:	vmovdqu64 0xa0(%rdi,%rcx,1),%ymm6
               :   652cd:	vmovdqu64 %ymm6,-0x20(%rax,%rcx,1)
               :   652d5:	jmpq   639a0 <mlx5_rx_burst_mprq+0x490>
               :   652da:	nopw   0x0(%rax,%rax,1)
               :   652e0:	movzwl 0x50(%r12),%eax
               :   652e6:	lea    0x54(%r12),%rsi
               :   652eb:	lea    (%rax,%rax,4),%rax
               :   652ef:	lea    (%rsi,%rax,4),%rax
               :   652f3:	cmp    (%rax),%rdx
               :   652f6:	jb     66019 <mlx5_rx_burst_mprq+0x2b09>
               :   652fc:	cmp    0x8(%rax),%rdx
               :   65300:	jae    66019 <mlx5_rx_burst_mprq+0x2b09>
               :   65306:	mov    0x10(%rax),%eax
               :   65309:	cmp    $0xffffffff,%eax
               :   6530c:	je     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   65312:	mov    %eax,0x14(%rcx)
               :   65315:	jmpq   6466c <mlx5_rx_burst_mprq+0x115c>
               :   6531a:	nopw   0x0(%rax,%rax,1)
               :   65320:	mov    $0xe,%esi
               :   65325:	jmpq   63e55 <mlx5_rx_burst_mprq+0x945>
               :   6532a:	mov    (%rcx),%eax
               :   6532c:	lea    0x40(%rcx),%rsi
               :   65330:	lea    0x1(%rax),%edx
               :   65333:	movslq 0x58(%rdi),%rax
               :   65337:	cmp    $0xf,%eax
               :   6533a:	ja     66946 <mlx5_rx_burst_mprq+0x3436>
               :   65340:	shl    $0x7,%rax
               :   65344:	add    0x130bc5(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   6534b:	mov    %rcx,0x60(%rsp)
               :   65350:	mov    %rdi,0x68(%rsp)
               :   65355:	callq  *0x78(%rax)
               :   65358:	test   %eax,%eax
               :   6535a:	mov    0x68(%rsp),%rdi
               :   6535f:	mov    0x60(%rsp),%rcx
               :   65364:	js     65e71 <mlx5_rx_burst_mprq+0x2961>
               :   6536a:	mov    (%rcx),%eax
               :   6536c:	mov    0x120(%r12),%rsi
               :   65374:	lea    0x1(%rax),%edx
               :   65377:	mov    0x38(%rcx,%rdx,8),%rdx
               :   6537c:	mov    %rdx,0xa8(%rsp)
               :   65384:	mov    %eax,0x8(%rcx)
               :   65387:	jmpq   65123 <mlx5_rx_burst_mprq+0x1c13>
               :   6538c:	cmp    $0xf,%r11d
               :   65390:	jle    65631 <mlx5_rx_burst_mprq+0x2121>
               :   65396:	cmp    $0x20,%r11d
               :   6539a:	jle    66280 <mlx5_rx_burst_mprq+0x2d70>
               :   653a0:	cmp    $0x30,%rsi
               :   653a4:	jbe    6630f <mlx5_rx_burst_mprq+0x2dff>
               :   653aa:	vmovdqu64 (%r9),%ymm0
               :   653b0:	vmovdqa64 %ymm0,%ymm1
               :   653b6:	cmp    $0x40,%rsi
               :   653ba:	jbe    66237 <mlx5_rx_burst_mprq+0x2d27>
               :   653c0:	cmp    $0x100,%rsi
               :   653c7:	ja     6645e <mlx5_rx_burst_mprq+0x2f4e>
               :   653cd:	cmp    $0x7f,%rsi
               :   653d1:	jbe    66389 <mlx5_rx_burst_mprq+0x2e79>
               :   653d7:	vmovdqu64 %ymm0,(%rdx)
               :   653dd:	vmovdqu64 0x20(%r9),%ymm4
               :   653e4:	lea    -0x80(%rsi),%rcx
               :   653e8:	vmovdqu64 %ymm4,0x20(%rdx)
               :   653ef:	vmovdqu64 0x40(%r9),%ymm5
               :   653f6:	sub    $0xffffffffffffff80,%r8
               :   653fa:	vmovdqu64 %ymm5,0x40(%rdx)
               :   65401:	vmovdqu64 0x60(%r9),%ymm6
               :   65408:	sub    $0xffffffffffffff80,%rdx
               :   6540c:	vmovdqu64 %ymm6,-0x20(%rdx)
               :   65413:	cmp    $0x3f,%rcx
               :   65417:	ja     66380 <mlx5_rx_burst_mprq+0x2e70>
               :   6541d:	cmp    $0x20,%rcx
               :   65421:	jbe    66362 <mlx5_rx_burst_mprq+0x2e52>
               :   65427:	vmovdqu64 (%r8),%ymm3
               :   6542d:	vmovdqu64 %ymm3,(%rdx)
               :   65433:	vmovdqu64 -0x20(%r8,%rcx,1),%ymm4
               :   6543b:	vmovdqu64 %ymm4,-0x20(%rdx,%rcx,1)
               :   65443:	jmpq   65680 <mlx5_rx_burst_mprq+0x2170>
               :   65448:	vmovdqu64 %ymm0,(%rax)
               :   6544e:	vmovdqu64 0xa0(%rdi,%rcx,1),%ymm5
               :   65456:	vmovdqu64 %ymm5,-0x20(%rax,%rcx,1)
               :   6545e:	jmpq   639a0 <mlx5_rx_burst_mprq+0x490>
               :   65463:	cmp    $0xf,%r10
               :   65467:	jbe    65810 <mlx5_rx_burst_mprq+0x2300>
               :   6546d:	cmp    $0x20,%r10
               :   65471:	jbe    662d1 <mlx5_rx_burst_mprq+0x2dc1>
               :   65477:	cmp    $0x30,%r10
               :   6547b:	jbe    661ea <mlx5_rx_burst_mprq+0x2cda>
               :   65481:	vmovdqu64 0xc0(%rdi),%ymm0
               :   65488:	cmp    $0x40,%r10
               :   6548c:	jbe    663dc <mlx5_rx_burst_mprq+0x2ecc>
               :   65492:	cmp    $0x100,%r10
               :   65499:	ja     6666d <mlx5_rx_burst_mprq+0x315d>
               :   6549f:	cmp    $0x7f,%r10
               :   654a3:	jbe    663b7 <mlx5_rx_burst_mprq+0x2ea7>
               :   654a9:	vmovdqu64 %ymm0,(%rax)
               :   654af:	vmovdqu64 0x20(%r9),%ymm6
               :   654b6:	lea    -0x80(%r10),%rdx
               :   654ba:	vmovdqu64 %ymm6,0x20(%rax)
               :   654c1:	vmovdqu64 0x40(%r9),%ymm7
               :   654c8:	sub    $0xffffffffffffff80,%rax
               :   654cc:	vmovdqu64 %ymm7,-0x40(%rax)
               :   654d3:	vmovdqu64 0x60(%r9),%ymm3
               :   654da:	sub    $0xffffffffffffff80,%r9
               :   654de:	vmovdqu64 %ymm3,-0x20(%rax)
               :   654e5:	cmp    $0x3f,%rdx
               :   654e9:	ja     663ae <mlx5_rx_burst_mprq+0x2e9e>
               :   654ef:	cmp    $0x20,%rdx
               :   654f3:	jbe    66440 <mlx5_rx_burst_mprq+0x2f30>
               :   654f9:	vmovdqu64 (%r9),%ymm5
               :   654ff:	vmovdqu64 %ymm5,(%rax)
               :   65505:	vmovdqu64 -0x20(%r9,%rdx,1),%ymm6
               :   6550d:	vmovdqu64 %ymm6,-0x20(%rax,%rdx,1)
               :   65515:	jmpq   65860 <mlx5_rx_burst_mprq+0x2350>
               :   6551a:	vmovdqu64 %ymm0,(%rax)
               :   65520:	vmovdqu64 0x20(%r9),%ymm6
               :   65527:	lea    -0x80(%rcx),%rdx
               :   6552b:	vmovdqu64 %ymm6,0x20(%rax)
               :   65532:	vmovdqu64 0x40(%r9),%ymm7
               :   65539:	lea    0x80(%r9),%r8
               :   65540:	vmovdqu64 %ymm7,0x40(%rax)
               :   65547:	vmovdqu64 0x60(%r9),%ymm3
               :   6554e:	sub    $0xffffffffffffff80,%rax
               :   65552:	vmovdqu64 %ymm3,-0x20(%rax)
               :   65559:	cmp    $0x3f,%rdx
               :   6555d:	jbe    64299 <mlx5_rx_burst_mprq+0xd89>
               :   65563:	vmovdqu64 (%r8),%ymm0
               :   65569:	jmpq   64279 <mlx5_rx_burst_mprq+0xd69>
               :   6556e:	mov    (%rbx),%rax
               :   65571:	movzwl 0x58(%rbx),%edx
               :   65575:	add    $0xffffffffffffff80,%rax
               :   65579:	sub    %rdx,%rax
               :   6557c:	movzwl 0x12(%rax),%ecx
               :   65580:	lea    0x12(%rax),%rdx
               :   65584:	cmp    $0x1,%cx
               :   65588:	jne    66716 <mlx5_rx_burst_mprq+0x3206>
               :   6558e:	movw   $0x0,0x12(%rax)
               :   65594:	mov    $0x1,%r15d
               :   6559a:	movq   $0x0,0x40(%rax)
               :   655a2:	mov    %r15w,0x14(%rax)
               :   655a7:	movw   $0x1,0x12(%rax)
               :   655ad:	mov    %rax,0xa0(%rsp)
               :   655b5:	mov    0x38(%rax),%rdi
               :   655b9:	mov    %rdi,0x78(%rsp)
               :   655be:	data16 lea 0x130882(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   655c6:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   655ce:	mov    0x78(%rsp),%rdi
               :   655d3:	mov    0x44(%rdi),%edx
               :   655d6:	mov    (%rax),%eax
               :   655d8:	test   %edx,%edx
               :   655da:	je     66252 <mlx5_rx_burst_mprq+0x2d42>
               :   655e0:	cmp    $0x7f,%eax
               :   655e3:	ja     66252 <mlx5_rx_burst_mprq+0x2d42>
               :   655e9:	mov    %eax,%r15d
               :   655ec:	imul   $0x2040,%r15,%r15
               :   655f3:	add    0x60(%rdi),%r15
               :   655f7:	je     66252 <mlx5_rx_burst_mprq+0x2d42>
               :   655fd:	mov    0x4(%r15),%ecx
               :   65601:	test   %ecx,%ecx
               :   65603:	je     66252 <mlx5_rx_burst_mprq+0x2d42>
               :   65609:	mov    0x8(%r15),%edx
               :   6560d:	lea    0x1(%rdx),%eax
               :   65610:	cmp    %eax,%ecx
               :   65612:	jb     66839 <mlx5_rx_burst_mprq+0x3329>
               :   65618:	mov    %eax,0x8(%r15)
               :   6561c:	lea    0x40(%r15,%rdx,8),%rcx
               :   65621:	mov    0xa0(%rsp),%rax
               :   65629:	mov    %rax,(%rcx)
               :   6562c:	jmpq   64f7f <mlx5_rx_burst_mprq+0x1a6f>
               :   65631:	test   $0x8,%r11b
               :   65635:	je     65645 <mlx5_rx_burst_mprq+0x2135>
               :   65637:	mov    (%r9),%rcx
               :   6563a:	add    $0x8,%r8
               :   6563e:	mov    %rcx,(%rdx)
               :   65641:	add    $0x8,%rdx
               :   65645:	test   $0x4,%r11b
               :   65649:	je     65659 <mlx5_rx_burst_mprq+0x2149>
               :   6564b:	mov    (%r8),%ecx
               :   6564e:	add    $0x4,%rdx
               :   65652:	mov    %ecx,-0x4(%rdx)
               :   65655:	add    $0x4,%r8
               :   65659:	test   $0x2,%r11b
               :   6565d:	je     6566f <mlx5_rx_burst_mprq+0x215f>
               :   6565f:	movzwl (%r8),%ecx
               :   65663:	add    $0x2,%rdx
               :   65667:	mov    %cx,-0x2(%rdx)
               :   6566b:	add    $0x2,%r8
               :   6566f:	test   $0x1,%r11b
               :   65673:	je     65680 <mlx5_rx_burst_mprq+0x2170>
               :   65675:	movzbl (%r8),%ecx
               :   65679:	mov    %cl,(%rdx)
               :   6567b:	nopl   0x0(%rax,%rax,1)
               :   65680:	mov    %r11w,0x28(%rax)
               :   65685:	movzwl 0x60(%rsp),%r11d
               :   6568b:	mov    $0x2,%ecx
               :   65690:	neg    %r11d
               :   65693:	mov    %cx,0x14(%rbx)
               :   65697:	mov    %r11w,0x28(%rbx)
               :   6569c:	mov    %rax,0x40(%rbx)
               :   656a0:	mov    %r15d,%ecx
               :   656a3:	jmpq   639a5 <mlx5_rx_burst_mprq+0x495>
               :   656a8:	mov    %rax,%rsi
               :   656ab:	xor    %edx,%edx
               :   656ad:	jmpq   6401b <mlx5_rx_burst_mprq+0xb0b>
               :   656b2:	test   %rdx,%rdx
               :   656b5:	je     639a0 <mlx5_rx_burst_mprq+0x490>
               :   656bb:	vmovdqu64 -0x20(%r8,%rdx,1),%ymm6
               :   656c3:	vmovdqu64 %ymm6,-0x20(%rax,%rdx,1)
               :   656cb:	jmpq   639a0 <mlx5_rx_burst_mprq+0x490>
               :   656d0:	mov    0x60(%rsp),%rcx
               :   656d5:	test   %rcx,%rcx
               :   656d8:	je     646ed <mlx5_rx_burst_mprq+0x11dd>
               :   656de:	movl   $0x0,0x8(%rcx)
               :   656e5:	xor    %ecx,%ecx
               :   656e7:	jmpq   646ed <mlx5_rx_burst_mprq+0x11dd>
               :   656ec:	xor    %r13d,%r13d
               :   656ef:	movslq 0x58(%rdi),%rax
               :   656f3:	mov    %r9,0x50(%rsp)
               :   656f8:	mov    %r11d,0x58(%rsp)
               :   656fd:	cmp    $0xf,%eax
               :   65700:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   65706:	shl    $0x7,%rax
               :   6570a:	add    0x1307ff(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   65711:	lea    0xa8(%rsp),%rsi
               :   65719:	mov    $0x1,%edx
               :   6571e:	callq  *0x78(%rax)
               :   65721:	test   %eax,%eax
               :   65723:	mov    0x58(%rsp),%r11d
               :   65728:	mov    0x50(%rsp),%r9
               :   6572d:	jns    64d84 <mlx5_rx_burst_mprq+0x1874>
               :   65733:	test   %r13,%r13
               :   65736:	je     64ef0 <mlx5_rx_burst_mprq+0x19e0>
               :   6573c:	movl   $0x0,0x8(%r13)
               :   65744:	jmpq   64ef0 <mlx5_rx_burst_mprq+0x19e0>
               :   65749:	movslq 0x58(%r15),%rax
               :   6574d:	lea    0x40(%rbx),%r13
               :   65751:	cmp    $0xf,%eax
               :   65754:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   6575a:	shl    $0x7,%rax
               :   6575e:	add    0x1307ab(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   65765:	mov    %r13,%rsi
               :   65768:	mov    %r15,%rdi
               :   6576b:	callq  *0x70(%rax)
               :   6576e:	movl   $0x1,0x8(%rbx)
               :   65775:	jmpq   651f5 <mlx5_rx_burst_mprq+0x1ce5>
               :   6577a:	mov    %rax,%rsi
               :   6577d:	mov    %rcx,%rdi
               :   65780:	and    $0x1f,%esi
               :   65783:	je     6579f <mlx5_rx_burst_mprq+0x228f>
               :   65785:	mov    $0x20,%edx
               :   6578a:	sub    %rsi,%rdx
               :   6578d:	vmovdqu64 %ymm0,(%rax)
               :   65793:	lea    -0x20(%rcx,%rsi,1),%rdi
               :   65798:	lea    (%r9,%rdx,1),%r8
               :   6579c:	add    %rdx,%rax
               :   6579f:	lea    -0x80(%rdi),%rdx
               :   657a3:	and    $0xffffffffffffff80,%rdx
               :   657a7:	lea    0x80(%r8,%rdx,1),%r9
               :   657af:	mov    %rax,%rsi
               :   657b2:	mov    %r8,%rdx
               :   657b5:	nopl   (%rax)
               :   657b8:	vmovdqu64 (%rdx),%ymm2
               :   657be:	vmovdqu64 0x20(%rdx),%ymm1
               :   657c5:	vmovdqu64 0x40(%rdx),%ymm0
               :   657cc:	vmovdqu64 0x60(%rdx),%ymm7
               :   657d3:	sub    $0xffffffffffffff80,%rdx
               :   657d7:	vmovdqu64 %ymm7,0x60(%rsi)
               :   657de:	vmovdqu64 %ymm2,(%rsi)
               :   657e4:	vmovdqu64 %ymm1,0x20(%rsi)
               :   657eb:	vmovdqu64 %ymm0,0x40(%rsi)
               :   657f2:	sub    $0xffffffffffffff80,%rsi
               :   657f6:	cmp    %r9,%rdx
               :   657f9:	jne    657b8 <mlx5_rx_burst_mprq+0x22a8>
               :   657fb:	mov    %rdi,%rdx
               :   657fe:	and    $0xffffffffffffff80,%rdi
               :   65802:	and    $0x7f,%edx
               :   65805:	add    %rdi,%r8
               :   65808:	add    %rdi,%rax
               :   6580b:	jmpq   65559 <mlx5_rx_burst_mprq+0x2049>
               :   65810:	test   $0x8,%sil
               :   65814:	je     65828 <mlx5_rx_burst_mprq+0x2318>
               :   65816:	mov    0xc0(%rdi),%rdx
               :   6581d:	add    $0x8,%r9
               :   65821:	mov    %rdx,(%rax)
               :   65824:	add    $0x8,%rax
               :   65828:	test   $0x4,%sil
               :   6582c:	je     6583c <mlx5_rx_burst_mprq+0x232c>
               :   6582e:	mov    (%r9),%edx
               :   65831:	add    $0x4,%rax
               :   65835:	mov    %edx,-0x4(%rax)
               :   65838:	add    $0x4,%r9
               :   6583c:	test   $0x2,%sil
               :   65840:	je     65852 <mlx5_rx_burst_mprq+0x2342>
               :   65842:	movzwl (%r9),%edx
               :   65846:	add    $0x2,%rax
               :   6584a:	mov    %dx,-0x2(%rax)
               :   6584e:	add    $0x2,%r9
               :   65852:	test   $0x1,%sil
               :   65856:	je     65860 <mlx5_rx_burst_mprq+0x2350>
               :   65858:	movzbl (%r9),%edx
               :   6585c:	mov    %dl,(%rax)
               :   6585e:	xchg   %ax,%ax
               :   65860:	mov    0x68(%rsp),%eax
               :   65864:	mov    %si,0x28(%rbx)
               :   65868:	test   %eax,%eax
               :   6586a:	je     644de <mlx5_rx_burst_mprq+0xfce>
               :   65870:	mov    %rbx,0x68(%rsp)
               :   65875:	mov    %r15d,0x50(%rsp)
               :   6587a:	mov    %r14,0x10(%rsp)
               :   6587f:	mov    %r12,0x60(%rsp)
               :   65884:	mov    %eax,%r14d
               :   65887:	mov    %r8,%r15
               :   6588a:	mov    %r13d,%r12d
               :   6588d:	nopl   (%rax)
               :   65890:	mov    0x60(%rsp),%rax
               :   65895:	mov    0x128(%rax),%r13
               :   6589c:	vzeroupper 
               :   6589f:	data16 lea 0x1305a1(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   658a7:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   658af:	mov    (%rax),%ecx
               :   658b1:	mov    0x44(%r13),%eax
               :   658b5:	test   %eax,%eax
               :   658b7:	je     64ea0 <mlx5_rx_burst_mprq+0x1990>
               :   658bd:	cmp    $0x7f,%ecx
               :   658c0:	ja     64ea0 <mlx5_rx_burst_mprq+0x1990>
               :   658c6:	imul   $0x2040,%rcx,%rcx
               :   658cd:	add    0x60(%r13),%rcx
               :   658d1:	je     64ea2 <mlx5_rx_burst_mprq+0x1992>
               :   658d7:	mov    0x8(%rcx),%eax
               :   658da:	mov    $0x1,%esi
               :   658df:	mov    %rax,%rdx
               :   658e2:	test   %edx,%edx
               :   658e4:	cmove  %edx,%esi
               :   658e7:	mov    %edx,%edi
               :   658e9:	sub    %esi,%edi
               :   658eb:	mov    %edi,0x8(%rcx)
               :   658ee:	lea    0x40(%rcx,%rax,8),%rax
               :   658f3:	test   %edx,%edx
               :   658f5:	je     65a4c <mlx5_rx_burst_mprq+0x253c>
               :   658fb:	mov    -0x8(%rax),%rax
               :   658ff:	mov    %rax,0xa8(%rsp)
               :   65907:	mov    0xa8(%rsp),%rax
               :   6590f:	test   %rax,%rax
               :   65912:	je     65aab <mlx5_rx_burst_mprq+0x259b>
               :   65918:	movabs $0x2000000000000000,%rcx
               :   65922:	and    %rcx,0x18(%rax)
               :   65926:	mov    0x68(%rsp),%rcx
               :   6592b:	mov    %r12d,%r8d
               :   6592e:	xor    %r11d,%r11d
               :   65931:	movq   $0x0,0x40(%rax)
               :   65939:	movq   $0x0,0x48(%rax)
               :   65941:	mov    %r11w,0x34(%rax)
               :   65946:	movl   $0xffff0001,0x14(%rax)
               :   6594d:	movq   $0x0,0x20(%rax)
               :   65955:	movl   $0x0,0x28(%rax)
               :   6595c:	mov    %rax,0x40(%rcx)
               :   65960:	lea    (%r15,%r8,1),%rcx
               :   65964:	movzwl 0x36(%rax),%r8d
               :   65969:	mov    (%rax),%rdx
               :   6596c:	add    $0xffffff80,%r8d
               :   65970:	xor    %r13d,%r13d
               :   65973:	cmp    %r14d,%r8d
               :   65976:	cmova  %r14d,%r8d
               :   6597a:	mov    %rdx,%rsi
               :   6597d:	or     %rcx,%rsi
               :   65980:	mov    %r8d,%edi
               :   65983:	and    $0x1f,%esi
               :   65986:	mov    %r13w,0x10(%rax)
               :   6598b:	mov    %rcx,%r15
               :   6598e:	mov    %rdi,%r12
               :   65991:	jne    65ab8 <mlx5_rx_burst_mprq+0x25a8>
               :   65997:	cmp    $0xf,%edi
               :   6599a:	jbe    65b70 <mlx5_rx_burst_mprq+0x2660>
               :   659a0:	cmp    $0x20,%edi
               :   659a3:	jbe    65be6 <mlx5_rx_burst_mprq+0x26d6>
               :   659a9:	cmp    $0x40,%rdi
               :   659ad:	jbe    65c20 <mlx5_rx_burst_mprq+0x2710>
               :   659b3:	lea    -0x40(%rdi),%r13
               :   659b7:	shr    $0x6,%r13
               :   659bb:	lea    0x1(%r13),%r9
               :   659bf:	shl    $0x6,%r9
               :   659c3:	mov    %rcx,%r10
               :   659c6:	lea    (%rdx,%r9,1),%r11
               :   659ca:	sub    %rdx,%r10
               :   659cd:	nopl   (%rax)
               :   659d0:	lea    (%rdx,%r10,1),%rsi
               :   659d4:	vmovdqu64 (%rsi),%ymm5
               :   659da:	add    $0x40,%rdx
               :   659de:	vmovdqu64 %ymm5,-0x40(%rdx)
               :   659e5:	vmovdqu64 0x20(%rsi),%ymm6
               :   659ec:	vmovdqu64 %ymm6,-0x20(%rdx)
               :   659f3:	cmp    %r11,%rdx
               :   659f6:	jne    659d0 <mlx5_rx_burst_mprq+0x24c0>
               :   659f8:	neg    %r13
               :   659fb:	mov    %r13,%rsi
               :   659fe:	shl    $0x6,%rsi
               :   65a02:	lea    -0x80(%rdi,%rsi,1),%rsi
               :   65a07:	add    %rsi,%r9
               :   65a0a:	add    %r9,%rcx
               :   65a0d:	vmovdqu64 (%rcx),%ymm5
               :   65a13:	add    %rsi,%rdx
               :   65a16:	vmovdqu64 %ymm5,(%rdx)
               :   65a1c:	vmovdqu64 0x20(%rcx),%ymm7
               :   65a23:	vmovdqu64 %ymm7,0x20(%rdx)
               :   65a2a:	nopw   0x0(%rax,%rax,1)
               :   65a30:	mov    %r12w,0x28(%rax)
               :   65a35:	incw   0x14(%rbx)
               :   65a39:	sub    %r12d,%r14d
               :   65a3c:	je     65bd0 <mlx5_rx_burst_mprq+0x26c0>
               :   65a42:	mov    %rax,0x68(%rsp)
               :   65a47:	jmpq   65890 <mlx5_rx_burst_mprq+0x2380>
               :   65a4c:	mov    (%rcx),%eax
               :   65a4e:	lea    0x40(%rcx),%rsi
               :   65a52:	lea    0x1(%rax),%edx
               :   65a55:	movslq 0x58(%r13),%rax
               :   65a59:	cmp    $0xf,%eax
               :   65a5c:	ja     66937 <mlx5_rx_burst_mprq+0x3427>
               :   65a62:	shl    $0x7,%rax
               :   65a66:	add    0x1304a3(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   65a6d:	mov    %r13,%rdi
               :   65a70:	mov    %rcx,0x58(%rsp)
               :   65a75:	callq  *0x78(%rax)
               :   65a78:	test   %eax,%eax
               :   65a7a:	mov    0x58(%rsp),%rcx
               :   65a7f:	js     64ea2 <mlx5_rx_burst_mprq+0x1992>
               :   65a85:	mov    (%rcx),%eax
               :   65a87:	lea    0x1(%rax),%edx
               :   65a8a:	mov    0x38(%rcx,%rdx,8),%rdx
               :   65a8f:	mov    %rdx,0xa8(%rsp)
               :   65a97:	mov    %eax,0x8(%rcx)
               :   65a9a:	mov    0xa8(%rsp),%rax
               :   65aa2:	test   %rax,%rax
               :   65aa5:	jne    65918 <mlx5_rx_burst_mprq+0x2408>
               :   65aab:	mov    0x60(%rsp),%r12
               :   65ab0:	jmpq   64ef0 <mlx5_rx_burst_mprq+0x19e0>
               :   65ab5:	nopl   (%rax)
               :   65ab8:	cmp    $0xf,%edi
               :   65abb:	jbe    65b70 <mlx5_rx_burst_mprq+0x2660>
               :   65ac1:	cmp    $0x20,%edi
               :   65ac4:	jbe    65c03 <mlx5_rx_burst_mprq+0x26f3>
               :   65aca:	cmp    $0x30,%rdi
               :   65ace:	jbe    65c41 <mlx5_rx_burst_mprq+0x2731>
               :   65ad4:	vmovdqu64 (%rcx),%ymm0
               :   65ada:	cmp    $0x40,%rdi
               :   65ade:	jbe    65d37 <mlx5_rx_burst_mprq+0x2827>
               :   65ae4:	cmp    $0x100,%rdi
               :   65aeb:	ja     65dec <mlx5_rx_burst_mprq+0x28dc>
               :   65af1:	cmp    $0x7f,%rdi
               :   65af5:	jbe    65d79 <mlx5_rx_burst_mprq+0x2869>
               :   65afb:	vmovdqu64 %ymm0,(%rdx)
               :   65b01:	vmovdqu64 0x20(%rcx),%ymm4
               :   65b08:	lea    -0x80(%rdi),%rsi
               :   65b0c:	vmovdqu64 %ymm4,0x20(%rdx)
               :   65b13:	vmovdqu64 0x40(%rcx),%ymm5
               :   65b1a:	sub    $0xffffffffffffff80,%rdx
               :   65b1e:	vmovdqu64 %ymm5,-0x40(%rdx)
               :   65b25:	vmovdqu64 0x60(%rcx),%ymm3
               :   65b2c:	lea    0x80(%rcx),%rcx
               :   65b33:	vmovdqu64 %ymm3,-0x20(%rdx)
               :   65b3a:	cmp    $0x3f,%rsi
               :   65b3e:	ja     65d70 <mlx5_rx_burst_mprq+0x2860>
               :   65b44:	cmp    $0x20,%rsi
               :   65b48:	jbe    65d52 <mlx5_rx_burst_mprq+0x2842>
               :   65b4e:	vmovdqu64 (%rcx),%ymm6
               :   65b54:	vmovdqu64 %ymm6,(%rdx)
               :   65b5a:	vmovdqu64 -0x20(%rcx,%rsi,1),%ymm7
               :   65b62:	vmovdqu64 %ymm7,-0x20(%rdx,%rsi,1)
               :   65b6a:	jmpq   65a30 <mlx5_rx_burst_mprq+0x2520>
               :   65b6f:	nop
               :   65b70:	mov    %r15,%rsi
               :   65b73:	test   $0x8,%r12b
               :   65b77:	je     65b87 <mlx5_rx_burst_mprq+0x2677>
               :   65b79:	mov    (%rcx),%rcx
               :   65b7c:	lea    0x8(%r15),%rsi
               :   65b80:	mov    %rcx,(%rdx)
               :   65b83:	add    $0x8,%rdx
               :   65b87:	test   $0x4,%r12b
               :   65b8b:	je     65b9a <mlx5_rx_burst_mprq+0x268a>
               :   65b8d:	mov    (%rsi),%ecx
               :   65b8f:	add    $0x4,%rdx
               :   65b93:	mov    %ecx,-0x4(%rdx)
               :   65b96:	add    $0x4,%rsi
               :   65b9a:	test   $0x2,%r12b
               :   65b9e:	je     65baf <mlx5_rx_burst_mprq+0x269f>
               :   65ba0:	movzwl (%rsi),%ecx
               :   65ba3:	add    $0x2,%rdx
               :   65ba7:	mov    %cx,-0x2(%rdx)
               :   65bab:	add    $0x2,%rsi
               :   65baf:	test   $0x1,%r12b
               :   65bb3:	je     65a30 <mlx5_rx_burst_mprq+0x2520>
               :   65bb9:	movzbl (%rsi),%ecx
               :   65bbc:	mov    %cl,(%rdx)
               :   65bbe:	mov    %r12w,0x28(%rax)
               :   65bc3:	incw   0x14(%rbx)
               :   65bc7:	sub    %r12d,%r14d
               :   65bca:	jne    65a42 <mlx5_rx_burst_mprq+0x2532>
               :   65bd0:	mov    0x50(%rsp),%ecx
               :   65bd4:	mov    0x10(%rsp),%r14
               :   65bd9:	mov    0x60(%rsp),%r12
               :   65bde:	mov    %rcx,%r15
               :   65be1:	jmpq   639a5 <mlx5_rx_burst_mprq+0x495>
               :   65be6:	vmovdqu64 (%rcx),%xmm6
               :   65bec:	vmovups %xmm6,(%rdx)
               :   65bf0:	vmovdqu64 -0x10(%rcx,%rdi,1),%xmm5
               :   65bf8:	vmovups %xmm5,-0x10(%rdx,%rdi,1)
               :   65bfe:	jmpq   65a30 <mlx5_rx_burst_mprq+0x2520>
               :   65c03:	vmovdqu64 (%rcx),%xmm6
               :   65c09:	vmovups %xmm6,(%rdx)
               :   65c0d:	vmovdqu64 -0x10(%rcx,%rdi,1),%xmm7
               :   65c15:	vmovups %xmm7,-0x10(%rdx,%rdi,1)
               :   65c1b:	jmpq   65a30 <mlx5_rx_burst_mprq+0x2520>
               :   65c20:	vmovdqu64 (%rcx),%ymm3
               :   65c26:	vmovdqu64 %ymm3,(%rdx)
               :   65c2c:	vmovdqu64 -0x20(%rcx,%rdi,1),%ymm4
               :   65c34:	vmovdqu64 %ymm4,-0x20(%rdx,%rdi,1)
               :   65c3c:	jmpq   65a30 <mlx5_rx_burst_mprq+0x2520>
               :   65c41:	vmovdqu64 (%rcx),%xmm3
               :   65c47:	vmovups %xmm3,(%rdx)
               :   65c4b:	vmovdqu64 0x10(%rcx),%xmm4
               :   65c52:	vmovups %xmm4,0x10(%rdx)
               :   65c57:	vmovdqu64 -0x10(%rcx,%rdi,1),%xmm5
               :   65c5f:	vmovups %xmm5,-0x10(%rdx,%rdi,1)
               :   65c65:	jmpq   65a30 <mlx5_rx_burst_mprq+0x2520>
               :   65c6a:	mov    %rsi,0x78(%rsp)
               :   65c6f:	data16 lea 0x1301d1(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   65c77:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   65c7f:	mov    0x130(%r12),%r13
               :   65c87:	mov    0x44(%r13),%edx
               :   65c8b:	mov    (%rax),%eax
               :   65c8d:	test   %edx,%edx
               :   65c8f:	je     663f7 <mlx5_rx_burst_mprq+0x2ee7>
               :   65c95:	cmp    $0x7f,%eax
               :   65c98:	ja     663f7 <mlx5_rx_burst_mprq+0x2ee7>
               :   65c9e:	imul   $0x2040,%rax,%rdx
               :   65ca5:	mov    %rdx,%rbx
               :   65ca8:	add    0x60(%r13),%rbx
               :   65cac:	je     663f7 <mlx5_rx_burst_mprq+0x2ee7>
               :   65cb2:	mov    0x8(%rbx),%eax
               :   65cb5:	mov    $0x1,%ecx
               :   65cba:	mov    %rax,%rdx
               :   65cbd:	test   %edx,%edx
               :   65cbf:	cmove  %edx,%ecx
               :   65cc2:	mov    %edx,%edi
               :   65cc4:	sub    %ecx,%edi
               :   65cc6:	mov    %edi,0x8(%rbx)
               :   65cc9:	lea    0x40(%rbx,%rax,8),%rax
               :   65cce:	test   %edx,%edx
               :   65cd0:	je     65ec0 <mlx5_rx_burst_mprq+0x29b0>
               :   65cd6:	mov    -0x8(%rax),%rax
               :   65cda:	mov    0x78(%rsp),%rsi
               :   65cdf:	mov    %rax,0xa8(%rsp)
               :   65ce7:	mov    0xa8(%rsp),%rax
               :   65cef:	mov    %rax,0x138(%r12)
               :   65cf7:	jmpq   643c9 <mlx5_rx_burst_mprq+0xeb9>
               :   65cfc:	movslq 0x58(%r15),%rax
               :   65d00:	cmp    $0xf,%eax
               :   65d03:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   65d09:	shl    $0x7,%rax
               :   65d0d:	lea    0x98(%rsp),%rsi
               :   65d15:	add    0x1301f4(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   65d1c:	mov    $0x1,%edx
               :   65d21:	mov    %r15,%rdi
               :   65d24:	callq  *0x70(%rax)
               :   65d27:	jmpq   65201 <mlx5_rx_burst_mprq+0x1cf1>
               :   65d2c:	mov    $0x2,%r14d
               :   65d32:	jmpq   64ef6 <mlx5_rx_burst_mprq+0x19e6>
               :   65d37:	vmovdqu64 %ymm0,(%rdx)
               :   65d3d:	vmovdqu64 -0x20(%rcx,%rdi,1),%ymm7
               :   65d45:	vmovdqu64 %ymm7,-0x20(%rdx,%rdi,1)
               :   65d4d:	jmpq   65a30 <mlx5_rx_burst_mprq+0x2520>
               :   65d52:	test   %rsi,%rsi
               :   65d55:	je     65a30 <mlx5_rx_burst_mprq+0x2520>
               :   65d5b:	vmovdqu64 -0x20(%rcx,%rsi,1),%ymm6
               :   65d63:	vmovdqu64 %ymm6,-0x20(%rdx,%rsi,1)
               :   65d6b:	jmpq   65a30 <mlx5_rx_burst_mprq+0x2520>
               :   65d70:	vmovdqu64 (%rcx),%ymm0
               :   65d76:	mov    %rsi,%rdi
               :   65d79:	vmovdqu64 %ymm0,(%rdx)
               :   65d7f:	vmovdqu64 0x20(%rcx),%ymm5
               :   65d86:	lea    -0x40(%rdi),%rsi
               :   65d8a:	vmovdqu64 %ymm5,0x20(%rdx)
               :   65d91:	add    $0x40,%rcx
               :   65d95:	add    $0x40,%rdx
               :   65d99:	jmpq   65b44 <mlx5_rx_burst_mprq+0x2634>
               :   65d9e:	mov    $0xffffffff,%esi
               :   65da3:	jmpq   64a37 <mlx5_rx_burst_mprq+0x1527>
               :   65da8:	movzwl 0x50(%r12),%ecx
               :   65dae:	lea    0x54(%r12),%rax
               :   65db3:	lea    (%rcx,%rcx,4),%rcx
               :   65db7:	lea    (%rax,%rcx,4),%rcx
               :   65dbb:	cmp    (%rcx),%rdx
               :   65dbe:	jb     664ed <mlx5_rx_burst_mprq+0x2fdd>
               :   65dc4:	cmp    0x8(%rcx),%rdx
               :   65dc8:	jae    664ed <mlx5_rx_burst_mprq+0x2fdd>
               :   65dce:	mov    0x10(%rcx),%eax
               :   65dd1:	cmp    $0xffffffff,%eax
               :   65dd4:	je     66647 <mlx5_rx_burst_mprq+0x3137>
               :   65dda:	mov    %eax,0x14(%rbx)
               :   65ddd:	jmpq   64b22 <mlx5_rx_burst_mprq+0x1612>
               :   65de2:	mov    %rax,%rdi
               :   65de5:	xor    %esi,%esi
               :   65de7:	jmpq   64913 <mlx5_rx_burst_mprq+0x1403>
               :   65dec:	mov    %rdx,%rsi
               :   65def:	mov    %rcx,%r9
               :   65df2:	and    $0x1f,%esi
               :   65df5:	jne    661ad <mlx5_rx_burst_mprq+0x2c9d>
               :   65dfb:	lea    -0x80(%rdi),%rcx
               :   65dff:	and    $0xffffffffffffff80,%rcx
               :   65e03:	lea    0x80(%r9,%rcx,1),%r10
               :   65e0b:	mov    %rdx,%rsi
               :   65e0e:	mov    %r9,%rcx
               :   65e11:	nopl   0x0(%rax)
               :   65e18:	vmovdqu64 (%rcx),%ymm2
               :   65e1e:	vmovdqu64 0x20(%rcx),%ymm1
               :   65e25:	vmovdqu64 0x40(%rcx),%ymm0
               :   65e2c:	vmovdqu64 0x60(%rcx),%ymm6
               :   65e33:	sub    $0xffffffffffffff80,%rcx
               :   65e37:	vmovdqu64 %ymm6,0x60(%rsi)
               :   65e3e:	vmovdqu64 %ymm2,(%rsi)
               :   65e44:	vmovdqu64 %ymm1,0x20(%rsi)
               :   65e4b:	vmovdqu64 %ymm0,0x40(%rsi)
               :   65e52:	sub    $0xffffffffffffff80,%rsi
               :   65e56:	cmp    %r10,%rcx
               :   65e59:	jne    65e18 <mlx5_rx_burst_mprq+0x2908>
               :   65e5b:	mov    %rdi,%rsi
               :   65e5e:	and    $0xffffffffffffff80,%rdi
               :   65e62:	and    $0x7f,%esi
               :   65e65:	lea    (%r9,%rdi,1),%rcx
               :   65e69:	add    %rdi,%rdx
               :   65e6c:	jmpq   65b3a <mlx5_rx_burst_mprq+0x262a>
               :   65e71:	movslq 0x58(%rdi),%rax
               :   65e75:	mov    %rcx,0x68(%rsp)
               :   65e7a:	cmp    $0xf,%eax
               :   65e7d:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   65e83:	shl    $0x7,%rax
               :   65e87:	mov    0x50(%rsp),%rsi
               :   65e8c:	add    0x13007d(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   65e93:	mov    $0x1,%edx
               :   65e98:	callq  *0x78(%rax)
               :   65e9b:	test   %eax,%eax
               :   65e9d:	js     661cc <mlx5_rx_burst_mprq+0x2cbc>
               :   65ea3:	mov    0x120(%r12),%rsi
               :   65eab:	je     65123 <mlx5_rx_burst_mprq+0x1c13>
               :   65eb1:	jmpq   645d9 <mlx5_rx_burst_mprq+0x10c9>
               :   65eb6:	nopw   %cs:0x0(%rax,%rax,1)
               :   65ec0:	mov    (%rbx),%eax
               :   65ec2:	lea    0x40(%rbx),%rsi
               :   65ec6:	lea    0x1(%rax),%edx
               :   65ec9:	movslq 0x58(%r13),%rax
               :   65ecd:	cmp    $0xf,%eax
               :   65ed0:	ja     6693c <mlx5_rx_burst_mprq+0x342c>
               :   65ed6:	shl    $0x7,%rax
               :   65eda:	add    0x13002f(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   65ee1:	mov    %r13,%rdi
               :   65ee4:	callq  *0x78(%rax)
               :   65ee7:	test   %eax,%eax
               :   65ee9:	js     663f7 <mlx5_rx_burst_mprq+0x2ee7>
               :   65eef:	mov    (%rbx),%eax
               :   65ef1:	mov    0x120(%r12),%rsi
               :   65ef9:	lea    0x1(%rax),%edx
               :   65efc:	mov    0x38(%rbx,%rdx,8),%rdx
               :   65f01:	mov    %rdx,0xa8(%rsp)
               :   65f09:	mov    %eax,0x8(%rbx)
               :   65f0c:	jmpq   65ce7 <mlx5_rx_burst_mprq+0x27d7>
               :   65f11:	lock decw (%rdx)
               :   65f15:	jne    65201 <mlx5_rx_burst_mprq+0x1cf1>
               :   65f1b:	mov    0x18(%rbx),%rax
               :   65f1f:	movabs $0x6000000000000000,%rdx
               :   65f29:	test   %rdx,%rax
               :   65f2c:	je     65fe7 <mlx5_rx_burst_mprq+0x2ad7>
               :   65f32:	movabs $0x2000000000000000,%rcx
               :   65f3c:	mov    0x38(%rbx),%r13
               :   65f40:	test   %rcx,%rax
               :   65f43:	je     66778 <mlx5_rx_burst_mprq+0x3268>
               :   65f49:	cmpl   $0x1,0x44(%r13)
               :   65f4e:	sbb    %rax,%rax
               :   65f51:	and    $0xffffffffffefe000,%rax
               :   65f57:	testb  $0x1,0x1020c4(%r13,%rax,1)
               :   65f60:	jne    66734 <mlx5_rx_burst_mprq+0x3224>
               :   65f66:	mov    0x50(%rbx),%rdx
               :   65f6a:	movzwl 0x10(%rdx),%ecx
               :   65f6e:	lea    0x10(%rdx),%rax
               :   65f72:	cmp    $0x1,%cx
               :   65f76:	jne    668d9 <mlx5_rx_burst_mprq+0x33c9>
               :   65f7c:	movw   $0x0,0x10(%rdx)
               :   65f82:	mov    0x50(%rbx),%rax
               :   65f86:	mov    (%rbx),%rdi
               :   65f89:	mov    0x8(%rax),%rsi
               :   65f8d:	callq  *(%rax)
               :   65f8f:	cmpl   $0x1,0x44(%r13)
               :   65f94:	sbb    %rax,%rax
               :   65f97:	and    $0xffffffffffefe000,%rax
               :   65f9d:	lea    0x1020c0(%r13,%rax,1),%rax
               :   65fa5:	movzwl 0x2(%rax),%edx
               :   65fa9:	movzwl (%rax),%eax
               :   65fac:	mov    %dx,0x58(%rbx)
               :   65fb0:	sub    $0xffffffffffffff80,%rdx
               :   65fb4:	lea    (%rbx,%rdx,1),%rcx
               :   65fb8:	add    -0x8(%rbx),%rdx
               :   65fbc:	mov    %rdx,0x8(%rbx)
               :   65fc0:	cmp    $0x80,%ax
               :   65fc4:	mov    $0x80,%edx
               :   65fc9:	mov    %ax,0x36(%rbx)
               :   65fcd:	cmova  %edx,%eax
               :   65fd0:	xor    %r8d,%r8d
               :   65fd3:	mov    %rcx,(%rbx)
               :   65fd6:	mov    %ax,0x10(%rbx)
               :   65fda:	mov    %r8w,0x28(%rbx)
               :   65fdf:	movq   $0x0,0x18(%rbx)
               :   65fe7:	cmpq   $0x0,0x40(%rbx)
               :   65fec:	je     65ff6 <mlx5_rx_burst_mprq+0x2ae6>
               :   65fee:	movq   $0x0,0x40(%rbx)
               :   65ff6:	cmpw   $0x1,0x14(%rbx)
               :   65ffb:	je     66006 <mlx5_rx_burst_mprq+0x2af6>
               :   65ffd:	mov    $0x1,%edi
               :   66002:	mov    %di,0x14(%rbx)
               :   66006:	movw   $0x1,0x12(%rbx)
               :   6600c:	mov    0x38(%rbx),%r15
               :   66010:	mov    0x44(%r15),%r13d
               :   66014:	jmpq   65195 <mlx5_rx_burst_mprq+0x1c85>
               :   66019:	mov    0x54(%r12),%rax
               :   6601e:	test   %rax,%rax
               :   66021:	je     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   66027:	cmp    %rax,%rdx
               :   6602a:	jb     66037 <mlx5_rx_burst_mprq+0x2b27>
               :   6602c:	cmp    0x5c(%r12),%rdx
               :   66031:	jb     66706 <mlx5_rx_burst_mprq+0x31f6>
               :   66037:	mov    0x68(%r12),%rax
               :   6603c:	test   %rax,%rax
               :   6603f:	je     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   66045:	cmp    %rax,%rdx
               :   66048:	jb     6605f <mlx5_rx_burst_mprq+0x2b4f>
               :   6604a:	lea    0x68(%r12),%rsi
               :   6604f:	mov    $0x1,%eax
               :   66054:	cmp    0x70(%r12),%rdx
               :   66059:	jb     66708 <mlx5_rx_burst_mprq+0x31f8>
               :   6605f:	mov    0x7c(%r12),%rax
               :   66064:	test   %rax,%rax
               :   66067:	je     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   6606d:	cmp    %rax,%rdx
               :   66070:	jb     6608a <mlx5_rx_burst_mprq+0x2b7a>
               :   66072:	lea    0x7c(%r12),%rsi
               :   66077:	mov    $0x2,%eax
               :   6607c:	cmp    0x84(%r12),%rdx
               :   66084:	jb     66708 <mlx5_rx_burst_mprq+0x31f8>
               :   6608a:	mov    0x90(%r12),%rax
               :   66092:	test   %rax,%rax
               :   66095:	je     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   6609b:	cmp    %rax,%rdx
               :   6609e:	jb     660bb <mlx5_rx_burst_mprq+0x2bab>
               :   660a0:	lea    0x90(%r12),%rsi
               :   660a8:	mov    $0x3,%eax
               :   660ad:	cmp    0x98(%r12),%rdx
               :   660b5:	jb     66708 <mlx5_rx_burst_mprq+0x31f8>
               :   660bb:	mov    0xa4(%r12),%rax
               :   660c3:	test   %rax,%rax
               :   660c6:	je     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   660cc:	cmp    %rax,%rdx
               :   660cf:	jb     660ec <mlx5_rx_burst_mprq+0x2bdc>
               :   660d1:	lea    0xa4(%r12),%rsi
               :   660d9:	mov    $0x4,%eax
               :   660de:	cmp    0xac(%r12),%rdx
               :   660e6:	jb     66708 <mlx5_rx_burst_mprq+0x31f8>
               :   660ec:	mov    0xb8(%r12),%rax
               :   660f4:	test   %rax,%rax
               :   660f7:	je     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   660f9:	cmp    %rax,%rdx
               :   660fc:	jb     66119 <mlx5_rx_burst_mprq+0x2c09>
               :   660fe:	lea    0xb8(%r12),%rsi
               :   66106:	mov    $0x5,%eax
               :   6610b:	cmp    0xc0(%r12),%rdx
               :   66113:	jb     66708 <mlx5_rx_burst_mprq+0x31f8>
               :   66119:	mov    0xcc(%r12),%rax
               :   66121:	test   %rax,%rax
               :   66124:	je     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   66126:	cmp    %rax,%rdx
               :   66129:	jb     66146 <mlx5_rx_burst_mprq+0x2c36>
               :   6612b:	lea    0xcc(%r12),%rsi
               :   66133:	mov    $0x6,%eax
               :   66138:	cmp    0xd4(%r12),%rdx
               :   66140:	jb     66708 <mlx5_rx_burst_mprq+0x31f8>
               :   66146:	mov    0xe0(%r12),%rax
               :   6614e:	cmp    %rax,%rdx
               :   66151:	jb     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   66153:	test   %rax,%rax
               :   66156:	je     66173 <mlx5_rx_burst_mprq+0x2c63>
               :   66158:	lea    0xe0(%r12),%rsi
               :   66160:	mov    $0x7,%eax
               :   66165:	cmp    0xe8(%r12),%rdx
               :   6616d:	jb     66708 <mlx5_rx_burst_mprq+0x31f8>
               :   66173:	mov    0x130(%r12),%rsi
               :   6617b:	testb  $0x7c,0x2(%r12)
               :   66181:	cmove  0x128(%r12),%rsi
               :   6618a:	lea    0x44(%r12),%rdi
               :   6618f:	mov    %r9,0x60(%rsp)
               :   66194:	mov    %rcx,0x68(%rsp)
               :   66199:	callq  a250 <mlx5_mr_mempool2mr_bh@plt>
               :   6619e:	mov    0x68(%rsp),%rcx
               :   661a3:	mov    0x60(%rsp),%r9
               :   661a8:	jmpq   65312 <mlx5_rx_burst_mprq+0x1e02>
               :   661ad:	mov    $0x20,%ecx
               :   661b2:	sub    %rsi,%rcx
               :   661b5:	vmovdqu64 %ymm0,(%rdx)
               :   661bb:	lea    -0x20(%rdi,%rsi,1),%rdi
               :   661c0:	lea    (%r15,%rcx,1),%r9
               :   661c4:	add    %rcx,%rdx
               :   661c7:	jmpq   65dfb <mlx5_rx_burst_mprq+0x28eb>
               :   661cc:	mov    0x68(%rsp),%rcx
               :   661d1:	test   %rcx,%rcx
               :   661d4:	je     661dd <mlx5_rx_burst_mprq+0x2ccd>
               :   661d6:	movl   $0x0,0x8(%rcx)
               :   661dd:	mov    0x120(%r12),%rsi
               :   661e5:	jmpq   645d9 <mlx5_rx_burst_mprq+0x10c9>
               :   661ea:	vmovdqu64 0xc0(%rdi),%xmm7
               :   661f1:	vmovups %xmm7,(%rax)
               :   661f5:	vmovdqu64 0x10(%r9),%xmm3
               :   661fc:	vmovups %xmm3,0x10(%rax)
               :   66201:	vmovdqu64 0xb0(%rdi,%r10,1),%xmm4
               :   66209:	vmovups %xmm4,-0x10(%rax,%r10,1)
               :   66210:	jmpq   65860 <mlx5_rx_burst_mprq+0x2350>
               :   66215:	vmovdqu64 0xc0(%rdi),%ymm3
               :   6621c:	vmovdqu64 %ymm3,(%rax)
               :   66222:	vmovdqu64 0xa0(%rdi,%r10,1),%ymm4
               :   6622a:	vmovdqu64 %ymm4,-0x20(%rax,%r10,1)
               :   66232:	jmpq   65860 <mlx5_rx_burst_mprq+0x2350>
               :   66237:	vmovdqu64 %ymm0,(%rdx)
               :   6623d:	vmovdqu64 -0x20(%rsi,%r9,1),%ymm3
               :   66245:	vmovdqu64 %ymm3,-0x20(%rdx,%rsi,1)
               :   6624d:	jmpq   65680 <mlx5_rx_burst_mprq+0x2170>
               :   66252:	movslq 0x58(%rdi),%rax
               :   66256:	cmp    $0xf,%eax
               :   66259:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   6625f:	shl    $0x7,%rax
               :   66263:	lea    0xa0(%rsp),%rsi
               :   6626b:	add    0x12fc9e(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   66272:	mov    $0x1,%edx
               :   66277:	callq  *0x70(%rax)
               :   6627a:	jmpq   64f7f <mlx5_rx_burst_mprq+0x1a6f>
               :   6627f:	nop
               :   66280:	vmovdqu64 (%r9),%xmm6
               :   66286:	vmovups %xmm6,(%rdx)
               :   6628a:	vmovdqu64 -0x10(%rsi,%r9,1),%xmm7
               :   66292:	vmovups %xmm7,-0x10(%rdx,%rsi,1)
               :   66298:	jmpq   65680 <mlx5_rx_burst_mprq+0x2170>
               :   6629d:	vmovdqu64 (%r9),%xmm7
               :   662a3:	vmovups %xmm7,(%rdx)
               :   662a7:	vmovdqu64 -0x10(%rsi,%r9,1),%xmm4
               :   662af:	vmovups %xmm4,-0x10(%rdx,%rsi,1)
               :   662b5:	jmpq   65680 <mlx5_rx_burst_mprq+0x2170>
               :   662ba:	test   %rbx,%rbx
               :   662bd:	je     64b9c <mlx5_rx_burst_mprq+0x168c>
               :   662c3:	movl   $0x0,0x8(%rbx)
               :   662ca:	xor    %ebx,%ebx
               :   662cc:	jmpq   64b9c <mlx5_rx_burst_mprq+0x168c>
               :   662d1:	vmovdqu64 0xc0(%rdi),%xmm5
               :   662d8:	vmovups %xmm5,(%rax)
               :   662dc:	vmovdqu64 0xb0(%rdi,%r10,1),%xmm6
               :   662e4:	vmovups %xmm6,-0x10(%rax,%r10,1)
               :   662eb:	jmpq   65860 <mlx5_rx_burst_mprq+0x2350>
               :   662f0:	vmovdqu64 0xc0(%rdi),%xmm4
               :   662f7:	vmovups %xmm4,(%rax)
               :   662fb:	vmovdqu64 0xb0(%rdi,%r10,1),%xmm5
               :   66303:	vmovups %xmm5,-0x10(%rax,%r10,1)
               :   6630a:	jmpq   65860 <mlx5_rx_burst_mprq+0x2350>
               :   6630f:	vmovdqu64 (%r9),%xmm5
               :   66315:	vmovups %xmm5,(%rdx)
               :   66319:	vmovdqu64 0x10(%r9),%xmm6
               :   66320:	vmovups %xmm6,0x10(%rdx)
               :   66325:	vmovdqu64 -0x10(%rsi,%r9,1),%xmm7
               :   6632d:	vmovups %xmm7,-0x10(%rdx,%rsi,1)
               :   66333:	jmpq   65680 <mlx5_rx_burst_mprq+0x2170>
               :   66338:	vmovdqu64 (%r9),%ymm3
               :   6633e:	vmovdqu64 %ymm3,(%rdx)
               :   66344:	vmovdqu64 -0x20(%rsi,%r9,1),%ymm4
               :   6634c:	vmovdqu64 %ymm4,-0x20(%rdx,%rsi,1)
               :   66354:	jmpq   65680 <mlx5_rx_burst_mprq+0x2170>
               :   66359:	xor    %eax,%eax
               :   6635b:	xor    %ecx,%ecx
               :   6635d:	jmpq   63baf <mlx5_rx_burst_mprq+0x69f>
               :   66362:	test   %rcx,%rcx
               :   66365:	je     65680 <mlx5_rx_burst_mprq+0x2170>
               :   6636b:	vmovdqu64 -0x20(%r8,%rcx,1),%ymm5
               :   66373:	vmovdqu64 %ymm5,-0x20(%rdx,%rcx,1)
               :   6637b:	jmpq   65680 <mlx5_rx_burst_mprq+0x2170>
               :   66380:	vmovdqu64 (%r8),%ymm1
               :   66386:	mov    %rcx,%rsi
               :   66389:	vmovdqu64 %ymm1,(%rdx)
               :   6638f:	vmovdqu64 0x20(%r8),%ymm7
               :   66396:	lea    -0x40(%rsi),%rcx
               :   6639a:	vmovdqu64 %ymm7,0x20(%rdx)
               :   663a1:	add    $0x40,%r8
               :   663a5:	add    $0x40,%rdx
               :   663a9:	jmpq   6541d <mlx5_rx_burst_mprq+0x1f0d>
               :   663ae:	vmovdqu64 (%r9),%ymm0
               :   663b4:	mov    %rdx,%r10
               :   663b7:	vmovdqu64 %ymm0,(%rax)
               :   663bd:	vmovdqu64 0x20(%r9),%ymm4
               :   663c4:	lea    -0x40(%r10),%rdx
               :   663c8:	vmovdqu64 %ymm4,0x20(%rax)
               :   663cf:	add    $0x40,%r9
               :   663d3:	add    $0x40,%rax
               :   663d7:	jmpq   654ef <mlx5_rx_burst_mprq+0x1fdf>
               :   663dc:	vmovdqu64 %ymm0,(%rax)
               :   663e2:	vmovdqu64 0xa0(%rdi,%r10,1),%ymm5
               :   663ea:	vmovdqu64 %ymm5,-0x20(%rax,%r10,1)
               :   663f2:	jmpq   65860 <mlx5_rx_burst_mprq+0x2350>
               :   663f7:	movslq 0x58(%r13),%rax
               :   663fb:	cmp    $0xf,%eax
               :   663fe:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   66404:	shl    $0x7,%rax
               :   66408:	add    0x12fb01(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   6640f:	lea    0xa8(%rsp),%rsi
               :   66417:	mov    $0x1,%edx
               :   6641c:	mov    %r13,%rdi
               :   6641f:	callq  *0x78(%rax)
               :   66422:	test   %eax,%eax
               :   66424:	js     66872 <mlx5_rx_burst_mprq+0x3362>
               :   6642a:	mov    0x120(%r12),%rsi
               :   66432:	je     65ce7 <mlx5_rx_burst_mprq+0x27d7>
               :   66438:	jmpq   643c9 <mlx5_rx_burst_mprq+0xeb9>
               :   6643d:	nopl   (%rax)
               :   66440:	test   %rdx,%rdx
               :   66443:	je     65860 <mlx5_rx_burst_mprq+0x2350>
               :   66449:	vmovdqu64 -0x20(%r9,%rdx,1),%ymm7
               :   66451:	vmovdqu64 %ymm7,-0x20(%rax,%rdx,1)
               :   66459:	jmpq   65860 <mlx5_rx_burst_mprq+0x2350>
               :   6645e:	mov    %rdx,%rdi
               :   66461:	and    $0x1f,%edi
               :   66464:	je     6647f <mlx5_rx_burst_mprq+0x2f6f>
               :   66466:	mov    $0x20,%ecx
               :   6646b:	sub    %rdi,%rcx
               :   6646e:	vmovdqu64 %ymm0,(%rdx)
               :   66474:	lea    -0x20(%rsi,%rdi,1),%rsi
               :   66479:	add    %rcx,%r8
               :   6647c:	add    %rcx,%rdx
               :   6647f:	lea    -0x80(%rsi),%rcx
               :   66483:	and    $0xffffffffffffff80,%rcx
               :   66487:	lea    0x80(%r8,%rcx,1),%r9
               :   6648f:	mov    %rdx,%rdi
               :   66492:	mov    %r8,%rcx
               :   66495:	vmovdqu64 (%rcx),%ymm2
               :   6649b:	vmovdqu64 0x20(%rcx),%ymm1
               :   664a2:	vmovdqu64 0x40(%rcx),%ymm0
               :   664a9:	vmovdqu64 0x60(%rcx),%ymm4
               :   664b0:	sub    $0xffffffffffffff80,%rcx
               :   664b4:	vmovdqu64 %ymm4,0x60(%rdi)
               :   664bb:	vmovdqu64 %ymm2,(%rdi)
               :   664c1:	vmovdqu64 %ymm1,0x20(%rdi)
               :   664c8:	vmovdqu64 %ymm0,0x40(%rdi)
               :   664cf:	sub    $0xffffffffffffff80,%rdi
               :   664d3:	cmp    %r9,%rcx
               :   664d6:	jne    66495 <mlx5_rx_burst_mprq+0x2f85>
               :   664d8:	mov    %rsi,%rcx
               :   664db:	and    $0xffffffffffffff80,%rsi
               :   664df:	and    $0x7f,%ecx
               :   664e2:	add    %rsi,%r8
               :   664e5:	add    %rsi,%rdx
               :   664e8:	jmpq   65413 <mlx5_rx_burst_mprq+0x1f03>
               :   664ed:	mov    0x54(%r12),%rcx
               :   664f2:	test   %rcx,%rcx
               :   664f5:	je     66647 <mlx5_rx_burst_mprq+0x3137>
               :   664fb:	cmp    %rcx,%rdx
               :   664fe:	jb     6650b <mlx5_rx_burst_mprq+0x2ffb>
               :   66500:	cmp    0x5c(%r12),%rdx
               :   66505:	jb     6688b <mlx5_rx_burst_mprq+0x337b>
               :   6650b:	mov    0x68(%r12),%rax
               :   66510:	test   %rax,%rax
               :   66513:	je     66647 <mlx5_rx_burst_mprq+0x3137>
               :   66519:	cmp    %rax,%rdx
               :   6651c:	jb     66533 <mlx5_rx_burst_mprq+0x3023>
               :   6651e:	lea    0x68(%r12),%rax
               :   66523:	mov    $0x1,%ecx
               :   66528:	cmp    0x70(%r12),%rdx
               :   6652d:	jb     6688d <mlx5_rx_burst_mprq+0x337d>
               :   66533:	mov    0x7c(%r12),%rax
               :   66538:	test   %rax,%rax
               :   6653b:	je     66647 <mlx5_rx_burst_mprq+0x3137>
               :   66541:	cmp    %rax,%rdx
               :   66544:	jb     6655e <mlx5_rx_burst_mprq+0x304e>
               :   66546:	lea    0x7c(%r12),%rax
               :   6654b:	mov    $0x2,%ecx
               :   66550:	cmp    0x84(%r12),%rdx
               :   66558:	jb     6688d <mlx5_rx_burst_mprq+0x337d>
               :   6655e:	mov    0x90(%r12),%rax
               :   66566:	test   %rax,%rax
               :   66569:	je     66647 <mlx5_rx_burst_mprq+0x3137>
               :   6656f:	cmp    %rax,%rdx
               :   66572:	jb     6658f <mlx5_rx_burst_mprq+0x307f>
               :   66574:	lea    0x90(%r12),%rax
               :   6657c:	mov    $0x3,%ecx
               :   66581:	cmp    0x98(%r12),%rdx
               :   66589:	jb     6688d <mlx5_rx_burst_mprq+0x337d>
               :   6658f:	mov    0xa4(%r12),%rax
               :   66597:	test   %rax,%rax
               :   6659a:	je     66647 <mlx5_rx_burst_mprq+0x3137>
               :   665a0:	cmp    %rax,%rdx
               :   665a3:	jb     665c0 <mlx5_rx_burst_mprq+0x30b0>
               :   665a5:	lea    0xa4(%r12),%rax
               :   665ad:	mov    $0x4,%ecx
               :   665b2:	cmp    0xac(%r12),%rdx
               :   665ba:	jb     6688d <mlx5_rx_burst_mprq+0x337d>
               :   665c0:	mov    0xb8(%r12),%rax
               :   665c8:	test   %rax,%rax
               :   665cb:	je     66647 <mlx5_rx_burst_mprq+0x3137>
               :   665cd:	cmp    %rax,%rdx
               :   665d0:	jb     665ed <mlx5_rx_burst_mprq+0x30dd>
               :   665d2:	lea    0xb8(%r12),%rax
               :   665da:	mov    $0x5,%ecx
               :   665df:	cmp    0xc0(%r12),%rdx
               :   665e7:	jb     6688d <mlx5_rx_burst_mprq+0x337d>
               :   665ed:	mov    0xcc(%r12),%rax
               :   665f5:	test   %rax,%rax
               :   665f8:	je     66647 <mlx5_rx_burst_mprq+0x3137>
               :   665fa:	cmp    %rax,%rdx
               :   665fd:	jb     6661a <mlx5_rx_burst_mprq+0x310a>
               :   665ff:	lea    0xcc(%r12),%rax
               :   66607:	mov    $0x6,%ecx
               :   6660c:	cmp    0xd4(%r12),%rdx
               :   66614:	jb     6688d <mlx5_rx_burst_mprq+0x337d>
               :   6661a:	mov    0xe0(%r12),%rax
               :   66622:	cmp    %rax,%rdx
               :   66625:	jb     66647 <mlx5_rx_burst_mprq+0x3137>
               :   66627:	test   %rax,%rax
               :   6662a:	je     66647 <mlx5_rx_burst_mprq+0x3137>
               :   6662c:	lea    0xe0(%r12),%rax
               :   66634:	mov    $0x7,%ecx
               :   66639:	cmp    0xe8(%r12),%rdx
               :   66641:	jb     6688d <mlx5_rx_burst_mprq+0x337d>
               :   66647:	mov    0x130(%r12),%rsi
               :   6664f:	testb  $0x7c,0x2(%r12)
               :   66655:	cmove  0x128(%r12),%rsi
               :   6665e:	lea    0x44(%r12),%rdi
               :   66663:	callq  a250 <mlx5_mr_mempool2mr_bh@plt>
               :   66668:	jmpq   65dda <mlx5_rx_burst_mprq+0x28ca>
               :   6666d:	mov    %rax,%rcx
               :   66670:	and    $0x1f,%ecx
               :   66673:	je     6668e <mlx5_rx_burst_mprq+0x317e>
               :   66675:	mov    $0x20,%edx
               :   6667a:	sub    %rcx,%rdx
               :   6667d:	vmovdqu64 %ymm0,(%rax)
               :   66683:	lea    -0x20(%r10,%rcx,1),%r10
               :   66688:	add    %rdx,%r9
               :   6668b:	add    %rdx,%rax
               :   6668e:	lea    -0x80(%r10),%rdx
               :   66692:	and    $0xffffffffffffff80,%rdx
               :   66696:	lea    0x80(%r9,%rdx,1),%rdi
               :   6669e:	mov    %rax,%rcx
               :   666a1:	mov    %r9,%rdx
               :   666a4:	vmovdqu64 (%rdx),%ymm2
               :   666aa:	vmovdqu64 0x20(%rdx),%ymm1
               :   666b1:	vmovdqu64 0x40(%rdx),%ymm0
               :   666b8:	vmovdqu64 0x60(%rdx),%ymm3
               :   666bf:	sub    $0xffffffffffffff80,%rdx
               :   666c3:	vmovdqu64 %ymm3,0x60(%rcx)
               :   666ca:	vmovdqu64 %ymm2,(%rcx)
               :   666d0:	vmovdqu64 %ymm1,0x20(%rcx)
               :   666d7:	vmovdqu64 %ymm0,0x40(%rcx)
               :   666de:	sub    $0xffffffffffffff80,%rcx
               :   666e2:	cmp    %rdi,%rdx
               :   666e5:	jne    666a4 <mlx5_rx_burst_mprq+0x3194>
               :   666e7:	mov    %r10,%rdx
               :   666ea:	and    $0xffffffffffffff80,%r10
               :   666ee:	and    $0x7f,%edx
               :   666f1:	add    %r10,%r9
               :   666f4:	add    %r10,%rax
               :   666f7:	jmpq   654e5 <mlx5_rx_burst_mprq+0x1fd5>
               :   666fc:	mov    $0x40000000,%ebx
               :   66701:	jmpq   64581 <mlx5_rx_burst_mprq+0x1071>
               :   66706:	xor    %eax,%eax
               :   66708:	mov    %ax,0x50(%r12)
               :   6670e:	mov    0x10(%rsi),%eax
               :   66711:	jmpq   65309 <mlx5_rx_burst_mprq+0x1df9>
               :   66716:	lock decw (%rdx)
               :   6671a:	jne    64f7f <mlx5_rx_burst_mprq+0x1a6f>
               :   66720:	jmpq   65594 <mlx5_rx_burst_mprq+0x2084>
               :   66725:	lock decw (%rdx)
               :   66729:	jne    64f7f <mlx5_rx_burst_mprq+0x1a6f>
               :   6672f:	jmpq   64f72 <mlx5_rx_burst_mprq+0x1a62>
               :   66734:	movabs $0x2000000000000000,%rcx
               :   6673e:	mov    %rcx,0x18(%rbx)
               :   66742:	mov    0x50(%rbx),%rax
               :   66746:	movzwl 0x10(%rax),%ecx
               :   6674a:	lea    0x10(%rax),%rdx
               :   6674e:	cmp    $0x1,%cx
               :   66752:	je     65fe7 <mlx5_rx_burst_mprq+0x2ad7>
               :   66758:	or     $0xffffffff,%ecx
               :   6675b:	lock xadd %cx,(%rdx)
               :   66760:	dec    %cx
               :   66763:	jne    65201 <mlx5_rx_burst_mprq+0x1cf1>
               :   66769:	movw   $0x1,0x10(%rax)
               :   6676f:	jmpq   65fe7 <mlx5_rx_burst_mprq+0x2ad7>
               :   66774:	nopl   0x0(%rax)
               :   66778:	mov    (%rbx),%rax
               :   6677b:	movzwl 0x58(%rbx),%edx
               :   6677f:	add    $0xffffffffffffff80,%rax
               :   66783:	sub    %rdx,%rax
               :   66786:	movzwl 0x12(%rax),%ecx
               :   6678a:	lea    0x12(%rax),%rdx
               :   6678e:	cmp    $0x1,%cx
               :   66792:	jne    6691c <mlx5_rx_burst_mprq+0x340c>
               :   66798:	movw   $0x0,0x12(%rax)
               :   6679e:	mov    $0x1,%r9d
               :   667a4:	movq   $0x0,0x40(%rax)
               :   667ac:	mov    %r9w,0x14(%rax)
               :   667b1:	movw   $0x1,0x12(%rax)
               :   667b7:	mov    0x38(%rax),%rdi
               :   667bb:	mov    %rax,0xa8(%rsp)
               :   667c3:	mov    %rdi,0x78(%rsp)
               :   667c8:	data16 lea 0x12f678(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   667d0:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   667d8:	mov    0x78(%rsp),%rdi
               :   667dd:	mov    0x44(%rdi),%r10d
               :   667e1:	mov    (%rax),%eax
               :   667e3:	test   %r10d,%r10d
               :   667e6:	je     668ef <mlx5_rx_burst_mprq+0x33df>
               :   667ec:	cmp    $0x7f,%eax
               :   667ef:	ja     668ef <mlx5_rx_burst_mprq+0x33df>
               :   667f5:	mov    %eax,%r15d
               :   667f8:	imul   $0x2040,%r15,%r15
               :   667ff:	add    0x60(%rdi),%r15
               :   66803:	je     668ef <mlx5_rx_burst_mprq+0x33df>
               :   66809:	mov    0x4(%r15),%ecx
               :   6680d:	test   %ecx,%ecx
               :   6680f:	je     668ef <mlx5_rx_burst_mprq+0x33df>
               :   66815:	mov    0x8(%r15),%edx
               :   66819:	lea    0x1(%rdx),%eax
               :   6681c:	cmp    %eax,%ecx
               :   6681e:	jb     6689b <mlx5_rx_burst_mprq+0x338b>
               :   66820:	mov    %eax,0x8(%r15)
               :   66824:	lea    0x40(%r15,%rdx,8),%rcx
               :   66829:	mov    0xa8(%rsp),%rax
               :   66831:	mov    %rax,(%rcx)
               :   66834:	jmpq   65f8f <mlx5_rx_burst_mprq+0x2a7f>
               :   66839:	movslq 0x58(%rdi),%rax
               :   6683d:	lea    0x40(%r15),%rcx
               :   66841:	cmp    $0xf,%eax
               :   66844:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   6684a:	shl    $0x7,%rax
               :   6684e:	mov    %rcx,%rsi
               :   66851:	add    0x12f6b8(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   66858:	mov    %rcx,0x78(%rsp)
               :   6685d:	callq  *0x70(%rax)
               :   66860:	movl   $0x1,0x8(%r15)
               :   66868:	mov    0x78(%rsp),%rcx
               :   6686d:	jmpq   65621 <mlx5_rx_burst_mprq+0x2111>
               :   66872:	test   %rbx,%rbx
               :   66875:	je     6687e <mlx5_rx_burst_mprq+0x336e>
               :   66877:	movl   $0x0,0x8(%rbx)
               :   6687e:	mov    0x120(%r12),%rsi
               :   66886:	jmpq   643c9 <mlx5_rx_burst_mprq+0xeb9>
               :   6688b:	xor    %ecx,%ecx
               :   6688d:	mov    %cx,0x50(%r12)
               :   66893:	mov    0x10(%rax),%eax
               :   66896:	jmpq   65dd1 <mlx5_rx_burst_mprq+0x28c1>
               :   6689b:	movslq 0x58(%rdi),%rax
               :   6689f:	lea    0x40(%r15),%rcx
               :   668a3:	cmp    $0xf,%eax
               :   668a6:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   668ac:	shl    $0x7,%rax
               :   668b0:	mov    %rcx,%rsi
               :   668b3:	add    0x12f656(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   668ba:	mov    %rcx,0x78(%rsp)
               :   668bf:	callq  *0x70(%rax)
               :   668c2:	movl   $0x1,0x8(%r15)
               :   668ca:	mov    0x78(%rsp),%rcx
               :   668cf:	jmpq   66829 <mlx5_rx_burst_mprq+0x3319>
               :   668d4:	callq  aaf0 <__stack_chk_fail@plt>
               :   668d9:	or     $0xffffffff,%edx
               :   668dc:	lock xadd %dx,(%rax)
               :   668e1:	dec    %dx
               :   668e4:	jne    65f8f <mlx5_rx_burst_mprq+0x2a7f>
               :   668ea:	jmpq   65f82 <mlx5_rx_burst_mprq+0x2a72>
               :   668ef:	movslq 0x58(%rdi),%rax
               :   668f3:	cmp    $0xf,%eax
               :   668f6:	ja     f77a <mlx5_rx_burst_mprq.cold>
               :   668fc:	shl    $0x7,%rax
               :   66900:	lea    0xa8(%rsp),%rsi
               :   66908:	add    0x12f601(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   6690f:	mov    $0x1,%edx
               :   66914:	callq  *0x70(%rax)
               :   66917:	jmpq   65f8f <mlx5_rx_burst_mprq+0x2a7f>
               :   6691c:	or     $0xffffffff,%ecx
               :   6691f:	lock xadd %cx,(%rdx)
               :   66924:	dec    %cx
               :   66927:	jne    65f8f <mlx5_rx_burst_mprq+0x2a7f>
               :   6692d:	jmpq   6679e <mlx5_rx_burst_mprq+0x328e>
               :   66932:	jmpq   f77a <mlx5_rx_burst_mprq.cold>
               :   66937:	jmpq   f77a <mlx5_rx_burst_mprq.cold>
               :   6693c:	jmpq   f77a <mlx5_rx_burst_mprq.cold>
               :   66941:	jmpq   f77a <mlx5_rx_burst_mprq.cold>
               :   66946:	jmpq   f77a <mlx5_rx_burst_mprq.cold>
               :   6694b:	jmpq   f77a <mlx5_rx_burst_mprq.cold>
               :   66950:	jmpq   f77a <mlx5_rx_burst_mprq.cold>
               :   66955:	data16 nopw %cs:0x0(%rax,%rax,1)
               :   66960:	endbr64 
               :   66964:	mov    $0xffffffa1,%eax
               :   66969:	retq   
               :   6696a:	nopw   0x0(%rax,%rax,1)
               :   66970:	endbr64 
               :   66974:	mov    $0xffffffa1,%eax
               :   66979:	retq   
               :   6697a:	nopw   0x0(%rax,%rax,1)
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000010cdc0 <mlx5_tx_burst_mtiv_ts>: /* mlx5_tx_burst_mtiv_ts total:      2 5.9e-05 */
               :  10cdc0:	endbr64 
               :  10cdc4:	push   %rbp
               :  10cdc5:	mov    %rsp,%rbp
               :  10cdc8:	push   %r15
               :  10cdca:	push   %r14
               :  10cdcc:	push   %r13
               :  10cdce:	push   %r12
               :  10cdd0:	push   %rbx
               :  10cdd1:	and    $0xffffffffffffffe0,%rsp
               :  10cdd5:	sub    $0x1a0,%rsp
               :  10cddc:	mov    %rsi,0xb8(%rsp)
               :  10cde4:	mov    %dx,0xda(%rsp)
               :  10cdec:	mov    %fs:0x28,%rax
               :  10cdf5:	mov    %rax,0x198(%rsp)
               :  10cdfd:	xor    %eax,%eax
               :  10cdff:	test   %dx,%dx
               :  10ce02:	je     10ef00 <mlx5_tx_burst_mtiv_ts+0x2140>
               :  10ce08:	xor    %r9d,%r9d
               :  10ce0b:	xor    %r10d,%r10d
               :  10ce0e:	mov    %r9w,0xaa(%rsp)
               :  10ce17:	mov    %r10w,0xde(%rsp)
               :  10ce20:	movq   $0x0,0xc0(%rsp)
               :  10ce2c:	mov    %rdi,%r14
               :  10ce2f:	mov    0xb8(%rsp),%rax
               :  10ce37:	movzwl 0xde(%rsp),%ebx
               :  10ce3f:	lea    (%rax,%rbx,8),%r12
               :  10ce43:	mov    (%r12),%rax
               :  10ce47:	prefetcht0 (%rax)
               :  10ce4a:	mov    $0x573,%esi
               :  10ce4f:	mov    %r14,%rdi
               :  10ce52:	callq  6dc90 <mlx5_tx_handle_completion>
               :  10ce57:	movzwl 0x2(%r14),%eax
               :  10ce5c:	movzwl 0xc(%r14),%edx
               :  10ce61:	add    0x6(%r14),%ax
               :  10ce66:	add    0xe(%r14),%dx
               :  10ce6b:	sub    0xa(%r14),%dx
               :  10ce70:	sub    (%r14),%ax
               :  10ce74:	mov    %ax,0xc8(%rsp)
               :  10ce7c:	mov    %edx,%r13d
               :  10ce7f:	je     10d5a8 <mlx5_tx_burst_mtiv_ts+0x7e8>
               :  10ce85:	test   %dx,%dx
               :  10ce88:	je     10d5a8 <mlx5_tx_burst_mtiv_ts+0x7e8>
               :  10ce8e:	mov    (%r12),%r10
               :  10ce92:	movzwl 0xda(%rsp),%eax
               :  10ce9a:	movzwl 0x14(%r10),%r12d
               :  10ce9f:	mov    %eax,0xac(%rsp)
               :  10cea6:	cmp    $0x1,%r12w
               :  10ceab:	ja     10ddf8 <mlx5_tx_burst_mtiv_ts+0x1038>
               :  10ceb1:	mov    0x18(%r10),%rcx
               :  10ceb5:	movzwl 0xde(%rsp),%r15d
               :  10cebe:	bt     $0x32,%rcx
               :  10cec3:	jb     10d800 <mlx5_tx_burst_mtiv_ts+0xa40>
               :  10cec9:	bt     $0x39,%rcx
               :  10cece:	jb     10e610 <mlx5_tx_burst_mtiv_ts+0x1850>
               :  10ced4:	mov    0xb8(%rsp),%rax
               :  10cedc:	mov    0xac(%rsp),%edi
               :  10cee3:	lea    0x8(%rax,%rbx,8),%rbx
               :  10cee8:	movzwl %r15w,%eax
               :  10ceec:	sub    %eax,%edi
               :  10ceee:	mov    %edi,0xd0(%rsp)
               :  10cef5:	mov    %r15w,0xdc(%rsp)
               :  10cefe:	mov    %rbx,%r15
               :  10cf01:	cmp    $0x20,%edi
               :  10cf04:	mov    $0x20,%eax
               :  10cf09:	cmovbe %edi,%eax
               :  10cf0c:	mov    %eax,0x98(%rsp)
               :  10cf13:	test   %rcx,0x138(%r14)
               :  10cf1a:	je     10d178 <mlx5_tx_burst_mtiv_ts+0x3b8>
               :  10cf20:	cmp    $0xf,%r13w
               :  10cf25:	jbe    10d060 <mlx5_tx_burst_mtiv_ts+0x2a0>
               :  10cf2b:	cmp    %ax,0xc8(%rsp)
               :  10cf33:	jb     10d060 <mlx5_tx_burst_mtiv_ts+0x2a0>
               :  10cf39:	movzwl 0xa(%r14),%esi
               :  10cf3e:	movzwl 0x10(%r14),%edi
               :  10cf43:	mov    %esi,%r9d
               :  10cf46:	and    %edi,%r9d
               :  10cf49:	movslq 0x140(%r14),%rax
               :  10cf50:	mov    0x148(%r14),%r8
               :  10cf57:	mov    0xf8(%r14),%rbx
               :  10cf5e:	movzwl %r9w,%r9d
               :  10cf62:	movzbl 0x20(%r14),%edx
               :  10cf67:	shl    $0x6,%r9
               :  10cf6b:	mov    (%r10,%rax,1),%r11
               :  10cf6f:	add    %rbx,%r9
               :  10cf72:	lea    0x370(%r8),%r12
               :  10cf79:	lea    0x378(%r8),%rax
               :  10cf80:	test   $0x8,%dl
               :  10cf83:	jne    10e520 <mlx5_tx_burst_mtiv_ts+0x1760>
               :  10cf89:	nopl   0x0(%rax)
               :  10cf90:	mov    (%r12),%rcx
               :  10cf94:	mov    (%rax),%rdx
               :  10cf97:	mov    %rcx,%rsi
               :  10cf9a:	xor    %rdx,%rsi
               :  10cf9d:	shl    $0x28,%rsi
               :  10cfa1:	jne    10cf90 <mlx5_tx_burst_mtiv_ts+0x1d0>
               :  10cfa3:	movslq 0x2a0(%r8),%rax
               :  10cfaa:	sub    %rax,%r11
               :  10cfad:	sub    %rdx,%r11
               :  10cfb0:	movabs $0x7ffffffffffffffe,%rax
               :  10cfba:	cmp    %rax,%r11
               :  10cfbd:	ja     110050 <mlx5_tx_burst_mtiv_ts+0x3290>
               :  10cfc3:	mov    0x298(%r8),%esi
               :  10cfca:	xor    %edx,%edx
               :  10cfcc:	lea    -0x1(%r11,%rsi,1),%rax
               :  10cfd1:	div    %rsi
               :  10cfd4:	cmp    $0x7ffffe,%rax
               :  10cfda:	ja     110076 <mlx5_tx_burst_mtiv_ts+0x32b6>
               :  10cfe0:	shl    $0x28,%rax
               :  10cfe4:	add    %rax,%rcx
               :  10cfe7:	movzwl 0xa(%r14),%eax
               :  10cfec:	mov    %eax,%esi
               :  10cfee:	shl    $0x8,%eax
               :  10cff1:	or     $0xf,%eax
               :  10cff4:	bswap  %eax
               :  10cff6:	mov    0x28(%r14),%r8d
               :  10cffa:	mov    %eax,(%r9)
               :  10cffd:	mov    %r8d,%eax
               :  10d000:	or     $0x2,%eax
               :  10d003:	bswap  %eax
               :  10d005:	mov    %eax,0x4(%r9)
               :  10d009:	movq   $0x4000000,0x8(%r9)
               :  10d011:	lea    0x10(%r9),%rdx
               :  10d015:	shr    $0x28,%rcx
               :  10d019:	bswap  %ecx
               :  10d01b:	mov    0x148(%r14),%rax
               :  10d022:	mov    %ecx,0x8(%rdx)
               :  10d025:	mov    0x2b8(%rax),%rax
               :  10d02c:	mov    0x8(%rax),%eax
               :  10d02f:	bswap  %eax
               :  10d031:	mov    %eax,0xc(%rdx)
               :  10d034:	movq   $0x0,0x10(%r9)
               :  10d03c:	mov    0xf8(%r14),%rbx
               :  10d043:	movzwl 0x10(%r14),%edi
               :  10d048:	mov    0x18(%r10),%rcx
               :  10d04c:	inc    %esi
               :  10d04e:	mov    %si,0xa(%r14)
               :  10d053:	dec    %r13d
               :  10d056:	jmpq   10d198 <mlx5_tx_burst_mtiv_ts+0x3d8>
               :  10d05b:	nopl   0x0(%rax,%rax,1)
               :  10d060:	movzwl 0xdc(%rsp),%ebx
               :  10d068:	mov    %rbx,%r15
               :  10d06b:	cmp    %r15w,0xde(%rsp)
               :  10d074:	je     10d6b0 <mlx5_tx_burst_mtiv_ts+0x8f0>
               :  10d07a:	movzwl (%r14),%edx
               :  10d07e:	movzwl 0xa(%r14),%eax
               :  10d083:	mov    %edx,%ecx
               :  10d085:	sub    0x4(%r14),%cx
               :  10d08a:	cmp    $0x1f,%cx
               :  10d08e:	ja     10d130 <mlx5_tx_burst_mtiv_ts+0x370>
               :  10d094:	mov    %eax,%ecx
               :  10d096:	sub    0x12(%r14),%cx
               :  10d09b:	cmp    0x14(%r14),%cx
               :  10d0a0:	jae    10d130 <mlx5_tx_burst_mtiv_ts+0x370>
               :  10d0a6:	movzbl 0x20(%r14),%edx
               :  10d0ab:	xor    %ecx,%ecx
               :  10d0ad:	test   $0x1,%dl
               :  10d0b0:	jne    10d0c0 <mlx5_tx_burst_mtiv_ts+0x300>
               :  10d0b2:	and    $0x2,%edx
               :  10d0b5:	mov    $0x1,%ecx
               :  10d0ba:	jne    10d5f0 <mlx5_tx_burst_mtiv_ts+0x830>
               :  10d0c0:	movzwl 0x128(%r14),%edx
               :  10d0c8:	mov    0xc0(%rsp),%rsi
               :  10d0d0:	imul   $0x4080,%rdx,%rdx
               :  10d0d7:	mov    0x118(%r14),%rdi
               :  10d0de:	mov    (%rsi),%rsi
               :  10d0e1:	add    0x88eb0(%rip),%rdx        # 195f98 <rte_eth_devices@INTERNAL>
               :  10d0e8:	mov    0x38(%rdx),%rdx
               :  10d0ec:	movzwl 0x12a(%r14),%r8d
               :  10d0f4:	bswap  %eax
               :  10d0f6:	mov    %eax,(%rdi)
               :  10d0f8:	movslq %r8d,%rax
               :  10d0fb:	sfence 
               :  10d0fe:	mov    0x10(%rdx,%rax,8),%rax
               :  10d103:	mov    %rsi,(%rax)
               :  10d106:	test   %ecx,%ecx
               :  10d108:	je     10d10d <mlx5_tx_burst_mtiv_ts+0x34d>
               :  10d10a:	sfence 
               :  10d10d:	cmp    %r15w,0xda(%rsp)
               :  10d116:	jbe    10ff60 <mlx5_tx_burst_mtiv_ts+0x31a0>
               :  10d11c:	mov    %r15w,0xde(%rsp)
               :  10d125:	vzeroupper 
               :  10d128:	jmpq   10ce2f <mlx5_tx_burst_mtiv_ts+0x6f>
               :  10d12d:	nopl   (%rax)
               :  10d130:	mov    %ax,0x12(%r14)
               :  10d135:	mov    0xc0(%rsp),%rax
               :  10d13d:	mov    0x108(%r14),%rcx
               :  10d144:	movl   $0x8000000,0x8(%rax)
               :  10d14b:	movzwl 0x18(%r14),%eax
               :  10d150:	mov    %dx,0x4(%r14)
               :  10d155:	lea    0x1(%rax),%esi
               :  10d158:	and    0x1c(%r14),%ax
               :  10d15d:	movzwl %ax,%eax
               :  10d160:	mov    %dx,(%rcx,%rax,2)
               :  10d164:	mov    %si,0x18(%r14)
               :  10d169:	movzwl 0xa(%r14),%eax
               :  10d16e:	jmpq   10d0a6 <mlx5_tx_burst_mtiv_ts+0x2e6>
               :  10d173:	nopl   0x0(%rax,%rax,1)
               :  10d178:	cmp    $0x3,%r13w
               :  10d17d:	jbe    10d060 <mlx5_tx_burst_mtiv_ts+0x2a0>
               :  10d183:	movzwl 0xa(%r14),%esi
               :  10d188:	mov    0xf8(%r14),%rbx
               :  10d18f:	movzwl 0x10(%r14),%edi
               :  10d194:	mov    0x28(%r14),%r8d
               :  10d198:	cmpl   $0x1,0xd0(%rsp)
               :  10d1a0:	jbe    10d1a8 <mlx5_tx_burst_mtiv_ts+0x3e8>
               :  10d1a2:	mov    (%r15),%rax
               :  10d1a5:	prefetcht0 (%rax)
               :  10d1a8:	and    %esi,%edi
               :  10d1aa:	movzwl %di,%edi
               :  10d1ad:	movzwl %si,%esi
               :  10d1b0:	shl    $0x6,%rdi
               :  10d1b4:	shl    $0x8,%esi
               :  10d1b7:	lea    (%rbx,%rdi,1),%r11
               :  10d1bb:	or     $0x29,%esi
               :  10d1be:	bswap  %esi
               :  10d1c0:	mov    %esi,(%r11)
               :  10d1c3:	bswap  %r8d
               :  10d1c6:	mov    0x88e0b(%rip),%rbx        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :  10d1cd:	mov    %r8d,0x4(%r11)
               :  10d1d1:	movq   $0x4000000,0x8(%r11)
               :  10d1d9:	movq   $0x0,0x10(%r11)
               :  10d1e1:	xor    %eax,%eax
               :  10d1e3:	test   %rcx,(%rbx)
               :  10d1e6:	je     10d1f8 <mlx5_tx_burst_mtiv_ts+0x438>
               :  10d1e8:	mov    0x88d61(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :  10d1ef:	movslq (%rax),%rax
               :  10d1f2:	mov    (%r10,%rax,1),%eax
               :  10d1f6:	bswap  %eax
               :  10d1f8:	cmp    $0xf,%r13w
               :  10d1fd:	mov    %eax,0x18(%r11)
               :  10d201:	mov    $0xf,%edx
               :  10d206:	movzwl %r13w,%eax
               :  10d20a:	cmova  %rdx,%rax
               :  10d20e:	movzwl 0x28(%r10),%r12d
               :  10d213:	shl    $0x6,%eax
               :  10d216:	movzwl 0x10(%r10),%r8d
               :  10d21b:	mov    (%r10),%r9
               :  10d21e:	lea    -0x20(%rax),%edi
               :  10d221:	movl   $0x0,0x1c(%r11)
               :  10d229:	mov    %edi,0x90(%rsp)
               :  10d230:	lea    0x20(%r11),%rbx
               :  10d234:	mov    %r12d,%eax
               :  10d237:	add    %r8,%r9
               :  10d23a:	cmp    $0x12,%r12w
               :  10d23f:	jbe    10eae8 <mlx5_tx_burst_mtiv_ts+0x1d28>
               :  10d245:	mov    %edi,0xb0(%rsp)
               :  10d24c:	movl   $0x0,0xa0(%rsp)
               :  10d257:	mov    0xd0(%rsp),%r8d
               :  10d25f:	cmp    0x24(%r14),%ax
               :  10d264:	ja     10d3f0 <mlx5_tx_burst_mtiv_ts+0x630>
               :  10d26a:	lea    0x8a30f(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :  10d271:	test   %rcx,(%rax)
               :  10d274:	jne    10d3f0 <mlx5_tx_burst_mtiv_ts+0x630>
               :  10d27a:	movabs $0x200000000000000,%rax
               :  10d284:	lea    0x4(%r12),%esi
               :  10d289:	test   %rax,%rcx
               :  10d28c:	je     10d6c0 <mlx5_tx_burst_mtiv_ts+0x900>
               :  10d292:	lea    0x8(%r12),%edi
               :  10d297:	cmp    %edi,0xb0(%rsp)
               :  10d29e:	jb     10d533 <mlx5_tx_burst_mtiv_ts+0x773>
               :  10d2a4:	mov    %esi,%eax
               :  10d2a6:	or     $0x80000000,%eax
               :  10d2ab:	bswap  %eax
               :  10d2ad:	mov    %eax,(%rbx)
               :  10d2af:	add    $0xc,%r9
               :  10d2b3:	mov    -0xc(%r9),%rax
               :  10d2b7:	mov    %rax,0x4(%rbx)
               :  10d2bb:	mov    -0x4(%r9),%eax
               :  10d2bf:	mov    %eax,0xc(%rbx)
               :  10d2c2:	lea    0x10(%rbx),%rax
               :  10d2c6:	lea    -0xc(%r12),%ebx
               :  10d2cb:	mov    0x100(%r14),%rcx
               :  10d2d2:	mov    %ebx,0x88(%rsp)
               :  10d2d9:	cmp    %rcx,%rax
               :  10d2dc:	jae    110329 <mlx5_tx_burst_mtiv_ts+0x3569>
               :  10d2e2:	movzwl 0x2a(%r10),%edx
               :  10d2e7:	or     $0x81000000,%edx
               :  10d2ed:	bswap  %edx
               :  10d2ef:	mov    %edx,(%rax)
               :  10d2f1:	add    $0x4,%rax
               :  10d2f5:	sub    %rax,%rcx
               :  10d2f8:	lea    -0xc(%r12),%esi
               :  10d2fd:	cmp    %ecx,%esi
               :  10d2ff:	mov    %ecx,%ebx
               :  10d301:	mov    %r14,0x60(%rsp)
               :  10d306:	mov    %r15,%rcx
               :  10d309:	cmovb  %esi,%ebx
               :  10d30c:	mov    %r12d,%r15d
               :  10d30f:	mov    %r10,%r12
               :  10d312:	mov    %rcx,%r10
               :  10d315:	mov    %r9,%rcx
               :  10d318:	or     %rax,%rcx
               :  10d31b:	and    $0x1f,%ecx
               :  10d31e:	mov    %ebx,%edx
               :  10d320:	jne    10e380 <mlx5_tx_burst_mtiv_ts+0x15c0>
               :  10d326:	cmp    $0xf,%rdx
               :  10d32a:	jbe    10ed68 <mlx5_tx_burst_mtiv_ts+0x1fa8>
               :  10d330:	cmp    $0x20,%rdx
               :  10d334:	jbe    11014d <mlx5_tx_burst_mtiv_ts+0x338d>
               :  10d33a:	cmp    $0x40,%rdx
               :  10d33e:	jbe    10fdcb <mlx5_tx_burst_mtiv_ts+0x300b>
               :  10d344:	lea    -0x40(%rdx),%rcx
               :  10d348:	shr    $0x6,%rcx
               :  10d34c:	mov    %rcx,0x40(%rsp)
               :  10d351:	inc    %rcx
               :  10d354:	shl    $0x6,%rcx
               :  10d358:	mov    %rcx,0x80(%rsp)
               :  10d360:	add    %r9,%rcx
               :  10d363:	mov    %rcx,%r14
               :  10d366:	mov    %r15d,0x38(%rsp)
               :  10d36b:	mov    %r14,%r15
               :  10d36e:	mov    0x60(%rsp),%r14
               :  10d373:	mov    %rax,%rsi
               :  10d376:	mov    %r9,%rcx
               :  10d379:	nopl   0x0(%rax)
               :  10d380:	vmovdqu64 (%rcx),%ymm5
               :  10d386:	add    $0x40,%rcx
               :  10d38a:	vmovdqu64 %ymm5,(%rsi)
               :  10d390:	vmovdqu64 -0x20(%rcx),%ymm6
               :  10d397:	add    $0x40,%rsi
               :  10d39b:	vmovdqu64 %ymm6,-0x20(%rsi)
               :  10d3a2:	cmp    %r15,%rcx
               :  10d3a5:	jne    10d380 <mlx5_tx_burst_mtiv_ts+0x5c0>
               :  10d3a7:	mov    0x40(%rsp),%rsi
               :  10d3ac:	mov    %r14,0x60(%rsp)
               :  10d3b1:	neg    %rsi
               :  10d3b4:	shl    $0x6,%rsi
               :  10d3b8:	lea    -0x80(%rdx,%rsi,1),%rsi
               :  10d3bd:	add    %rsi,%rcx
               :  10d3c0:	vmovdqu64 (%rcx),%ymm4
               :  10d3c6:	add    0x80(%rsp),%rsi
               :  10d3ce:	add    %rax,%rsi
               :  10d3d1:	vmovdqu64 %ymm4,(%rsi)
               :  10d3d7:	vmovdqu64 0x20(%rcx),%ymm0
               :  10d3de:	mov    0x38(%rsp),%r15d
               :  10d3e3:	vmovdqu64 %ymm0,0x20(%rsi)
               :  10d3ea:	jmpq   10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  10d3ef:	nop
               :  10d3f0:	mov    %r12d,%eax
               :  10d3f3:	bswap  %eax
               :  10d3f5:	mov    %eax,(%rbx)
               :  10d3f7:	mov    0x40(%r14),%ecx
               :  10d3fb:	mov    0x38(%r14),%rax
               :  10d3ff:	lea    0x38(%r14),%rdi
               :  10d403:	cmp    %ecx,(%rax)
               :  10d405:	jne    10f410 <mlx5_tx_burst_mtiv_ts+0x2650>
               :  10d40b:	movzwl 0x44(%r14),%edx
               :  10d410:	lea    0x48(%r14),%rcx
               :  10d414:	lea    (%rdx,%rdx,4),%rdx
               :  10d418:	mov    (%r10),%rax
               :  10d41b:	lea    (%rcx,%rdx,4),%rdx
               :  10d41f:	cmp    (%rdx),%rax
               :  10d422:	jb     10e990 <mlx5_tx_burst_mtiv_ts+0x1bd0>
               :  10d428:	cmp    0x8(%rdx),%rax
               :  10d42c:	jae    10e990 <mlx5_tx_burst_mtiv_ts+0x1bd0>
               :  10d432:	mov    0x10(%rdx),%eax
               :  10d435:	cmp    $0xffffffff,%eax
               :  10d438:	je     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10d43e:	mov    %eax,0x4(%rbx)
               :  10d441:	bswap  %r9
               :  10d444:	movzwl (%r14),%eax
               :  10d448:	decw   0xc8(%rsp)
               :  10d450:	lea    0x1(%rax),%edx
               :  10d453:	and    0x8(%r14),%ax
               :  10d458:	movzwl %ax,%eax
               :  10d45b:	subl   $0x10,0xb0(%rsp)
               :  10d463:	mov    %r9,0x8(%rbx)
               :  10d467:	mov    %dx,(%r14)
               :  10d46b:	mov    %r10,0x188(%r14,%rax,8)
               :  10d473:	add    $0x10,%rbx
               :  10d477:	add    %r12d,0xa0(%rsp)
               :  10d47f:	incw   0xdc(%rsp)
               :  10d487:	dec    %r8d
               :  10d48a:	je     10dd78 <mlx5_tx_burst_mtiv_ts+0xfb8>
               :  10d490:	cmpw   $0x0,0xc8(%rsp)
               :  10d499:	je     10dd78 <mlx5_tx_burst_mtiv_ts+0xfb8>
               :  10d49f:	add    $0x8,%r15
               :  10d4a3:	mov    -0x8(%r15),%r10
               :  10d4a7:	cmp    $0x1,%r8d
               :  10d4ab:	je     10d4b3 <mlx5_tx_burst_mtiv_ts+0x6f3>
               :  10d4ad:	mov    (%r15),%rax
               :  10d4b0:	prefetcht0 (%rax)
               :  10d4b3:	movzwl 0x14(%r10),%eax
               :  10d4b8:	cmp    $0x1,%ax
               :  10d4bc:	ja     10eea0 <mlx5_tx_burst_mtiv_ts+0x20e0>
               :  10d4c2:	mov    0x18(%r10),%rcx
               :  10d4c6:	movabs $0x4000000000000,%rax
               :  10d4d0:	test   %rax,%rcx
               :  10d4d3:	jne    10ef10 <mlx5_tx_burst_mtiv_ts+0x2150>
               :  10d4d9:	movabs $0x200000000000000,%rax
               :  10d4e3:	test   %rax,%rcx
               :  10d4e6:	jne    10efa0 <mlx5_tx_burst_mtiv_ts+0x21e0>
               :  10d4ec:	mov    0x98(%rsp),%eax
               :  10d4f3:	sub    0xd0(%rsp),%eax
               :  10d4fa:	add    %r8d,%eax
               :  10d4fd:	je     10d533 <mlx5_tx_burst_mtiv_ts+0x773>
               :  10d4ff:	cmpl   $0xf,0xb0(%rsp)
               :  10d507:	jbe    10d533 <mlx5_tx_burst_mtiv_ts+0x773>
               :  10d509:	mov    0x88ac8(%rip),%rdi        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :  10d510:	mov    0x18(%r11),%edx
               :  10d514:	xor    %eax,%eax
               :  10d516:	test   %rcx,(%rdi)
               :  10d519:	je     10d52b <mlx5_tx_burst_mtiv_ts+0x76b>
               :  10d51b:	mov    0x88a2e(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :  10d522:	movslq (%rax),%rax
               :  10d525:	mov    (%r10,%rax,1),%eax
               :  10d529:	bswap  %eax
               :  10d52b:	cmp    %eax,%edx
               :  10d52d:	je     10d608 <mlx5_tx_burst_mtiv_ts+0x848>
               :  10d533:	mov    0x90(%rsp),%eax
               :  10d53a:	sub    0xb0(%rsp),%eax
               :  10d541:	je     10d060 <mlx5_tx_burst_mtiv_ts+0x2a0>
               :  10d547:	mov    0xa0(%rsp),%edx
               :  10d54e:	shr    $0x4,%eax
               :  10d551:	add    %rdx,0x158(%r14)
               :  10d558:	lea    0x2(%rax),%edx
               :  10d55b:	or     0x28(%r14),%edx
               :  10d55f:	bswap  %edx
               :  10d561:	add    $0x5,%eax
               :  10d564:	shr    $0x2,%eax
               :  10d567:	add    %ax,0xa(%r14)
               :  10d56c:	mov    %edx,0x4(%r11)
               :  10d570:	sub    %ax,%r13w
               :  10d574:	je     10e5f0 <mlx5_tx_burst_mtiv_ts+0x1830>
               :  10d57a:	cmpw   $0x0,0xc8(%rsp)
               :  10d583:	je     10e5f0 <mlx5_tx_burst_mtiv_ts+0x1830>
               :  10d589:	mov    %r11,0xc0(%rsp)
               :  10d591:	mov    %r8d,0xd0(%rsp)
               :  10d599:	mov    0x18(%r10),%rcx
               :  10d59d:	mov    %r8d,%edi
               :  10d5a0:	jmpq   10cf01 <mlx5_tx_burst_mtiv_ts+0x141>
               :  10d5a5:	nopl   (%rax)
               :  10d5a8:	mov    %rbx,%rax
               :  10d5ab:	add    %rax,0x150(%r14)
               :  10d5b2:	cmpw   $0x0,0xaa(%rsp)
               :  10d5bb:	jne    10ddd0 <mlx5_tx_burst_mtiv_ts+0x1010>
               :  10d5c1:	mov    0x198(%rsp),%rax
               :  10d5c9:	xor    %fs:0x28,%rax
               :  10d5d2:	jne    115724 <mlx5_tx_burst_mtiv_ts+0x8964>
               :  10d5d8:	movzwl 0xde(%rsp),%eax
               :  10d5e0:	lea    -0x28(%rbp),%rsp
               :  10d5e4:	pop    %rbx
               :  10d5e5:	pop    %r12
               :  10d5e7:	pop    %r13
               :  10d5e9:	pop    %r14
               :  10d5eb:	pop    %r15
               :  10d5ed:	pop    %rbp
               :  10d5ee:	retq   
               :  10d5ef:	nop
               :  10d5f0:	xor    %ecx,%ecx
               :  10d5f2:	testb  $0x3f,0xda(%rsp)
               :  10d5fa:	setne  %cl
               :  10d5fd:	jmpq   10d0c0 <mlx5_tx_burst_mtiv_ts+0x300>
               :  10d602:	nopw   0x0(%rax,%rax,1)
               :  10d608:	test   %rcx,0x138(%r14)
               :  10d60f:	jne    10d533 <mlx5_tx_burst_mtiv_ts+0x773>
               :  10d615:	cmp    %rbx,0x100(%r14)
               :  10d61c:	ja     10d625 <mlx5_tx_burst_mtiv_ts+0x865>
               :  10d61e:	mov    0xf8(%r14),%rbx
               :  10d625:	movzwl 0x28(%r10),%r12d
               :  10d62a:	movzwl 0x10(%r10),%r9d
               :  10d62f:	mov    %r12d,%eax
               :  10d632:	add    (%r10),%r9
               :  10d635:	cmp    $0x12,%r12w
               :  10d63a:	ja     10d25f <mlx5_tx_burst_mtiv_ts+0x49f>
               :  10d640:	mov    0xb0(%rsp),%r8d
               :  10d648:	mov    0x90(%rsp),%eax
               :  10d64f:	movzwl 0xdc(%rsp),%r15d
               :  10d658:	sub    %r8d,%eax
               :  10d65b:	je     10d68e <mlx5_tx_burst_mtiv_ts+0x8ce>
               :  10d65d:	mov    0xa0(%rsp),%edx
               :  10d664:	shr    $0x4,%eax
               :  10d667:	add    %rdx,0x158(%r14)
               :  10d66e:	lea    0x2(%rax),%edx
               :  10d671:	or     0x28(%r14),%edx
               :  10d675:	bswap  %edx
               :  10d677:	add    $0x5,%eax
               :  10d67a:	shr    $0x2,%eax
               :  10d67d:	add    %ax,0xa(%r14)
               :  10d682:	mov    %edx,0x4(%r11)
               :  10d686:	mov    %r11,0xc0(%rsp)
               :  10d68e:	incq   0x160(%r14)
               :  10d695:	movzwl %r15w,%ebx
               :  10d699:	cmp    %r15w,0xde(%rsp)
               :  10d6a2:	jne    10d07a <mlx5_tx_burst_mtiv_ts+0x2ba>
               :  10d6a8:	nopl   0x0(%rax,%rax,1)
               :  10d6b0:	mov    %rbx,%rax
               :  10d6b3:	vzeroupper 
               :  10d6b6:	jmpq   10d5ab <mlx5_tx_burst_mtiv_ts+0x7eb>
               :  10d6bb:	nopl   0x0(%rax,%rax,1)
               :  10d6c0:	cmp    %esi,0xb0(%rsp)
               :  10d6c7:	jb     10d533 <mlx5_tx_burst_mtiv_ts+0x773>
               :  10d6cd:	mov    %r12d,%eax
               :  10d6d0:	or     $0x80000000,%eax
               :  10d6d5:	bswap  %eax
               :  10d6d7:	mov    %eax,(%rbx)
               :  10d6d9:	mov    0x100(%r14),%rax
               :  10d6e0:	add    $0x4,%rbx
               :  10d6e4:	sub    %rbx,%rax
               :  10d6e7:	mov    %r14,0x60(%rsp)
               :  10d6ec:	cmp    %eax,%r12d
               :  10d6ef:	mov    %eax,%edi
               :  10d6f1:	mov    %r15,%rax
               :  10d6f4:	mov    %r12d,0x88(%rsp)
               :  10d6fc:	cmovb  %r12d,%edi
               :  10d700:	mov    %r12d,%r15d
               :  10d703:	mov    %r10,%r12
               :  10d706:	mov    %rax,%r10
               :  10d709:	mov    %r9,%rdx
               :  10d70c:	or     %rbx,%rdx
               :  10d70f:	and    $0x1f,%edx
               :  10d712:	mov    %edi,%eax
               :  10d714:	jne    10e450 <mlx5_tx_burst_mtiv_ts+0x1690>
               :  10d71a:	cmp    $0xf,%rax
               :  10d71e:	jbe    10ee20 <mlx5_tx_burst_mtiv_ts+0x2060>
               :  10d724:	cmp    $0x20,%rax
               :  10d728:	jbe    110130 <mlx5_tx_burst_mtiv_ts+0x3370>
               :  10d72e:	cmp    $0x40,%rax
               :  10d732:	jbe    10fe3e <mlx5_tx_burst_mtiv_ts+0x307e>
               :  10d738:	lea    -0x40(%rax),%rdx
               :  10d73c:	shr    $0x6,%rdx
               :  10d740:	mov    %rdx,0x40(%rsp)
               :  10d745:	inc    %rdx
               :  10d748:	shl    $0x6,%rdx
               :  10d74c:	lea    (%r9,%rdx,1),%rcx
               :  10d750:	mov    %rcx,%r14
               :  10d753:	mov    %r15d,0x38(%rsp)
               :  10d758:	mov    %r14,%r15
               :  10d75b:	mov    0x60(%rsp),%r14
               :  10d760:	mov    %rdx,0x80(%rsp)
               :  10d768:	mov    %rbx,%rcx
               :  10d76b:	mov    %r9,%rdx
               :  10d76e:	xchg   %ax,%ax
               :  10d770:	vmovdqu64 (%rdx),%ymm7
               :  10d776:	add    $0x40,%rdx
               :  10d77a:	vmovdqu64 %ymm7,(%rcx)
               :  10d780:	vmovdqu64 -0x20(%rdx),%ymm5
               :  10d787:	add    $0x40,%rcx
               :  10d78b:	vmovdqu64 %ymm5,-0x20(%rcx)
               :  10d792:	cmp    %r15,%rdx
               :  10d795:	jne    10d770 <mlx5_tx_burst_mtiv_ts+0x9b0>
               :  10d797:	mov    0x40(%rsp),%rcx
               :  10d79c:	mov    %r14,0x60(%rsp)
               :  10d7a1:	neg    %rcx
               :  10d7a4:	shl    $0x6,%rcx
               :  10d7a8:	lea    -0x80(%rax,%rcx,1),%rcx
               :  10d7ad:	add    %rcx,%rdx
               :  10d7b0:	vmovdqu64 (%rdx),%ymm7
               :  10d7b6:	add    0x80(%rsp),%rcx
               :  10d7be:	add    %rbx,%rcx
               :  10d7c1:	vmovdqu64 %ymm7,(%rcx)
               :  10d7c7:	vmovdqu64 0x20(%rdx),%ymm2
               :  10d7ce:	mov    0x38(%rsp),%r15d
               :  10d7d3:	vmovdqu64 %ymm2,0x20(%rcx)
               :  10d7da:	jmpq   10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  10d7df:	mov    %r15,%r10
               :  10d7e2:	movzwl 0xdc(%rsp),%r15d
               :  10d7eb:	mov    %rbx,0xc0(%rsp)
               :  10d7f3:	movzwl %r15w,%ebx
               :  10d7f7:	nopw   0x0(%rax,%rax,1)
               :  10d800:	mov    0xb8(%rsp),%rax
               :  10d808:	mov    %r15w,0xdc(%rsp)
               :  10d811:	lea    0x8(%rax,%rbx,8),%rax
               :  10d816:	mov    0xac(%rsp),%ebx
               :  10d81d:	mov    %rax,0xb0(%rsp)
               :  10d825:	movzwl %r15w,%eax
               :  10d829:	sub    %eax,%ebx
               :  10d82b:	movzwl 0xc8(%rsp),%eax
               :  10d833:	mov    %ebx,0xa0(%rsp)
               :  10d83a:	mov    %ax,0xd0(%rsp)
               :  10d842:	mov    0xc0(%rsp),%r15
               :  10d84a:	movzwl 0xdc(%rsp),%r12d
               :  10d853:	movzwl 0xd0(%rsp),%eax
               :  10d85b:	add    0xc8(%rsp),%r12w
               :  10d864:	mov    %r12d,%r9d
               :  10d867:	sub    %eax,%r9d
               :  10d86a:	test   %rcx,0x138(%r14)
               :  10d871:	je     10d98e <mlx5_tx_burst_mtiv_ts+0xbce>
               :  10d877:	cmp    $0xf,%r13w
               :  10d87c:	jbe    10ef88 <mlx5_tx_burst_mtiv_ts+0x21c8>
               :  10d882:	test   %ax,%ax
               :  10d885:	je     10ef88 <mlx5_tx_burst_mtiv_ts+0x21c8>
               :  10d88b:	movzwl 0xa(%r14),%r8d
               :  10d890:	movzwl 0x10(%r14),%esi
               :  10d895:	movslq 0x140(%r14),%rax
               :  10d89c:	and    %r8d,%esi
               :  10d89f:	mov    0x148(%r14),%rdi
               :  10d8a6:	movzwl %si,%esi
               :  10d8a9:	movzbl 0x20(%r14),%ebx
               :  10d8ae:	shl    $0x6,%rsi
               :  10d8b2:	mov    (%r10,%rax,1),%r11
               :  10d8b6:	add    0xf8(%r14),%rsi
               :  10d8bd:	lea    0x370(%rdi),%rdx
               :  10d8c4:	lea    0x378(%rdi),%rax
               :  10d8cb:	test   $0x8,%bl
               :  10d8ce:	jne    111982 <mlx5_tx_burst_mtiv_ts+0x4bc2>
               :  10d8d4:	nopl   0x0(%rax)
               :  10d8d8:	mov    (%rdx),%rcx
               :  10d8db:	mov    (%rax),%r8
               :  10d8de:	mov    %rcx,%rbx
               :  10d8e1:	xor    %r8,%rbx
               :  10d8e4:	shl    $0x28,%rbx
               :  10d8e8:	jne    10d8d8 <mlx5_tx_burst_mtiv_ts+0xb18>
               :  10d8ea:	movslq 0x2a0(%rdi),%rax
               :  10d8f1:	sub    %rax,%r11
               :  10d8f4:	sub    %r8,%r11
               :  10d8f7:	movabs $0x7ffffffffffffffe,%rax
               :  10d901:	cmp    %rax,%r11
               :  10d904:	ja     112c7a <mlx5_tx_burst_mtiv_ts+0x5eba>
               :  10d90a:	mov    0x298(%rdi),%r8d
               :  10d911:	xor    %edx,%edx
               :  10d913:	lea    -0x1(%r11,%r8,1),%rax
               :  10d918:	div    %r8
               :  10d91b:	cmp    $0x7ffffe,%rax
               :  10d921:	ja     10ff3b <mlx5_tx_burst_mtiv_ts+0x317b>
               :  10d927:	shl    $0x28,%rax
               :  10d92b:	add    %rax,%rcx
               :  10d92e:	movzwl 0xa(%r14),%eax
               :  10d933:	mov    %eax,%r8d
               :  10d936:	shl    $0x8,%eax
               :  10d939:	or     $0xf,%eax
               :  10d93c:	bswap  %eax
               :  10d93e:	mov    %eax,(%rsi)
               :  10d940:	mov    0x28(%r14),%eax
               :  10d944:	or     $0x2,%eax
               :  10d947:	bswap  %eax
               :  10d949:	mov    %eax,0x4(%rsi)
               :  10d94c:	movq   $0x4000000,0x8(%rsi)
               :  10d954:	lea    0x10(%rsi),%rax
               :  10d958:	shr    $0x28,%rcx
               :  10d95c:	bswap  %ecx
               :  10d95e:	mov    0x148(%r14),%rdx
               :  10d965:	mov    %ecx,0x8(%rax)
               :  10d968:	mov    0x2b8(%rdx),%rdx
               :  10d96f:	mov    0x8(%rdx),%edx
               :  10d972:	bswap  %edx
               :  10d974:	mov    %edx,0xc(%rax)
               :  10d977:	movq   $0x0,0x10(%rsi)
               :  10d97f:	mov    0x18(%r10),%rcx
               :  10d983:	inc    %r8d
               :  10d986:	mov    %r8w,0xa(%r14)
               :  10d98b:	dec    %r13d
               :  10d98e:	movzbl 0x48(%r10),%edx
               :  10d993:	movzwl 0x48(%r10),%eax
               :  10d998:	movabs $0x200000000000000,%rsi
               :  10d9a2:	shr    $0x7,%ax
               :  10d9a6:	and    $0x7f,%edx
               :  10d9a9:	and    %rcx,%rsi
               :  10d9ac:	mov    %rsi,0xc0(%rsp)
               :  10d9b4:	movzbl 0x4a(%r10),%edi
               :  10d9b9:	movzwl %ax,%eax
               :  10d9bc:	jne    10f3f0 <mlx5_tx_burst_mtiv_ts+0x2630>
               :  10d9c2:	add    %edx,%eax
               :  10d9c4:	add    %eax,%edi
               :  10d9c6:	je     1100c0 <mlx5_tx_burst_mtiv_ts+0x3300>
               :  10d9cc:	xor    %r11d,%r11d
               :  10d9cf:	movabs $0xffff000000,%rax
               :  10d9d9:	test   %rax,0x48(%r10)
               :  10d9dd:	je     1100c0 <mlx5_tx_burst_mtiv_ts+0x3300>
               :  10d9e3:	movabs $0x1e00000000000,%rax
               :  10d9ed:	test   %rax,%rcx
               :  10d9f0:	je     10da11 <mlx5_tx_burst_mtiv_ts+0xc51>
               :  10d9f2:	movzbl 0x4e(%r10),%eax
               :  10d9f7:	mov    $0x8,%ebx
               :  10d9fc:	shr    %al
               :  10d9fe:	movzbl %al,%eax
               :  10da01:	shrx   %ebx,0x4c(%r10),%edx
               :  10da07:	and    $0x1ff,%edx
               :  10da0d:	add    %edx,%eax
               :  10da0f:	add    %eax,%edi
               :  10da11:	lea    -0x13(%rdi),%eax
               :  10da14:	cmp    $0xad,%eax
               :  10da19:	ja     1100c0 <mlx5_tx_burst_mtiv_ts+0x3300>
               :  10da1f:	movzwl 0x28(%r10),%r8d
               :  10da24:	add    %r11d,%r8d
               :  10da27:	cmp    %r8d,%edi
               :  10da2a:	ja     1100c0 <mlx5_tx_burst_mtiv_ts+0x3300>
               :  10da30:	lea    -0x3(%rdi),%ebx
               :  10da33:	shr    $0x4,%ebx
               :  10da36:	lea    0x4(%rbx),%esi
               :  10da39:	add    $0x7,%ebx
               :  10da3c:	shr    $0x2,%ebx
               :  10da3f:	movzwl %r13w,%eax
               :  10da43:	cmp    %ebx,%eax
               :  10da45:	jb     10ef88 <mlx5_tx_burst_mtiv_ts+0x21c8>
               :  10da4b:	movzwl 0x4b(%r10),%r9d
               :  10da50:	xor    %edx,%edx
               :  10da52:	lea    -0x1(%r8,%r9,1),%eax
               :  10da57:	sub    %edi,%eax
               :  10da59:	div    %r9d
               :  10da5c:	lea    -0x1(%rax),%edx
               :  10da5f:	mov    %rdx,%rax
               :  10da62:	imul   %edi,%eax
               :  10da65:	add    %rdx,0x150(%r14)
               :  10da6c:	movzwl 0x10(%r14),%edx
               :  10da71:	add    %r8d,%eax
               :  10da74:	add    %rax,0x158(%r14)
               :  10da7b:	movzwl 0xa(%r14),%eax
               :  10da80:	and    %eax,%edx
               :  10da82:	movzwl %dx,%edx
               :  10da85:	shl    $0x6,%rdx
               :  10da89:	add    0xf8(%r14),%rdx
               :  10da90:	shl    $0x8,%eax
               :  10da93:	mov    %rdx,%r15
               :  10da96:	or     $0xe,%eax
               :  10da99:	bswap  %eax
               :  10da9b:	mov    %eax,(%rdx)
               :  10da9d:	or     0x28(%r14),%esi
               :  10daa1:	bswap  %esi
               :  10daa3:	mov    %esi,0x4(%rdx)
               :  10daa6:	bswap  %r9d
               :  10daa9:	mov    %r9d,0x14(%rdx)
               :  10daad:	movq   $0x4000000,0x8(%rdx)
               :  10dab5:	movl   $0x0,0x10(%rdx)
               :  10dabc:	mov    0x88515(%rip),%rdx        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :  10dac3:	xor    %eax,%eax
               :  10dac5:	test   %rcx,(%rdx)
               :  10dac8:	je     10dada <mlx5_tx_burst_mtiv_ts+0xd1a>
               :  10daca:	mov    0x8847f(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :  10dad1:	movslq (%rax),%rax
               :  10dad4:	mov    (%r10,%rax,1),%eax
               :  10dad8:	bswap  %eax
               :  10dada:	mov    %eax,0x18(%r15)
               :  10dade:	movzwl 0x10(%r10),%eax
               :  10dae3:	mov    %edi,%edx
               :  10dae5:	add    (%r10),%rax
               :  10dae8:	xchg   %dl,%dh
               :  10daea:	mov    %dx,0x1c(%r15)
               :  10daef:	movzwl (%rax),%edx
               :  10daf2:	mov    %dx,0x1e(%r15)
               :  10daf7:	test   %r11d,%r11d
               :  10dafa:	jne    110289 <mlx5_tx_burst_mtiv_ts+0x34c9>
               :  10db00:	vmovdqu64 0x2(%rax),%xmm1
               :  10db0a:	lea    0x12(%rax),%rcx
               :  10db0e:	vmovups %xmm1,0x20(%r15)
               :  10db14:	mov    0x100(%r14),%rax
               :  10db1b:	lea    0x30(%r15),%rsi
               :  10db1f:	lea    -0x12(%rdi),%r9d
               :  10db23:	sub    %rsi,%rax
               :  10db26:	cmp    %eax,%r9d
               :  10db29:	cmovb  %r9d,%eax
               :  10db2d:	mov    %r14,0x90(%rsp)
               :  10db35:	mov    %eax,0x98(%rsp)
               :  10db3c:	mov    %rcx,%rax
               :  10db3f:	or     %rsi,%rax
               :  10db42:	mov    0x98(%rsp),%r11d
               :  10db4a:	test   $0x1f,%al
               :  10db4c:	je     10fcc8 <mlx5_tx_burst_mtiv_ts+0x2f08>
               :  10db52:	cmp    $0xf,%r11
               :  10db56:	jbe    1114a8 <mlx5_tx_burst_mtiv_ts+0x46e8>
               :  10db5c:	cmp    $0x20,%r11
               :  10db60:	jbe    112c3d <mlx5_tx_burst_mtiv_ts+0x5e7d>
               :  10db66:	cmp    $0x30,%r11
               :  10db6a:	jbe    113165 <mlx5_tx_burst_mtiv_ts+0x63a5>
               :  10db70:	vmovdqu64 (%rcx),%ymm0
               :  10db76:	cmp    $0x40,%r11
               :  10db7a:	jbe    113859 <mlx5_tx_burst_mtiv_ts+0x6a99>
               :  10db80:	cmp    $0x100,%r11
               :  10db87:	ja     114560 <mlx5_tx_burst_mtiv_ts+0x77a0>
               :  10db8d:	cmp    $0x7f,%r11
               :  10db91:	jbe    114649 <mlx5_tx_burst_mtiv_ts+0x7889>
               :  10db97:	vmovdqu64 %ymm0,(%rsi)
               :  10db9d:	vmovdqu64 0x20(%rcx),%ymm1
               :  10dba4:	lea    -0x80(%r11),%rax
               :  10dba8:	vmovdqu64 %ymm1,0x20(%rsi)
               :  10dbaf:	vmovdqu64 0x40(%rcx),%ymm2
               :  10dbb6:	lea    0x80(%rcx),%rdx
               :  10dbbd:	vmovdqu64 %ymm2,0x40(%rsi)
               :  10dbc4:	vmovdqu64 0x60(%rcx),%ymm3
               :  10dbcb:	lea    0x80(%rsi),%r14
               :  10dbd2:	vmovdqu64 %ymm3,0x60(%rsi)
               :  10dbd9:	cmp    $0x3f,%rax
               :  10dbdd:	ja     11554f <mlx5_tx_burst_mtiv_ts+0x878f>
               :  10dbe3:	cmp    $0x20,%rax
               :  10dbe7:	jbe    113976 <mlx5_tx_burst_mtiv_ts+0x6bb6>
               :  10dbed:	vmovdqu64 (%rdx),%ymm5
               :  10dbf3:	vmovdqu64 %ymm5,(%r14)
               :  10dbf9:	vmovdqu64 -0x20(%rdx,%rax,1),%ymm6
               :  10dc01:	vmovdqa64 %ymm6,0x60(%rsp)
               :  10dc09:	vmovdqu64 %ymm6,-0x20(%r14,%rax,1)
               :  10dc11:	nopl   0x0(%rax)
               :  10dc18:	sub    0x98(%rsp),%r9d
               :  10dc20:	jne    112c5b <mlx5_tx_burst_mtiv_ts+0x5e9b>
               :  10dc26:	lea    0xf(%rsi,%r11,1),%rdx
               :  10dc2b:	mov    0x90(%rsp),%r14
               :  10dc33:	and    $0xfffffffffffffff0,%rdx
               :  10dc37:	cmp    0x100(%r14),%rdx
               :  10dc3e:	jae    1130b2 <mlx5_tx_burst_mtiv_ts+0x62f2>
               :  10dc44:	movzwl 0x10(%r10),%ecx
               :  10dc49:	mov    (%r10),%rax
               :  10dc4c:	sub    0xc0(%rsp),%rcx
               :  10dc54:	mov    %edi,%esi
               :  10dc56:	add    %rsi,%rcx
               :  10dc59:	add    %rax,%rcx
               :  10dc5c:	sub    %edi,%r8d
               :  10dc5f:	bswap  %r8d
               :  10dc62:	mov    %r8d,(%rdx)
               :  10dc65:	mov    0x38(%r14),%rsi
               :  10dc69:	mov    0x40(%r14),%r11d
               :  10dc6d:	lea    0x38(%r14),%rdi
               :  10dc71:	cmp    %r11d,(%rsi)
               :  10dc74:	jne    112179 <mlx5_tx_burst_mtiv_ts+0x53b9>
               :  10dc7a:	movzwl 0x44(%r14),%esi
               :  10dc7f:	lea    0x48(%r14),%r8
               :  10dc83:	lea    (%rsi,%rsi,4),%rsi
               :  10dc87:	lea    (%r8,%rsi,4),%rsi
               :  10dc8b:	cmp    (%rsi),%rax
               :  10dc8e:	jb     111510 <mlx5_tx_burst_mtiv_ts+0x4750>
               :  10dc94:	cmp    0x8(%rsi),%rax
               :  10dc98:	jae    111510 <mlx5_tx_burst_mtiv_ts+0x4750>
               :  10dc9e:	mov    0x10(%rsi),%eax
               :  10dca1:	cmp    $0xffffffff,%eax
               :  10dca4:	je     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  10dcaa:	mov    %eax,0x4(%rdx)
               :  10dcad:	bswap  %rcx
               :  10dcb0:	movzwl (%r14),%eax
               :  10dcb4:	decw   0xd0(%rsp)
               :  10dcbc:	mov    %rcx,0x8(%rdx)
               :  10dcc0:	lea    0x1(%rax),%edx
               :  10dcc3:	and    0x8(%r14),%ax
               :  10dcc8:	movzwl %ax,%eax
               :  10dccb:	add    %bx,0xa(%r14)
               :  10dcd0:	mov    %dx,(%r14)
               :  10dcd4:	mov    %r10,0x188(%r14,%rax,8)
               :  10dcdc:	movzwl 0xd0(%rsp),%eax
               :  10dce4:	mov    %r12d,%esi
               :  10dce7:	sub    %eax,%esi
               :  10dce9:	sub    %ebx,%r13d
               :  10dcec:	test   %ax,%ax
               :  10dcef:	sete   %dl
               :  10dcf2:	decl   0xa0(%rsp)
               :  10dcf9:	sete   %al
               :  10dcfc:	or     %al,%dl
               :  10dcfe:	jne    110a1a <mlx5_tx_burst_mtiv_ts+0x3c5a>
               :  10dd04:	test   %r13w,%r13w
               :  10dd08:	je     110a1a <mlx5_tx_burst_mtiv_ts+0x3c5a>
               :  10dd0e:	addq   $0x8,0xb0(%rsp)
               :  10dd17:	cmpl   $0x1,0xa0(%rsp)
               :  10dd1f:	mov    0xb0(%rsp),%rax
               :  10dd27:	mov    -0x8(%rax),%r10
               :  10dd2b:	je     10dd33 <mlx5_tx_burst_mtiv_ts+0xf73>
               :  10dd2d:	mov    (%rax),%rax
               :  10dd30:	prefetcht0 (%rax)
               :  10dd33:	movzwl 0x14(%r10),%r12d
               :  10dd38:	cmp    $0x1,%r12w
               :  10dd3d:	ja     112970 <mlx5_tx_burst_mtiv_ts+0x5bb0>
               :  10dd43:	mov    0x18(%r10),%rcx
               :  10dd47:	bt     $0x32,%rcx
               :  10dd4c:	jb     10d84a <mlx5_tx_burst_mtiv_ts+0xa8a>
               :  10dd52:	movzwl 0xd0(%rsp),%eax
               :  10dd5a:	mov    %r15,0xc0(%rsp)
               :  10dd62:	mov    %ax,0xc8(%rsp)
               :  10dd6a:	movzwl %si,%ebx
               :  10dd6d:	mov    %esi,%r15d
               :  10dd70:	jmpq   10cec9 <mlx5_tx_burst_mtiv_ts+0x109>
               :  10dd75:	nopl   (%rax)
               :  10dd78:	mov    0xa0(%rsp),%eax
               :  10dd7f:	mov    0xb0(%rsp),%r8d
               :  10dd87:	add    %rax,0x158(%r14)
               :  10dd8e:	mov    0x90(%rsp),%eax
               :  10dd95:	movzwl 0xdc(%rsp),%ebx
               :  10dd9d:	sub    %r8d,%eax
               :  10dda0:	shr    $0x4,%eax
               :  10dda3:	lea    0x2(%rax),%edx
               :  10dda6:	mov    %rbx,%r15
               :  10dda9:	or     0x28(%r14),%edx
               :  10ddad:	bswap  %edx
               :  10ddaf:	add    $0x5,%eax
               :  10ddb2:	shr    $0x2,%eax
               :  10ddb5:	add    %ax,0xa(%r14)
               :  10ddba:	mov    %edx,0x4(%r11)
               :  10ddbe:	mov    %r11,0xc0(%rsp)
               :  10ddc6:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  10ddcb:	nopl   0x0(%rax,%rax,1)
               :  10ddd0:	movzwl 0xaa(%rsp),%edx
               :  10ddd8:	mov    0xb8(%rsp),%rsi
               :  10dde0:	mov    $0x573,%ecx
               :  10dde5:	mov    %r14,%rdi
               :  10dde8:	callq  e30a0 <__mlx5_tx_free_mbuf>
               :  10dded:	jmpq   10d5c1 <mlx5_tx_burst_mtiv_ts+0x801>
               :  10ddf2:	nopw   0x0(%rax,%rax,1)
               :  10ddf8:	movzwl 0xde(%rsp),%r15d
               :  10de01:	mov    0xb8(%rsp),%rax
               :  10de09:	mov    %r15w,0x98(%rsp)
               :  10de12:	lea    0x8(%rax,%rbx,8),%rax
               :  10de17:	mov    0xac(%rsp),%ebx
               :  10de1e:	mov    %rax,0x60(%rsp)
               :  10de23:	movzwl %r15w,%eax
               :  10de27:	sub    %eax,%ebx
               :  10de29:	mov    %ebx,0xb0(%rsp)
               :  10de30:	mov    %r13w,0xdc(%rsp)
               :  10de39:	mov    %r12d,%ebx
               :  10de3c:	mov    %r10,%r13
               :  10de3f:	mov    %r14,%r12
               :  10de42:	cmp    %bx,0xc8(%rsp)
               :  10de4a:	jb     10ef70 <mlx5_tx_burst_mtiv_ts+0x21b0>
               :  10de50:	mov    0x18(%r13),%r10
               :  10de54:	movabs $0x4000000000000,%rax
               :  10de5e:	test   %rax,%r10
               :  10de61:	jne    110335 <mlx5_tx_burst_mtiv_ts+0x3575>
               :  10de67:	bt     $0x39,%r10
               :  10de6c:	movl   $0x0,0xd0(%rsp)
               :  10de77:	mov    0x24(%r13),%ecx
               :  10de7b:	jae    10de8b <mlx5_tx_burst_mtiv_ts+0x10cb>
               :  10de7d:	movl   $0x4,0xd0(%rsp)
               :  10de88:	add    $0x4,%ecx
               :  10de8b:	cmp    $0x12,%ecx
               :  10de8e:	jbe    10e5d0 <mlx5_tx_burst_mtiv_ts+0x1810>
               :  10de94:	lea    0x896e5(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :  10de9b:	movzwl 0x22(%r12),%r8d
               :  10dea1:	mov    (%rax),%r9
               :  10dea4:	mov    0x138(%r12),%rax
               :  10deac:	mov    %r10,%rdi
               :  10deaf:	mov    %r8d,%esi
               :  10deb2:	and    %r9,%rdi
               :  10deb5:	and    %r10,%rax
               :  10deb8:	cmp    %ecx,%r8d
               :  10debb:	jb     10dec6 <mlx5_tx_burst_mtiv_ts+0x1106>
               :  10debd:	test   %rdi,%rdi
               :  10dec0:	je     10fbcb <mlx5_tx_burst_mtiv_ts+0x2e0b>
               :  10dec6:	movzwl 0x28(%r13),%r11d
               :  10decb:	movzwl 0x26(%r12),%edx
               :  10ded1:	mov    %r11d,%r10d
               :  10ded4:	test   %dx,%dx
               :  10ded7:	je     10f460 <mlx5_tx_burst_mtiv_ts+0x26a0>
               :  10dedd:	cmp    %ecx,%edx
               :  10dedf:	cmova  %ecx,%edx
               :  10dee2:	mov    %edx,0xa0(%rsp)
               :  10dee9:	test   %rdi,%rdi
               :  10deec:	jne    10df11 <mlx5_tx_burst_mtiv_ts+0x1151>
               :  10deee:	cmp    %r10w,%si
               :  10def2:	jae    10f498 <mlx5_tx_burst_mtiv_ts+0x26d8>
               :  10def8:	mov    %r13,%rdx
               :  10defb:	movzwl 0x10(%rdx),%edi
               :  10deff:	add    (%rdx),%rdi
               :  10df02:	mov    %rdi,%rdx
               :  10df05:	neg    %rdx
               :  10df08:	and    $0x3f,%edx
               :  10df0b:	jne    112ba6 <mlx5_tx_burst_mtiv_ts+0x5de6>
               :  10df11:	test   %rax,%rax
               :  10df14:	je     10e03e <mlx5_tx_burst_mtiv_ts+0x127e>
               :  10df1a:	cmpw   $0xf,0xdc(%rsp)
               :  10df23:	jbe    10ef70 <mlx5_tx_burst_mtiv_ts+0x21b0>
               :  10df29:	movzwl 0xa(%r12),%esi
               :  10df2f:	movzwl 0x10(%r12),%edi
               :  10df35:	movslq 0x140(%r12),%rax
               :  10df3d:	and    %esi,%edi
               :  10df3f:	mov    0x148(%r12),%r8
               :  10df47:	movzwl %di,%edi
               :  10df4a:	movzbl 0x20(%r12),%r10d
               :  10df50:	shl    $0x6,%rdi
               :  10df54:	mov    0x0(%r13,%rax,1),%r9
               :  10df59:	add    0xf8(%r12),%rdi
               :  10df61:	lea    0x370(%r8),%rdx
               :  10df68:	lea    0x378(%r8),%rax
               :  10df6f:	test   $0x8,%r10b
               :  10df73:	jne    10feac <mlx5_tx_burst_mtiv_ts+0x30ec>
               :  10df79:	nopl   0x0(%rax)
               :  10df80:	mov    (%rdx),%rsi
               :  10df83:	mov    (%rax),%r10
               :  10df86:	mov    %rsi,%r11
               :  10df89:	xor    %r10,%r11
               :  10df8c:	shl    $0x28,%r11
               :  10df90:	jne    10df80 <mlx5_tx_burst_mtiv_ts+0x11c0>
               :  10df92:	movslq 0x2a0(%r8),%rax
               :  10df99:	sub    %rax,%r9
               :  10df9c:	sub    %r10,%r9
               :  10df9f:	movabs $0x7ffffffffffffffe,%rax
               :  10dfa9:	cmp    %rax,%r9
               :  10dfac:	ja     1130d8 <mlx5_tx_burst_mtiv_ts+0x6318>
               :  10dfb2:	mov    0x298(%r8),%r10d
               :  10dfb9:	xor    %edx,%edx
               :  10dfbb:	lea    -0x1(%r9,%r10,1),%rax
               :  10dfc0:	div    %r10
               :  10dfc3:	cmp    $0x7ffffe,%rax
               :  10dfc9:	ja     113132 <mlx5_tx_burst_mtiv_ts+0x6372>
               :  10dfcf:	movzwl 0xa(%r12),%edx
               :  10dfd5:	shl    $0x28,%rax
               :  10dfd9:	add    %rsi,%rax
               :  10dfdc:	mov    %edx,%esi
               :  10dfde:	shl    $0x8,%edx
               :  10dfe1:	or     $0xf,%edx
               :  10dfe4:	bswap  %edx
               :  10dfe6:	mov    %edx,(%rdi)
               :  10dfe8:	mov    0x28(%r12),%edx
               :  10dfed:	or     $0x2,%edx
               :  10dff0:	bswap  %edx
               :  10dff2:	mov    %edx,0x4(%rdi)
               :  10dff5:	movq   $0x4000000,0x8(%rdi)
               :  10dffd:	lea    0x10(%rdi),%rdx
               :  10e001:	shr    $0x28,%rax
               :  10e005:	bswap  %eax
               :  10e007:	mov    %eax,0x8(%rdx)
               :  10e00a:	mov    0x148(%r12),%rax
               :  10e012:	mov    0x2b8(%rax),%rax
               :  10e019:	mov    0x8(%rax),%eax
               :  10e01c:	bswap  %eax
               :  10e01e:	mov    %eax,0xc(%rdx)
               :  10e021:	movq   $0x0,0x10(%rdi)
               :  10e029:	movzwl 0x14(%r13),%ebx
               :  10e02e:	inc    %esi
               :  10e030:	decw   0xdc(%rsp)
               :  10e038:	mov    %si,0xa(%r12)
               :  10e03e:	mov    0xa0(%rsp),%eax
               :  10e045:	movzwl %bx,%esi
               :  10e048:	add    $0xd,%eax
               :  10e04b:	shr    $0x4,%eax
               :  10e04e:	add    %esi,%eax
               :  10e050:	lea    0x2(%rax),%edi
               :  10e053:	movzwl 0xdc(%rsp),%edx
               :  10e05b:	add    $0x5,%eax
               :  10e05e:	shr    $0x2,%eax
               :  10e061:	cmp    %eax,%edx
               :  10e063:	jb     10ef70 <mlx5_tx_burst_mtiv_ts+0x21b0>
               :  10e069:	cmp    $0x3c,%edi
               :  10e06c:	ja     1122b9 <mlx5_tx_burst_mtiv_ts+0x54f9>
               :  10e072:	movzwl 0xa(%r12),%eax
               :  10e078:	movzwl 0x10(%r12),%edx
               :  10e07e:	mov    0xf8(%r12),%rdi
               :  10e086:	and    %eax,%edx
               :  10e088:	movzwl %dx,%edx
               :  10e08b:	shl    $0x6,%rdx
               :  10e08f:	mov    %ecx,%ecx
               :  10e091:	add    %rdx,%rdi
               :  10e094:	shl    $0x8,%eax
               :  10e097:	add    %rcx,0x158(%r12)
               :  10e09f:	mov    %rdi,0xc0(%rsp)
               :  10e0a7:	or     $0xa,%eax
               :  10e0aa:	bswap  %eax
               :  10e0ac:	mov    %eax,(%rdi)
               :  10e0ae:	mov    0x28(%r12),%eax
               :  10e0b3:	bswap  %eax
               :  10e0b5:	mov    0x87f1c(%rip),%rdx        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :  10e0bc:	mov    0x18(%r13),%rcx
               :  10e0c0:	mov    %eax,0x4(%rdi)
               :  10e0c3:	movq   $0x4000000,0x8(%rdi)
               :  10e0cb:	movq   $0x0,0x10(%rdi)
               :  10e0d3:	xor    %eax,%eax
               :  10e0d5:	test   %rcx,(%rdx)
               :  10e0d8:	je     10e0eb <mlx5_tx_burst_mtiv_ts+0x132b>
               :  10e0da:	mov    0x87e6f(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :  10e0e1:	movslq (%rax),%rax
               :  10e0e4:	mov    0x0(%r13,%rax,1),%eax
               :  10e0e9:	bswap  %eax
               :  10e0eb:	mov    0xc0(%rsp),%rdi
               :  10e0f3:	mov    0xd0(%rsp),%esi
               :  10e0fa:	mov    %eax,0x18(%rdi)
               :  10e0fd:	lea    0x1e(%rdi),%rax
               :  10e101:	mov    %rax,0x90(%rsp)
               :  10e109:	movzwl 0x28(%r13),%edx
               :  10e10e:	test   %esi,%esi
               :  10e110:	jne    10f7a0 <mlx5_tx_burst_mtiv_ts+0x29e0>
               :  10e116:	mov    0xa0(%rsp),%esi
               :  10e11d:	xor    %ecx,%ecx
               :  10e11f:	mov    0x100(%r12),%rax
               :  10e127:	mov    %r12,0x38(%rsp)
               :  10e12c:	sub    0x90(%rsp),%rax
               :  10e134:	cmp    %eax,%esi
               :  10e136:	cmovb  %esi,%eax
               :  10e139:	mov    %eax,0x30(%rsp)
               :  10e13d:	mov    %r12,%rax
               :  10e140:	movzwl 0x26(%rax),%eax
               :  10e144:	mov    0xd0(%rsp),%edi
               :  10e14b:	mov    %eax,%esi
               :  10e14d:	sub    %edi,%esi
               :  10e14f:	cmp    %edi,%eax
               :  10e151:	mov    $0x0,%eax
               :  10e156:	cmovbe %eax,%esi
               :  10e159:	lea    0x100(%rsp),%rax
               :  10e161:	mov    %esi,0x28(%rsp)
               :  10e165:	mov    %rax,0x20(%rsp)
               :  10e16a:	xor    %r8d,%r8d
               :  10e16d:	mov    0x30(%rsp),%r12d
               :  10e172:	mov    0x90(%rsp),%r14
               :  10e17a:	mov    %r8d,%r15d
               :  10e17d:	cmp    %dx,%cx
               :  10e180:	jae    10e26f <mlx5_tx_burst_mtiv_ts+0x14af>
               :  10e186:	movzwl 0x10(%r13),%eax
               :  10e18b:	movzwl %cx,%esi
               :  10e18e:	add    %rsi,%rax
               :  10e191:	movzwl %cx,%esi
               :  10e194:	sub    %esi,%edx
               :  10e196:	add    0x0(%r13),%rax
               :  10e19a:	mov    %edx,%esi
               :  10e19c:	cmp    %r12d,%edx
               :  10e19f:	mov    %rax,%rdx
               :  10e1a2:	cmova  %r12d,%esi
               :  10e1a6:	or     %r14,%rdx
               :  10e1a9:	and    $0x1f,%edx
               :  10e1ac:	mov    %esi,%edi
               :  10e1ae:	jne    10eb00 <mlx5_tx_burst_mtiv_ts+0x1d40>
               :  10e1b4:	cmp    $0xf,%esi
               :  10e1b7:	jbe    10ebc0 <mlx5_tx_burst_mtiv_ts+0x1e00>
               :  10e1bd:	cmp    $0x20,%esi
               :  10e1c0:	jbe    10f760 <mlx5_tx_burst_mtiv_ts+0x29a0>
               :  10e1c6:	cmp    $0x40,%rdi
               :  10e1ca:	jbe    110107 <mlx5_tx_burst_mtiv_ts+0x3347>
               :  10e1d0:	lea    -0x40(%rdi),%r9
               :  10e1d4:	shr    $0x6,%r9
               :  10e1d8:	lea    0x1(%r9),%r10
               :  10e1dc:	shl    $0x6,%r10
               :  10e1e0:	lea    (%rax,%r10,1),%r8
               :  10e1e4:	mov    %r14,%rdx
               :  10e1e7:	nopw   0x0(%rax,%rax,1)
               :  10e1f0:	vmovdqu64 (%rax),%ymm3
               :  10e1f6:	add    $0x40,%rax
               :  10e1fa:	vmovdqu64 %ymm3,(%rdx)
               :  10e200:	vmovdqu64 -0x20(%rax),%ymm4
               :  10e207:	add    $0x40,%rdx
               :  10e20b:	vmovdqu64 %ymm4,-0x20(%rdx)
               :  10e212:	cmp    %r8,%rax
               :  10e215:	jne    10e1f0 <mlx5_tx_burst_mtiv_ts+0x1430>
               :  10e217:	neg    %r9
               :  10e21a:	shl    $0x6,%r9
               :  10e21e:	lea    -0x80(%rdi,%r9,1),%rdx
               :  10e223:	add    %rdx,%rax
               :  10e226:	vmovdqu64 (%rax),%ymm1
               :  10e22c:	add    %rdx,%r10
               :  10e22f:	add    %r14,%r10
               :  10e232:	vmovdqu64 %ymm1,(%r10)
               :  10e238:	vmovdqu64 0x20(%rax),%ymm2
               :  10e23f:	vmovdqu64 %ymm2,0x20(%r10)
               :  10e246:	nopw   %cs:0x0(%rax,%rax,1)
               :  10e250:	movzwl 0x28(%r13),%edx
               :  10e255:	add    %esi,%r15d
               :  10e258:	add    %esi,%ecx
               :  10e25a:	sub    %esi,%r12d
               :  10e25d:	je     110a2d <mlx5_tx_burst_mtiv_ts+0x3c6d>
               :  10e263:	add    %rdi,%r14
               :  10e266:	cmp    %dx,%cx
               :  10e269:	jb     10e186 <mlx5_tx_burst_mtiv_ts+0x13c6>
               :  10e26f:	mov    0x40(%r13),%r9
               :  10e273:	movzwl 0x12(%r13),%eax
               :  10e278:	lea    0x12(%r13),%rcx
               :  10e27c:	cmp    $0x1,%ax
               :  10e280:	jne    11131a <mlx5_tx_burst_mtiv_ts+0x455a>
               :  10e286:	mov    0x18(%r13),%rax
               :  10e28a:	movabs $0x6000000000000000,%rdi
               :  10e294:	mov    0x38(%r13),%r8
               :  10e298:	test   %rdi,%rax
               :  10e29b:	je     10ec5e <mlx5_tx_burst_mtiv_ts+0x1e9e>
               :  10e2a1:	movabs $0x2000000000000000,%rdi
               :  10e2ab:	test   %rdi,%rax
               :  10e2ae:	je     1101a4 <mlx5_tx_burst_mtiv_ts+0x33e4>
               :  10e2b4:	mov    0x44(%r8),%edx
               :  10e2b8:	test   %edx,%edx
               :  10e2ba:	jne    10ec17 <mlx5_tx_burst_mtiv_ts+0x1e57>
               :  10e2c0:	testb  $0x1,0xc4(%r8)
               :  10e2c8:	jne    114cd0 <mlx5_tx_burst_mtiv_ts+0x7f10>
               :  10e2ce:	mov    0x50(%r13),%rax
               :  10e2d2:	movzwl 0x10(%rax),%edx
               :  10e2d6:	lea    0x10(%rax),%rcx
               :  10e2da:	cmp    $0x1,%dx
               :  10e2de:	jne    11343b <mlx5_tx_burst_mtiv_ts+0x667b>
               :  10e2e4:	movw   $0x0,0x10(%rax)
               :  10e2ea:	mov    0x50(%r13),%rax
               :  10e2ee:	mov    0x0(%r13),%rdi
               :  10e2f2:	mov    0x8(%rax),%rsi
               :  10e2f6:	mov    %r9,0x40(%rsp)
               :  10e2fb:	mov    %r8,0x88(%rsp)
               :  10e303:	vzeroupper 
               :  10e306:	callq  *(%rax)
               :  10e308:	mov    0x88(%rsp),%r8
               :  10e310:	mov    0x40(%rsp),%r9
               :  10e315:	cmpl   $0x1,0x44(%r8)
               :  10e31a:	sbb    %rax,%rax
               :  10e31d:	and    $0xffffffffffefe000,%rax
               :  10e323:	lea    0x1020c0(%r8,%rax,1),%rax
               :  10e32b:	movzwl 0x2(%rax),%edx
               :  10e32f:	movzwl (%rax),%eax
               :  10e332:	mov    %dx,0x58(%r13)
               :  10e337:	sub    $0xffffffffffffff80,%rdx
               :  10e33b:	lea    0x0(%r13,%rdx,1),%rcx
               :  10e340:	add    -0x8(%r13),%rdx
               :  10e344:	mov    %rdx,0x8(%r13)
               :  10e348:	cmp    $0x80,%ax
               :  10e34c:	mov    $0x80,%edx
               :  10e351:	mov    %ax,0x36(%r13)
               :  10e356:	cmova  %edx,%eax
               :  10e359:	mov    0x38(%r13),%r8
               :  10e35d:	mov    %ax,0x10(%r13)
               :  10e362:	xor    %eax,%eax
               :  10e364:	mov    %rcx,0x0(%r13)
               :  10e368:	mov    %ax,0x28(%r13)
               :  10e36d:	movq   $0x0,0x18(%r13)
               :  10e375:	mov    0x44(%r8),%edx
               :  10e379:	jmpq   10ec65 <mlx5_tx_burst_mtiv_ts+0x1ea5>
               :  10e37e:	xchg   %ax,%ax
               :  10e380:	cmp    $0xf,%rdx
               :  10e384:	jbe    10ed68 <mlx5_tx_burst_mtiv_ts+0x1fa8>
               :  10e38a:	cmp    $0x20,%rdx
               :  10e38e:	jbe    110187 <mlx5_tx_burst_mtiv_ts+0x33c7>
               :  10e394:	cmp    $0x30,%rdx
               :  10e398:	jbe    10fe15 <mlx5_tx_burst_mtiv_ts+0x3055>
               :  10e39e:	vmovdqu64 (%r9),%ymm0
               :  10e3a4:	cmp    $0x40,%rdx
               :  10e3a8:	jbe    11191b <mlx5_tx_burst_mtiv_ts+0x4b5b>
               :  10e3ae:	cmp    $0x100,%rdx
               :  10e3b5:	ja     111f5c <mlx5_tx_burst_mtiv_ts+0x519c>
               :  10e3bb:	cmp    $0x7f,%rdx
               :  10e3bf:	jbe    112287 <mlx5_tx_burst_mtiv_ts+0x54c7>
               :  10e3c5:	vmovdqu64 %ymm0,(%rax)
               :  10e3cb:	vmovdqu64 0x20(%r9),%ymm3
               :  10e3d2:	lea    -0x80(%rdx),%rcx
               :  10e3d6:	vmovdqu64 %ymm3,0x20(%rax)
               :  10e3dd:	vmovdqu64 0x40(%r9),%ymm4
               :  10e3e4:	mov    %rcx,0x40(%rsp)
               :  10e3e9:	vmovdqu64 %ymm4,0x40(%rax)
               :  10e3f0:	vmovdqu64 0x60(%r9),%ymm7
               :  10e3f7:	lea    0x80(%r9),%rsi
               :  10e3fe:	vmovdqu64 %ymm7,0x60(%rax)
               :  10e405:	lea    0x80(%rax),%rcx
               :  10e40c:	cmpq   $0x3f,0x40(%rsp)
               :  10e412:	ja     113030 <mlx5_tx_burst_mtiv_ts+0x6270>
               :  10e418:	mov    0x40(%rsp),%r14
               :  10e41d:	cmp    $0x20,%r14
               :  10e421:	jbe    111936 <mlx5_tx_burst_mtiv_ts+0x4b76>
               :  10e427:	vmovdqu64 (%rsi),%ymm1
               :  10e42d:	vmovdqu64 %ymm1,(%rcx)
               :  10e433:	vmovdqu64 -0x20(%rsi,%r14,1),%ymm3
               :  10e43b:	vmovdqa64 %ymm3,0x40(%rsp)
               :  10e443:	vmovdqu64 %ymm3,-0x20(%rcx,%r14,1)
               :  10e44b:	jmpq   10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  10e450:	cmp    $0xf,%rax
               :  10e454:	jbe    10ee20 <mlx5_tx_burst_mtiv_ts+0x2060>
               :  10e45a:	cmp    $0x20,%rax
               :  10e45e:	jbe    11016a <mlx5_tx_burst_mtiv_ts+0x33aa>
               :  10e464:	cmp    $0x30,%rax
               :  10e468:	jbe    10fdec <mlx5_tx_burst_mtiv_ts+0x302c>
               :  10e46e:	vmovdqu64 (%r9),%ymm0
               :  10e474:	cmp    $0x40,%rax
               :  10e478:	jbe    1118d5 <mlx5_tx_burst_mtiv_ts+0x4b15>
               :  10e47e:	cmp    $0x100,%rax
               :  10e484:	ja     11204f <mlx5_tx_burst_mtiv_ts+0x528f>
               :  10e48a:	cmp    $0x7f,%rax
               :  10e48e:	jbe    112147 <mlx5_tx_burst_mtiv_ts+0x5387>
               :  10e494:	vmovdqu64 %ymm0,(%rbx)
               :  10e49a:	vmovdqu64 0x20(%r9),%ymm0
               :  10e4a1:	lea    -0x80(%rax),%rcx
               :  10e4a5:	vmovdqu64 %ymm0,0x20(%rbx)
               :  10e4ac:	vmovdqu64 0x40(%r9),%ymm1
               :  10e4b3:	mov    %rcx,0x40(%rsp)
               :  10e4b8:	vmovdqu64 %ymm1,0x40(%rbx)
               :  10e4bf:	vmovdqu64 0x60(%r9),%ymm2
               :  10e4c6:	lea    0x80(%r9),%rcx
               :  10e4cd:	vmovdqu64 %ymm2,0x60(%rbx)
               :  10e4d4:	lea    0x80(%rbx),%rdx
               :  10e4db:	cmpq   $0x3f,0x40(%rsp)
               :  10e4e1:	ja     1130a7 <mlx5_tx_burst_mtiv_ts+0x62e7>
               :  10e4e7:	mov    0x40(%rsp),%r14
               :  10e4ec:	cmp    $0x20,%r14
               :  10e4f0:	jbe    11195c <mlx5_tx_burst_mtiv_ts+0x4b9c>
               :  10e4f6:	vmovdqu64 (%rcx),%ymm6
               :  10e4fc:	vmovdqu64 %ymm6,(%rdx)
               :  10e502:	vmovdqu64 -0x20(%rcx,%r14,1),%ymm7
               :  10e50a:	vmovdqa64 %ymm7,0x40(%rsp)
               :  10e512:	vmovdqu64 %ymm7,-0x20(%rdx,%r14,1)
               :  10e51a:	jmpq   10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  10e51f:	nop
               :  10e520:	movslq 0x2a0(%r8),%rax
               :  10e527:	sub    %rax,%r11
               :  10e52a:	movzwl %si,%eax
               :  10e52d:	shl    $0x8,%eax
               :  10e530:	or     $0x200000f,%eax
               :  10e535:	bswap  %eax
               :  10e537:	mov    0x28(%r14),%r8d
               :  10e53b:	mov    %eax,(%r9)
               :  10e53e:	mov    %r8d,%eax
               :  10e541:	or     $0x3,%eax
               :  10e544:	bswap  %eax
               :  10e546:	lea    0x10(%r9),%r12
               :  10e54a:	and    $0x4,%edx
               :  10e54d:	mov    %eax,0x4(%r9)
               :  10e551:	movq   $0x4000000,0x8(%r9)
               :  10e559:	movq   $0x5000000,0x10(%r9)
               :  10e561:	movq   $0x0,0x8(%r12)
               :  10e56a:	je     10e59b <mlx5_tx_burst_mtiv_ts+0x17db>
               :  10e56c:	mov    %r11,%rax
               :  10e56f:	shr    $0x9,%rax
               :  10e573:	movabs $0x44b82fa09b5a53,%rdx
               :  10e57d:	mul    %rdx
               :  10e580:	mov    %rdx,%rax
               :  10e583:	shr    $0xb,%rax
               :  10e587:	mov    %rax,%rdx
               :  10e58a:	imul   $0x3b9aca00,%rax,%rax
               :  10e591:	shl    $0x20,%rdx
               :  10e595:	sub    %rax,%r11
               :  10e598:	or     %rdx,%r11
               :  10e59b:	bswap  %r11
               :  10e59e:	mov    0x130(%r14),%rax
               :  10e5a5:	mov    %r11,0x10(%r12)
               :  10e5aa:	mov    %rax,0x18(%r12)
               :  10e5af:	jmpq   10d04c <mlx5_tx_burst_mtiv_ts+0x28c>
               :  10e5b4:	add    $0xd,%eax
               :  10e5b7:	shr    $0x4,%eax
               :  10e5ba:	lea    0x2(%rsi,%rax,1),%eax
               :  10e5be:	cmp    $0x3c,%eax
               :  10e5c1:	jbe    1122c8 <mlx5_tx_burst_mtiv_ts+0x5508>
               :  10e5c7:	nopw   0x0(%rax,%rax,1)
               :  10e5d0:	movzwl 0x98(%rsp),%ebx
               :  10e5d8:	incq   0x160(%r12)
               :  10e5e0:	mov    %rbx,%r15
               :  10e5e3:	mov    %r12,%r14
               :  10e5e6:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  10e5eb:	nopl   0x0(%rax,%rax,1)
               :  10e5f0:	movzwl 0xdc(%rsp),%ebx
               :  10e5f8:	mov    %r11,0xc0(%rsp)
               :  10e600:	mov    %rbx,%r15
               :  10e603:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  10e608:	nopl   0x0(%rax,%rax,1)
               :  10e610:	movzwl 0x28(%r10),%eax
               :  10e615:	movzwl 0x24(%r14),%edx
               :  10e61a:	add    $0x4,%rax
               :  10e61e:	cmp    %rdx,%rax
               :  10e621:	jbe    10ced4 <mlx5_tx_burst_mtiv_ts+0x114>
               :  10e627:	mov    0xb8(%rsp),%rax
               :  10e62f:	mov    %r15w,0xdc(%rsp)
               :  10e638:	lea    0x8(%rax,%rbx,8),%rax
               :  10e63d:	mov    0xac(%rsp),%ebx
               :  10e644:	mov    %rax,0xb0(%rsp)
               :  10e64c:	movzwl %r15w,%eax
               :  10e650:	sub    %eax,%ebx
               :  10e652:	mov    %ebx,0xd0(%rsp)
               :  10e659:	mov    0xc0(%rsp),%rbx
               :  10e661:	mov    %r10,%r15
               :  10e664:	test   %rcx,0x138(%r14)
               :  10e66b:	je     10e786 <mlx5_tx_burst_mtiv_ts+0x19c6>
               :  10e671:	cmp    $0xf,%r13w
               :  10e676:	jbe    1166d7 <mlx5_tx_burst_mtiv_ts+0x9917>
               :  10e67c:	movzwl 0xa(%r14),%r8d
               :  10e681:	movzwl 0x10(%r14),%esi
               :  10e686:	mov    0x148(%r14),%rdi
               :  10e68d:	and    %r8d,%esi
               :  10e690:	movslq 0x140(%r14),%rax
               :  10e697:	movzwl %si,%esi
               :  10e69a:	movzbl 0x20(%r14),%r11d
               :  10e69f:	shl    $0x6,%rsi
               :  10e6a3:	mov    (%r15,%rax,1),%rax
               :  10e6a7:	add    0xf8(%r14),%rsi
               :  10e6ae:	lea    0x370(%rdi),%r9
               :  10e6b5:	lea    0x378(%rdi),%rdx
               :  10e6bc:	test   $0x8,%r11b
               :  10e6c0:	jne    1134de <mlx5_tx_burst_mtiv_ts+0x671e>
               :  10e6c6:	nopw   %cs:0x0(%rax,%rax,1)
               :  10e6d0:	mov    (%r9),%rcx
               :  10e6d3:	mov    (%rdx),%r8
               :  10e6d6:	mov    %rcx,%r10
               :  10e6d9:	xor    %r8,%r10
               :  10e6dc:	shl    $0x28,%r10
               :  10e6e0:	jne    10e6d0 <mlx5_tx_burst_mtiv_ts+0x1910>
               :  10e6e2:	movslq 0x2a0(%rdi),%rdx
               :  10e6e9:	sub    %rdx,%rax
               :  10e6ec:	sub    %r8,%rax
               :  10e6ef:	movabs $0x7ffffffffffffffe,%rdx
               :  10e6f9:	cmp    %rdx,%rax
               :  10e6fc:	ja     1149ac <mlx5_tx_burst_mtiv_ts+0x7bec>
               :  10e702:	mov    0x298(%rdi),%r8d
               :  10e709:	xor    %edx,%edx
               :  10e70b:	lea    -0x1(%rax,%r8,1),%rax
               :  10e710:	div    %r8
               :  10e713:	cmp    $0x7ffffe,%rax
               :  10e719:	ja     1150ed <mlx5_tx_burst_mtiv_ts+0x832d>
               :  10e71f:	shl    $0x28,%rax
               :  10e723:	add    %rax,%rcx
               :  10e726:	movzwl 0xa(%r14),%eax
               :  10e72b:	mov    %eax,%r8d
               :  10e72e:	shl    $0x8,%eax
               :  10e731:	or     $0xf,%eax
               :  10e734:	bswap  %eax
               :  10e736:	mov    %eax,(%rsi)
               :  10e738:	mov    0x28(%r14),%eax
               :  10e73c:	or     $0x2,%eax
               :  10e73f:	bswap  %eax
               :  10e741:	mov    %eax,0x4(%rsi)
               :  10e744:	movq   $0x4000000,0x8(%rsi)
               :  10e74c:	lea    0x10(%rsi),%rax
               :  10e750:	shr    $0x28,%rcx
               :  10e754:	bswap  %ecx
               :  10e756:	mov    0x148(%r14),%rdx
               :  10e75d:	mov    %ecx,0x8(%rax)
               :  10e760:	mov    0x2b8(%rdx),%rdx
               :  10e767:	mov    0x8(%rdx),%edx
               :  10e76a:	bswap  %edx
               :  10e76c:	mov    %edx,0xc(%rax)
               :  10e76f:	movq   $0x0,0x10(%rsi)
               :  10e777:	mov    0x18(%r15),%rcx
               :  10e77b:	inc    %r8d
               :  10e77e:	mov    %r8w,0xa(%r14)
               :  10e783:	dec    %r13d
               :  10e786:	movabs $0x200000000000000,%r8
               :  10e790:	movzwl 0x28(%r15),%r9d
               :  10e795:	and    %rcx,%r8
               :  10e798:	je     111bba <mlx5_tx_burst_mtiv_ts+0x4dfa>
               :  10e79e:	lea    0x4(%r9),%esi
               :  10e7a2:	mov    $0x4,%r11d
               :  10e7a8:	mov    $0x4,%r12d
               :  10e7ae:	movzwl 0x10(%r15),%eax
               :  10e7b3:	mov    (%r15),%rdi
               :  10e7b6:	lea    (%rdi,%rax,1),%rdx
               :  10e7ba:	movzwl 0x22(%r14),%eax
               :  10e7bf:	cmp    %esi,%eax
               :  10e7c1:	jae    112706 <mlx5_tx_burst_mtiv_ts+0x5946>
               :  10e7c7:	movzwl 0xa(%r14),%eax
               :  10e7cc:	movzwl 0x10(%r14),%ebx
               :  10e7d1:	and    %eax,%ebx
               :  10e7d3:	movzwl %bx,%ebx
               :  10e7d6:	shl    $0x6,%rbx
               :  10e7da:	shl    $0x8,%eax
               :  10e7dd:	add    0xf8(%r14),%rbx
               :  10e7e4:	or     $0xa,%eax
               :  10e7e7:	bswap  %eax
               :  10e7e9:	mov    %eax,(%rbx)
               :  10e7eb:	mov    0x28(%r14),%eax
               :  10e7ef:	or     $0x4,%eax
               :  10e7f2:	bswap  %eax
               :  10e7f4:	mov    0x877dd(%rip),%rdi        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :  10e7fb:	mov    %eax,0x4(%rbx)
               :  10e7fe:	movq   $0x4000000,0x8(%rbx)
               :  10e806:	movq   $0x0,0x10(%rbx)
               :  10e80e:	xor    %eax,%eax
               :  10e810:	test   %rcx,(%rdi)
               :  10e813:	je     10e825 <mlx5_tx_burst_mtiv_ts+0x1a65>
               :  10e815:	mov    0x87734(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :  10e81c:	movslq (%rax),%rax
               :  10e81f:	mov    (%r15,%rax,1),%eax
               :  10e823:	bswap  %eax
               :  10e825:	mov    %eax,0x18(%rbx)
               :  10e828:	movzwl (%rdx),%eax
               :  10e82b:	mov    $0x1200,%edi
               :  10e830:	mov    %di,0x1c(%rbx)
               :  10e834:	mov    %ax,0x1e(%rbx)
               :  10e838:	test   %r12d,%r12d
               :  10e83b:	jne    112b4f <mlx5_tx_burst_mtiv_ts+0x5d8f>
               :  10e841:	vmovdqu64 0x2(%rdx),%xmm1
               :  10e84b:	vmovups %xmm1,0x20(%rbx)
               :  10e850:	mov    (%r15),%rax
               :  10e853:	movzwl 0x10(%r15),%edx
               :  10e858:	mov    %rax,%rcx
               :  10e85b:	sub    %r11,%rcx
               :  10e85e:	lea    0x12(%rcx,%rdx,1),%rdx
               :  10e863:	sub    $0x12,%esi
               :  10e866:	bswap  %esi
               :  10e868:	mov    %esi,0x30(%rbx)
               :  10e86b:	mov    0x38(%r14),%rcx
               :  10e86f:	mov    0x40(%r14),%esi
               :  10e873:	lea    0x38(%r14),%rdi
               :  10e877:	cmp    %esi,(%rcx)
               :  10e879:	jne    113bae <mlx5_tx_burst_mtiv_ts+0x6dee>
               :  10e87f:	movzwl 0x44(%r14),%esi
               :  10e884:	lea    0x48(%r14),%rcx
               :  10e888:	lea    (%rsi,%rsi,4),%rsi
               :  10e88c:	lea    (%rcx,%rsi,4),%rsi
               :  10e890:	cmp    (%rsi),%rax
               :  10e893:	jb     113305 <mlx5_tx_burst_mtiv_ts+0x6545>
               :  10e899:	cmp    0x8(%rsi),%rax
               :  10e89d:	jae    113305 <mlx5_tx_burst_mtiv_ts+0x6545>
               :  10e8a3:	mov    0x10(%rsi),%eax
               :  10e8a6:	cmp    $0xffffffff,%eax
               :  10e8a9:	je     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  10e8af:	mov    %eax,0x34(%rbx)
               :  10e8b2:	bswap  %rdx
               :  10e8b5:	movzwl (%r14),%eax
               :  10e8b9:	mov    %rdx,0x38(%rbx)
               :  10e8bd:	lea    0x1(%rax),%edx
               :  10e8c0:	and    0x8(%r14),%ax
               :  10e8c5:	movzwl %ax,%eax
               :  10e8c8:	decw   0xc8(%rsp)
               :  10e8d0:	incw   0xa(%r14)
               :  10e8d5:	mov    %dx,(%r14)
               :  10e8d9:	mov    %r15,0x188(%r14,%rax,8)
               :  10e8e1:	dec    %r13d
               :  10e8e4:	movzwl 0x28(%r15),%eax
               :  10e8e9:	add    %r12d,%eax
               :  10e8ec:	add    %rax,0x158(%r14)
               :  10e8f3:	incw   0xdc(%rsp)
               :  10e8fb:	decl   0xd0(%rsp)
               :  10e902:	mov    0xd0(%rsp),%eax
               :  10e909:	je     1166d7 <mlx5_tx_burst_mtiv_ts+0x9917>
               :  10e90f:	cmpw   $0x0,0xc8(%rsp)
               :  10e918:	je     1166d7 <mlx5_tx_burst_mtiv_ts+0x9917>
               :  10e91e:	test   %r13w,%r13w
               :  10e922:	je     1166d7 <mlx5_tx_burst_mtiv_ts+0x9917>
               :  10e928:	addq   $0x8,0xb0(%rsp)
               :  10e931:	mov    0xb0(%rsp),%rdi
               :  10e939:	mov    -0x8(%rdi),%r15
               :  10e93d:	cmp    $0x1,%eax
               :  10e940:	je     10e948 <mlx5_tx_burst_mtiv_ts+0x1b88>
               :  10e942:	mov    (%rdi),%rax
               :  10e945:	prefetcht0 (%rax)
               :  10e948:	movzwl 0x14(%r15),%r12d
               :  10e94d:	cmp    $0x1,%r12w
               :  10e952:	ja     113ae8 <mlx5_tx_burst_mtiv_ts+0x6d28>
               :  10e958:	mov    0x18(%r15),%rcx
               :  10e95c:	bt     $0x32,%rcx
               :  10e961:	jb     10d7df <mlx5_tx_burst_mtiv_ts+0xa1f>
               :  10e967:	bt     $0x39,%rcx
               :  10e96c:	jb     11446c <mlx5_tx_burst_mtiv_ts+0x76ac>
               :  10e972:	mov    %r15,%r10
               :  10e975:	movzwl 0xdc(%rsp),%r15d
               :  10e97e:	mov    %rbx,0xc0(%rsp)
               :  10e986:	movzwl %r15w,%ebx
               :  10e98a:	jmpq   10ced4 <mlx5_tx_burst_mtiv_ts+0x114>
               :  10e98f:	nop
               :  10e990:	mov    0x48(%r14),%rdx
               :  10e994:	test   %rdx,%rdx
               :  10e997:	je     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10e99d:	cmp    %rax,%rdx
               :  10e9a0:	ja     10e9ac <mlx5_tx_burst_mtiv_ts+0x1bec>
               :  10e9a2:	cmp    0x50(%r14),%rax
               :  10e9a6:	jb     113ae1 <mlx5_tx_burst_mtiv_ts+0x6d21>
               :  10e9ac:	mov    0x5c(%r14),%rdx
               :  10e9b0:	test   %rdx,%rdx
               :  10e9b3:	je     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10e9b9:	cmp    %rdx,%rax
               :  10e9bc:	jb     10e9c8 <mlx5_tx_burst_mtiv_ts+0x1c08>
               :  10e9be:	cmp    0x64(%r14),%rax
               :  10e9c2:	jb     113ad3 <mlx5_tx_burst_mtiv_ts+0x6d13>
               :  10e9c8:	mov    0x70(%r14),%rdx
               :  10e9cc:	test   %rdx,%rdx
               :  10e9cf:	je     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10e9d5:	cmp    %rdx,%rax
               :  10e9d8:	jb     10e9e4 <mlx5_tx_burst_mtiv_ts+0x1c24>
               :  10e9da:	cmp    0x78(%r14),%rax
               :  10e9de:	jb     113b05 <mlx5_tx_burst_mtiv_ts+0x6d45>
               :  10e9e4:	mov    0x84(%r14),%rdx
               :  10e9eb:	test   %rdx,%rdx
               :  10e9ee:	je     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10e9f4:	cmp    %rdx,%rax
               :  10e9f7:	jb     10ea06 <mlx5_tx_burst_mtiv_ts+0x1c46>
               :  10e9f9:	cmp    %rax,0x8c(%r14)
               :  10ea00:	ja     114126 <mlx5_tx_burst_mtiv_ts+0x7366>
               :  10ea06:	mov    0x98(%r14),%rdx
               :  10ea0d:	test   %rdx,%rdx
               :  10ea10:	je     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10ea16:	cmp    %rdx,%rax
               :  10ea19:	jb     10ea28 <mlx5_tx_burst_mtiv_ts+0x1c68>
               :  10ea1b:	cmp    %rax,0xa0(%r14)
               :  10ea22:	ja     114115 <mlx5_tx_burst_mtiv_ts+0x7355>
               :  10ea28:	mov    0xac(%r14),%rdx
               :  10ea2f:	test   %rdx,%rdx
               :  10ea32:	je     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10ea34:	cmp    %rdx,%rax
               :  10ea37:	jb     10ea46 <mlx5_tx_burst_mtiv_ts+0x1c86>
               :  10ea39:	cmp    0xb4(%r14),%rax
               :  10ea40:	jb     1142d7 <mlx5_tx_burst_mtiv_ts+0x7517>
               :  10ea46:	mov    0xc0(%r14),%rdx
               :  10ea4d:	test   %rdx,%rdx
               :  10ea50:	je     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10ea52:	cmp    %rdx,%rax
               :  10ea55:	jb     10ea64 <mlx5_tx_burst_mtiv_ts+0x1ca4>
               :  10ea57:	cmp    0xc8(%r14),%rax
               :  10ea5e:	jb     10ff4c <mlx5_tx_burst_mtiv_ts+0x318c>
               :  10ea64:	mov    0xd4(%r14),%rdx
               :  10ea6b:	test   %rdx,%rdx
               :  10ea6e:	je     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10ea70:	cmp    %rdx,%rax
               :  10ea73:	jb     10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10ea75:	cmp    0xdc(%r14),%rax
               :  10ea7c:	jae    10eaa0 <mlx5_tx_burst_mtiv_ts+0x1ce0>
               :  10ea7e:	lea    0xd4(%r14),%rcx
               :  10ea85:	mov    $0x7,%eax
               :  10ea8a:	mov    %ax,0x44(%r14)
               :  10ea8f:	mov    0x10(%rcx),%eax
               :  10ea92:	jmpq   10d435 <mlx5_tx_burst_mtiv_ts+0x675>
               :  10ea97:	nopw   0x0(%rax,%rax,1)
               :  10eaa0:	mov    %r10,%rsi
               :  10eaa3:	mov    %r8d,0x80(%rsp)
               :  10eaab:	mov    %r11,0x40(%rsp)
               :  10eab0:	mov    %r9,0x88(%rsp)
               :  10eab8:	mov    %r10,0x60(%rsp)
               :  10eabd:	vzeroupper 
               :  10eac0:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :  10eac5:	mov    0x60(%rsp),%r10
               :  10eaca:	mov    0x88(%rsp),%r9
               :  10ead2:	mov    0x40(%rsp),%r11
               :  10ead7:	mov    0x80(%rsp),%r8d
               :  10eadf:	jmpq   10d43e <mlx5_tx_burst_mtiv_ts+0x67e>
               :  10eae4:	nopl   0x0(%rax)
               :  10eae8:	movzwl 0xdc(%rsp),%r15d
               :  10eaf1:	jmpq   10d68e <mlx5_tx_burst_mtiv_ts+0x8ce>
               :  10eaf6:	nopw   %cs:0x0(%rax,%rax,1)
               :  10eb00:	cmp    $0xf,%esi
               :  10eb03:	jbe    10ebc0 <mlx5_tx_burst_mtiv_ts+0x1e00>
               :  10eb09:	cmp    $0x20,%esi
               :  10eb0c:	jbe    10f740 <mlx5_tx_burst_mtiv_ts+0x2980>
               :  10eb12:	cmp    $0x30,%rdi
               :  10eb16:	jbe    1100db <mlx5_tx_burst_mtiv_ts+0x331b>
               :  10eb1c:	vmovdqu64 (%rax),%ymm0
               :  10eb22:	cmp    $0x40,%rdi
               :  10eb26:	jbe    10fdb0 <mlx5_tx_burst_mtiv_ts+0x2ff0>
               :  10eb2c:	cmp    $0x100,%rdi
               :  10eb33:	ja     11170f <mlx5_tx_burst_mtiv_ts+0x494f>
               :  10eb39:	cmp    $0x7f,%rdi
               :  10eb3d:	jbe    1118f0 <mlx5_tx_burst_mtiv_ts+0x4b30>
               :  10eb43:	vmovdqu64 %ymm0,(%r14)
               :  10eb49:	vmovdqu64 0x20(%rax),%ymm4
               :  10eb50:	lea    -0x80(%rdi),%rdx
               :  10eb54:	vmovdqu64 %ymm4,0x20(%r14)
               :  10eb5b:	vmovdqu64 0x40(%rax),%ymm2
               :  10eb62:	lea    0x80(%r14),%r8
               :  10eb69:	vmovdqu64 %ymm2,0x40(%r14)
               :  10eb70:	vmovdqu64 0x60(%rax),%ymm5
               :  10eb77:	sub    $0xffffffffffffff80,%rax
               :  10eb7b:	vmovdqu64 %ymm5,0x60(%r14)
               :  10eb82:	cmp    $0x3f,%rdx
               :  10eb86:	ja     1128c3 <mlx5_tx_burst_mtiv_ts+0x5b03>
               :  10eb8c:	cmp    $0x20,%rdx
               :  10eb90:	jbe    11143b <mlx5_tx_burst_mtiv_ts+0x467b>
               :  10eb96:	vmovdqu64 (%rax),%ymm4
               :  10eb9c:	vmovdqu64 %ymm4,(%r8)
               :  10eba2:	vmovdqu64 -0x20(%rax,%rdx,1),%ymm2
               :  10ebaa:	vmovdqu64 %ymm2,-0x20(%r8,%rdx,1)
               :  10ebb2:	jmpq   10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  10ebb7:	nopw   0x0(%rax,%rax,1)
               :  10ebc0:	mov    %r14,%rdx
               :  10ebc3:	test   $0x8,%sil
               :  10ebc7:	je     10ebd7 <mlx5_tx_burst_mtiv_ts+0x1e17>
               :  10ebc9:	mov    (%rax),%rdx
               :  10ebcc:	add    $0x8,%rax
               :  10ebd0:	mov    %rdx,(%r14)
               :  10ebd3:	lea    0x8(%r14),%rdx
               :  10ebd7:	test   $0x4,%sil
               :  10ebdb:	je     10ebec <mlx5_tx_burst_mtiv_ts+0x1e2c>
               :  10ebdd:	mov    (%rax),%r8d
               :  10ebe0:	add    $0x4,%rdx
               :  10ebe4:	mov    %r8d,-0x4(%rdx)
               :  10ebe8:	add    $0x4,%rax
               :  10ebec:	test   $0x2,%sil
               :  10ebf0:	je     10ec03 <mlx5_tx_burst_mtiv_ts+0x1e43>
               :  10ebf2:	movzwl (%rax),%r8d
               :  10ebf6:	add    $0x2,%rdx
               :  10ebfa:	mov    %r8w,-0x2(%rdx)
               :  10ebff:	add    $0x2,%rax
               :  10ec03:	test   $0x1,%sil
               :  10ec07:	je     10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  10ec0d:	movzbl (%rax),%eax
               :  10ec10:	mov    %al,(%rdx)
               :  10ec12:	jmpq   10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  10ec17:	testb  $0x1,0x1020c4(%r8)
               :  10ec1f:	je     10e2ce <mlx5_tx_burst_mtiv_ts+0x150e>
               :  10ec25:	mov    $0x1020c0,%eax
               :  10ec2a:	testb  $0x1,0x4(%r8,%rax,1)
               :  10ec30:	je     110128 <mlx5_tx_burst_mtiv_ts+0x3368>
               :  10ec36:	movabs $0x2000000000000000,%rdi
               :  10ec40:	mov    %rdi,0x18(%r13)
               :  10ec44:	mov    0x50(%r13),%rax
               :  10ec48:	movzwl 0x10(%rax),%edx
               :  10ec4c:	lea    0x10(%rax),%rcx
               :  10ec50:	cmp    $0x1,%dx
               :  10ec54:	jne    11349f <mlx5_tx_burst_mtiv_ts+0x66df>
               :  10ec5a:	mov    0x38(%r13),%r8
               :  10ec5e:	mov    0x44(%r8),%edx
               :  10ec62:	vzeroupper 
               :  10ec65:	cmpq   $0x0,0x40(%r13)
               :  10ec6a:	je     10ec74 <mlx5_tx_burst_mtiv_ts+0x1eb4>
               :  10ec6c:	movq   $0x0,0x40(%r13)
               :  10ec74:	cmpw   $0x1,0x14(%r13)
               :  10ec7a:	je     10ec86 <mlx5_tx_burst_mtiv_ts+0x1ec6>
               :  10ec7c:	mov    $0x1,%eax
               :  10ec81:	mov    %ax,0x14(%r13)
               :  10ec86:	mov    %r9,0x40(%rsp)
               :  10ec8b:	mov    %r8,0x88(%rsp)
               :  10ec93:	mov    %edx,0x80(%rsp)
               :  10ec9a:	mov    %r13,0x100(%rsp)
               :  10eca2:	data16 lea 0x8719e(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  10ecaa:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  10ecb2:	mov    0x88(%rsp),%r8
               :  10ecba:	mov    0x40(%rsp),%r9
               :  10ecbf:	mov    (%rax),%eax
               :  10ecc1:	cmp    $0x7f,%eax
               :  10ecc4:	ja     110080 <mlx5_tx_burst_mtiv_ts+0x32c0>
               :  10ecca:	mov    0x80(%rsp),%edx
               :  10ecd1:	test   %edx,%edx
               :  10ecd3:	je     110080 <mlx5_tx_burst_mtiv_ts+0x32c0>
               :  10ecd9:	mov    %eax,%r13d
               :  10ecdc:	imul   $0x2040,%r13,%r13
               :  10ece3:	add    0x60(%r8),%r13
               :  10ece7:	je     110080 <mlx5_tx_burst_mtiv_ts+0x32c0>
               :  10eced:	mov    0x4(%r13),%eax
               :  10ecf1:	test   %eax,%eax
               :  10ecf3:	je     110080 <mlx5_tx_burst_mtiv_ts+0x32c0>
               :  10ecf9:	mov    0x8(%r13),%edx
               :  10ecfd:	lea    0x1(%rdx),%esi
               :  10ed00:	cmp    %esi,%eax
               :  10ed02:	jb     10f510 <mlx5_tx_burst_mtiv_ts+0x2750>
               :  10ed08:	mov    %esi,0x8(%r13)
               :  10ed0c:	lea    0x40(%r13,%rdx,8),%rcx
               :  10ed11:	mov    0x100(%rsp),%rax
               :  10ed19:	mov    %rax,(%rcx)
               :  10ed1c:	mov    0x18(%r9),%rax
               :  10ed20:	lea    0x88859(%rip),%rdi        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :  10ed27:	dec    %ebx
               :  10ed29:	test   %rax,(%rdi)
               :  10ed2c:	je     10f3d8 <mlx5_tx_burst_mtiv_ts+0x2618>
               :  10ed32:	mov    0x28(%rsp),%eax
               :  10ed36:	cmp    %r15d,%eax
               :  10ed39:	jbe    10f018 <mlx5_tx_burst_mtiv_ts+0x2258>
               :  10ed3f:	movzwl 0x28(%r9),%ecx
               :  10ed44:	sub    %r15d,%eax
               :  10ed47:	mov    %ecx,%edx
               :  10ed49:	cmp    %ecx,%eax
               :  10ed4b:	ja     10fbd7 <mlx5_tx_burst_mtiv_ts+0x2e17>
               :  10ed51:	cmp    %eax,%r12d
               :  10ed54:	cmova  %eax,%r12d
               :  10ed58:	mov    %r9,%r13
               :  10ed5b:	xor    %ecx,%ecx
               :  10ed5d:	jmpq   10e17d <mlx5_tx_burst_mtiv_ts+0x13bd>
               :  10ed62:	nopw   0x0(%rax,%rax,1)
               :  10ed68:	test   $0x8,%bl
               :  10ed6b:	je     10f790 <mlx5_tx_burst_mtiv_ts+0x29d0>
               :  10ed71:	mov    (%r9),%rcx
               :  10ed74:	lea    0x8(%r9),%rsi
               :  10ed78:	mov    %rcx,(%rax)
               :  10ed7b:	lea    0x8(%rax),%rcx
               :  10ed7f:	test   $0x4,%bl
               :  10ed82:	je     10ed93 <mlx5_tx_burst_mtiv_ts+0x1fd3>
               :  10ed84:	mov    (%rsi),%r14d
               :  10ed87:	add    $0x4,%rcx
               :  10ed8b:	mov    %r14d,-0x4(%rcx)
               :  10ed8f:	add    $0x4,%rsi
               :  10ed93:	test   $0x2,%bl
               :  10ed96:	je     10eda9 <mlx5_tx_burst_mtiv_ts+0x1fe9>
               :  10ed98:	movzwl (%rsi),%r14d
               :  10ed9c:	add    $0x2,%rcx
               :  10eda0:	mov    %r14w,-0x2(%rcx)
               :  10eda5:	add    $0x2,%rsi
               :  10eda9:	test   $0x1,%bl
               :  10edac:	je     10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  10edae:	movzbl (%rsi),%esi
               :  10edb1:	mov    %sil,(%rcx)
               :  10edb4:	nopl   0x0(%rax)
               :  10edb8:	sub    %ebx,0x88(%rsp)
               :  10edbf:	jne    1102d8 <mlx5_tx_burst_mtiv_ts+0x3518>
               :  10edc5:	addl   $0x4,0xa0(%rsp)
               :  10edcd:	mov    %r10,%rbx
               :  10edd0:	mov    0x60(%rsp),%r14
               :  10edd5:	mov    %r12,%r10
               :  10edd8:	mov    %r15d,%r12d
               :  10eddb:	mov    %rbx,%r15
               :  10edde:	lea    0xf(%rax,%rdx,1),%rbx
               :  10ede3:	and    $0xfffffffffffffff0,%rbx
               :  10ede7:	lea    0xf(%rdi),%eax
               :  10edea:	and    $0xfffffff0,%eax
               :  10eded:	sub    %eax,0xb0(%rsp)
               :  10edf4:	movzwl 0xdc(%rsp),%edi
               :  10edfc:	movzwl 0xaa(%rsp),%eax
               :  10ee04:	cmp    %di,%ax
               :  10ee07:	jne    10f6f0 <mlx5_tx_burst_mtiv_ts+0x2930>
               :  10ee0d:	inc    %eax
               :  10ee0f:	mov    %ax,0xaa(%rsp)
               :  10ee17:	jmpq   10d477 <mlx5_tx_burst_mtiv_ts+0x6b7>
               :  10ee1c:	nopl   0x0(%rax)
               :  10ee20:	test   $0x8,%dil
               :  10ee24:	je     10f780 <mlx5_tx_burst_mtiv_ts+0x29c0>
               :  10ee2a:	mov    (%r9),%rdx
               :  10ee2d:	lea    0x8(%r9),%rcx
               :  10ee31:	mov    %rdx,(%rbx)
               :  10ee34:	lea    0x8(%rbx),%rdx
               :  10ee38:	test   $0x4,%dil
               :  10ee3c:	je     10ee4d <mlx5_tx_burst_mtiv_ts+0x208d>
               :  10ee3e:	mov    (%rcx),%r14d
               :  10ee41:	add    $0x4,%rdx
               :  10ee45:	mov    %r14d,-0x4(%rdx)
               :  10ee49:	add    $0x4,%rcx
               :  10ee4d:	test   $0x2,%dil
               :  10ee51:	je     10ee64 <mlx5_tx_burst_mtiv_ts+0x20a4>
               :  10ee53:	movzwl (%rcx),%r14d
               :  10ee57:	add    $0x2,%rdx
               :  10ee5b:	mov    %r14w,-0x2(%rdx)
               :  10ee60:	add    $0x2,%rcx
               :  10ee64:	test   $0x1,%dil
               :  10ee68:	je     10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  10ee6a:	movzbl (%rcx),%ecx
               :  10ee6d:	mov    %cl,(%rdx)
               :  10ee6f:	nop
               :  10ee70:	sub    %edi,0x88(%rsp)
               :  10ee77:	jne    1102bd <mlx5_tx_burst_mtiv_ts+0x34fd>
               :  10ee7d:	mov    %r10,%rdi
               :  10ee80:	lea    0xf(%rbx,%rax,1),%rbx
               :  10ee85:	mov    %r12,%r10
               :  10ee88:	mov    0x60(%rsp),%r14
               :  10ee8d:	mov    %r15d,%r12d
               :  10ee90:	and    $0xfffffffffffffff0,%rbx
               :  10ee94:	mov    %rdi,%r15
               :  10ee97:	mov    %esi,%edi
               :  10ee99:	jmpq   10ede7 <mlx5_tx_burst_mtiv_ts+0x2027>
               :  10ee9e:	xchg   %ax,%ax
               :  10eea0:	mov    %eax,%r12d
               :  10eea3:	mov    0xa0(%rsp),%eax
               :  10eeaa:	mov    0xb0(%rsp),%r8d
               :  10eeb2:	add    %rax,0x158(%r14)
               :  10eeb9:	mov    0x90(%rsp),%eax
               :  10eec0:	movzwl 0xdc(%rsp),%ebx
               :  10eec8:	sub    %r8d,%eax
               :  10eecb:	shr    $0x4,%eax
               :  10eece:	lea    0x2(%rax),%edx
               :  10eed1:	mov    %rbx,%r15
               :  10eed4:	or     0x28(%r14),%edx
               :  10eed8:	bswap  %edx
               :  10eeda:	add    $0x5,%eax
               :  10eedd:	shr    $0x2,%eax
               :  10eee0:	add    %ax,0xa(%r14)
               :  10eee5:	mov    %edx,0x4(%r11)
               :  10eee9:	mov    %r11,0xc0(%rsp)
               :  10eef1:	sub    %ax,%r13w
               :  10eef5:	jne    10de01 <mlx5_tx_burst_mtiv_ts+0x1041>
               :  10eefb:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  10ef00:	xor    %esi,%esi
               :  10ef02:	mov    %si,0xde(%rsp)
               :  10ef0a:	jmpq   10d5c1 <mlx5_tx_burst_mtiv_ts+0x801>
               :  10ef0f:	nop
               :  10ef10:	mov    0xa0(%rsp),%eax
               :  10ef17:	mov    0xb0(%rsp),%r8d
               :  10ef1f:	add    %rax,0x158(%r14)
               :  10ef26:	mov    0x90(%rsp),%eax
               :  10ef2d:	movzwl 0xdc(%rsp),%ebx
               :  10ef35:	sub    %r8d,%eax
               :  10ef38:	shr    $0x4,%eax
               :  10ef3b:	lea    0x2(%rax),%edx
               :  10ef3e:	mov    %rbx,%r15
               :  10ef41:	or     0x28(%r14),%edx
               :  10ef45:	bswap  %edx
               :  10ef47:	add    $0x5,%eax
               :  10ef4a:	shr    $0x2,%eax
               :  10ef4d:	add    %ax,0xa(%r14)
               :  10ef52:	mov    %edx,0x4(%r11)
               :  10ef56:	mov    %r11,0xc0(%rsp)
               :  10ef5e:	sub    %ax,%r13w
               :  10ef62:	jne    10d800 <mlx5_tx_burst_mtiv_ts+0xa40>
               :  10ef68:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  10ef6d:	nopl   (%rax)
               :  10ef70:	movzwl 0x98(%rsp),%ebx
               :  10ef78:	mov    %r12,%r14
               :  10ef7b:	mov    %rbx,%r15
               :  10ef7e:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  10ef83:	nopl   0x0(%rax,%rax,1)
               :  10ef88:	mov    %r15,0xc0(%rsp)
               :  10ef90:	movzwl %r9w,%ebx
               :  10ef94:	mov    %r9d,%r15d
               :  10ef97:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  10ef9c:	nopl   0x0(%rax)
               :  10efa0:	movzwl 0x28(%r10),%eax
               :  10efa5:	movzwl 0x24(%r14),%edx
               :  10efaa:	add    $0x4,%rax
               :  10efae:	cmp    %rdx,%rax
               :  10efb1:	jbe    10d4ec <mlx5_tx_burst_mtiv_ts+0x72c>
               :  10efb7:	mov    0xa0(%rsp),%eax
               :  10efbe:	mov    0xb0(%rsp),%r8d
               :  10efc6:	add    %rax,0x158(%r14)
               :  10efcd:	mov    0x90(%rsp),%eax
               :  10efd4:	movzwl 0xdc(%rsp),%ebx
               :  10efdc:	sub    %r8d,%eax
               :  10efdf:	shr    $0x4,%eax
               :  10efe2:	lea    0x2(%rax),%edx
               :  10efe5:	mov    %rbx,%r15
               :  10efe8:	or     0x28(%r14),%edx
               :  10efec:	bswap  %edx
               :  10efee:	add    $0x5,%eax
               :  10eff1:	shr    $0x2,%eax
               :  10eff4:	add    %ax,0xa(%r14)
               :  10eff9:	mov    %edx,0x4(%r11)
               :  10effd:	mov    %r11,0xc0(%rsp)
               :  10f005:	sub    %ax,%r13w
               :  10f009:	jne    10e627 <mlx5_tx_burst_mtiv_ts+0x1867>
               :  10f00f:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  10f014:	nopl   0x0(%rax)
               :  10f018:	mov    %r15d,%r8d
               :  10f01b:	xor    %ecx,%ecx
               :  10f01d:	add    %r8d,0xd0(%rsp)
               :  10f025:	mov    0xd0(%rsp),%eax
               :  10f02c:	cmp    %eax,0xa0(%rsp)
               :  10f033:	jbe    10f040 <mlx5_tx_burst_mtiv_ts+0x2280>
               :  10f035:	cmp    0x30(%rsp),%r8d
               :  10f03a:	jae    111f24 <mlx5_tx_burst_mtiv_ts+0x5164>
               :  10f040:	mov    0x38(%rsp),%r12
               :  10f045:	movzwl 0xd0(%rsp),%eax
               :  10f04d:	xchg   %al,%ah
               :  10f04f:	mov    0xc0(%rsp),%rdi
               :  10f057:	mov    %ax,0x1c(%rdi)
               :  10f05b:	mov    0x90(%rsp),%rdi
               :  10f063:	mov    %r8d,%eax
               :  10f066:	lea    0xf(%rdi,%rax,1),%rax
               :  10f06b:	and    $0xfffffffffffffff0,%rax
               :  10f06f:	mov    %rax,%rdx
               :  10f072:	mov    %rax,%r13
               :  10f075:	test   %bx,%bx
               :  10f078:	je     10f1ec <mlx5_tx_burst_mtiv_ts+0x242c>
               :  10f07e:	movzwl 0x28(%r9),%edx
               :  10f083:	test   %cx,%cx
               :  10f086:	jne    10fbe1 <mlx5_tx_burst_mtiv_ts+0x2e21>
               :  10f08c:	lea    -0x1(%rbx),%r14d
               :  10f090:	lea    0x38(%r12),%rax
               :  10f095:	mov    %rax,0x88(%rsp)
               :  10f09d:	movzwl 0xc8(%rsp),%r15d
               :  10f0a6:	lea    0x48(%r12),%r8
               :  10f0ab:	mov    %r9,%rbx
               :  10f0ae:	mov    %r14d,%ecx
               :  10f0b1:	jmpq   10f14b <mlx5_tx_burst_mtiv_ts+0x238b>
               :  10f0b6:	nopw   %cs:0x0(%rax,%rax,1)
               :  10f0c0:	or     $0x80000000,%eax
               :  10f0c5:	bswap  %eax
               :  10f0c7:	mov    %eax,0x0(%r13)
               :  10f0cb:	lea    0x4(%r13),%rax
               :  10f0cf:	test   $0x8,%dl
               :  10f0d2:	je     10f0e3 <mlx5_tx_burst_mtiv_ts+0x2323>
               :  10f0d4:	mov    (%r14),%rax
               :  10f0d7:	add    $0x8,%rsi
               :  10f0db:	mov    %rax,0x4(%r13)
               :  10f0df:	lea    0xc(%r13),%rax
               :  10f0e3:	test   $0x4,%dl
               :  10f0e6:	je     10f0f5 <mlx5_tx_burst_mtiv_ts+0x2335>
               :  10f0e8:	mov    (%rsi),%edi
               :  10f0ea:	add    $0x4,%rax
               :  10f0ee:	mov    %edi,-0x4(%rax)
               :  10f0f1:	add    $0x4,%rsi
               :  10f0f5:	test   $0x2,%dl
               :  10f0f8:	je     10f109 <mlx5_tx_burst_mtiv_ts+0x2349>
               :  10f0fa:	movzwl (%rsi),%edi
               :  10f0fd:	add    $0x2,%rax
               :  10f101:	mov    %di,-0x2(%rax)
               :  10f105:	add    $0x2,%rsi
               :  10f109:	and    $0x1,%edx
               :  10f10c:	je     10f113 <mlx5_tx_burst_mtiv_ts+0x2353>
               :  10f10e:	movzbl (%rsi),%edx
               :  10f111:	mov    %dl,(%rax)
               :  10f113:	movzwl (%r12),%eax
               :  10f118:	dec    %r15d
               :  10f11b:	lea    0x1(%rax),%edx
               :  10f11e:	and    0x8(%r12),%ax
               :  10f124:	movzwl %ax,%eax
               :  10f127:	mov    %dx,(%r12)
               :  10f12c:	add    $0x10,%r13
               :  10f130:	mov    %rbx,0x188(%r12,%rax,8)
               :  10f138:	test   %cx,%cx
               :  10f13b:	je     10f1e0 <mlx5_tx_burst_mtiv_ts+0x2420>
               :  10f141:	mov    0x40(%rbx),%rbx
               :  10f145:	movzwl 0x28(%rbx),%edx
               :  10f149:	dec    %ecx
               :  10f14b:	test   %dx,%dx
               :  10f14e:	je     10f2c8 <mlx5_tx_burst_mtiv_ts+0x2508>
               :  10f154:	cmp    %r13,0x100(%r12)
               :  10f15c:	ja     10f166 <mlx5_tx_burst_mtiv_ts+0x23a6>
               :  10f15e:	mov    0xf8(%r12),%r13
               :  10f166:	mov    (%rbx),%rdi
               :  10f169:	movzwl 0x10(%rbx),%r14d
               :  10f16e:	movzwl %dx,%eax
               :  10f171:	add    %rdi,%r14
               :  10f174:	mov    %r14,%rsi
               :  10f177:	cmp    $0xc,%dx
               :  10f17b:	jbe    10f0c0 <mlx5_tx_burst_mtiv_ts+0x2300>
               :  10f181:	bswap  %eax
               :  10f183:	mov    %eax,0x0(%r13)
               :  10f187:	mov    0x40(%r12),%esi
               :  10f18c:	mov    0x38(%r12),%rax
               :  10f191:	cmp    %esi,(%rax)
               :  10f193:	jne    1102f3 <mlx5_tx_burst_mtiv_ts+0x3533>
               :  10f199:	movzwl 0x44(%r12),%eax
               :  10f19f:	mov    %r8,%rdx
               :  10f1a2:	lea    (%rax,%rax,4),%rax
               :  10f1a6:	lea    (%r8,%rax,4),%rax
               :  10f1aa:	cmp    (%rax),%rdi
               :  10f1ad:	jb     10f560 <mlx5_tx_burst_mtiv_ts+0x27a0>
               :  10f1b3:	cmp    0x8(%rax),%rdi
               :  10f1b7:	jae    10f560 <mlx5_tx_burst_mtiv_ts+0x27a0>
               :  10f1bd:	mov    0x10(%rax),%eax
               :  10f1c0:	cmp    $0xffffffff,%eax
               :  10f1c3:	je     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f1c9:	mov    %eax,0x4(%r13)
               :  10f1cd:	bswap  %r14
               :  10f1d0:	mov    %r14,0x8(%r13)
               :  10f1d4:	jmpq   10f113 <mlx5_tx_burst_mtiv_ts+0x2353>
               :  10f1d9:	nopl   0x0(%rax)
               :  10f1e0:	mov    %r15w,0xc8(%rsp)
               :  10f1e9:	mov    %r13,%rdx
               :  10f1ec:	mov    0xc0(%rsp),%rbx
               :  10f1f4:	cmp    %rdx,%rbx
               :  10f1f7:	jae    10f720 <mlx5_tx_burst_mtiv_ts+0x2960>
               :  10f1fd:	mov    %rdx,%rax
               :  10f200:	sub    %rbx,%rax
               :  10f203:	shr    $0x4,%rax
               :  10f207:	mov    0x28(%r12),%edx
               :  10f20c:	or     %eax,%edx
               :  10f20e:	bswap  %edx
               :  10f210:	add    $0x3,%eax
               :  10f213:	shr    $0x2,%eax
               :  10f216:	mov    %edx,0x4(%rbx)
               :  10f219:	add    %ax,0xa(%r12)
               :  10f21f:	sub    %ax,0xdc(%rsp)
               :  10f227:	decl   0xb0(%rsp)
               :  10f22e:	incw   0x98(%rsp)
               :  10f236:	cmpw   $0x0,0xdc(%rsp)
               :  10f23f:	sete   %dl
               :  10f242:	cmpw   $0x0,0xc8(%rsp)
               :  10f24b:	sete   %al
               :  10f24e:	or     %al,%dl
               :  10f250:	mov    0xb0(%rsp),%ebx
               :  10f257:	jne    10ef70 <mlx5_tx_burst_mtiv_ts+0x21b0>
               :  10f25d:	test   %ebx,%ebx
               :  10f25f:	je     10ef70 <mlx5_tx_burst_mtiv_ts+0x21b0>
               :  10f265:	addq   $0x8,0x60(%rsp)
               :  10f26b:	cmpl   $0x1,0xb0(%rsp)
               :  10f273:	mov    0x60(%rsp),%rax
               :  10f278:	mov    -0x8(%rax),%r13
               :  10f27c:	je     10f284 <mlx5_tx_burst_mtiv_ts+0x24c4>
               :  10f27e:	mov    (%rax),%rax
               :  10f281:	prefetcht0 (%rax)
               :  10f284:	movzwl 0x14(%r13),%ebx
               :  10f289:	cmp    $0x1,%bx
               :  10f28d:	ja     10de42 <mlx5_tx_burst_mtiv_ts+0x1082>
               :  10f293:	mov    %r13,%r10
               :  10f296:	mov    0x18(%r10),%rcx
               :  10f29a:	movzwl 0x98(%rsp),%ebx
               :  10f2a2:	bt     $0x32,%rcx
               :  10f2a7:	movzwl 0xdc(%rsp),%r13d
               :  10f2b0:	mov    %rbx,%r15
               :  10f2b3:	mov    %r12,%r14
               :  10f2b6:	jae    10cec9 <mlx5_tx_burst_mtiv_ts+0x109>
               :  10f2bc:	jmpq   10d800 <mlx5_tx_burst_mtiv_ts+0xa40>
               :  10f2c1:	nopl   0x0(%rax)
               :  10f2c8:	mov    0x40(%rbx),%rax
               :  10f2cc:	lea    0x12(%rbx),%r14
               :  10f2d0:	mov    %rax,0xd0(%rsp)
               :  10f2d8:	movzwl 0x12(%rbx),%eax
               :  10f2dc:	cmp    $0x1,%ax
               :  10f2e0:	jne    1121c3 <mlx5_tx_burst_mtiv_ts+0x5403>
               :  10f2e6:	mov    0x18(%rbx),%rax
               :  10f2ea:	movabs $0x6000000000000000,%rdi
               :  10f2f4:	mov    0x38(%rbx),%r14
               :  10f2f8:	test   %rdi,%rax
               :  10f2fb:	jne    10fb60 <mlx5_tx_burst_mtiv_ts+0x2da0>
               :  10f301:	mov    0x44(%r14),%edx
               :  10f305:	vzeroupper 
               :  10f308:	cmpq   $0x0,0x40(%rbx)
               :  10f30d:	je     10f317 <mlx5_tx_burst_mtiv_ts+0x2557>
               :  10f30f:	movq   $0x0,0x40(%rbx)
               :  10f317:	cmpw   $0x1,0x14(%rbx)
               :  10f31c:	je     10f327 <mlx5_tx_burst_mtiv_ts+0x2567>
               :  10f31e:	mov    $0x1,%eax
               :  10f323:	mov    %ax,0x14(%rbx)
               :  10f327:	mov    %r8,0x90(%rsp)
               :  10f32f:	mov    %ecx,0xa0(%rsp)
               :  10f336:	mov    %edx,0xc8(%rsp)
               :  10f33d:	mov    %rbx,0x108(%rsp)
               :  10f345:	data16 lea 0x86afb(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  10f34d:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  10f355:	mov    0xc8(%rsp),%edx
               :  10f35c:	mov    0xa0(%rsp),%ecx
               :  10f363:	test   %edx,%edx
               :  10f365:	mov    0x90(%rsp),%r8
               :  10f36d:	mov    (%rax),%eax
               :  10f36f:	je     1116c1 <mlx5_tx_burst_mtiv_ts+0x4901>
               :  10f375:	cmp    $0x7f,%eax
               :  10f378:	ja     1116c1 <mlx5_tx_burst_mtiv_ts+0x4901>
               :  10f37e:	mov    %eax,%ebx
               :  10f380:	imul   $0x2040,%rbx,%rbx
               :  10f387:	add    0x60(%r14),%rbx
               :  10f38b:	je     1116c1 <mlx5_tx_burst_mtiv_ts+0x4901>
               :  10f391:	mov    0x4(%rbx),%eax
               :  10f394:	test   %eax,%eax
               :  10f396:	je     1116c1 <mlx5_tx_burst_mtiv_ts+0x4901>
               :  10f39c:	mov    0x8(%rbx),%edx
               :  10f39f:	lea    0x1(%rdx),%edi
               :  10f3a2:	cmp    %edi,%eax
               :  10f3a4:	jb     1113df <mlx5_tx_burst_mtiv_ts+0x461f>
               :  10f3aa:	mov    %edi,0x8(%rbx)
               :  10f3ad:	lea    0x40(%rbx,%rdx,8),%rsi
               :  10f3b2:	mov    0x108(%rsp),%rax
               :  10f3ba:	mov    %rax,(%rsi)
               :  10f3bd:	test   %cx,%cx
               :  10f3c0:	je     10f1e0 <mlx5_tx_burst_mtiv_ts+0x2420>
               :  10f3c6:	mov    0xd0(%rsp),%rbx
               :  10f3ce:	jmpq   10f145 <mlx5_tx_burst_mtiv_ts+0x2385>
               :  10f3d3:	nopl   0x0(%rax,%rax,1)
               :  10f3d8:	movzwl 0x28(%r9),%edx
               :  10f3dd:	mov    %r9,%r13
               :  10f3e0:	xor    %ecx,%ecx
               :  10f3e2:	jmpq   10e17d <mlx5_tx_burst_mtiv_ts+0x13bd>
               :  10f3e7:	nopw   0x0(%rax,%rax,1)
               :  10f3f0:	lea    0x4(%rax,%rdx,1),%eax
               :  10f3f4:	movq   $0x4,0xc0(%rsp)
               :  10f400:	add    %eax,%edi
               :  10f402:	mov    $0x4,%r11d
               :  10f408:	jmpq   10d9cf <mlx5_tx_burst_mtiv_ts+0xc0f>
               :  10f40d:	nopl   (%rax)
               :  10f410:	mov    %r8d,0x38(%rsp)
               :  10f415:	mov    %r11,0x80(%rsp)
               :  10f41d:	mov    %r10,0x40(%rsp)
               :  10f422:	mov    %r9,0x88(%rsp)
               :  10f42a:	mov    %rdi,0x60(%rsp)
               :  10f42f:	vzeroupper 
               :  10f432:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :  10f437:	mov    0x38(%rsp),%r8d
               :  10f43c:	mov    0x80(%rsp),%r11
               :  10f444:	mov    0x40(%rsp),%r10
               :  10f449:	mov    0x88(%rsp),%r9
               :  10f451:	mov    0x60(%rsp),%rdi
               :  10f456:	jmpq   10d40b <mlx5_tx_burst_mtiv_ts+0x64b>
               :  10f45b:	nopl   0x0(%rax,%rax,1)
               :  10f460:	mov    0xd0(%rsp),%r14d
               :  10f468:	test   %r14d,%r14d
               :  10f46b:	jne    10fcac <mlx5_tx_burst_mtiv_ts+0x2eec>
               :  10f471:	test   %rdi,%rdi
               :  10f474:	jne    110c3a <mlx5_tx_burst_mtiv_ts+0x3e7a>
               :  10f47a:	cmp    %r10w,%si
               :  10f47e:	jb     110c3a <mlx5_tx_burst_mtiv_ts+0x3e7a>
               :  10f484:	movl   $0x12,0xa0(%rsp)
               :  10f48f:	mov    %r13,%rdx
               :  10f492:	cmp    $0x12,%r11d
               :  10f496:	ja     10f4c6 <mlx5_tx_burst_mtiv_ts+0x2706>
               :  10f498:	mov    %r13,%rdx
               :  10f49b:	cmp    0xa0(%rsp),%r11d
               :  10f4a3:	jae    10f4c6 <mlx5_tx_burst_mtiv_ts+0x2706>
               :  10f4a5:	mov    0x40(%rdx),%rdx
               :  10f4a9:	mov    %r11d,%r10d
               :  10f4ac:	movzwl 0x28(%rdx),%edi
               :  10f4b0:	add    %edi,%r11d
               :  10f4b3:	cmp    0xa0(%rsp),%r11d
               :  10f4bb:	jb     10f4a5 <mlx5_tx_burst_mtiv_ts+0x26e5>
               :  10f4bd:	cmp    %r11d,%r8d
               :  10f4c0:	jb     115830 <mlx5_tx_burst_mtiv_ts+0x8a70>
               :  10f4c6:	mov    0x40(%rdx),%rdx
               :  10f4ca:	mov    %r11d,0xa0(%rsp)
               :  10f4d2:	test   %r9,0x18(%rdx)
               :  10f4d6:	jne    10defb <mlx5_tx_burst_mtiv_ts+0x113b>
               :  10f4dc:	movzwl 0x28(%rdx),%edi
               :  10f4e0:	add    0xa0(%rsp),%edi
               :  10f4e7:	cmp    %edi,%r8d
               :  10f4ea:	jbe    10defb <mlx5_tx_burst_mtiv_ts+0x113b>
               :  10f4f0:	mov    0x40(%rdx),%rdx
               :  10f4f4:	mov    %edi,0xa0(%rsp)
               :  10f4fb:	test   %r9,0x18(%rdx)
               :  10f4ff:	je     10f4dc <mlx5_tx_burst_mtiv_ts+0x271c>
               :  10f501:	jmpq   10defb <mlx5_tx_burst_mtiv_ts+0x113b>
               :  10f506:	nopw   %cs:0x0(%rax,%rax,1)
               :  10f510:	movslq 0x58(%r8),%rax
               :  10f514:	mov    %r9,0x40(%rsp)
               :  10f519:	lea    0x40(%r13),%rcx
               :  10f51d:	cmp    $0xf,%eax
               :  10f520:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  10f526:	shl    $0x7,%rax
               :  10f52a:	mov    %rcx,%rsi
               :  10f52d:	add    0x869dc(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  10f534:	mov    %r8,%rdi
               :  10f537:	mov    %rcx,0x88(%rsp)
               :  10f53f:	callq  *0x70(%rax)
               :  10f542:	movl   $0x1,0x8(%r13)
               :  10f54a:	mov    0x40(%rsp),%r9
               :  10f54f:	mov    0x88(%rsp),%rcx
               :  10f557:	jmpq   10ed11 <mlx5_tx_burst_mtiv_ts+0x1f51>
               :  10f55c:	nopl   0x0(%rax)
               :  10f560:	mov    0x48(%r12),%rax
               :  10f565:	test   %rax,%rax
               :  10f568:	je     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f56e:	cmp    %rax,%rdi
               :  10f571:	jb     10f588 <mlx5_tx_burst_mtiv_ts+0x27c8>
               :  10f573:	cmp    0x50(%r12),%rdi
               :  10f578:	jae    10f588 <mlx5_tx_burst_mtiv_ts+0x27c8>
               :  10f57a:	xor    %eax,%eax
               :  10f57c:	jmpq   10f6a0 <mlx5_tx_burst_mtiv_ts+0x28e0>
               :  10f581:	nopl   0x0(%rax)
               :  10f588:	mov    0x5c(%r12),%rax
               :  10f58d:	test   %rax,%rax
               :  10f590:	je     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f596:	cmp    %rax,%rdi
               :  10f599:	jae    10fd96 <mlx5_tx_burst_mtiv_ts+0x2fd6>
               :  10f59f:	mov    0x70(%r12),%rax
               :  10f5a4:	test   %rax,%rax
               :  10f5a7:	je     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f5ad:	cmp    %rax,%rdi
               :  10f5b0:	jb     10f5c7 <mlx5_tx_burst_mtiv_ts+0x2807>
               :  10f5b2:	lea    0x70(%r12),%rdx
               :  10f5b7:	mov    $0x2,%eax
               :  10f5bc:	cmp    0x78(%r12),%rdi
               :  10f5c1:	jb     10f6a0 <mlx5_tx_burst_mtiv_ts+0x28e0>
               :  10f5c7:	mov    0x84(%r12),%rax
               :  10f5cf:	test   %rax,%rax
               :  10f5d2:	je     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f5d8:	cmp    %rax,%rdi
               :  10f5db:	jb     10f5f8 <mlx5_tx_burst_mtiv_ts+0x2838>
               :  10f5dd:	lea    0x84(%r12),%rdx
               :  10f5e5:	mov    $0x3,%eax
               :  10f5ea:	cmp    %rdi,0x8c(%r12)
               :  10f5f2:	ja     10f6a0 <mlx5_tx_burst_mtiv_ts+0x28e0>
               :  10f5f8:	mov    0x98(%r12),%rax
               :  10f600:	test   %rax,%rax
               :  10f603:	je     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f609:	cmp    %rax,%rdi
               :  10f60c:	jb     10f625 <mlx5_tx_burst_mtiv_ts+0x2865>
               :  10f60e:	lea    0x98(%r12),%rdx
               :  10f616:	mov    $0x4,%eax
               :  10f61b:	cmp    0xa0(%r12),%rdi
               :  10f623:	jb     10f6a0 <mlx5_tx_burst_mtiv_ts+0x28e0>
               :  10f625:	mov    0xac(%r12),%rax
               :  10f62d:	test   %rax,%rax
               :  10f630:	je     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f632:	cmp    %rax,%rdi
               :  10f635:	jb     10f64e <mlx5_tx_burst_mtiv_ts+0x288e>
               :  10f637:	lea    0xac(%r12),%rdx
               :  10f63f:	mov    $0x5,%eax
               :  10f644:	cmp    %rdi,0xb4(%r12)
               :  10f64c:	ja     10f6a0 <mlx5_tx_burst_mtiv_ts+0x28e0>
               :  10f64e:	mov    0xc0(%r12),%rax
               :  10f656:	test   %rax,%rax
               :  10f659:	je     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f65b:	cmp    %rax,%rdi
               :  10f65e:	jb     10f677 <mlx5_tx_burst_mtiv_ts+0x28b7>
               :  10f660:	lea    0xc0(%r12),%rdx
               :  10f668:	mov    $0x6,%eax
               :  10f66d:	cmp    0xc8(%r12),%rdi
               :  10f675:	jb     10f6a0 <mlx5_tx_burst_mtiv_ts+0x28e0>
               :  10f677:	mov    0xd4(%r12),%rax
               :  10f67f:	cmp    %rax,%rdi
               :  10f682:	jb     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f684:	test   %rax,%rax
               :  10f687:	je     10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f689:	lea    0xd4(%r12),%rdx
               :  10f691:	mov    $0x7,%eax
               :  10f696:	cmp    0xdc(%r12),%rdi
               :  10f69e:	jae    10f6b0 <mlx5_tx_burst_mtiv_ts+0x28f0>
               :  10f6a0:	mov    %ax,0x44(%r12)
               :  10f6a6:	mov    0x10(%rdx),%eax
               :  10f6a9:	jmpq   10f1c0 <mlx5_tx_burst_mtiv_ts+0x2400>
               :  10f6ae:	xchg   %ax,%ax
               :  10f6b0:	mov    0x88(%rsp),%rdi
               :  10f6b8:	mov    %rbx,%rsi
               :  10f6bb:	mov    %r8,0xc8(%rsp)
               :  10f6c3:	mov    %ecx,0xd0(%rsp)
               :  10f6ca:	vzeroupper 
               :  10f6cd:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :  10f6d2:	mov    0xd0(%rsp),%ecx
               :  10f6d9:	mov    0xc8(%rsp),%r8
               :  10f6e1:	jmpq   10f1c9 <mlx5_tx_burst_mtiv_ts+0x2409>
               :  10f6e6:	nopw   %cs:0x0(%rax,%rax,1)
               :  10f6f0:	movzwl (%r14),%eax
               :  10f6f4:	decw   0xc8(%rsp)
               :  10f6fc:	lea    0x1(%rax),%edx
               :  10f6ff:	and    0x8(%r14),%ax
               :  10f704:	movzwl %ax,%eax
               :  10f707:	mov    %dx,(%r14)
               :  10f70b:	mov    %r10,0x188(%r14,%rax,8)
               :  10f713:	jmpq   10d477 <mlx5_tx_burst_mtiv_ts+0x6b7>
               :  10f718:	nopl   0x0(%rax,%rax,1)
               :  10f720:	movzwl 0xe(%r12),%eax
               :  10f726:	shl    $0x6,%rax
               :  10f72a:	sub    0xc0(%rsp),%rax
               :  10f732:	add    %rdx,%rax
               :  10f735:	shr    $0x4,%rax
               :  10f739:	jmpq   10f207 <mlx5_tx_burst_mtiv_ts+0x2447>
               :  10f73e:	xchg   %ax,%ax
               :  10f740:	vmovdqu64 (%rax),%xmm2
               :  10f746:	vmovups %xmm2,(%r14)
               :  10f74b:	vmovdqu64 -0x10(%rax,%rdi,1),%xmm1
               :  10f753:	vmovups %xmm1,-0x10(%r14,%rdi,1)
               :  10f75a:	jmpq   10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  10f75f:	nop
               :  10f760:	vmovdqu64 (%rax),%xmm2
               :  10f766:	vmovups %xmm2,(%r14)
               :  10f76b:	vmovdqu64 -0x10(%rax,%rdi,1),%xmm0
               :  10f773:	vmovups %xmm0,-0x10(%r14,%rdi,1)
               :  10f77a:	jmpq   10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  10f77f:	nop
               :  10f780:	mov    %r9,%rcx
               :  10f783:	mov    %rbx,%rdx
               :  10f786:	jmpq   10ee38 <mlx5_tx_burst_mtiv_ts+0x2078>
               :  10f78b:	nopl   0x0(%rax,%rax,1)
               :  10f790:	mov    %r9,%rsi
               :  10f793:	mov    %rax,%rcx
               :  10f796:	jmpq   10ed7f <mlx5_tx_burst_mtiv_ts+0x1fbf>
               :  10f79b:	nopl   0x0(%rax,%rax,1)
               :  10f7a0:	mov    %rax,%r15
               :  10f7a3:	lea    0xf0(%rsp),%rax
               :  10f7ab:	movl   $0x0,0xd0(%rsp)
               :  10f7b6:	mov    %rax,0x80(%rsp)
               :  10f7be:	mov    %r12,0x40(%rsp)
               :  10f7c3:	xor    %ecx,%ecx
               :  10f7c5:	mov    $0xc,%r14d
               :  10f7cb:	cmp    %dx,%cx
               :  10f7ce:	jae    10f8bb <mlx5_tx_burst_mtiv_ts+0x2afb>
               :  10f7d4:	movzwl 0x10(%r13),%eax
               :  10f7d9:	movzwl %cx,%esi
               :  10f7dc:	add    %rsi,%rax
               :  10f7df:	movzwl %cx,%esi
               :  10f7e2:	sub    %esi,%edx
               :  10f7e4:	add    0x0(%r13),%rax
               :  10f7e8:	mov    %edx,%esi
               :  10f7ea:	cmp    %r14d,%edx
               :  10f7ed:	mov    %rax,%rdx
               :  10f7f0:	cmova  %r14d,%esi
               :  10f7f4:	or     %r15,%rdx
               :  10f7f7:	and    $0x1f,%edx
               :  10f7fa:	mov    %esi,%edi
               :  10f7fc:	jne    10fa20 <mlx5_tx_burst_mtiv_ts+0x2c60>
               :  10f802:	cmp    $0xf,%esi
               :  10f805:	jbe    10fae0 <mlx5_tx_burst_mtiv_ts+0x2d20>
               :  10f80b:	cmp    $0x20,%esi
               :  10f80e:	jbe    1112dc <mlx5_tx_burst_mtiv_ts+0x451c>
               :  10f814:	cmp    $0x40,%rdi
               :  10f818:	jbe    10fe8b <mlx5_tx_burst_mtiv_ts+0x30cb>
               :  10f81e:	lea    -0x40(%rdi),%r9
               :  10f822:	shr    $0x6,%r9
               :  10f826:	lea    0x1(%r9),%r10
               :  10f82a:	shl    $0x6,%r10
               :  10f82e:	lea    (%rax,%r10,1),%r8
               :  10f832:	mov    %r15,%rdx
               :  10f835:	nopl   (%rax)
               :  10f838:	vmovdqu64 (%rax),%ymm6
               :  10f83e:	add    $0x40,%rax
               :  10f842:	vmovdqu64 %ymm6,(%rdx)
               :  10f848:	vmovdqu64 -0x20(%rax),%ymm7
               :  10f84f:	add    $0x40,%rdx
               :  10f853:	vmovdqu64 %ymm7,-0x20(%rdx)
               :  10f85a:	cmp    %r8,%rax
               :  10f85d:	jne    10f838 <mlx5_tx_burst_mtiv_ts+0x2a78>
               :  10f85f:	neg    %r9
               :  10f862:	mov    %r9,%rdx
               :  10f865:	shl    $0x6,%rdx
               :  10f869:	lea    -0x80(%rdi,%rdx,1),%rdx
               :  10f86e:	add    %rdx,%rax
               :  10f871:	vmovdqu64 (%rax),%ymm5
               :  10f877:	add    %r10,%rdx
               :  10f87a:	add    %r15,%rdx
               :  10f87d:	vmovdqu64 %ymm5,(%rdx)
               :  10f883:	vmovdqu64 0x20(%rax),%ymm1
               :  10f88a:	vmovdqu64 %ymm1,0x20(%rdx)
               :  10f891:	nopl   0x0(%rax)
               :  10f898:	add    %esi,0xd0(%rsp)
               :  10f89f:	movzwl 0x28(%r13),%edx
               :  10f8a4:	add    %esi,%ecx
               :  10f8a6:	sub    %esi,%r14d
               :  10f8a9:	je     111c01 <mlx5_tx_burst_mtiv_ts+0x4e41>
               :  10f8af:	add    %rdi,%r15
               :  10f8b2:	cmp    %dx,%cx
               :  10f8b5:	jb     10f7d4 <mlx5_tx_burst_mtiv_ts+0x2a14>
               :  10f8bb:	mov    0x40(%r13),%r12
               :  10f8bf:	movzwl 0x12(%r13),%eax
               :  10f8c4:	lea    0x12(%r13),%r8
               :  10f8c8:	cmp    $0x1,%ax
               :  10f8cc:	jne    111d9d <mlx5_tx_burst_mtiv_ts+0x4fdd>
               :  10f8d2:	mov    0x18(%r13),%rax
               :  10f8d6:	movabs $0x6000000000000000,%rdi
               :  10f8e0:	mov    0x38(%r13),%r8
               :  10f8e4:	test   %rdi,%rax
               :  10f8e7:	jne    10ff78 <mlx5_tx_burst_mtiv_ts+0x31b8>
               :  10f8ed:	mov    0x44(%r8),%edx
               :  10f8f1:	vzeroupper 
               :  10f8f4:	cmpq   $0x0,0x40(%r13)
               :  10f8f9:	je     10f903 <mlx5_tx_burst_mtiv_ts+0x2b43>
               :  10f8fb:	movq   $0x0,0x40(%r13)
               :  10f903:	cmpw   $0x1,0x14(%r13)
               :  10f909:	je     10f915 <mlx5_tx_burst_mtiv_ts+0x2b55>
               :  10f90b:	mov    $0x1,%eax
               :  10f910:	mov    %ax,0x14(%r13)
               :  10f915:	mov    %edx,0x88(%rsp)
               :  10f91c:	mov    %r8,0x90(%rsp)
               :  10f924:	mov    %r13,0xf0(%rsp)
               :  10f92c:	data16 lea 0x86514(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  10f934:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  10f93c:	mov    0x88(%rsp),%edx
               :  10f943:	mov    0x90(%rsp),%r8
               :  10f94b:	test   %edx,%edx
               :  10f94d:	mov    (%rax),%eax
               :  10f94f:	je     11163e <mlx5_tx_burst_mtiv_ts+0x487e>
               :  10f955:	cmp    $0x7f,%eax
               :  10f958:	ja     11163e <mlx5_tx_burst_mtiv_ts+0x487e>
               :  10f95e:	mov    %eax,%r13d
               :  10f961:	imul   $0x2040,%r13,%r13
               :  10f968:	add    0x60(%r8),%r13
               :  10f96c:	je     11163e <mlx5_tx_burst_mtiv_ts+0x487e>
               :  10f972:	mov    0x4(%r13),%eax
               :  10f976:	test   %eax,%eax
               :  10f978:	je     11163e <mlx5_tx_burst_mtiv_ts+0x487e>
               :  10f97e:	mov    0x8(%r13),%edx
               :  10f982:	lea    0x1(%rdx),%edi
               :  10f985:	cmp    %edi,%eax
               :  10f987:	jb     110bfb <mlx5_tx_burst_mtiv_ts+0x3e3b>
               :  10f98d:	mov    %edi,0x8(%r13)
               :  10f991:	lea    0x40(%r13,%rdx,8),%rsi
               :  10f996:	mov    0xf0(%rsp),%rax
               :  10f99e:	mov    %rax,(%rsi)
               :  10f9a1:	mov    0x18(%r12),%rax
               :  10f9a6:	lea    0x87bd3(%rip),%rdi        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :  10f9ad:	movzwl 0x28(%r12),%edx
               :  10f9b3:	dec    %ebx
               :  10f9b5:	test   %rax,(%rdi)
               :  10f9b8:	je     10fb4c <mlx5_tx_burst_mtiv_ts+0x2d8c>
               :  10f9be:	mov    0xd0(%rsp),%edi
               :  10f9c5:	cmp    $0xb,%edi
               :  10f9c8:	jbe    10fb37 <mlx5_tx_burst_mtiv_ts+0x2d77>
               :  10f9ce:	mov    %r12,%r15
               :  10f9d1:	mov    0x40(%rsp),%r12
               :  10f9d6:	xor    %ecx,%ecx
               :  10f9d8:	movzwl 0x2a(%r15),%eax
               :  10f9dd:	or     $0x81000000,%eax
               :  10f9e2:	bswap  %eax
               :  10f9e4:	mov    0xc0(%rsp),%rdi
               :  10f9ec:	movl   $0x10,0xd0(%rsp)
               :  10f9f7:	mov    %eax,0x2a(%rdi)
               :  10f9fa:	lea    0x2e(%rdi),%rax
               :  10f9fe:	mov    %rax,0x90(%rsp)
               :  10fa06:	mov    0xa0(%rsp),%eax
               :  10fa0d:	mov    %r15,%r13
               :  10fa10:	lea    -0x10(%rax),%esi
               :  10fa13:	jmpq   10e11f <mlx5_tx_burst_mtiv_ts+0x135f>
               :  10fa18:	nopl   0x0(%rax,%rax,1)
               :  10fa20:	cmp    $0xf,%esi
               :  10fa23:	jbe    10fae0 <mlx5_tx_burst_mtiv_ts+0x2d20>
               :  10fa29:	cmp    $0x20,%esi
               :  10fa2c:	jbe    1112fb <mlx5_tx_burst_mtiv_ts+0x453b>
               :  10fa32:	cmp    $0x30,%rdi
               :  10fa36:	jbe    10fe5f <mlx5_tx_burst_mtiv_ts+0x309f>
               :  10fa3c:	vmovdqu64 (%rax),%ymm0
               :  10fa42:	cmp    $0x40,%rdi
               :  10fa46:	jbe    111ece <mlx5_tx_burst_mtiv_ts+0x510e>
               :  10fa4c:	cmp    $0x100,%rdi
               :  10fa53:	ja     1128d9 <mlx5_tx_burst_mtiv_ts+0x5b19>
               :  10fa59:	cmp    $0x7f,%rdi
               :  10fa5d:	jbe    112b7b <mlx5_tx_burst_mtiv_ts+0x5dbb>
               :  10fa63:	vmovdqu64 %ymm0,(%r15)
               :  10fa69:	vmovdqu64 0x20(%rax),%ymm1
               :  10fa70:	lea    -0x80(%rdi),%rdx
               :  10fa74:	vmovdqu64 %ymm1,0x20(%r15)
               :  10fa7b:	vmovdqu64 0x40(%rax),%ymm2
               :  10fa82:	lea    0x80(%r15),%r9
               :  10fa89:	vmovdqu64 %ymm2,0x40(%r15)
               :  10fa90:	vmovdqu64 0x60(%rax),%ymm3
               :  10fa97:	sub    $0xffffffffffffff80,%rax
               :  10fa9b:	vmovdqu64 %ymm3,0x60(%r15)
               :  10faa2:	cmp    $0x3f,%rdx
               :  10faa6:	ja     11341e <mlx5_tx_burst_mtiv_ts+0x665e>
               :  10faac:	cmp    $0x20,%rdx
               :  10fab0:	jbe    111f06 <mlx5_tx_burst_mtiv_ts+0x5146>
               :  10fab6:	vmovdqu64 (%rax),%ymm2
               :  10fabc:	vmovdqu64 %ymm2,(%r9)
               :  10fac2:	vmovdqu64 -0x20(%rax,%rdx,1),%ymm5
               :  10faca:	vmovdqu64 %ymm5,-0x20(%r9,%rdx,1)
               :  10fad2:	jmpq   10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  10fad7:	nopw   0x0(%rax,%rax,1)
               :  10fae0:	mov    %r15,%rdx
               :  10fae3:	test   $0x8,%sil
               :  10fae7:	je     10faf7 <mlx5_tx_burst_mtiv_ts+0x2d37>
               :  10fae9:	mov    (%rax),%rdx
               :  10faec:	add    $0x8,%rax
               :  10faf0:	mov    %rdx,(%r15)
               :  10faf3:	lea    0x8(%r15),%rdx
               :  10faf7:	test   $0x4,%sil
               :  10fafb:	je     10fb0c <mlx5_tx_burst_mtiv_ts+0x2d4c>
               :  10fafd:	mov    (%rax),%r8d
               :  10fb00:	add    $0x4,%rdx
               :  10fb04:	mov    %r8d,-0x4(%rdx)
               :  10fb08:	add    $0x4,%rax
               :  10fb0c:	test   $0x2,%sil
               :  10fb10:	je     10fb23 <mlx5_tx_burst_mtiv_ts+0x2d63>
               :  10fb12:	movzwl (%rax),%r8d
               :  10fb16:	add    $0x2,%rdx
               :  10fb1a:	mov    %r8w,-0x2(%rdx)
               :  10fb1f:	add    $0x2,%rax
               :  10fb23:	test   $0x1,%sil
               :  10fb27:	je     10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  10fb2d:	movzbl (%rax),%eax
               :  10fb30:	mov    %al,(%rdx)
               :  10fb32:	jmpq   10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  10fb37:	mov    $0xc,%eax
               :  10fb3c:	sub    %edi,%eax
               :  10fb3e:	movzwl %dx,%esi
               :  10fb41:	cmp    %esi,%eax
               :  10fb43:	ja     10fb4c <mlx5_tx_burst_mtiv_ts+0x2d8c>
               :  10fb45:	cmp    %eax,%r14d
               :  10fb48:	cmova  %eax,%r14d
               :  10fb4c:	mov    %r12,%r13
               :  10fb4f:	xor    %ecx,%ecx
               :  10fb51:	jmpq   10f7cb <mlx5_tx_burst_mtiv_ts+0x2a0b>
               :  10fb56:	nopw   %cs:0x0(%rax,%rax,1)
               :  10fb60:	movabs $0x2000000000000000,%rdi
               :  10fb6a:	test   %rdi,%rax
               :  10fb6d:	je     111ad2 <mlx5_tx_burst_mtiv_ts+0x4d12>
               :  10fb73:	mov    0x44(%r14),%edx
               :  10fb77:	test   %edx,%edx
               :  10fb79:	jne    111a17 <mlx5_tx_burst_mtiv_ts+0x4c57>
               :  10fb7f:	testb  $0x1,0xc4(%r14)
               :  10fb87:	je     111a25 <mlx5_tx_burst_mtiv_ts+0x4c65>
               :  10fb8d:	mov    $0xc0,%eax
               :  10fb92:	testb  $0x1,0x4(%r14,%rax,1)
               :  10fb98:	je     111a0f <mlx5_tx_burst_mtiv_ts+0x4c4f>
               :  10fb9e:	movabs $0x2000000000000000,%rdi
               :  10fba8:	mov    %rdi,0x18(%rbx)
               :  10fbac:	mov    0x50(%rbx),%rax
               :  10fbb0:	movzwl 0x10(%rax),%esi
               :  10fbb4:	lea    0x10(%rax),%rdx
               :  10fbb8:	cmp    $0x1,%si
               :  10fbbc:	jne    114b34 <mlx5_tx_burst_mtiv_ts+0x7d74>
               :  10fbc2:	mov    0x38(%rbx),%r14
               :  10fbc6:	jmpq   10f301 <mlx5_tx_burst_mtiv_ts+0x2541>
               :  10fbcb:	mov    %ecx,0xa0(%rsp)
               :  10fbd2:	jmpq   10df11 <mlx5_tx_burst_mtiv_ts+0x1151>
               :  10fbd7:	mov    %r9,%r13
               :  10fbda:	xor    %ecx,%ecx
               :  10fbdc:	jmpq   10e17d <mlx5_tx_burst_mtiv_ts+0x13bd>
               :  10fbe1:	movzwl 0x10(%r9),%edi
               :  10fbe6:	movzwl %cx,%esi
               :  10fbe9:	mov    (%r9),%rax
               :  10fbec:	add    %rdi,%rsi
               :  10fbef:	movzwl %cx,%ecx
               :  10fbf2:	lea    (%rax,%rsi,1),%r14
               :  10fbf6:	sub    %ecx,%edx
               :  10fbf8:	cmp    %r13,0x100(%r12)
               :  10fc00:	ja     10fc0a <mlx5_tx_burst_mtiv_ts+0x2e4a>
               :  10fc02:	mov    0xf8(%r12),%r13
               :  10fc0a:	mov    %r14,%rcx
               :  10fc0d:	cmp    $0xc,%edx
               :  10fc10:	ja     111d3b <mlx5_tx_burst_mtiv_ts+0x4f7b>
               :  10fc16:	mov    %edx,%eax
               :  10fc18:	or     $0x80000000,%eax
               :  10fc1d:	bswap  %eax
               :  10fc1f:	mov    %eax,0x0(%r13)
               :  10fc23:	lea    0x4(%r13),%rax
               :  10fc27:	test   $0x8,%dl
               :  10fc2a:	je     10fc3b <mlx5_tx_burst_mtiv_ts+0x2e7b>
               :  10fc2c:	mov    (%r14),%rax
               :  10fc2f:	add    $0x8,%rcx
               :  10fc33:	mov    %rax,0x4(%r13)
               :  10fc37:	lea    0xc(%r13),%rax
               :  10fc3b:	test   $0x4,%dl
               :  10fc3e:	je     10fc4d <mlx5_tx_burst_mtiv_ts+0x2e8d>
               :  10fc40:	mov    (%rcx),%esi
               :  10fc42:	add    $0x4,%rax
               :  10fc46:	mov    %esi,-0x4(%rax)
               :  10fc49:	add    $0x4,%rcx
               :  10fc4d:	test   $0x2,%dl
               :  10fc50:	je     10fc61 <mlx5_tx_burst_mtiv_ts+0x2ea1>
               :  10fc52:	movzwl (%rcx),%esi
               :  10fc55:	add    $0x2,%rax
               :  10fc59:	mov    %si,-0x2(%rax)
               :  10fc5d:	add    $0x2,%rcx
               :  10fc61:	and    $0x1,%edx
               :  10fc64:	je     10fc6b <mlx5_tx_burst_mtiv_ts+0x2eab>
               :  10fc66:	movzbl (%rcx),%edx
               :  10fc69:	mov    %dl,(%rax)
               :  10fc6b:	movzwl (%r12),%eax
               :  10fc70:	decw   0xc8(%rsp)
               :  10fc78:	lea    0x1(%rax),%edx
               :  10fc7b:	and    0x8(%r12),%ax
               :  10fc81:	movzwl %ax,%eax
               :  10fc84:	mov    %dx,(%r12)
               :  10fc89:	add    $0x10,%r13
               :  10fc8d:	mov    %r9,0x188(%r12,%rax,8)
               :  10fc95:	dec    %bx
               :  10fc98:	je     10f1e9 <mlx5_tx_burst_mtiv_ts+0x2429>
               :  10fc9e:	mov    0x40(%r9),%r9
               :  10fca2:	movzwl 0x28(%r9),%edx
               :  10fca7:	jmpq   10f08c <mlx5_tx_burst_mtiv_ts+0x22cc>
               :  10fcac:	cmpb   $0x0,0x1f(%r12)
               :  10fcb2:	movl   $0x12,0xa0(%rsp)
               :  10fcbd:	jns    10dee9 <mlx5_tx_burst_mtiv_ts+0x1129>
               :  10fcc3:	jmpq   10f471 <mlx5_tx_burst_mtiv_ts+0x26b1>
               :  10fcc8:	cmp    $0xf,%r11
               :  10fccc:	jbe    1114a8 <mlx5_tx_burst_mtiv_ts+0x46e8>
               :  10fcd2:	cmp    $0x20,%r11
               :  10fcd6:	jbe    112c1f <mlx5_tx_burst_mtiv_ts+0x5e5f>
               :  10fcdc:	cmp    $0x40,%r11
               :  10fce0:	jbe    113144 <mlx5_tx_burst_mtiv_ts+0x6384>
               :  10fce6:	lea    -0x40(%r11),%rdx
               :  10fcea:	shr    $0x6,%rdx
               :  10fcee:	lea    0x1(%rdx),%rax
               :  10fcf2:	shl    $0x6,%rax
               :  10fcf6:	lea    (%rsi,%rax,1),%r14
               :  10fcfa:	mov    %r10,0x40(%rsp)
               :  10fcff:	mov    %r14,%r10
               :  10fd02:	mov    0x90(%rsp),%r14
               :  10fd0a:	mov    %rdx,0x88(%rsp)
               :  10fd12:	mov    %rax,0x60(%rsp)
               :  10fd17:	mov    %rcx,%rdx
               :  10fd1a:	mov    %rsi,%rax
               :  10fd1d:	nopl   (%rax)
               :  10fd20:	vmovdqu64 (%rdx),%ymm2
               :  10fd26:	add    $0x40,%rax
               :  10fd2a:	vmovdqu64 %ymm2,-0x40(%rax)
               :  10fd31:	vmovdqu64 0x20(%rdx),%ymm1
               :  10fd38:	add    $0x40,%rdx
               :  10fd3c:	vmovdqu64 %ymm1,-0x20(%rax)
               :  10fd43:	cmp    %r10,%rax
               :  10fd46:	jne    10fd20 <mlx5_tx_burst_mtiv_ts+0x2f60>
               :  10fd48:	mov    0x88(%rsp),%rdx
               :  10fd50:	mov    %r14,0x90(%rsp)
               :  10fd58:	neg    %rdx
               :  10fd5b:	shl    $0x6,%rdx
               :  10fd5f:	lea    -0x80(%r11,%rdx,1),%r14
               :  10fd64:	mov    0x60(%rsp),%rdx
               :  10fd69:	add    %r14,%rax
               :  10fd6c:	add    %r14,%rdx
               :  10fd6f:	add    %rcx,%rdx
               :  10fd72:	vmovdqu64 (%rdx),%ymm1
               :  10fd78:	mov    0x40(%rsp),%r10
               :  10fd7d:	vmovdqu64 %ymm1,(%rax)
               :  10fd83:	vmovdqu64 0x20(%rdx),%ymm2
               :  10fd8a:	vmovdqu64 %ymm2,0x20(%rax)
               :  10fd91:	jmpq   10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  10fd96:	lea    0x5c(%r12),%rdx
               :  10fd9b:	mov    $0x1,%eax
               :  10fda0:	cmp    0x64(%r12),%rdi
               :  10fda5:	jae    10f59f <mlx5_tx_burst_mtiv_ts+0x27df>
               :  10fdab:	jmpq   10f6a0 <mlx5_tx_burst_mtiv_ts+0x28e0>
               :  10fdb0:	vmovdqu64 %ymm0,(%r14)
               :  10fdb6:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm7
               :  10fdbe:	vmovdqu64 %ymm7,-0x20(%r14,%rdi,1)
               :  10fdc6:	jmpq   10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  10fdcb:	vmovdqu64 (%r9),%ymm5
               :  10fdd1:	vmovdqu64 %ymm5,(%rax)
               :  10fdd7:	vmovdqu64 -0x20(%r9,%rdx,1),%ymm6
               :  10fddf:	vmovdqu64 %ymm6,-0x20(%rax,%rdx,1)
               :  10fde7:	jmpq   10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  10fdec:	vmovdqu64 (%r9),%xmm2
               :  10fdf2:	vmovups %xmm2,(%rbx)
               :  10fdf6:	vmovdqu64 0x10(%r9),%xmm5
               :  10fdfd:	vmovups %xmm5,0x10(%rbx)
               :  10fe02:	vmovdqu64 -0x10(%r9,%rax,1),%xmm6
               :  10fe0a:	vmovups %xmm6,-0x10(%rbx,%rax,1)
               :  10fe10:	jmpq   10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  10fe15:	vmovdqu64 (%r9),%xmm0
               :  10fe1b:	vmovups %xmm0,(%rax)
               :  10fe1f:	vmovdqu64 0x10(%r9),%xmm1
               :  10fe26:	vmovups %xmm1,0x10(%rax)
               :  10fe2b:	vmovdqu64 -0x10(%r9,%rdx,1),%xmm7
               :  10fe33:	vmovups %xmm7,-0x10(%rax,%rdx,1)
               :  10fe39:	jmpq   10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  10fe3e:	vmovdqu64 (%r9),%ymm3
               :  10fe44:	vmovdqu64 %ymm3,(%rbx)
               :  10fe4a:	vmovdqu64 -0x20(%r9,%rax,1),%ymm4
               :  10fe52:	vmovdqu64 %ymm4,-0x20(%rbx,%rax,1)
               :  10fe5a:	jmpq   10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  10fe5f:	vmovdqu64 (%rax),%xmm0
               :  10fe65:	vmovups %xmm0,(%r15)
               :  10fe6a:	vmovdqu64 0x10(%rax),%xmm1
               :  10fe71:	vmovups %xmm1,0x10(%r15)
               :  10fe77:	vmovdqu64 -0x10(%rax,%rdi,1),%xmm3
               :  10fe7f:	vmovups %xmm3,-0x10(%r15,%rdi,1)
               :  10fe86:	jmpq   10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  10fe8b:	vmovdqu64 (%rax),%ymm0
               :  10fe91:	vmovdqu64 %ymm0,(%r15)
               :  10fe97:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm1
               :  10fe9f:	vmovdqu64 %ymm1,-0x20(%r15,%rdi,1)
               :  10fea7:	jmpq   10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  10feac:	movslq 0x2a0(%r8),%rax
               :  10feb3:	sub    %rax,%r9
               :  10feb6:	movzwl %si,%eax
               :  10feb9:	shl    $0x8,%eax
               :  10febc:	or     $0x200000f,%eax
               :  10fec1:	bswap  %eax
               :  10fec3:	mov    %eax,(%rdi)
               :  10fec5:	mov    0x28(%r12),%eax
               :  10feca:	or     $0x3,%eax
               :  10fecd:	bswap  %eax
               :  10fecf:	lea    0x10(%rdi),%r8
               :  10fed3:	and    $0x4,%r10d
               :  10fed7:	mov    %eax,0x4(%rdi)
               :  10feda:	movq   $0x4000000,0x8(%rdi)
               :  10fee2:	movq   $0x5000000,0x10(%rdi)
               :  10feea:	movq   $0x0,0x8(%r8)
               :  10fef2:	je     10ff23 <mlx5_tx_burst_mtiv_ts+0x3163>
               :  10fef4:	mov    %r9,%rax
               :  10fef7:	shr    $0x9,%rax
               :  10fefb:	movabs $0x44b82fa09b5a53,%rdx
               :  10ff05:	mul    %rdx
               :  10ff08:	mov    %rdx,%rax
               :  10ff0b:	shr    $0xb,%rax
               :  10ff0f:	mov    %rax,%rdx
               :  10ff12:	imul   $0x3b9aca00,%rax,%rax
               :  10ff19:	shl    $0x20,%rdx
               :  10ff1d:	sub    %rax,%r9
               :  10ff20:	or     %rdx,%r9
               :  10ff23:	bswap  %r9
               :  10ff26:	mov    0x130(%r12),%rax
               :  10ff2e:	mov    %r9,0x10(%r8)
               :  10ff32:	mov    %rax,0x18(%r8)
               :  10ff36:	jmpq   10e02e <mlx5_tx_burst_mtiv_ts+0x126e>
               :  10ff3b:	lock incq 0x3a8(%rdi)
               :  10ff43:	mov    0x18(%r10),%rcx
               :  10ff47:	jmpq   10d98e <mlx5_tx_burst_mtiv_ts+0xbce>
               :  10ff4c:	lea    0xc0(%r14),%rcx
               :  10ff53:	mov    $0x6,%eax
               :  10ff58:	jmpq   10ea8a <mlx5_tx_burst_mtiv_ts+0x1cca>
               :  10ff5d:	nopl   (%rax)
               :  10ff60:	mov    %rbx,%rax
               :  10ff63:	mov    %r15w,0xde(%rsp)
               :  10ff6c:	vzeroupper 
               :  10ff6f:	jmpq   10d5ab <mlx5_tx_burst_mtiv_ts+0x7eb>
               :  10ff74:	nopl   0x0(%rax)
               :  10ff78:	movabs $0x2000000000000000,%rdi
               :  10ff82:	test   %rdi,%rax
               :  10ff85:	je     1117f9 <mlx5_tx_burst_mtiv_ts+0x4a39>
               :  10ff8b:	mov    0x44(%r8),%edx
               :  10ff8f:	test   %edx,%edx
               :  10ff91:	jne    1117a9 <mlx5_tx_burst_mtiv_ts+0x49e9>
               :  10ff97:	testb  $0x1,0xc4(%r8)
               :  10ff9f:	jne    115900 <mlx5_tx_burst_mtiv_ts+0x8b40>
               :  10ffa5:	mov    0x50(%r13),%rax
               :  10ffa9:	movzwl 0x10(%rax),%esi
               :  10ffad:	lea    0x10(%rax),%rdx
               :  10ffb1:	cmp    $0x1,%si
               :  10ffb5:	jne    114690 <mlx5_tx_burst_mtiv_ts+0x78d0>
               :  10ffbb:	movw   $0x0,0x10(%rax)
               :  10ffc1:	mov    0x50(%r13),%rax
               :  10ffc5:	mov    0x0(%r13),%rdi
               :  10ffc9:	mov    0x8(%rax),%rsi
               :  10ffcd:	mov    %r8,0x90(%rsp)
               :  10ffd5:	vzeroupper 
               :  10ffd8:	callq  *(%rax)
               :  10ffda:	mov    0x90(%rsp),%r8
               :  10ffe2:	cmpl   $0x1,0x44(%r8)
               :  10ffe7:	sbb    %rax,%rax
               :  10ffea:	and    $0xffffffffffefe000,%rax
               :  10fff0:	lea    0x1020c0(%r8,%rax,1),%rax
               :  10fff8:	movzwl 0x2(%rax),%edx
               :  10fffc:	movzwl (%rax),%eax
               :  10ffff:	mov    %dx,0x58(%r13)
               :  110004:	sub    $0xffffffffffffff80,%rdx
               :  110008:	lea    0x0(%r13,%rdx,1),%rsi
               :  11000d:	add    -0x8(%r13),%rdx
               :  110011:	mov    %rdx,0x8(%r13)
               :  110015:	cmp    $0x80,%ax
               :  110019:	mov    $0x80,%edx
               :  11001e:	mov    %ax,0x36(%r13)
               :  110023:	cmova  %edx,%eax
               :  110026:	mov    0x38(%r13),%r8
               :  11002a:	mov    %ax,0x10(%r13)
               :  11002f:	xor    %eax,%eax
               :  110031:	mov    %rsi,0x0(%r13)
               :  110035:	mov    %ax,0x28(%r13)
               :  11003a:	movq   $0x0,0x18(%r13)
               :  110042:	mov    0x44(%r8),%edx
               :  110046:	jmpq   10f8f4 <mlx5_tx_burst_mtiv_ts+0x2b34>
               :  11004b:	nopl   0x0(%rax,%rax,1)
               :  110050:	lock incq 0x3a0(%r8)
               :  110058:	movzwl 0xa(%r14),%esi
               :  11005d:	mov    0x18(%r10),%rcx
               :  110061:	mov    0xf8(%r14),%rbx
               :  110068:	movzwl 0x10(%r14),%edi
               :  11006d:	mov    0x28(%r14),%r8d
               :  110071:	jmpq   10d198 <mlx5_tx_burst_mtiv_ts+0x3d8>
               :  110076:	lock incq 0x3a8(%r8)
               :  11007e:	jmp    110058 <mlx5_tx_burst_mtiv_ts+0x3298>
               :  110080:	movslq 0x58(%r8),%rax
               :  110084:	mov    %r9,0x88(%rsp)
               :  11008c:	cmp    $0xf,%eax
               :  11008f:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  110095:	mov    0x20(%rsp),%rsi
               :  11009a:	shl    $0x7,%rax
               :  11009e:	add    0x85e6b(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1100a5:	mov    $0x1,%edx
               :  1100aa:	mov    %r8,%rdi
               :  1100ad:	callq  *0x70(%rax)
               :  1100b0:	mov    0x88(%rsp),%r9
               :  1100b8:	jmpq   10ed1c <mlx5_tx_burst_mtiv_ts+0x1f5c>
               :  1100bd:	nopl   (%rax)
               :  1100c0:	mov    %r15,0xc0(%rsp)
               :  1100c8:	incq   0x160(%r14)
               :  1100cf:	movzwl %r9w,%ebx
               :  1100d3:	mov    %r9d,%r15d
               :  1100d6:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  1100db:	vmovdqu64 (%rax),%xmm4
               :  1100e1:	vmovups %xmm4,(%r14)
               :  1100e6:	vmovdqu64 0x10(%rax),%xmm6
               :  1100ed:	vmovups %xmm6,0x10(%r14)
               :  1100f3:	vmovdqu64 -0x10(%rax,%rdi,1),%xmm0
               :  1100fb:	vmovups %xmm0,-0x10(%r14,%rdi,1)
               :  110102:	jmpq   10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  110107:	vmovdqu64 (%rax),%ymm1
               :  11010d:	vmovdqu64 %ymm1,(%r14)
               :  110113:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm3
               :  11011b:	vmovdqu64 %ymm3,-0x20(%r14,%rdi,1)
               :  110123:	jmpq   10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  110128:	vzeroupper 
               :  11012b:	jmpq   10ec65 <mlx5_tx_burst_mtiv_ts+0x1ea5>
               :  110130:	vmovdqu64 (%r9),%xmm3
               :  110136:	vmovups %xmm3,(%rbx)
               :  11013a:	vmovdqu64 -0x10(%r9,%rax,1),%xmm4
               :  110142:	vmovups %xmm4,-0x10(%rbx,%rax,1)
               :  110148:	jmpq   10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  11014d:	vmovdqu64 (%r9),%xmm7
               :  110153:	vmovups %xmm7,(%rax)
               :  110157:	vmovdqu64 -0x10(%r9,%rdx,1),%xmm2
               :  11015f:	vmovups %xmm2,-0x10(%rax,%rdx,1)
               :  110165:	jmpq   10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  11016a:	vmovdqu64 (%r9),%xmm6
               :  110170:	vmovups %xmm6,(%rbx)
               :  110174:	vmovdqu64 -0x10(%r9,%rax,1),%xmm0
               :  11017c:	vmovups %xmm0,-0x10(%rbx,%rax,1)
               :  110182:	jmpq   10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  110187:	vmovdqu64 (%r9),%xmm5
               :  11018d:	vmovups %xmm5,(%rax)
               :  110191:	vmovdqu64 -0x10(%r9,%rdx,1),%xmm1
               :  110199:	vmovups %xmm1,-0x10(%rax,%rdx,1)
               :  11019f:	jmpq   10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  1101a4:	mov    0x0(%r13),%rax
               :  1101a8:	movzwl 0x58(%r13),%edx
               :  1101ad:	add    $0xffffffffffffff80,%rax
               :  1101b1:	sub    %rdx,%rax
               :  1101b4:	movzwl 0x12(%rax),%edx
               :  1101b8:	lea    0x12(%rax),%rcx
               :  1101bc:	cmp    $0x1,%dx
               :  1101c0:	jne    113429 <mlx5_tx_burst_mtiv_ts+0x6669>
               :  1101c6:	movw   $0x0,0x12(%rax)
               :  1101cc:	mov    $0x1,%edx
               :  1101d1:	mov    %r9,0x80(%rsp)
               :  1101d9:	mov    %r8,0x40(%rsp)
               :  1101de:	movq   $0x0,0x40(%rax)
               :  1101e6:	mov    %dx,0x14(%rax)
               :  1101ea:	movw   $0x1,0x12(%rax)
               :  1101f0:	mov    %rax,0x168(%rsp)
               :  1101f8:	mov    0x38(%rax),%rdi
               :  1101fc:	mov    %rdi,0x88(%rsp)
               :  110204:	vzeroupper 
               :  110207:	data16 lea 0x85c39(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  11020f:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  110217:	mov    0x88(%rsp),%rdi
               :  11021f:	mov    0x40(%rsp),%r8
               :  110224:	mov    0x44(%rdi),%ecx
               :  110227:	mov    0x80(%rsp),%r9
               :  11022f:	test   %ecx,%ecx
               :  110231:	mov    (%rax),%eax
               :  110233:	je     113d6e <mlx5_tx_burst_mtiv_ts+0x6fae>
               :  110239:	cmp    $0x7f,%eax
               :  11023c:	ja     113d6e <mlx5_tx_burst_mtiv_ts+0x6fae>
               :  110242:	mov    %eax,%ecx
               :  110244:	imul   $0x2040,%rcx,%rcx
               :  11024b:	add    0x60(%rdi),%rcx
               :  11024f:	je     113d6e <mlx5_tx_burst_mtiv_ts+0x6fae>
               :  110255:	mov    0x4(%rcx),%eax
               :  110258:	test   %eax,%eax
               :  11025a:	je     113d6e <mlx5_tx_burst_mtiv_ts+0x6fae>
               :  110260:	mov    0x8(%rcx),%edx
               :  110263:	lea    0x1(%rdx),%r10d
               :  110267:	cmp    %r10d,%eax
               :  11026a:	jb     11373d <mlx5_tx_burst_mtiv_ts+0x697d>
               :  110270:	mov    %r10d,0x8(%rcx)
               :  110274:	lea    0x40(%rcx,%rdx,8),%rsi
               :  110279:	mov    0x168(%rsp),%rax
               :  110281:	mov    %rax,(%rsi)
               :  110284:	jmpq   10e315 <mlx5_tx_burst_mtiv_ts+0x1555>
               :  110289:	mov    0x2(%rax),%rdx
               :  11028d:	mov    %rdx,0x20(%r15)
               :  110291:	movzwl 0xa(%rax),%edx
               :  110295:	mov    %dx,0x28(%r15)
               :  11029a:	movzwl 0x2a(%r10),%edx
               :  11029f:	or     $0x81000000,%edx
               :  1102a5:	bswap  %edx
               :  1102a7:	mov    %edx,0x2a(%r15)
               :  1102ab:	movzwl 0xc(%rax),%edx
               :  1102af:	lea    0xe(%rax),%rcx
               :  1102b3:	mov    %dx,0x2e(%r15)
               :  1102b8:	jmpq   10db14 <mlx5_tx_burst_mtiv_ts+0xd54>
               :  1102bd:	mov    0x60(%rsp),%rbx
               :  1102c2:	mov    0x88(%rsp),%edi
               :  1102c9:	mov    0xf8(%rbx),%rbx
               :  1102d0:	add    %rax,%r9
               :  1102d3:	jmpq   10d709 <mlx5_tx_burst_mtiv_ts+0x949>
               :  1102d8:	mov    0x60(%rsp),%rax
               :  1102dd:	mov    0x88(%rsp),%ebx
               :  1102e4:	mov    0xf8(%rax),%rax
               :  1102eb:	add    %rdx,%r9
               :  1102ee:	jmpq   10d315 <mlx5_tx_burst_mtiv_ts+0x555>
               :  1102f3:	mov    0x88(%rsp),%rdi
               :  1102fb:	mov    %r8,0xc8(%rsp)
               :  110303:	mov    %ecx,0xd0(%rsp)
               :  11030a:	vzeroupper 
               :  11030d:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :  110312:	mov    (%rbx),%rdi
               :  110315:	mov    0xc8(%rsp),%r8
               :  11031d:	mov    0xd0(%rsp),%ecx
               :  110324:	jmpq   10f199 <mlx5_tx_burst_mtiv_ts+0x23d9>
               :  110329:	mov    0xf8(%r14),%rax
               :  110330:	jmpq   10d2e2 <mlx5_tx_burst_mtiv_ts+0x522>
               :  110335:	test   %r10,0x138(%r12)
               :  11033d:	je     110469 <mlx5_tx_burst_mtiv_ts+0x36a9>
               :  110343:	cmpw   $0xf,0xdc(%rsp)
               :  11034c:	jbe    10ef70 <mlx5_tx_burst_mtiv_ts+0x21b0>
               :  110352:	movzwl 0xa(%r12),%ecx
               :  110358:	movzwl 0x10(%r12),%esi
               :  11035e:	mov    0x148(%r12),%rdi
               :  110366:	and    %ecx,%esi
               :  110368:	movslq 0x140(%r12),%rax
               :  110370:	movzwl %si,%esi
               :  110373:	movzbl 0x20(%r12),%r9d
               :  110379:	shl    $0x6,%rsi
               :  11037d:	mov    0x0(%r13,%rax,1),%rax
               :  110382:	add    0xf8(%r12),%rsi
               :  11038a:	lea    0x370(%rdi),%r8
               :  110391:	lea    0x378(%rdi),%rdx
               :  110398:	test   $0x8,%r9b
               :  11039c:	jne    1139e8 <mlx5_tx_burst_mtiv_ts+0x6c28>
               :  1103a2:	nopw   0x0(%rax,%rax,1)
               :  1103a8:	mov    (%r8),%rcx
               :  1103ab:	mov    (%rdx),%r9
               :  1103ae:	mov    %rcx,%r10
               :  1103b1:	xor    %r9,%r10
               :  1103b4:	shl    $0x28,%r10
               :  1103b8:	jne    1103a8 <mlx5_tx_burst_mtiv_ts+0x35e8>
               :  1103ba:	movslq 0x2a0(%rdi),%rdx
               :  1103c1:	sub    %rdx,%rax
               :  1103c4:	sub    %r9,%rax
               :  1103c7:	movabs $0x7ffffffffffffffe,%rdx
               :  1103d1:	cmp    %rdx,%rax
               :  1103d4:	ja     11510f <mlx5_tx_burst_mtiv_ts+0x834f>
               :  1103da:	mov    0x298(%rdi),%r8d
               :  1103e1:	xor    %edx,%edx
               :  1103e3:	lea    -0x1(%rax,%r8,1),%rax
               :  1103e8:	div    %r8
               :  1103eb:	cmp    $0x7ffffe,%rax
               :  1103f1:	ja     1150fe <mlx5_tx_burst_mtiv_ts+0x833e>
               :  1103f7:	shl    $0x28,%rax
               :  1103fb:	lea    (%rax,%rcx,1),%rdx
               :  1103ff:	movzwl 0xa(%r12),%eax
               :  110405:	mov    %eax,%ecx
               :  110407:	shl    $0x8,%eax
               :  11040a:	or     $0xf,%eax
               :  11040d:	bswap  %eax
               :  11040f:	mov    %eax,(%rsi)
               :  110411:	mov    0x28(%r12),%eax
               :  110416:	or     $0x2,%eax
               :  110419:	bswap  %eax
               :  11041b:	mov    %eax,0x4(%rsi)
               :  11041e:	mov    %rdx,%rax
               :  110421:	movq   $0x4000000,0x8(%rsi)
               :  110429:	lea    0x10(%rsi),%rdi
               :  11042d:	shr    $0x28,%rax
               :  110431:	bswap  %eax
               :  110433:	mov    %eax,0x8(%rdi)
               :  110436:	mov    0x148(%r12),%rax
               :  11043e:	mov    0x2b8(%rax),%rax
               :  110445:	mov    0x8(%rax),%eax
               :  110448:	bswap  %eax
               :  11044a:	mov    %eax,0xc(%rdi)
               :  11044d:	movq   $0x0,0x10(%rsi)
               :  110455:	mov    0x18(%r13),%r10
               :  110459:	inc    %ecx
               :  11045b:	decw   0xdc(%rsp)
               :  110463:	mov    %cx,0xa(%r12)
               :  110469:	movzbl 0x48(%r13),%eax
               :  11046e:	movzbl 0x4a(%r13),%ecx
               :  110473:	mov    %eax,%edx
               :  110475:	movzwl 0x48(%r13),%eax
               :  11047a:	and    $0x7f,%edx
               :  11047d:	shr    $0x7,%ax
               :  110481:	bt     $0x39,%r10
               :  110486:	movzwl %ax,%eax
               :  110489:	jb     111ee9 <mlx5_tx_burst_mtiv_ts+0x5129>
               :  11048f:	add    %edx,%eax
               :  110491:	add    %ecx,%eax
               :  110493:	mov    %eax,0xa0(%rsp)
               :  11049a:	je     10e5d0 <mlx5_tx_burst_mtiv_ts+0x1810>
               :  1104a0:	movl   $0x0,0xd0(%rsp)
               :  1104ab:	movabs $0xffff000000,%rax
               :  1104b5:	test   %rax,0x48(%r13)
               :  1104b9:	je     10e5d0 <mlx5_tx_burst_mtiv_ts+0x1810>
               :  1104bf:	movabs $0x1e00000000000,%rax
               :  1104c9:	test   %rax,%r10
               :  1104cc:	je     1104f2 <mlx5_tx_burst_mtiv_ts+0x3732>
               :  1104ce:	movzbl 0x4e(%r13),%eax
               :  1104d3:	mov    $0x8,%ebx
               :  1104d8:	shr    %al
               :  1104da:	movzbl %al,%eax
               :  1104dd:	shrx   %ebx,0x4c(%r13),%edx
               :  1104e3:	and    $0x1ff,%edx
               :  1104e9:	add    %edx,%eax
               :  1104eb:	add    %eax,0xa0(%rsp)
               :  1104f2:	mov    0xa0(%rsp),%ebx
               :  1104f9:	lea    -0x13(%rbx),%eax
               :  1104fc:	cmp    $0xad,%eax
               :  110501:	ja     10e5d0 <mlx5_tx_burst_mtiv_ts+0x1810>
               :  110507:	mov    0x24(%r13),%esi
               :  11050b:	mov    0xd0(%rsp),%eax
               :  110512:	lea    (%rsi,%rax,1),%ecx
               :  110515:	cmp    %ecx,%ebx
               :  110517:	ja     10e5d0 <mlx5_tx_burst_mtiv_ts+0x1810>
               :  11051d:	movzwl 0x14(%r13),%edx
               :  110522:	lea    0xd(%rbx),%eax
               :  110525:	shr    $0x4,%eax
               :  110528:	add    %edx,%eax
               :  11052a:	mov    %dx,0x90(%rsp)
               :  110532:	lea    0x2(%rax),%edi
               :  110535:	movzwl 0xdc(%rsp),%edx
               :  11053d:	add    $0x5,%eax
               :  110540:	shr    $0x2,%eax
               :  110543:	cmp    %eax,%edx
               :  110545:	jb     10ef70 <mlx5_tx_burst_mtiv_ts+0x21b0>
               :  11054b:	cmp    $0x3c,%edi
               :  11054e:	ja     10e5d0 <mlx5_tx_burst_mtiv_ts+0x1810>
               :  110554:	movzwl 0x4b(%r13),%edi
               :  110559:	xor    %edx,%edx
               :  11055b:	lea    -0x1(%rsi,%rdi,1),%eax
               :  11055f:	add    0xd0(%rsp),%eax
               :  110566:	sub    %ebx,%eax
               :  110568:	div    %edi
               :  11056a:	lea    -0x1(%rax),%edx
               :  11056d:	mov    %rdx,%rax
               :  110570:	imul   %ebx,%eax
               :  110573:	add    %rdx,0x150(%r12)
               :  11057b:	movzwl 0x10(%r12),%edx
               :  110581:	add    %ecx,%eax
               :  110583:	add    %rax,0x158(%r12)
               :  11058b:	movzwl 0xa(%r12),%eax
               :  110591:	mov    0xf8(%r12),%rbx
               :  110599:	and    %eax,%edx
               :  11059b:	movzwl %dx,%edx
               :  11059e:	shl    $0x6,%rdx
               :  1105a2:	add    %rdx,%rbx
               :  1105a5:	shl    $0x8,%eax
               :  1105a8:	mov    %rbx,0xc0(%rsp)
               :  1105b0:	or     $0xe,%eax
               :  1105b3:	bswap  %eax
               :  1105b5:	mov    %eax,(%rbx)
               :  1105b7:	mov    0x28(%r12),%eax
               :  1105bc:	bswap  %eax
               :  1105be:	mov    %eax,0x4(%rbx)
               :  1105c1:	bswap  %edi
               :  1105c3:	mov    0x85a0e(%rip),%rdx        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :  1105ca:	mov    %edi,0x14(%rbx)
               :  1105cd:	movq   $0x4000000,0x8(%rbx)
               :  1105d5:	movl   $0x0,0x10(%rbx)
               :  1105dc:	xor    %eax,%eax
               :  1105de:	test   %r10,(%rdx)
               :  1105e1:	je     1105f4 <mlx5_tx_burst_mtiv_ts+0x3834>
               :  1105e3:	mov    0x85966(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :  1105ea:	movslq (%rax),%rax
               :  1105ed:	mov    0x0(%r13,%rax,1),%eax
               :  1105f2:	bswap  %eax
               :  1105f4:	mov    0xc0(%rsp),%rbx
               :  1105fc:	mov    0xd0(%rsp),%r8d
               :  110604:	mov    %eax,0x18(%rbx)
               :  110607:	movzwl 0x28(%r13),%edx
               :  11060c:	add    $0x1e,%rbx
               :  110610:	test   %r8d,%r8d
               :  110613:	jne    112c8b <mlx5_tx_burst_mtiv_ts+0x5ecb>
               :  110619:	mov    0xa0(%rsp),%ecx
               :  110620:	xor    %r11d,%r11d
               :  110623:	mov    0x100(%r12),%rax
               :  11062b:	mov    %rbx,0x38(%rsp)
               :  110630:	sub    %rbx,%rax
               :  110633:	cmp    %eax,%ecx
               :  110635:	cmovb  %ecx,%eax
               :  110638:	mov    %r12,0x28(%rsp)
               :  11063d:	mov    %eax,0x80(%rsp)
               :  110644:	mov    %rbx,%r15
               :  110647:	mov    0xa0(%rsp),%ebx
               :  11064e:	mov    0xd0(%rsp),%edi
               :  110655:	mov    %ebx,%eax
               :  110657:	sub    %edi,%eax
               :  110659:	cmp    %edi,%ebx
               :  11065b:	mov    $0x0,%ebx
               :  110660:	cmovbe %ebx,%eax
               :  110663:	mov    0x80(%rsp),%ebx
               :  11066a:	mov    %eax,0x30(%rsp)
               :  11066e:	lea    0x120(%rsp),%rax
               :  110676:	mov    %rax,0x20(%rsp)
               :  11067b:	xor    %r12d,%r12d
               :  11067e:	xchg   %ax,%ax
               :  110680:	cmp    %dx,%r11w
               :  110684:	jae    110828 <mlx5_tx_burst_mtiv_ts+0x3a68>
               :  11068a:	movzwl 0x10(%r13),%eax
               :  11068f:	movzwl %r11w,%ecx
               :  110693:	add    %rcx,%rax
               :  110696:	movzwl %r11w,%ecx
               :  11069a:	sub    %ecx,%edx
               :  11069c:	add    0x0(%r13),%rax
               :  1106a0:	mov    %edx,%ecx
               :  1106a2:	cmp    %ebx,%edx
               :  1106a4:	mov    %rax,%rdx
               :  1106a7:	cmova  %ebx,%ecx
               :  1106aa:	or     %r15,%rdx
               :  1106ad:	and    $0x1f,%edx
               :  1106b0:	mov    %ecx,%esi
               :  1106b2:	jne    11076b <mlx5_tx_burst_mtiv_ts+0x39ab>
               :  1106b8:	cmp    $0xf,%ecx
               :  1106bb:	jbe    111459 <mlx5_tx_burst_mtiv_ts+0x4699>
               :  1106c1:	cmp    $0x20,%ecx
               :  1106c4:	jbe    112be1 <mlx5_tx_burst_mtiv_ts+0x5e21>
               :  1106ca:	cmp    $0x40,%rsi
               :  1106ce:	jbe    113261 <mlx5_tx_burst_mtiv_ts+0x64a1>
               :  1106d4:	lea    -0x40(%rsi),%r8
               :  1106d8:	shr    $0x6,%r8
               :  1106dc:	lea    0x1(%r8),%r9
               :  1106e0:	shl    $0x6,%r9
               :  1106e4:	lea    (%rax,%r9,1),%rdi
               :  1106e8:	mov    %r15,%rdx
               :  1106eb:	nopl   0x0(%rax,%rax,1)
               :  1106f0:	vmovdqu64 (%rax),%ymm1
               :  1106f6:	add    $0x40,%rax
               :  1106fa:	vmovdqu64 %ymm1,(%rdx)
               :  110700:	vmovdqu64 -0x20(%rax),%ymm2
               :  110707:	add    $0x40,%rdx
               :  11070b:	vmovdqu64 %ymm2,-0x20(%rdx)
               :  110712:	cmp    %rdi,%rax
               :  110715:	jne    1106f0 <mlx5_tx_burst_mtiv_ts+0x3930>
               :  110717:	mov    %r8,%rdx
               :  11071a:	neg    %rdx
               :  11071d:	shl    $0x6,%rdx
               :  110721:	lea    -0x80(%rsi,%rdx,1),%rdx
               :  110726:	add    %rdx,%rax
               :  110729:	vmovdqu64 (%rax),%ymm2
               :  11072f:	add    %r9,%rdx
               :  110732:	add    %r15,%rdx
               :  110735:	vmovdqu64 %ymm2,(%rdx)
               :  11073b:	vmovdqu64 0x20(%rax),%ymm3
               :  110742:	vmovdqu64 %ymm3,0x20(%rdx)
               :  110749:	nopl   0x0(%rax)
               :  110750:	movzwl 0x28(%r13),%edx
               :  110755:	add    %ecx,%r12d
               :  110758:	add    %ecx,%r11d
               :  11075b:	sub    %ecx,%ebx
               :  11075d:	je     113593 <mlx5_tx_burst_mtiv_ts+0x67d3>
               :  110763:	add    %rsi,%r15
               :  110766:	jmpq   110680 <mlx5_tx_burst_mtiv_ts+0x38c0>
               :  11076b:	cmp    $0xf,%ecx
               :  11076e:	jbe    111459 <mlx5_tx_burst_mtiv_ts+0x4699>
               :  110774:	cmp    $0x20,%ecx
               :  110777:	jbe    112c00 <mlx5_tx_burst_mtiv_ts+0x5e40>
               :  11077d:	cmp    $0x30,%rsi
               :  110781:	jbe    1132ca <mlx5_tx_burst_mtiv_ts+0x650a>
               :  110787:	vmovdqu64 (%rax),%ymm0
               :  11078d:	cmp    $0x40,%rsi
               :  110791:	jbe    113578 <mlx5_tx_burst_mtiv_ts+0x67b8>
               :  110797:	cmp    $0x100,%rsi
               :  11079e:	ja     11469f <mlx5_tx_burst_mtiv_ts+0x78df>
               :  1107a4:	cmp    $0x7f,%rsi
               :  1107a8:	jbe    114736 <mlx5_tx_burst_mtiv_ts+0x7976>
               :  1107ae:	vmovdqu64 %ymm0,(%r15)
               :  1107b4:	vmovdqu64 0x20(%rax),%ymm2
               :  1107bb:	lea    -0x80(%rsi),%rdi
               :  1107bf:	vmovdqu64 %ymm2,0x20(%r15)
               :  1107c6:	vmovdqu64 0x40(%rax),%ymm3
               :  1107cd:	lea    0x80(%r15),%rdx
               :  1107d4:	vmovdqu64 %ymm3,0x40(%r15)
               :  1107db:	vmovdqu64 0x60(%rax),%ymm4
               :  1107e2:	sub    $0xffffffffffffff80,%rax
               :  1107e6:	vmovdqu64 %ymm4,0x60(%r15)
               :  1107ed:	cmp    $0x3f,%rdi
               :  1107f1:	ja     1153e3 <mlx5_tx_burst_mtiv_ts+0x8623>
               :  1107f7:	cmp    $0x20,%rdi
               :  1107fb:	jbe    113950 <mlx5_tx_burst_mtiv_ts+0x6b90>
               :  110801:	vmovdqu64 (%rax),%ymm6
               :  110807:	vmovdqu64 %ymm6,(%rdx)
               :  11080d:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm7
               :  110815:	vmovdqu64 %ymm7,-0x20(%rdx,%rdi,1)
               :  11081d:	jmpq   110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  110822:	nopw   0x0(%rax,%rax,1)
               :  110828:	mov    0x40(%r13),%r14
               :  11082c:	movzwl 0x12(%r13),%eax
               :  110831:	lea    0x12(%r13),%rdx
               :  110835:	cmp    $0x1,%ax
               :  110839:	jne    1136e9 <mlx5_tx_burst_mtiv_ts+0x6929>
               :  11083f:	mov    0x18(%r13),%rax
               :  110843:	movabs $0x6000000000000000,%rdi
               :  11084d:	mov    0x38(%r13),%r8
               :  110851:	test   %rdi,%rax
               :  110854:	je     1116b5 <mlx5_tx_burst_mtiv_ts+0x48f5>
               :  11085a:	movabs $0x2000000000000000,%rdi
               :  110864:	test   %rdi,%rax
               :  110867:	je     11318f <mlx5_tx_burst_mtiv_ts+0x63cf>
               :  11086d:	mov    0x44(%r8),%edx
               :  110871:	test   %edx,%edx
               :  110873:	jne    11166e <mlx5_tx_burst_mtiv_ts+0x48ae>
               :  110879:	testb  $0x1,0xc4(%r8)
               :  110881:	jne    1164dc <mlx5_tx_burst_mtiv_ts+0x971c>
               :  110887:	mov    0x50(%r13),%rdx
               :  11088b:	movzwl 0x10(%rdx),%ecx
               :  11088f:	lea    0x10(%rdx),%rax
               :  110893:	cmp    $0x1,%cx
               :  110897:	jne    115869 <mlx5_tx_burst_mtiv_ts+0x8aa9>
               :  11089d:	movw   $0x0,0x10(%rdx)
               :  1108a3:	mov    0x50(%r13),%rax
               :  1108a7:	mov    0x0(%r13),%rdi
               :  1108ab:	mov    0x8(%rax),%rsi
               :  1108af:	mov    %r8,0x88(%rsp)
               :  1108b7:	vzeroupper 
               :  1108ba:	callq  *(%rax)
               :  1108bc:	mov    0x88(%rsp),%r8
               :  1108c4:	cmpl   $0x1,0x44(%r8)
               :  1108c9:	sbb    %rax,%rax
               :  1108cc:	and    $0xffffffffffefe000,%rax
               :  1108d2:	lea    0x1020c0(%r8,%rax,1),%rax
               :  1108da:	movzwl 0x2(%rax),%edx
               :  1108de:	movzwl (%rax),%eax
               :  1108e1:	mov    %dx,0x58(%r13)
               :  1108e6:	sub    $0xffffffffffffff80,%rdx
               :  1108ea:	lea    0x0(%r13,%rdx,1),%rcx
               :  1108ef:	add    -0x8(%r13),%rdx
               :  1108f3:	mov    %rdx,0x8(%r13)
               :  1108f7:	cmp    $0x80,%ax
               :  1108fb:	mov    $0x80,%edx
               :  110900:	mov    %ax,0x36(%r13)
               :  110905:	cmova  %edx,%eax
               :  110908:	mov    0x38(%r13),%r8
               :  11090c:	mov    %ax,0x10(%r13)
               :  110911:	xor    %eax,%eax
               :  110913:	mov    %rcx,0x0(%r13)
               :  110917:	mov    %ax,0x28(%r13)
               :  11091c:	movq   $0x0,0x18(%r13)
               :  110924:	mov    0x44(%r8),%edx
               :  110928:	cmpq   $0x0,0x40(%r13)
               :  11092d:	je     110937 <mlx5_tx_burst_mtiv_ts+0x3b77>
               :  11092f:	movq   $0x0,0x40(%r13)
               :  110937:	cmpw   $0x1,0x14(%r13)
               :  11093d:	je     110949 <mlx5_tx_burst_mtiv_ts+0x3b89>
               :  11093f:	mov    $0x1,%eax
               :  110944:	mov    %ax,0x14(%r13)
               :  110949:	mov    %edx,0x40(%rsp)
               :  11094d:	mov    %r8,0x88(%rsp)
               :  110955:	mov    %r13,0x120(%rsp)
               :  11095d:	data16 lea 0x854e3(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  110965:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  11096d:	mov    0x40(%rsp),%edx
               :  110971:	mov    0x88(%rsp),%r8
               :  110979:	test   %edx,%edx
               :  11097b:	mov    (%rax),%eax
               :  11097d:	je     113105 <mlx5_tx_burst_mtiv_ts+0x6345>
               :  110983:	cmp    $0x7f,%eax
               :  110986:	ja     113105 <mlx5_tx_burst_mtiv_ts+0x6345>
               :  11098c:	mov    %eax,%r13d
               :  11098f:	imul   $0x2040,%r13,%r13
               :  110996:	add    0x60(%r8),%r13
               :  11099a:	je     113105 <mlx5_tx_burst_mtiv_ts+0x6345>
               :  1109a0:	mov    0x4(%r13),%eax
               :  1109a4:	test   %eax,%eax
               :  1109a6:	je     113105 <mlx5_tx_burst_mtiv_ts+0x6345>
               :  1109ac:	mov    0x8(%r13),%edx
               :  1109b0:	lea    0x1(%rdx),%ecx
               :  1109b3:	cmp    %ecx,%eax
               :  1109b5:	jb     112993 <mlx5_tx_burst_mtiv_ts+0x5bd3>
               :  1109bb:	mov    %ecx,0x8(%r13)
               :  1109bf:	lea    0x40(%r13,%rdx,8),%rsi
               :  1109c4:	mov    0x120(%rsp),%rax
               :  1109cc:	mov    %rax,(%rsi)
               :  1109cf:	mov    0x18(%r14),%rdx
               :  1109d3:	lea    0x86ba6(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :  1109da:	decw   0x90(%rsp)
               :  1109e2:	test   %rdx,(%rax)
               :  1109e5:	je     1126f6 <mlx5_tx_burst_mtiv_ts+0x5936>
               :  1109eb:	mov    0x30(%rsp),%eax
               :  1109ef:	cmp    %r12d,%eax
               :  1109f2:	jbe    1122ed <mlx5_tx_burst_mtiv_ts+0x552d>
               :  1109f8:	movzwl 0x28(%r14),%ecx
               :  1109fd:	sub    %r12d,%eax
               :  110a00:	mov    %ecx,%edx
               :  110a02:	cmp    %ecx,%eax
               :  110a04:	ja     1130ea <mlx5_tx_burst_mtiv_ts+0x632a>
               :  110a0a:	cmp    %eax,%ebx
               :  110a0c:	cmova  %eax,%ebx
               :  110a0f:	mov    %r14,%r13
               :  110a12:	xor    %r11d,%r11d
               :  110a15:	jmpq   110680 <mlx5_tx_burst_mtiv_ts+0x38c0>
               :  110a1a:	mov    %r15,0xc0(%rsp)
               :  110a22:	movzwl %si,%ebx
               :  110a25:	mov    %esi,%r15d
               :  110a28:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  110a2d:	mov    %r15d,%r8d
               :  110a30:	mov    %r13,%r9
               :  110a33:	cmp    %dx,%cx
               :  110a36:	jb     10f01d <mlx5_tx_burst_mtiv_ts+0x225d>
               :  110a3c:	mov    0x40(%r13),%r9
               :  110a40:	movzwl 0x12(%r13),%eax
               :  110a45:	cmp    $0x1,%ax
               :  110a49:	jne    115436 <mlx5_tx_burst_mtiv_ts+0x8676>
               :  110a4f:	mov    0x18(%r13),%rax
               :  110a53:	movabs $0x6000000000000000,%rdi
               :  110a5d:	mov    0x38(%r13),%r12
               :  110a61:	test   %rdi,%rax
               :  110a64:	je     11309a <mlx5_tx_burst_mtiv_ts+0x62da>
               :  110a6a:	movabs $0x2000000000000000,%rdi
               :  110a74:	test   %rdi,%rax
               :  110a77:	je     114d0c <mlx5_tx_burst_mtiv_ts+0x7f4c>
               :  110a7d:	mov    0x44(%r12),%r14d
               :  110a82:	test   %r14d,%r14d
               :  110a85:	jne    113052 <mlx5_tx_burst_mtiv_ts+0x6292>
               :  110a8b:	testb  $0x1,0xc4(%r12)
               :  110a94:	jne    11697f <mlx5_tx_burst_mtiv_ts+0x9bbf>
               :  110a9a:	mov    0x50(%r13),%rdx
               :  110a9e:	movzwl 0x10(%rdx),%ecx
               :  110aa2:	lea    0x10(%rdx),%rax
               :  110aa6:	cmp    $0x1,%cx
               :  110aaa:	jne    11696d <mlx5_tx_burst_mtiv_ts+0x9bad>
               :  110ab0:	movw   $0x0,0x10(%rdx)
               :  110ab6:	mov    0x50(%r13),%rax
               :  110aba:	mov    0x0(%r13),%rdi
               :  110abe:	mov    0x8(%rax),%rsi
               :  110ac2:	mov    %r9,0x40(%rsp)
               :  110ac7:	mov    %r8d,0x88(%rsp)
               :  110acf:	vzeroupper 
               :  110ad2:	callq  *(%rax)
               :  110ad4:	mov    0x88(%rsp),%r8d
               :  110adc:	mov    0x40(%rsp),%r9
               :  110ae1:	cmpl   $0x1,0x44(%r12)
               :  110ae7:	sbb    %rax,%rax
               :  110aea:	and    $0xffffffffffefe000,%rax
               :  110af0:	lea    0x1020c0(%r12,%rax,1),%rax
               :  110af8:	movzwl 0x2(%rax),%edx
               :  110afc:	movzwl (%rax),%eax
               :  110aff:	mov    %dx,0x58(%r13)
               :  110b04:	sub    $0xffffffffffffff80,%rdx
               :  110b08:	lea    0x0(%r13,%rdx,1),%rcx
               :  110b0d:	add    -0x8(%r13),%rdx
               :  110b11:	mov    %rdx,0x8(%r13)
               :  110b15:	cmp    $0x80,%ax
               :  110b19:	mov    $0x80,%edx
               :  110b1e:	mov    %ax,0x36(%r13)
               :  110b23:	cmova  %edx,%eax
               :  110b26:	mov    0x38(%r13),%r12
               :  110b2a:	xor    %edi,%edi
               :  110b2c:	mov    %rcx,0x0(%r13)
               :  110b30:	mov    %ax,0x10(%r13)
               :  110b35:	mov    %di,0x28(%r13)
               :  110b3a:	movq   $0x0,0x18(%r13)
               :  110b42:	mov    0x44(%r12),%r14d
               :  110b47:	cmpq   $0x0,0x40(%r13)
               :  110b4c:	je     110b56 <mlx5_tx_burst_mtiv_ts+0x3d96>
               :  110b4e:	movq   $0x0,0x40(%r13)
               :  110b56:	cmpw   $0x1,0x14(%r13)
               :  110b5c:	je     110b68 <mlx5_tx_burst_mtiv_ts+0x3da8>
               :  110b5e:	mov    $0x1,%esi
               :  110b63:	mov    %si,0x14(%r13)
               :  110b68:	mov    %r9,0x40(%rsp)
               :  110b6d:	mov    %r8d,0x88(%rsp)
               :  110b75:	mov    %r13,0xf8(%rsp)
               :  110b7d:	data16 lea 0x852c3(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  110b85:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  110b8d:	mov    0x88(%rsp),%r8d
               :  110b95:	mov    0x40(%rsp),%r9
               :  110b9a:	mov    (%rax),%eax
               :  110b9c:	cmp    $0x7f,%eax
               :  110b9f:	ja     114242 <mlx5_tx_burst_mtiv_ts+0x7482>
               :  110ba5:	test   %r14d,%r14d
               :  110ba8:	je     114242 <mlx5_tx_burst_mtiv_ts+0x7482>
               :  110bae:	mov    %eax,%r13d
               :  110bb1:	imul   $0x2040,%r13,%r13
               :  110bb8:	add    0x60(%r12),%r13
               :  110bbd:	je     114242 <mlx5_tx_burst_mtiv_ts+0x7482>
               :  110bc3:	mov    0x4(%r13),%ecx
               :  110bc7:	test   %ecx,%ecx
               :  110bc9:	je     114242 <mlx5_tx_burst_mtiv_ts+0x7482>
               :  110bcf:	mov    0x8(%r13),%edx
               :  110bd3:	lea    0x1(%rdx),%eax
               :  110bd6:	cmp    %eax,%ecx
               :  110bd8:	jb     113db5 <mlx5_tx_burst_mtiv_ts+0x6ff5>
               :  110bde:	mov    %eax,0x8(%r13)
               :  110be2:	lea    0x40(%r13,%rdx,8),%r14
               :  110be7:	mov    0xf8(%rsp),%rax
               :  110bef:	mov    %rax,(%r14)
               :  110bf2:	dec    %ebx
               :  110bf4:	xor    %ecx,%ecx
               :  110bf6:	jmpq   10f01d <mlx5_tx_burst_mtiv_ts+0x225d>
               :  110bfb:	movslq 0x58(%r8),%rax
               :  110bff:	lea    0x40(%r13),%rsi
               :  110c03:	cmp    $0xf,%eax
               :  110c06:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  110c0c:	shl    $0x7,%rax
               :  110c10:	add    0x852f9(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  110c17:	mov    %r8,%rdi
               :  110c1a:	mov    %rsi,0x90(%rsp)
               :  110c22:	callq  *0x70(%rax)
               :  110c25:	movl   $0x1,0x8(%r13)
               :  110c2d:	mov    0x90(%rsp),%rsi
               :  110c35:	jmpq   10f996 <mlx5_tx_burst_mtiv_ts+0x2bd6>
               :  110c3a:	test   %rax,%rax
               :  110c3d:	je     110d6a <mlx5_tx_burst_mtiv_ts+0x3faa>
               :  110c43:	cmpw   $0xf,0xdc(%rsp)
               :  110c4c:	jbe    10ef70 <mlx5_tx_burst_mtiv_ts+0x21b0>
               :  110c52:	movzwl 0xa(%r12),%ecx
               :  110c58:	movzwl 0x10(%r12),%esi
               :  110c5e:	mov    0x148(%r12),%rdi
               :  110c66:	and    %ecx,%esi
               :  110c68:	movslq 0x140(%r12),%rax
               :  110c70:	movzwl %si,%esi
               :  110c73:	movzbl 0x20(%r12),%r9d
               :  110c79:	shl    $0x6,%rsi
               :  110c7d:	mov    0x0(%r13,%rax,1),%rax
               :  110c82:	add    0xf8(%r12),%rsi
               :  110c8a:	lea    0x370(%rdi),%r8
               :  110c91:	lea    0x378(%rdi),%rdx
               :  110c98:	test   $0x8,%r9b
               :  110c9c:	jne    113b13 <mlx5_tx_burst_mtiv_ts+0x6d53>
               :  110ca2:	nopw   0x0(%rax,%rax,1)
               :  110ca8:	mov    (%r8),%rcx
               :  110cab:	mov    (%rdx),%r9
               :  110cae:	mov    %rcx,%r10
               :  110cb1:	xor    %r9,%r10
               :  110cb4:	shl    $0x28,%r10
               :  110cb8:	jne    110ca8 <mlx5_tx_burst_mtiv_ts+0x3ee8>
               :  110cba:	movslq 0x2a0(%rdi),%rdx
               :  110cc1:	sub    %rdx,%rax
               :  110cc4:	sub    %r9,%rax
               :  110cc7:	movabs $0x7ffffffffffffffe,%rdx
               :  110cd1:	cmp    %rdx,%rax
               :  110cd4:	ja     11553d <mlx5_tx_burst_mtiv_ts+0x877d>
               :  110cda:	mov    0x298(%rdi),%r8d
               :  110ce1:	xor    %edx,%edx
               :  110ce3:	lea    -0x1(%rax,%r8,1),%rax
               :  110ce8:	div    %r8
               :  110ceb:	cmp    $0x7ffffe,%rax
               :  110cf1:	ja     11552b <mlx5_tx_burst_mtiv_ts+0x876b>
               :  110cf7:	shl    $0x28,%rax
               :  110cfb:	lea    (%rax,%rcx,1),%rdx
               :  110cff:	movzwl 0xa(%r12),%eax
               :  110d05:	mov    %eax,%ecx
               :  110d07:	shl    $0x8,%eax
               :  110d0a:	or     $0xf,%eax
               :  110d0d:	bswap  %eax
               :  110d0f:	mov    %eax,(%rsi)
               :  110d11:	mov    0x28(%r12),%eax
               :  110d16:	or     $0x2,%eax
               :  110d19:	bswap  %eax
               :  110d1b:	mov    %eax,0x4(%rsi)
               :  110d1e:	mov    %rdx,%rax
               :  110d21:	movq   $0x4000000,0x8(%rsi)
               :  110d29:	lea    0x10(%rsi),%rdi
               :  110d2d:	shr    $0x28,%rax
               :  110d31:	bswap  %eax
               :  110d33:	mov    %eax,0x8(%rdi)
               :  110d36:	mov    0x148(%r12),%rax
               :  110d3e:	mov    0x2b8(%rax),%rax
               :  110d45:	mov    0x8(%rax),%eax
               :  110d48:	bswap  %eax
               :  110d4a:	mov    %eax,0xc(%rdi)
               :  110d4d:	movq   $0x0,0x10(%rsi)
               :  110d55:	movzwl 0x14(%r13),%ebx
               :  110d5a:	inc    %ecx
               :  110d5c:	decw   0xdc(%rsp)
               :  110d64:	mov    %cx,0xa(%r12)
               :  110d6a:	movzwl %bx,%r15d
               :  110d6e:	lea    0x2(%r15),%eax
               :  110d72:	mov    %eax,0x90(%rsp)
               :  110d79:	movzwl 0xdc(%rsp),%edx
               :  110d81:	lea    0x5(%r15),%eax
               :  110d85:	shr    $0x2,%eax
               :  110d88:	cmp    %eax,%edx
               :  110d8a:	jb     10ef70 <mlx5_tx_burst_mtiv_ts+0x21b0>
               :  110d90:	lea    0x2(%r15),%ebx
               :  110d94:	cmp    $0x3c,%ebx
               :  110d97:	ja     10e5d0 <mlx5_tx_burst_mtiv_ts+0x1810>
               :  110d9d:	mov    0x24(%r13),%eax
               :  110da1:	cmp    $0x12,%eax
               :  110da4:	jbe    10e5d0 <mlx5_tx_burst_mtiv_ts+0x1810>
               :  110daa:	mov    0x18(%r13),%rcx
               :  110dae:	add    0x158(%r12),%rax
               :  110db6:	movabs $0x200000000000000,%rdx
               :  110dc0:	and    %rcx,%rdx
               :  110dc3:	lea    0x4(%rax),%rsi
               :  110dc7:	cmovne %rsi,%rax
               :  110dcb:	movzwl 0x10(%r12),%esi
               :  110dd1:	mov    %rax,0x158(%r12)
               :  110dd9:	movzwl 0xa(%r12),%eax
               :  110ddf:	mov    0xf8(%r12),%rdi
               :  110de7:	and    %eax,%esi
               :  110de9:	movzwl %si,%esi
               :  110dec:	shl    $0x6,%rsi
               :  110df0:	add    %rsi,%rdi
               :  110df3:	shl    $0x8,%eax
               :  110df6:	mov    %rdi,0xc0(%rsp)
               :  110dfe:	or     $0xa,%eax
               :  110e01:	bswap  %eax
               :  110e03:	mov    %eax,(%rdi)
               :  110e05:	mov    0x28(%r12),%eax
               :  110e0a:	or     %ebx,%eax
               :  110e0c:	bswap  %eax
               :  110e0e:	mov    0x851c3(%rip),%rsi        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :  110e15:	mov    %eax,0x4(%rdi)
               :  110e18:	movq   $0x4000000,0x8(%rdi)
               :  110e20:	movq   $0x0,0x10(%rdi)
               :  110e28:	xor    %eax,%eax
               :  110e2a:	test   %rcx,(%rsi)
               :  110e2d:	je     110e40 <mlx5_tx_burst_mtiv_ts+0x4080>
               :  110e2f:	mov    0x8511a(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :  110e36:	movslq (%rax),%rax
               :  110e39:	mov    0x0(%r13,%rax,1),%eax
               :  110e3e:	bswap  %eax
               :  110e40:	mov    0xc0(%rsp),%rbx
               :  110e48:	mov    %eax,0x18(%rbx)
               :  110e4b:	test   %rdx,%rdx
               :  110e4e:	je     1132f6 <mlx5_tx_burst_mtiv_ts+0x6536>
               :  110e54:	movzwl 0x2a(%r13),%eax
               :  110e59:	or     $0x80000000,%eax
               :  110e5e:	bswap  %eax
               :  110e60:	mov    %eax,0x1c(%rbx)
               :  110e63:	mov    %rbx,%rax
               :  110e66:	lea    0x20(%rax),%rcx
               :  110e6a:	dec    %r15d
               :  110e6d:	lea    0x38(%r12),%rax
               :  110e72:	lea    0x48(%r12),%r14
               :  110e77:	mov    %r15d,%r8d
               :  110e7a:	mov    %rax,0xa0(%rsp)
               :  110e82:	movzwl 0xc8(%rsp),%r15d
               :  110e8b:	mov    %rcx,%rbx
               :  110e8e:	mov    %r14,%r10
               :  110e91:	jmpq   110f43 <mlx5_tx_burst_mtiv_ts+0x4183>
               :  110e96:	nopw   %cs:0x0(%rax,%rax,1)
               :  110ea0:	mov    0x0(%r13),%rdx
               :  110ea4:	movzwl 0x10(%r13),%r14d
               :  110ea9:	add    %rdx,%r14
               :  110eac:	bswap  %eax
               :  110eae:	mov    %eax,(%rbx)
               :  110eb0:	mov    0x40(%r12),%edi
               :  110eb5:	mov    0x38(%r12),%rax
               :  110eba:	cmp    %edi,(%rax)
               :  110ebc:	jne    111bc8 <mlx5_tx_burst_mtiv_ts+0x4e08>
               :  110ec2:	movzwl 0x44(%r12),%eax
               :  110ec8:	mov    %r10,%rsi
               :  110ecb:	lea    (%rax,%rax,4),%rax
               :  110ecf:	lea    (%r10,%rax,4),%rax
               :  110ed3:	cmp    (%rax),%rdx
               :  110ed6:	jb     11114d <mlx5_tx_burst_mtiv_ts+0x438d>
               :  110edc:	cmp    0x8(%rax),%rdx
               :  110ee0:	jae    11114d <mlx5_tx_burst_mtiv_ts+0x438d>
               :  110ee6:	mov    0x10(%rax),%eax
               :  110ee9:	cmp    $0xffffffff,%eax
               :  110eec:	je     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  110ef2:	mov    %eax,0x4(%rbx)
               :  110ef5:	bswap  %r14
               :  110ef8:	movzwl (%r12),%eax
               :  110efd:	mov    %r14,0x8(%rbx)
               :  110f01:	lea    0x1(%rax),%edx
               :  110f04:	and    0x8(%r12),%ax
               :  110f0a:	movzwl %ax,%eax
               :  110f0d:	mov    %dx,(%r12)
               :  110f12:	dec    %r15d
               :  110f15:	mov    %r13,0x188(%r12,%rax,8)
               :  110f1d:	test   %r8d,%r8d
               :  110f20:	je     11289a <mlx5_tx_burst_mtiv_ts+0x5ada>
               :  110f26:	add    $0x10,%rbx
               :  110f2a:	cmp    %rbx,0x100(%r12)
               :  110f32:	ja     110f3c <mlx5_tx_burst_mtiv_ts+0x417c>
               :  110f34:	mov    0xf8(%r12),%rbx
               :  110f3c:	mov    0x40(%r13),%r13
               :  110f40:	dec    %r8d
               :  110f43:	movzwl 0x28(%r13),%eax
               :  110f48:	test   %ax,%ax
               :  110f4b:	jne    110ea0 <mlx5_tx_burst_mtiv_ts+0x40e0>
               :  110f51:	mov    0xc0(%rsp),%rax
               :  110f59:	decl   0x90(%rsp)
               :  110f60:	subl   $0x1000000,0x4(%rax)
               :  110f67:	mov    0x40(%r13),%rax
               :  110f6b:	lea    0x12(%r13),%r14
               :  110f6f:	mov    %rax,0xd0(%rsp)
               :  110f77:	movzwl 0x12(%r13),%eax
               :  110f7c:	cmp    $0x1,%ax
               :  110f80:	jne    114b50 <mlx5_tx_burst_mtiv_ts+0x7d90>
               :  110f86:	mov    0x18(%r13),%rax
               :  110f8a:	movabs $0x6000000000000000,%rdi
               :  110f94:	mov    0x38(%r13),%r14
               :  110f98:	test   %rdi,%rax
               :  110f9b:	je     11288e <mlx5_tx_burst_mtiv_ts+0x5ace>
               :  110fa1:	movabs $0x2000000000000000,%rdi
               :  110fab:	test   %rdi,%rax
               :  110fae:	je     114137 <mlx5_tx_burst_mtiv_ts+0x7377>
               :  110fb4:	mov    0x44(%r14),%edx
               :  110fb8:	test   %edx,%edx
               :  110fba:	jne    112847 <mlx5_tx_burst_mtiv_ts+0x5a87>
               :  110fc0:	testb  $0x1,0xc4(%r14)
               :  110fc8:	jne    1165e0 <mlx5_tx_burst_mtiv_ts+0x9820>
               :  110fce:	mov    0x50(%r13),%rdx
               :  110fd2:	movzwl 0x10(%rdx),%esi
               :  110fd6:	lea    0x10(%rdx),%rax
               :  110fda:	cmp    $0x1,%si
               :  110fde:	jne    1165c7 <mlx5_tx_burst_mtiv_ts+0x9807>
               :  110fe4:	movw   $0x0,0x10(%rdx)
               :  110fea:	mov    0x50(%r13),%rax
               :  110fee:	mov    0x0(%r13),%rdi
               :  110ff2:	mov    0x8(%rax),%rsi
               :  110ff6:	mov    %r10,0x88(%rsp)
               :  110ffe:	mov    %r8d,0xc8(%rsp)
               :  111006:	vzeroupper 
               :  111009:	callq  *(%rax)
               :  11100b:	mov    0xc8(%rsp),%r8d
               :  111013:	mov    0x88(%rsp),%r10
               :  11101b:	cmpl   $0x1,0x44(%r14)
               :  111020:	sbb    %rax,%rax
               :  111023:	and    $0xffffffffffefe000,%rax
               :  111029:	lea    0x1020c0(%r14,%rax,1),%rax
               :  111031:	movzwl 0x2(%rax),%edx
               :  111035:	movzwl (%rax),%eax
               :  111038:	mov    %dx,0x58(%r13)
               :  11103d:	sub    $0xffffffffffffff80,%rdx
               :  111041:	lea    0x0(%r13,%rdx,1),%rsi
               :  111046:	add    -0x8(%r13),%rdx
               :  11104a:	mov    %rdx,0x8(%r13)
               :  11104e:	cmp    $0x80,%ax
               :  111052:	mov    $0x80,%edx
               :  111057:	mov    %ax,0x36(%r13)
               :  11105c:	cmova  %edx,%eax
               :  11105f:	mov    0x38(%r13),%r14
               :  111063:	xor    %r9d,%r9d
               :  111066:	mov    %rsi,0x0(%r13)
               :  11106a:	mov    %ax,0x10(%r13)
               :  11106f:	mov    %r9w,0x28(%r13)
               :  111074:	movq   $0x0,0x18(%r13)
               :  11107c:	mov    0x44(%r14),%edx
               :  111080:	cmpq   $0x0,0x40(%r13)
               :  111085:	je     11108f <mlx5_tx_burst_mtiv_ts+0x42cf>
               :  111087:	movq   $0x0,0x40(%r13)
               :  11108f:	cmpw   $0x1,0x14(%r13)
               :  111095:	je     1110a1 <mlx5_tx_burst_mtiv_ts+0x42e1>
               :  111097:	mov    $0x1,%edi
               :  11109c:	mov    %di,0x14(%r13)
               :  1110a1:	mov    %r10,0x88(%rsp)
               :  1110a9:	mov    %r8d,0xc8(%rsp)
               :  1110b1:	mov    %edx,0x40(%rsp)
               :  1110b5:	mov    %r13,0x110(%rsp)
               :  1110bd:	data16 lea 0x84d83(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  1110c5:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  1110cd:	mov    0xc8(%rsp),%r8d
               :  1110d5:	mov    0x88(%rsp),%r10
               :  1110dd:	mov    (%rax),%eax
               :  1110df:	cmp    $0x7f,%eax
               :  1110e2:	ja     113a83 <mlx5_tx_burst_mtiv_ts+0x6cc3>
               :  1110e8:	mov    0x40(%rsp),%edx
               :  1110ec:	test   %edx,%edx
               :  1110ee:	je     113a83 <mlx5_tx_burst_mtiv_ts+0x6cc3>
               :  1110f4:	mov    %eax,%r13d
               :  1110f7:	imul   $0x2040,%r13,%r13
               :  1110fe:	add    0x60(%r14),%r13
               :  111102:	je     113a83 <mlx5_tx_burst_mtiv_ts+0x6cc3>
               :  111108:	mov    0x4(%r13),%eax
               :  11110c:	test   %eax,%eax
               :  11110e:	je     113a83 <mlx5_tx_burst_mtiv_ts+0x6cc3>
               :  111114:	mov    0x8(%r13),%edx
               :  111118:	lea    0x1(%rdx),%edi
               :  11111b:	cmp    %edi,%eax
               :  11111d:	jb     113446 <mlx5_tx_burst_mtiv_ts+0x6686>
               :  111123:	mov    %edi,0x8(%r13)
               :  111127:	lea    0x40(%r13,%rdx,8),%rsi
               :  11112c:	mov    0x110(%rsp),%rax
               :  111134:	mov    %rax,(%rsi)
               :  111137:	test   %r8d,%r8d
               :  11113a:	je     11289a <mlx5_tx_burst_mtiv_ts+0x5ada>
               :  111140:	mov    0xd0(%rsp),%r13
               :  111148:	jmpq   110f40 <mlx5_tx_burst_mtiv_ts+0x4180>
               :  11114d:	mov    0x48(%r12),%rax
               :  111152:	test   %rax,%rax
               :  111155:	je     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  11115b:	cmp    %rax,%rdx
               :  11115e:	jb     11116b <mlx5_tx_burst_mtiv_ts+0x43ab>
               :  111160:	cmp    0x50(%r12),%rdx
               :  111165:	jb     1130f5 <mlx5_tx_burst_mtiv_ts+0x6335>
               :  11116b:	mov    0x5c(%r12),%rax
               :  111170:	test   %rax,%rax
               :  111173:	je     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  111179:	cmp    %rax,%rdx
               :  11117c:	jb     111193 <mlx5_tx_burst_mtiv_ts+0x43d3>
               :  11117e:	lea    0x5c(%r12),%rsi
               :  111183:	mov    $0x1,%eax
               :  111188:	cmp    0x64(%r12),%rdx
               :  11118d:	jb     1130f7 <mlx5_tx_burst_mtiv_ts+0x6337>
               :  111193:	mov    0x70(%r12),%rax
               :  111198:	test   %rax,%rax
               :  11119b:	je     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  1111a1:	cmp    %rax,%rdx
               :  1111a4:	jb     1111bb <mlx5_tx_burst_mtiv_ts+0x43fb>
               :  1111a6:	lea    0x70(%r12),%rsi
               :  1111ab:	mov    $0x2,%eax
               :  1111b0:	cmp    0x78(%r12),%rdx
               :  1111b5:	jb     1130f7 <mlx5_tx_burst_mtiv_ts+0x6337>
               :  1111bb:	mov    0x84(%r12),%rax
               :  1111c3:	test   %rax,%rax
               :  1111c6:	je     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  1111cc:	cmp    %rax,%rdx
               :  1111cf:	jb     1111ec <mlx5_tx_burst_mtiv_ts+0x442c>
               :  1111d1:	lea    0x84(%r12),%rsi
               :  1111d9:	mov    $0x3,%eax
               :  1111de:	cmp    0x8c(%r12),%rdx
               :  1111e6:	jb     1130f7 <mlx5_tx_burst_mtiv_ts+0x6337>
               :  1111ec:	mov    0x98(%r12),%rax
               :  1111f4:	test   %rax,%rax
               :  1111f7:	je     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  1111fd:	cmp    %rax,%rdx
               :  111200:	jb     11121d <mlx5_tx_burst_mtiv_ts+0x445d>
               :  111202:	lea    0x98(%r12),%rsi
               :  11120a:	mov    $0x4,%eax
               :  11120f:	cmp    0xa0(%r12),%rdx
               :  111217:	jb     1130f7 <mlx5_tx_burst_mtiv_ts+0x6337>
               :  11121d:	mov    0xac(%r12),%rax
               :  111225:	test   %rax,%rax
               :  111228:	je     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  11122a:	cmp    %rax,%rdx
               :  11122d:	jb     11124a <mlx5_tx_burst_mtiv_ts+0x448a>
               :  11122f:	lea    0xac(%r12),%rsi
               :  111237:	mov    $0x5,%eax
               :  11123c:	cmp    0xb4(%r12),%rdx
               :  111244:	jb     1130f7 <mlx5_tx_burst_mtiv_ts+0x6337>
               :  11124a:	mov    0xc0(%r12),%rax
               :  111252:	test   %rax,%rax
               :  111255:	je     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  111257:	cmp    %rax,%rdx
               :  11125a:	jb     111277 <mlx5_tx_burst_mtiv_ts+0x44b7>
               :  11125c:	lea    0xc0(%r12),%rsi
               :  111264:	mov    $0x6,%eax
               :  111269:	cmp    0xc8(%r12),%rdx
               :  111271:	jb     1130f7 <mlx5_tx_burst_mtiv_ts+0x6337>
               :  111277:	mov    0xd4(%r12),%rax
               :  11127f:	test   %rax,%rax
               :  111282:	je     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  111284:	cmp    %rax,%rdx
               :  111287:	jb     1112a4 <mlx5_tx_burst_mtiv_ts+0x44e4>
               :  111289:	lea    0xd4(%r12),%rsi
               :  111291:	mov    $0x7,%eax
               :  111296:	cmp    0xdc(%r12),%rdx
               :  11129e:	jb     1130f7 <mlx5_tx_burst_mtiv_ts+0x6337>
               :  1112a4:	mov    0xa0(%rsp),%rdi
               :  1112ac:	mov    %r13,%rsi
               :  1112af:	mov    %r10,0xc8(%rsp)
               :  1112b7:	mov    %r8d,0xd0(%rsp)
               :  1112bf:	vzeroupper 
               :  1112c2:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :  1112c7:	mov    0xd0(%rsp),%r8d
               :  1112cf:	mov    0xc8(%rsp),%r10
               :  1112d7:	jmpq   110ef2 <mlx5_tx_burst_mtiv_ts+0x4132>
               :  1112dc:	vmovdqu64 (%rax),%xmm3
               :  1112e2:	vmovups %xmm3,(%r15)
               :  1112e7:	vmovdqu64 -0x10(%rax,%rdi,1),%xmm4
               :  1112ef:	vmovups %xmm4,-0x10(%r15,%rdi,1)
               :  1112f6:	jmpq   10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  1112fb:	vmovdqu64 (%rax),%xmm6
               :  111301:	vmovups %xmm6,(%r15)
               :  111306:	vmovdqu64 -0x10(%rax,%rdi,1),%xmm0
               :  11130e:	vmovups %xmm0,-0x10(%r15,%rdi,1)
               :  111315:	jmpq   10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  11131a:	lock decw (%rcx)
               :  11131e:	jne    10ed1c <mlx5_tx_burst_mtiv_ts+0x1f5c>
               :  111324:	mov    0x18(%r13),%rax
               :  111328:	movabs $0x6000000000000000,%rdi
               :  111332:	test   %rdi,%rax
               :  111335:	je     1113a8 <mlx5_tx_burst_mtiv_ts+0x45e8>
               :  111337:	mov    0x38(%r13),%rdi
               :  11133b:	movabs $0x2000000000000000,%rsi
               :  111345:	mov    %rdi,0x88(%rsp)
               :  11134d:	test   %rsi,%rax
               :  111350:	je     113874 <mlx5_tx_burst_mtiv_ts+0x6ab4>
               :  111356:	mov    0x44(%rdi),%r11d
               :  11135a:	test   %r11d,%r11d
               :  11135d:	jne    11379c <mlx5_tx_burst_mtiv_ts+0x69dc>
               :  111363:	testb  $0x1,0xc4(%rdi)
               :  11136a:	je     1137a9 <mlx5_tx_burst_mtiv_ts+0x69e9>
               :  111370:	mov    $0xc0,%eax
               :  111375:	mov    0x88(%rsp),%rdi
               :  11137d:	testb  $0x1,0x4(%rdi,%rax,1)
               :  111382:	je     1113a8 <mlx5_tx_burst_mtiv_ts+0x45e8>
               :  111384:	movabs $0x2000000000000000,%rdi
               :  11138e:	mov    %rdi,0x18(%r13)
               :  111392:	mov    0x50(%r13),%rax
               :  111396:	movzwl 0x10(%rax),%esi
               :  11139a:	lea    0x10(%rax),%rdx
               :  11139e:	cmp    $0x1,%si
               :  1113a2:	jne    115e36 <mlx5_tx_burst_mtiv_ts+0x9076>
               :  1113a8:	vzeroupper 
               :  1113ab:	cmpq   $0x0,0x40(%r13)
               :  1113b0:	je     1113ba <mlx5_tx_burst_mtiv_ts+0x45fa>
               :  1113b2:	movq   $0x0,0x40(%r13)
               :  1113ba:	cmpw   $0x1,0x14(%r13)
               :  1113c0:	je     1113cd <mlx5_tx_burst_mtiv_ts+0x460d>
               :  1113c2:	mov    $0x1,%r8d
               :  1113c8:	mov    %r8w,0x14(%r13)
               :  1113cd:	movw   $0x1,(%rcx)
               :  1113d2:	mov    0x38(%r13),%r8
               :  1113d6:	mov    0x44(%r8),%edx
               :  1113da:	jmpq   10ec86 <mlx5_tx_burst_mtiv_ts+0x1ec6>
               :  1113df:	movslq 0x58(%r14),%rax
               :  1113e3:	mov    %r8,0x90(%rsp)
               :  1113eb:	mov    %ecx,0xa0(%rsp)
               :  1113f2:	lea    0x40(%rbx),%rsi
               :  1113f6:	cmp    $0xf,%eax
               :  1113f9:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1113ff:	shl    $0x7,%rax
               :  111403:	add    0x84b06(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11140a:	mov    %r14,%rdi
               :  11140d:	mov    %rsi,0xc8(%rsp)
               :  111415:	callq  *0x70(%rax)
               :  111418:	movl   $0x1,0x8(%rbx)
               :  11141f:	mov    0x90(%rsp),%r8
               :  111427:	mov    0xa0(%rsp),%ecx
               :  11142e:	mov    0xc8(%rsp),%rsi
               :  111436:	jmpq   10f3b2 <mlx5_tx_burst_mtiv_ts+0x25f2>
               :  11143b:	test   %rdx,%rdx
               :  11143e:	je     10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  111444:	vmovdqu64 -0x20(%rax,%rdx,1),%ymm6
               :  11144c:	vmovdqu64 %ymm6,-0x20(%r8,%rdx,1)
               :  111454:	jmpq   10e250 <mlx5_tx_burst_mtiv_ts+0x1490>
               :  111459:	mov    %r15,%rdx
               :  11145c:	test   $0x8,%cl
               :  11145f:	je     11146f <mlx5_tx_burst_mtiv_ts+0x46af>
               :  111461:	mov    (%rax),%rdx
               :  111464:	add    $0x8,%rax
               :  111468:	mov    %rdx,(%r15)
               :  11146b:	lea    0x8(%r15),%rdx
               :  11146f:	test   $0x4,%cl
               :  111472:	je     111481 <mlx5_tx_burst_mtiv_ts+0x46c1>
               :  111474:	mov    (%rax),%edi
               :  111476:	add    $0x4,%rdx
               :  11147a:	mov    %edi,-0x4(%rdx)
               :  11147d:	add    $0x4,%rax
               :  111481:	test   $0x2,%cl
               :  111484:	je     111495 <mlx5_tx_burst_mtiv_ts+0x46d5>
               :  111486:	movzwl (%rax),%edi
               :  111489:	add    $0x2,%rdx
               :  11148d:	mov    %di,-0x2(%rdx)
               :  111491:	add    $0x2,%rax
               :  111495:	test   $0x1,%cl
               :  111498:	je     110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  11149e:	movzbl (%rax),%eax
               :  1114a1:	mov    %al,(%rdx)
               :  1114a3:	jmpq   110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  1114a8:	testb  $0x8,0x98(%rsp)
               :  1114b0:	je     1126eb <mlx5_tx_burst_mtiv_ts+0x592b>
               :  1114b6:	mov    (%rcx),%rax
               :  1114b9:	lea    0x8(%rsi),%rdx
               :  1114bd:	mov    %rax,(%rsi)
               :  1114c0:	lea    0x8(%rcx),%rax
               :  1114c4:	testb  $0x4,0x98(%rsp)
               :  1114cc:	je     1114dd <mlx5_tx_burst_mtiv_ts+0x471d>
               :  1114ce:	mov    (%rax),%r14d
               :  1114d1:	add    $0x4,%rdx
               :  1114d5:	mov    %r14d,-0x4(%rdx)
               :  1114d9:	add    $0x4,%rax
               :  1114dd:	testb  $0x2,0x98(%rsp)
               :  1114e5:	je     1114f8 <mlx5_tx_burst_mtiv_ts+0x4738>
               :  1114e7:	movzwl (%rax),%r14d
               :  1114eb:	add    $0x2,%rdx
               :  1114ef:	mov    %r14w,-0x2(%rdx)
               :  1114f4:	add    $0x2,%rax
               :  1114f8:	testb  $0x1,0x98(%rsp)
               :  111500:	je     10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  111506:	movzbl (%rax),%eax
               :  111509:	mov    %al,(%rdx)
               :  11150b:	jmpq   10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  111510:	mov    0x48(%r14),%rsi
               :  111514:	test   %rsi,%rsi
               :  111517:	je     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  11151d:	cmp    %rsi,%rax
               :  111520:	jb     11152c <mlx5_tx_burst_mtiv_ts+0x476c>
               :  111522:	cmp    0x50(%r14),%rax
               :  111526:	jb     1156e4 <mlx5_tx_burst_mtiv_ts+0x8924>
               :  11152c:	mov    0x5c(%r14),%rsi
               :  111530:	test   %rsi,%rsi
               :  111533:	je     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  111539:	cmp    %rsi,%rax
               :  11153c:	jb     111548 <mlx5_tx_burst_mtiv_ts+0x4788>
               :  11153e:	cmp    0x64(%r14),%rax
               :  111542:	jb     1156ce <mlx5_tx_burst_mtiv_ts+0x890e>
               :  111548:	mov    0x70(%r14),%rsi
               :  11154c:	test   %rsi,%rsi
               :  11154f:	je     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  111555:	cmp    %rsi,%rax
               :  111558:	jb     111564 <mlx5_tx_burst_mtiv_ts+0x47a4>
               :  11155a:	cmp    %rax,0x78(%r14)
               :  11155e:	ja     1156d9 <mlx5_tx_burst_mtiv_ts+0x8919>
               :  111564:	mov    0x84(%r14),%rsi
               :  11156b:	test   %rsi,%rsi
               :  11156e:	je     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  111574:	cmp    %rsi,%rax
               :  111577:	jb     111586 <mlx5_tx_burst_mtiv_ts+0x47c6>
               :  111579:	cmp    0x8c(%r14),%rax
               :  111580:	jb     11568a <mlx5_tx_burst_mtiv_ts+0x88ca>
               :  111586:	mov    0x98(%r14),%rsi
               :  11158d:	test   %rsi,%rsi
               :  111590:	je     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  111592:	cmp    %rsi,%rax
               :  111595:	jb     1115a4 <mlx5_tx_burst_mtiv_ts+0x47e4>
               :  111597:	cmp    0xa0(%r14),%rax
               :  11159e:	jb     1156a4 <mlx5_tx_burst_mtiv_ts+0x88e4>
               :  1115a4:	mov    0xac(%r14),%rsi
               :  1115ab:	test   %rsi,%rsi
               :  1115ae:	je     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  1115b0:	cmp    %rsi,%rax
               :  1115b3:	jb     1115c2 <mlx5_tx_burst_mtiv_ts+0x4802>
               :  1115b5:	cmp    0xb4(%r14),%rax
               :  1115bc:	jb     1156b2 <mlx5_tx_burst_mtiv_ts+0x88f2>
               :  1115c2:	mov    0xc0(%r14),%rsi
               :  1115c9:	test   %rsi,%rsi
               :  1115cc:	je     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  1115ce:	cmp    %rax,%rsi
               :  1115d1:	ja     1115e0 <mlx5_tx_burst_mtiv_ts+0x4820>
               :  1115d3:	cmp    0xc8(%r14),%rax
               :  1115da:	jb     1156c0 <mlx5_tx_burst_mtiv_ts+0x8900>
               :  1115e0:	mov    0xd4(%r14),%rsi
               :  1115e7:	cmp    %rsi,%rax
               :  1115ea:	jb     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  1115ec:	test   %rsi,%rsi
               :  1115ef:	je     1115fe <mlx5_tx_burst_mtiv_ts+0x483e>
               :  1115f1:	cmp    0xdc(%r14),%rax
               :  1115f8:	jb     1156e8 <mlx5_tx_burst_mtiv_ts+0x8928>
               :  1115fe:	mov    %r10,%rsi
               :  111601:	mov    %rcx,0x90(%rsp)
               :  111609:	mov    %rdx,0x98(%rsp)
               :  111611:	mov    %r10,0xc0(%rsp)
               :  111619:	vzeroupper 
               :  11161c:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :  111621:	mov    0xc0(%rsp),%r10
               :  111629:	mov    0x98(%rsp),%rdx
               :  111631:	mov    0x90(%rsp),%rcx
               :  111639:	jmpq   10dcaa <mlx5_tx_burst_mtiv_ts+0xeea>
               :  11163e:	movslq 0x58(%r8),%rax
               :  111642:	cmp    $0xf,%eax
               :  111645:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  11164b:	shl    $0x7,%rax
               :  11164f:	mov    0x80(%rsp),%rsi
               :  111657:	add    0x848b2(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11165e:	mov    $0x1,%edx
               :  111663:	mov    %r8,%rdi
               :  111666:	callq  *0x70(%rax)
               :  111669:	jmpq   10f9a1 <mlx5_tx_burst_mtiv_ts+0x2be1>
               :  11166e:	testb  $0x1,0x1020c4(%r8)
               :  111676:	je     110887 <mlx5_tx_burst_mtiv_ts+0x3ac7>
               :  11167c:	mov    $0x1020c0,%eax
               :  111681:	testb  $0x1,0x4(%r8,%rax,1)
               :  111687:	je     113282 <mlx5_tx_burst_mtiv_ts+0x64c2>
               :  11168d:	movabs $0x2000000000000000,%rdi
               :  111697:	mov    %rdi,0x18(%r13)
               :  11169b:	mov    0x50(%r13),%rax
               :  11169f:	movzwl 0x10(%rax),%ecx
               :  1116a3:	lea    0x10(%rax),%rdx
               :  1116a7:	cmp    $0x1,%cx
               :  1116ab:	jne    11584d <mlx5_tx_burst_mtiv_ts+0x8a8d>
               :  1116b1:	mov    0x38(%r13),%r8
               :  1116b5:	mov    0x44(%r8),%edx
               :  1116b9:	vzeroupper 
               :  1116bc:	jmpq   110928 <mlx5_tx_burst_mtiv_ts+0x3b68>
               :  1116c1:	movslq 0x58(%r14),%rax
               :  1116c5:	mov    %r8,0xa0(%rsp)
               :  1116cd:	mov    %ecx,0xc8(%rsp)
               :  1116d4:	cmp    $0xf,%eax
               :  1116d7:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1116dd:	shl    $0x7,%rax
               :  1116e1:	lea    0x108(%rsp),%rsi
               :  1116e9:	add    0x84820(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1116f0:	mov    $0x1,%edx
               :  1116f5:	mov    %r14,%rdi
               :  1116f8:	callq  *0x70(%rax)
               :  1116fb:	mov    0xa0(%rsp),%r8
               :  111703:	mov    0xc8(%rsp),%ecx
               :  11170a:	jmpq   10f3bd <mlx5_tx_burst_mtiv_ts+0x25fd>
               :  11170f:	mov    %r14,%rdx
               :  111712:	and    $0x1f,%edx
               :  111715:	je     1128ce <mlx5_tx_burst_mtiv_ts+0x5b0e>
               :  11171b:	mov    $0x20,%r8d
               :  111721:	sub    %rdx,%r8
               :  111724:	lea    -0x20(%rdi,%rdx,1),%r10
               :  111729:	vmovdqu64 %ymm0,(%r14)
               :  11172f:	add    %r8,%rax
               :  111732:	lea    (%r14,%r8,1),%r9
               :  111736:	lea    -0x80(%r10),%rdx
               :  11173a:	and    $0xffffffffffffff80,%rdx
               :  11173e:	lea    0x80(%rax,%rdx,1),%r11
               :  111746:	mov    %r9,%r8
               :  111749:	mov    %rax,%rdx
               :  11174c:	nopl   0x0(%rax)
               :  111750:	vmovdqu64 (%rdx),%ymm2
               :  111756:	vmovdqu64 0x20(%rdx),%ymm1
               :  11175d:	vmovdqu64 0x40(%rdx),%ymm0
               :  111764:	vmovdqu64 0x60(%rdx),%ymm3
               :  11176b:	sub    $0xffffffffffffff80,%rdx
               :  11176f:	vmovdqu64 %ymm3,0x60(%r8)
               :  111776:	vmovdqu64 %ymm2,(%r8)
               :  11177c:	vmovdqu64 %ymm1,0x20(%r8)
               :  111783:	vmovdqu64 %ymm0,0x40(%r8)
               :  11178a:	sub    $0xffffffffffffff80,%r8
               :  11178e:	cmp    %r11,%rdx
               :  111791:	jne    111750 <mlx5_tx_burst_mtiv_ts+0x4990>
               :  111793:	mov    %r10,%rdx
               :  111796:	and    $0xffffffffffffff80,%r10
               :  11179a:	and    $0x7f,%edx
               :  11179d:	add    %r10,%rax
               :  1117a0:	lea    (%r9,%r10,1),%r8
               :  1117a4:	jmpq   10eb82 <mlx5_tx_burst_mtiv_ts+0x1dc2>
               :  1117a9:	testb  $0x1,0x1020c4(%r8)
               :  1117b1:	je     10ffa5 <mlx5_tx_burst_mtiv_ts+0x31e5>
               :  1117b7:	mov    $0x1020c0,%eax
               :  1117bc:	testb  $0x1,0x4(%r8,%rax,1)
               :  1117c2:	je     1117f1 <mlx5_tx_burst_mtiv_ts+0x4a31>
               :  1117c4:	movabs $0x2000000000000000,%rdi
               :  1117ce:	mov    %rdi,0x18(%r13)
               :  1117d2:	mov    0x50(%r13),%rax
               :  1117d6:	movzwl 0x10(%rax),%esi
               :  1117da:	lea    0x10(%rax),%rdx
               :  1117de:	cmp    $0x1,%si
               :  1117e2:	jne    114677 <mlx5_tx_burst_mtiv_ts+0x78b7>
               :  1117e8:	mov    0x38(%r13),%r8
               :  1117ec:	jmpq   10f8ed <mlx5_tx_burst_mtiv_ts+0x2b2d>
               :  1117f1:	vzeroupper 
               :  1117f4:	jmpq   10f8f4 <mlx5_tx_burst_mtiv_ts+0x2b34>
               :  1117f9:	mov    0x0(%r13),%rax
               :  1117fd:	movzwl 0x58(%r13),%edx
               :  111802:	add    $0xffffffffffffff80,%rax
               :  111806:	sub    %rdx,%rax
               :  111809:	movzwl 0x12(%rax),%esi
               :  11180d:	lea    0x12(%rax),%rdx
               :  111811:	cmp    $0x1,%si
               :  111815:	jne    114490 <mlx5_tx_burst_mtiv_ts+0x76d0>
               :  11181b:	movw   $0x0,0x12(%rax)
               :  111821:	mov    $0x1,%edx
               :  111826:	mov    %r8,0x88(%rsp)
               :  11182e:	movq   $0x0,0x40(%rax)
               :  111836:	mov    %dx,0x14(%rax)
               :  11183a:	movw   $0x1,0x12(%rax)
               :  111840:	mov    %rax,0x150(%rsp)
               :  111848:	mov    0x38(%rax),%rdi
               :  11184c:	mov    %rdi,0x90(%rsp)
               :  111854:	vzeroupper 
               :  111857:	data16 lea 0x845e9(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  11185f:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  111867:	mov    0x90(%rsp),%rdi
               :  11186f:	mov    0x88(%rsp),%r8
               :  111877:	mov    0x44(%rdi),%ecx
               :  11187a:	test   %ecx,%ecx
               :  11187c:	mov    (%rax),%eax
               :  11187e:	je     1153ee <mlx5_tx_burst_mtiv_ts+0x862e>
               :  111884:	cmp    $0x7f,%eax
               :  111887:	ja     1153ee <mlx5_tx_burst_mtiv_ts+0x862e>
               :  11188d:	mov    %eax,%r9d
               :  111890:	imul   $0x2040,%r9,%r9
               :  111897:	add    0x60(%rdi),%r9
               :  11189b:	je     1153ee <mlx5_tx_burst_mtiv_ts+0x862e>
               :  1118a1:	mov    0x4(%r9),%esi
               :  1118a5:	test   %esi,%esi
               :  1118a7:	je     1153ee <mlx5_tx_burst_mtiv_ts+0x862e>
               :  1118ad:	mov    0x8(%r9),%edx
               :  1118b1:	lea    0x1(%rdx),%eax
               :  1118b4:	cmp    %eax,%esi
               :  1118b6:	jb     114845 <mlx5_tx_burst_mtiv_ts+0x7a85>
               :  1118bc:	mov    %eax,0x8(%r9)
               :  1118c0:	lea    0x40(%r9,%rdx,8),%rsi
               :  1118c5:	mov    0x150(%rsp),%rax
               :  1118cd:	mov    %rax,(%rsi)
               :  1118d0:	jmpq   10ffe2 <mlx5_tx_burst_mtiv_ts+0x3222>
               :  1118d5:	vmovdqu64 %ymm0,(%rbx)
               :  1118db:	vmovdqu64 -0x20(%r9,%rax,1),%ymm2
               :  1118e3:	vmovdqu64 %ymm2,-0x20(%rbx,%rax,1)
               :  1118eb:	jmpq   10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  1118f0:	mov    %r14,%r8
               :  1118f3:	mov    %rdi,%rdx
               :  1118f6:	vmovdqu64 %ymm0,(%r8)
               :  1118fc:	vmovdqu64 0x20(%rax),%ymm3
               :  111903:	sub    $0x40,%rdx
               :  111907:	vmovdqu64 %ymm3,0x20(%r8)
               :  11190e:	add    $0x40,%rax
               :  111912:	add    $0x40,%r8
               :  111916:	jmpq   10eb8c <mlx5_tx_burst_mtiv_ts+0x1dcc>
               :  11191b:	vmovdqu64 %ymm0,(%rax)
               :  111921:	vmovdqu64 -0x20(%r9,%rdx,1),%ymm7
               :  111929:	vmovdqu64 %ymm7,-0x20(%rax,%rdx,1)
               :  111931:	jmpq   10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  111936:	test   %r14,%r14
               :  111939:	je     10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  11193f:	vmovdqu64 -0x20(%rsi,%r14,1),%ymm2
               :  111947:	vmovdqa64 %ymm2,0x40(%rsp)
               :  11194f:	vmovdqu64 %ymm2,-0x20(%rcx,%r14,1)
               :  111957:	jmpq   10edb8 <mlx5_tx_burst_mtiv_ts+0x1ff8>
               :  11195c:	test   %r14,%r14
               :  11195f:	je     10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  111965:	vmovdqu64 -0x20(%rcx,%r14,1),%ymm4
               :  11196d:	vmovdqa64 %ymm4,0x40(%rsp)
               :  111975:	vmovdqu64 %ymm4,-0x20(%rdx,%r14,1)
               :  11197d:	jmpq   10ee70 <mlx5_tx_burst_mtiv_ts+0x20b0>
               :  111982:	movslq 0x2a0(%rdi),%rax
               :  111989:	sub    %rax,%r11
               :  11198c:	movzwl %r8w,%eax
               :  111990:	shl    $0x8,%eax
               :  111993:	or     $0x200000f,%eax
               :  111998:	bswap  %eax
               :  11199a:	mov    %eax,(%rsi)
               :  11199c:	mov    0x28(%r14),%eax
               :  1119a0:	or     $0x3,%eax
               :  1119a3:	bswap  %eax
               :  1119a5:	lea    0x10(%rsi),%rdi
               :  1119a9:	and    $0x4,%ebx
               :  1119ac:	mov    %eax,0x4(%rsi)
               :  1119af:	movq   $0x4000000,0x8(%rsi)
               :  1119b7:	movq   $0x5000000,0x10(%rsi)
               :  1119bf:	movq   $0x0,0x8(%rdi)
               :  1119c7:	je     1119f8 <mlx5_tx_burst_mtiv_ts+0x4c38>
               :  1119c9:	mov    %r11,%rax
               :  1119cc:	shr    $0x9,%rax
               :  1119d0:	movabs $0x44b82fa09b5a53,%rbx
               :  1119da:	mul    %rbx
               :  1119dd:	mov    %rdx,%rax
               :  1119e0:	shr    $0xb,%rax
               :  1119e4:	mov    %rax,%rdx
               :  1119e7:	imul   $0x3b9aca00,%rax,%rax
               :  1119ee:	shl    $0x20,%rdx
               :  1119f2:	sub    %rax,%r11
               :  1119f5:	or     %rdx,%r11
               :  1119f8:	bswap  %r11
               :  1119fb:	mov    0x130(%r14),%rax
               :  111a02:	mov    %r11,0x10(%rdi)
               :  111a06:	mov    %rax,0x18(%rdi)
               :  111a0a:	jmpq   10d983 <mlx5_tx_burst_mtiv_ts+0xbc3>
               :  111a0f:	vzeroupper 
               :  111a12:	jmpq   10f308 <mlx5_tx_burst_mtiv_ts+0x2548>
               :  111a17:	testb  $0x1,0x1020c4(%r14)
               :  111a1f:	jne    1159c3 <mlx5_tx_burst_mtiv_ts+0x8c03>
               :  111a25:	mov    0x50(%rbx),%rax
               :  111a29:	movzwl 0x10(%rax),%esi
               :  111a2d:	lea    0x10(%rax),%rdx
               :  111a31:	cmp    $0x1,%si
               :  111a35:	jne    114cda <mlx5_tx_burst_mtiv_ts+0x7f1a>
               :  111a3b:	movw   $0x0,0x10(%rax)
               :  111a41:	mov    0x50(%rbx),%rax
               :  111a45:	mov    (%rbx),%rdi
               :  111a48:	mov    0x8(%rax),%rsi
               :  111a4c:	mov    %r8,0xa0(%rsp)
               :  111a54:	mov    %ecx,0xc8(%rsp)
               :  111a5b:	vzeroupper 
               :  111a5e:	callq  *(%rax)
               :  111a60:	mov    0xc8(%rsp),%ecx
               :  111a67:	mov    0xa0(%rsp),%r8
               :  111a6f:	cmpl   $0x1,0x44(%r14)
               :  111a74:	sbb    %rax,%rax
               :  111a77:	and    $0xffffffffffefe000,%rax
               :  111a7d:	lea    0x1020c0(%r14,%rax,1),%rax
               :  111a85:	movzwl 0x2(%rax),%edx
               :  111a89:	movzwl (%rax),%eax
               :  111a8c:	mov    %dx,0x58(%rbx)
               :  111a90:	sub    $0xffffffffffffff80,%rdx
               :  111a94:	lea    (%rbx,%rdx,1),%rsi
               :  111a98:	add    -0x8(%rbx),%rdx
               :  111a9c:	mov    %rdx,0x8(%rbx)
               :  111aa0:	cmp    $0x80,%ax
               :  111aa4:	mov    $0x80,%edx
               :  111aa9:	mov    %ax,0x36(%rbx)
               :  111aad:	cmova  %edx,%eax
               :  111ab0:	mov    0x38(%rbx),%r14
               :  111ab4:	mov    %ax,0x10(%rbx)
               :  111ab8:	xor    %eax,%eax
               :  111aba:	mov    %rsi,(%rbx)
               :  111abd:	mov    %ax,0x28(%rbx)
               :  111ac1:	movq   $0x0,0x18(%rbx)
               :  111ac9:	mov    0x44(%r14),%edx
               :  111acd:	jmpq   10f308 <mlx5_tx_burst_mtiv_ts+0x2548>
               :  111ad2:	mov    (%rbx),%rax
               :  111ad5:	movzwl 0x58(%rbx),%edx
               :  111ad9:	add    $0xffffffffffffff80,%rax
               :  111add:	sub    %rdx,%rax
               :  111ae0:	movzwl 0x12(%rax),%esi
               :  111ae4:	lea    0x12(%rax),%rdx
               :  111ae8:	cmp    $0x1,%si
               :  111aec:	jne    114a59 <mlx5_tx_burst_mtiv_ts+0x7c99>
               :  111af2:	movw   $0x0,0x12(%rax)
               :  111af8:	mov    $0x1,%edx
               :  111afd:	mov    %r8,0x90(%rsp)
               :  111b05:	mov    %ecx,0xa0(%rsp)
               :  111b0c:	movq   $0x0,0x40(%rax)
               :  111b14:	mov    %dx,0x14(%rax)
               :  111b18:	movw   $0x1,0x12(%rax)
               :  111b1e:	mov    %rax,0x180(%rsp)
               :  111b26:	mov    0x38(%rax),%rdi
               :  111b2a:	mov    %rdi,0xc8(%rsp)
               :  111b32:	vzeroupper 
               :  111b35:	data16 lea 0x8430b(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  111b3d:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  111b45:	mov    0xc8(%rsp),%rdi
               :  111b4d:	mov    0x90(%rsp),%r8
               :  111b55:	mov    0x44(%rdi),%ecx
               :  111b58:	test   %ecx,%ecx
               :  111b5a:	mov    (%rax),%eax
               :  111b5c:	mov    0xa0(%rsp),%ecx
               :  111b63:	je     11563f <mlx5_tx_burst_mtiv_ts+0x887f>
               :  111b69:	cmp    $0x7f,%eax
               :  111b6c:	ja     11563f <mlx5_tx_burst_mtiv_ts+0x887f>
               :  111b72:	mov    %eax,%r10d
               :  111b75:	imul   $0x2040,%r10,%r10
               :  111b7c:	add    0x60(%rdi),%r10
               :  111b80:	je     11563f <mlx5_tx_burst_mtiv_ts+0x887f>
               :  111b86:	mov    0x4(%r10),%esi
               :  111b8a:	test   %esi,%esi
               :  111b8c:	je     11563f <mlx5_tx_burst_mtiv_ts+0x887f>
               :  111b92:	mov    0x8(%r10),%edx
               :  111b96:	lea    0x1(%rdx),%eax
               :  111b99:	cmp    %eax,%esi
               :  111b9b:	jb     1149f5 <mlx5_tx_burst_mtiv_ts+0x7c35>
               :  111ba1:	mov    %eax,0x8(%r10)
               :  111ba5:	lea    0x40(%r10,%rdx,8),%rsi
               :  111baa:	mov    0x180(%rsp),%rax
               :  111bb2:	mov    %rax,(%rsi)
               :  111bb5:	jmpq   111a6f <mlx5_tx_burst_mtiv_ts+0x4caf>
               :  111bba:	xor    %r11d,%r11d
               :  111bbd:	mov    %r9d,%esi
               :  111bc0:	xor    %r12d,%r12d
               :  111bc3:	jmpq   10e7ae <mlx5_tx_burst_mtiv_ts+0x19ee>
               :  111bc8:	mov    0xa0(%rsp),%rdi
               :  111bd0:	mov    %r10,0xc8(%rsp)
               :  111bd8:	mov    %r8d,0xd0(%rsp)
               :  111be0:	vzeroupper 
               :  111be3:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :  111be8:	mov    0x0(%r13),%rdx
               :  111bec:	mov    0xc8(%rsp),%r10
               :  111bf4:	mov    0xd0(%rsp),%r8d
               :  111bfc:	jmpq   110ec2 <mlx5_tx_burst_mtiv_ts+0x4102>
               :  111c01:	mov    0x40(%rsp),%r12
               :  111c06:	mov    %r13,%r15
               :  111c09:	cmp    %dx,%cx
               :  111c0c:	jb     10f9d8 <mlx5_tx_burst_mtiv_ts+0x2c18>
               :  111c12:	mov    0x40(%r13),%r15
               :  111c16:	movzwl 0x12(%r13),%eax
               :  111c1b:	cmp    $0x1,%ax
               :  111c1f:	jne    115f51 <mlx5_tx_burst_mtiv_ts+0x9191>
               :  111c25:	mov    0x18(%r13),%rax
               :  111c29:	movabs $0x6000000000000000,%rdx
               :  111c33:	mov    0x38(%r13),%r14
               :  111c37:	test   %rdx,%rax
               :  111c3a:	je     11396e <mlx5_tx_burst_mtiv_ts+0x6bae>
               :  111c40:	movabs $0x2000000000000000,%rdi
               :  111c4a:	test   %rdi,%rax
               :  111c4d:	je     115cc5 <mlx5_tx_burst_mtiv_ts+0x8f05>
               :  111c53:	mov    0x44(%r14),%r8d
               :  111c57:	test   %r8d,%r8d
               :  111c5a:	jne    115f3d <mlx5_tx_burst_mtiv_ts+0x917d>
               :  111c60:	mov    $0xc0,%eax
               :  111c65:	testb  $0x1,0xc4(%r14)
               :  111c6d:	je     115f0c <mlx5_tx_burst_mtiv_ts+0x914c>
               :  111c73:	testb  $0x1,0x4(%r14,%rax,1)
               :  111c79:	je     11396e <mlx5_tx_burst_mtiv_ts+0x6bae>
               :  111c7f:	mov    0x50(%r13),%rsi
               :  111c83:	lea    0x18(%r13),%rdi
               :  111c87:	vzeroupper 
               :  111c8a:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  111c8f:	test   %eax,%eax
               :  111c91:	jne    111d2d <mlx5_tx_burst_mtiv_ts+0x4f6d>
               :  111c97:	mov    0x38(%r13),%r14
               :  111c9b:	cmpq   $0x0,0x40(%r13)
               :  111ca0:	je     111caa <mlx5_tx_burst_mtiv_ts+0x4eea>
               :  111ca2:	movq   $0x0,0x40(%r13)
               :  111caa:	cmpw   $0x1,0x14(%r13)
               :  111cb0:	je     111cbc <mlx5_tx_burst_mtiv_ts+0x4efc>
               :  111cb2:	mov    $0x1,%esi
               :  111cb7:	mov    %si,0x14(%r13)
               :  111cbc:	mov    %r13,0xe8(%rsp)
               :  111cc4:	data16 lea 0x8417c(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  111ccc:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  111cd4:	mov    0x44(%r14),%edx
               :  111cd8:	mov    (%rax),%eax
               :  111cda:	test   %edx,%edx
               :  111cdc:	je     11559c <mlx5_tx_burst_mtiv_ts+0x87dc>
               :  111ce2:	cmp    $0x7f,%eax
               :  111ce5:	ja     11559c <mlx5_tx_burst_mtiv_ts+0x87dc>
               :  111ceb:	imul   $0x2040,%rax,%rax
               :  111cf2:	add    0x60(%r14),%rax
               :  111cf6:	mov    %rax,%r8
               :  111cf9:	je     11559c <mlx5_tx_burst_mtiv_ts+0x87dc>
               :  111cff:	mov    0x4(%rax),%ecx
               :  111d02:	test   %ecx,%ecx
               :  111d04:	je     11559c <mlx5_tx_burst_mtiv_ts+0x87dc>
               :  111d0a:	mov    0x8(%rax),%edx
               :  111d0d:	lea    0x1(%rdx),%eax
               :  111d10:	cmp    %eax,%ecx
               :  111d12:	jb     11555a <mlx5_tx_burst_mtiv_ts+0x879a>
               :  111d18:	mov    %eax,0x8(%r8)
               :  111d1c:	lea    0x40(%r8,%rdx,8),%r13
               :  111d21:	mov    0xe8(%rsp),%rax
               :  111d29:	mov    %rax,0x0(%r13)
               :  111d2d:	movzwl 0x28(%r15),%edx
               :  111d32:	dec    %ebx
               :  111d34:	xor    %ecx,%ecx
               :  111d36:	jmpq   10f9d8 <mlx5_tx_burst_mtiv_ts+0x2c18>
               :  111d3b:	bswap  %edx
               :  111d3d:	mov    %edx,0x0(%r13)
               :  111d41:	mov    0x40(%r12),%edi
               :  111d46:	mov    0x38(%r12),%rdx
               :  111d4b:	lea    0x38(%r12),%r15
               :  111d50:	cmp    %edi,(%rdx)
               :  111d52:	jne    114ce9 <mlx5_tx_burst_mtiv_ts+0x7f29>
               :  111d58:	movzwl 0x44(%r12),%ecx
               :  111d5e:	lea    0x48(%r12),%rdx
               :  111d63:	lea    (%rcx,%rcx,4),%rcx
               :  111d67:	lea    (%rdx,%rcx,4),%rcx
               :  111d6b:	cmp    (%rcx),%rax
               :  111d6e:	jb     113c0f <mlx5_tx_burst_mtiv_ts+0x6e4f>
               :  111d74:	cmp    0x8(%rcx),%rax
               :  111d78:	jae    113c0f <mlx5_tx_burst_mtiv_ts+0x6e4f>
               :  111d7e:	mov    0x10(%rcx),%eax
               :  111d81:	cmp    $0xffffffff,%eax
               :  111d84:	je     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  111d8a:	mov    %eax,0x4(%r13)
               :  111d8e:	mov    %r14,%rax
               :  111d91:	bswap  %rax
               :  111d94:	mov    %rax,0x8(%r13)
               :  111d98:	jmpq   10fc6b <mlx5_tx_burst_mtiv_ts+0x2eab>
               :  111d9d:	lock decw (%r8)
               :  111da2:	jne    10f9a1 <mlx5_tx_burst_mtiv_ts+0x2be1>
               :  111da8:	mov    0x18(%r13),%rax
               :  111dac:	movabs $0x6000000000000000,%rdi
               :  111db6:	test   %rdi,%rax
               :  111db9:	je     112bcb <mlx5_tx_burst_mtiv_ts+0x5e0b>
               :  111dbf:	mov    0x38(%r13),%rdi
               :  111dc3:	movabs $0x2000000000000000,%rcx
               :  111dcd:	mov    %rdi,0x90(%rsp)
               :  111dd5:	test   %rcx,%rax
               :  111dd8:	je     114e50 <mlx5_tx_burst_mtiv_ts+0x8090>
               :  111dde:	mov    0x44(%rdi),%r11d
               :  111de2:	test   %r11d,%r11d
               :  111de5:	jne    114de7 <mlx5_tx_burst_mtiv_ts+0x8027>
               :  111deb:	testb  $0x1,0xc4(%rdi)
               :  111df2:	jne    116a52 <mlx5_tx_burst_mtiv_ts+0x9c92>
               :  111df8:	mov    0x50(%r13),%rdx
               :  111dfc:	movzwl 0x10(%rdx),%esi
               :  111e00:	lea    0x10(%rdx),%rax
               :  111e04:	cmp    $0x1,%si
               :  111e08:	jne    116a3c <mlx5_tx_burst_mtiv_ts+0x9c7c>
               :  111e0e:	movw   $0x0,0x10(%rdx)
               :  111e14:	mov    0x50(%r13),%rax
               :  111e18:	mov    0x0(%r13),%rdi
               :  111e1c:	mov    0x8(%rax),%rsi
               :  111e20:	mov    %r8,0x88(%rsp)
               :  111e28:	vzeroupper 
               :  111e2b:	callq  *(%rax)
               :  111e2d:	mov    0x88(%rsp),%r8
               :  111e35:	mov    0x90(%rsp),%rdi
               :  111e3d:	cmpl   $0x1,0x44(%rdi)
               :  111e41:	sbb    %rax,%rax
               :  111e44:	and    $0xffffffffffefe000,%rax
               :  111e4a:	lea    0x1020c0(%rdi,%rax,1),%rax
               :  111e52:	movzwl 0x2(%rax),%edx
               :  111e56:	movzwl (%rax),%eax
               :  111e59:	mov    %dx,0x58(%r13)
               :  111e5e:	sub    $0xffffffffffffff80,%rdx
               :  111e62:	lea    0x0(%r13,%rdx,1),%rsi
               :  111e67:	add    -0x8(%r13),%rdx
               :  111e6b:	mov    %rdx,0x8(%r13)
               :  111e6f:	cmp    $0x80,%ax
               :  111e73:	mov    $0x80,%edx
               :  111e78:	mov    %ax,0x36(%r13)
               :  111e7d:	cmova  %edx,%eax
               :  111e80:	xor    %r10d,%r10d
               :  111e83:	mov    %rsi,0x0(%r13)
               :  111e87:	mov    %ax,0x10(%r13)
               :  111e8c:	mov    %r10w,0x28(%r13)
               :  111e91:	movq   $0x0,0x18(%r13)
               :  111e99:	cmpq   $0x0,0x40(%r13)
               :  111e9e:	je     111ea8 <mlx5_tx_burst_mtiv_ts+0x50e8>
               :  111ea0:	movq   $0x0,0x40(%r13)
               :  111ea8:	cmpw   $0x1,0x14(%r13)
               :  111eae:	je     111ebb <mlx5_tx_burst_mtiv_ts+0x50fb>
               :  111eb0:	mov    $0x1,%r9d
               :  111eb6:	mov    %r9w,0x14(%r13)
               :  111ebb:	movw   $0x1,(%r8)
               :  111ec1:	mov    0x38(%r13),%r8
               :  111ec5:	mov    0x44(%r8),%edx
               :  111ec9:	jmpq   10f915 <mlx5_tx_burst_mtiv_ts+0x2b55>
               :  111ece:	vmovdqu64 %ymm0,(%r15)
               :  111ed4:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm3
               :  111edc:	vmovdqu64 %ymm3,-0x20(%r15,%rdi,1)
               :  111ee4:	jmpq   10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  111ee9:	lea    0x4(%rdx,%rax,1),%eax
               :  111eed:	add    %ecx,%eax
               :  111eef:	mov    %eax,0xa0(%rsp)
               :  111ef6:	movl   $0x4,0xd0(%rsp)
               :  111f01:	jmpq   1104ab <mlx5_tx_burst_mtiv_ts+0x36eb>
               :  111f06:	test   %rdx,%rdx
               :  111f09:	je     10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  111f0f:	vmovdqu64 -0x20(%rax,%rdx,1),%ymm4
               :  111f17:	vmovdqu64 %ymm4,-0x20(%r9,%rdx,1)
               :  111f1f:	jmpq   10f898 <mlx5_tx_burst_mtiv_ts+0x2ad8>
               :  111f24:	mov    0x38(%rsp),%rax
               :  111f29:	movzwl 0x28(%r9),%edx
               :  111f2e:	mov    0xf8(%rax),%rax
               :  111f35:	mov    %r9,%r13
               :  111f38:	mov    %rax,0x90(%rsp)
               :  111f40:	mov    0xa0(%rsp),%eax
               :  111f47:	sub    0xd0(%rsp),%eax
               :  111f4e:	mov    %eax,0x30(%rsp)
               :  111f52:	mov    0x38(%rsp),%rax
               :  111f57:	jmpq   10e140 <mlx5_tx_burst_mtiv_ts+0x1380>
               :  111f5c:	mov    %rax,%rsi
               :  111f5f:	and    $0x1f,%esi
               :  111f62:	je     1130be <mlx5_tx_burst_mtiv_ts+0x62fe>
               :  111f68:	mov    $0x20,%ecx
               :  111f6d:	sub    %rsi,%rcx
               :  111f70:	lea    -0x20(%rdx,%rsi,1),%rsi
               :  111f75:	mov    %rsi,0x40(%rsp)
               :  111f7a:	lea    (%r9,%rcx,1),%rsi
               :  111f7e:	add    %rax,%rcx
               :  111f81:	mov    %rsi,0x80(%rsp)
               :  111f89:	mov    %rcx,0x38(%rsp)
               :  111f8e:	vmovdqu64 %ymm0,(%rax)
               :  111f94:	mov    %rsi,%r14
               :  111f97:	mov    0x40(%rsp),%rcx
               :  111f9c:	mov    %r15d,0x28(%rsp)
               :  111fa1:	add    $0xffffffffffffff80,%rcx
               :  111fa5:	and    $0xffffffffffffff80,%rcx
               :  111fa9:	lea    0x80(%r14,%rcx,1),%rcx
               :  111fb1:	mov    %rcx,0x30(%rsp)
               :  111fb6:	mov    0x38(%rsp),%rsi
               :  111fbb:	mov    %r14,%rcx
               :  111fbe:	mov    0x30(%rsp),%r15
               :  111fc3:	mov    0x60(%rsp),%r14
               :  111fc8:	nopl   0x0(%rax,%rax,1)
               :  111fd0:	vmovdqu64 (%rcx),%ymm2
               :  111fd6:	vmovdqu64 0x20(%rcx),%ymm1
               :  111fdd:	vmovdqu64 0x40(%rcx),%ymm0
               :  111fe4:	vmovdqu64 0x60(%rcx),%ymm4
               :  111feb:	sub    $0xffffffffffffff80,%rcx
               :  111fef:	vmovdqu64 %ymm4,0x60(%rsi)
               :  111ff6:	vmovdqu64 %ymm2,(%rsi)
               :  111ffc:	vmovdqu64 %ymm1,0x20(%rsi)
               :  112003:	vmovdqu64 %ymm0,0x40(%rsi)
               :  11200a:	sub    $0xffffffffffffff80,%rsi
               :  11200e:	cmp    %r15,%rcx
               :  112011:	jne    111fd0 <mlx5_tx_burst_mtiv_ts+0x5210>
               :  112013:	mov    0x40(%rsp),%rsi
               :  112018:	mov    %r14,0x60(%rsp)
               :  11201d:	mov    %rsi,%rcx
               :  112020:	and    $0x7f,%ecx
               :  112023:	mov    %rcx,0x40(%rsp)
               :  112028:	mov    0x38(%rsp),%r14
               :  11202d:	mov    %rsi,%rcx
               :  112030:	and    $0xffffffffffffff80,%rcx
               :  112034:	mov    0x80(%rsp),%rsi
               :  11203c:	add    %rcx,%r14
               :  11203f:	add    %rcx,%rsi
               :  112042:	mov    0x28(%rsp),%r15d
               :  112047:	mov    %r14,%rcx
               :  11204a:	jmpq   10e40c <mlx5_tx_burst_mtiv_ts+0x164c>
               :  11204f:	mov    %rbx,%rcx
               :  112052:	and    $0x1f,%ecx
               :  112055:	je     11303b <mlx5_tx_burst_mtiv_ts+0x627b>
               :  11205b:	mov    $0x20,%edx
               :  112060:	sub    %rcx,%rdx
               :  112063:	lea    -0x20(%rax,%rcx,1),%rcx
               :  112068:	mov    %rcx,0x40(%rsp)
               :  11206d:	lea    (%r9,%rdx,1),%rcx
               :  112071:	mov    %rcx,0x80(%rsp)
               :  112079:	lea    (%rbx,%rdx,1),%rcx
               :  11207d:	mov    %rcx,0x38(%rsp)
               :  112082:	vmovdqu64 %ymm0,(%rbx)
               :  112088:	mov    0x40(%rsp),%rcx
               :  11208d:	mov    0x80(%rsp),%r14
               :  112095:	lea    -0x80(%rcx),%rdx
               :  112099:	and    $0xffffffffffffff80,%rdx
               :  11209d:	lea    0x80(%r14,%rdx,1),%rcx
               :  1120a5:	mov    %rcx,0x30(%rsp)
               :  1120aa:	mov    %r15d,0x28(%rsp)
               :  1120af:	mov    %r14,%rdx
               :  1120b2:	mov    0x38(%rsp),%rcx
               :  1120b7:	mov    0x30(%rsp),%r15
               :  1120bc:	mov    0x60(%rsp),%r14
               :  1120c1:	nopl   0x0(%rax)
               :  1120c8:	vmovdqu64 (%rdx),%ymm2
               :  1120ce:	vmovdqu64 0x20(%rdx),%ymm1
               :  1120d5:	vmovdqu64 0x40(%rdx),%ymm0
               :  1120dc:	vmovdqu64 0x60(%rdx),%ymm6
               :  1120e3:	sub    $0xffffffffffffff80,%rdx
               :  1120e7:	vmovdqu64 %ymm6,0x60(%rcx)
               :  1120ee:	vmovdqu64 %ymm2,(%rcx)
               :  1120f4:	vmovdqu64 %ymm1,0x20(%rcx)
               :  1120fb:	vmovdqu64 %ymm0,0x40(%rcx)
               :  112102:	sub    $0xffffffffffffff80,%rcx
               :  112106:	cmp    %r15,%rdx
               :  112109:	jne    1120c8 <mlx5_tx_burst_mtiv_ts+0x5308>
               :  11210b:	mov    0x40(%rsp),%rcx
     1 3.0e-05 :  112110:	mov    %r14,0x60(%rsp)
               :  112115:	mov    %rcx,%rdx
               :  112118:	and    $0x7f,%edx
               :  11211b:	mov    %rdx,0x40(%rsp)
               :  112120:	mov    0x38(%rsp),%r14
               :  112125:	mov    %rcx,%rdx
               :  112128:	and    $0xffffffffffffff80,%rdx
               :  11212c:	mov    0x80(%rsp),%rcx
               :  112134:	add    %rdx,%r14
               :  112137:	add    %rdx,%rcx
               :  11213a:	mov    0x28(%rsp),%r15d
               :  11213f:	mov    %r14,%rdx
               :  112142:	jmpq   10e4db <mlx5_tx_burst_mtiv_ts+0x171b>
               :  112147:	mov    %rax,0x40(%rsp)
               :  11214c:	mov    %rbx,%rdx
               :  11214f:	mov    %r9,%rcx
               :  112152:	vmovdqu64 %ymm0,(%rdx)
               :  112158:	vmovdqu64 0x20(%rcx),%ymm5
               :  11215f:	subq   $0x40,0x40(%rsp)
               :  112165:	vmovdqu64 %ymm5,0x20(%rdx)
               :  11216c:	add    $0x40,%rcx
               :  112170:	add    $0x40,%rdx
               :  112174:	jmpq   10e4e7 <mlx5_tx_burst_mtiv_ts+0x1727>
               :  112179:	mov    %r10,0x60(%rsp)
               :  11217e:	mov    %rcx,0x90(%rsp)
               :  112186:	mov    %rdx,0x98(%rsp)
               :  11218e:	mov    %rdi,0xc0(%rsp)
               :  112196:	vzeroupper 
               :  112199:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :  11219e:	mov    0x60(%rsp),%r10
               :  1121a3:	mov    0x90(%rsp),%rcx
               :  1121ab:	mov    (%r10),%rax
               :  1121ae:	mov    0x98(%rsp),%rdx
               :  1121b6:	mov    0xc0(%rsp),%rdi
               :  1121be:	jmpq   10dc7a <mlx5_tx_burst_mtiv_ts+0xeba>
               :  1121c3:	lock decw (%r14)
               :  1121c8:	jne    10f3bd <mlx5_tx_burst_mtiv_ts+0x25fd>
               :  1121ce:	mov    0x18(%rbx),%rax
               :  1121d2:	movabs $0x6000000000000000,%rdi
               :  1121dc:	test   %rdi,%rax
               :  1121df:	je     112250 <mlx5_tx_burst_mtiv_ts+0x5490>
               :  1121e1:	mov    0x38(%rbx),%rdi
               :  1121e5:	movabs $0x2000000000000000,%rsi
               :  1121ef:	mov    %rdi,0xc8(%rsp)
               :  1121f7:	test   %rsi,%rax
               :  1121fa:	je     11500f <mlx5_tx_burst_mtiv_ts+0x824f>
               :  112200:	mov    0x44(%rdi),%eax
               :  112203:	test   %eax,%eax
               :  112205:	jne    114cb0 <mlx5_tx_burst_mtiv_ts+0x7ef0>
               :  11220b:	testb  $0x1,0xc4(%rdi)
               :  112212:	je     114c02 <mlx5_tx_burst_mtiv_ts+0x7e42>
               :  112218:	mov    $0xc0,%eax
               :  11221d:	mov    0xc8(%rsp),%rdi
               :  112225:	testb  $0x1,0x4(%rdi,%rax,1)
               :  11222a:	je     112250 <mlx5_tx_burst_mtiv_ts+0x5490>
               :  11222c:	movabs $0x2000000000000000,%rdi
               :  112236:	mov    %rdi,0x18(%rbx)
               :  11223a:	mov    0x50(%rbx),%rax
               :  11223e:	movzwl 0x10(%rax),%esi
               :  112242:	lea    0x10(%rax),%rdx
               :  112246:	cmp    $0x1,%si
               :  11224a:	jne    11693c <mlx5_tx_burst_mtiv_ts+0x9b7c>
               :  112250:	vzeroupper 
               :  112253:	cmpq   $0x0,0x40(%rbx)
               :  112258:	je     112262 <mlx5_tx_burst_mtiv_ts+0x54a2>
               :  11225a:	movq   $0x0,0x40(%rbx)
               :  112262:	cmpw   $0x1,0x14(%rbx)
               :  112267:	je     112274 <mlx5_tx_burst_mtiv_ts+0x54b4>
               :  112269:	mov    $0x1,%r10d
               :  11226f:	mov    %r10w,0x14(%rbx)
               :  112274:	movw   $0x1,(%r14)
               :  11227a:	mov    0x38(%rbx),%r14
               :  11227e:	mov    0x44(%r14),%edx
               :  112282:	jmpq   10f327 <mlx5_tx_burst_mtiv_ts+0x2567>
               :  112287:	mov    %rdx,0x40(%rsp)
               :  11228c:	mov    %rax,%rcx
               :  11228f:	mov    %r9,%rsi
               :  112292:	vmovdqu64 %ymm0,(%rcx)
               :  112298:	vmovdqu64 0x20(%rsi),%ymm0
               :  11229f:	subq   $0x40,0x40(%rsp)
               :  1122a5:	vmovdqu64 %ymm0,0x20(%rcx)
               :  1122ac:	add    $0x40,%rsi
               :  1122b0:	add    $0x40,%rcx
               :  1122b4:	jmpq   10e418 <mlx5_tx_burst_mtiv_ts+0x1658>
               :  1122b9:	movzwl 0x26(%r12),%eax
               :  1122bf:	test   %ax,%ax
               :  1122c2:	jne    10e5b4 <mlx5_tx_burst_mtiv_ts+0x17f4>
               :  1122c8:	mov    $0x10000039,%eax
               :  1122cd:	sub    %esi,%eax
               :  1122cf:	mov    0xa0(%rsp),%edi
               :  1122d6:	shl    $0x4,%eax
               :  1122d9:	add    $0x12,%eax
               :  1122dc:	cmp    %eax,%edi
               :  1122de:	cmovbe %edi,%eax
               :  1122e1:	mov    %eax,0xa0(%rsp)
               :  1122e8:	jmpq   10e072 <mlx5_tx_burst_mtiv_ts+0x12b2>
               :  1122ed:	xor    %r11d,%r11d
               :  1122f0:	add    %r12d,0xd0(%rsp)
               :  1122f8:	mov    0xd0(%rsp),%eax
               :  1122ff:	cmp    0x80(%rsp),%r12d
               :  112307:	jb     112316 <mlx5_tx_burst_mtiv_ts+0x5556>
               :  112309:	cmp    %eax,0xa0(%rsp)
               :  112310:	ja     1149bd <mlx5_tx_burst_mtiv_ts+0x7bfd>
               :  112316:	mov    %r12d,%ecx
               :  112319:	mov    0x38(%rsp),%rbx
               :  11231e:	mov    0x28(%rsp),%r12
               :  112323:	movzwl 0xd0(%rsp),%eax
               :  11232b:	mov    %r14,%r9
               :  11232e:	xchg   %al,%ah
               :  112330:	mov    0xc0(%rsp),%rdi
               :  112338:	mov    %ax,0x1c(%rdi)
               :  11233c:	mov    %ecx,%eax
               :  11233e:	lea    0xf(%rbx,%rax,1),%rax
               :  112343:	and    $0xfffffffffffffff0,%rax
               :  112347:	cmpw   $0x0,0x90(%rsp)
               :  112350:	mov    %rax,%rdx
               :  112353:	mov    %rax,%r13
               :  112356:	je     10f1ec <mlx5_tx_burst_mtiv_ts+0x242c>
               :  11235c:	movzwl 0x28(%r14),%eax
               :  112361:	test   %r11w,%r11w
               :  112365:	je     112435 <mlx5_tx_burst_mtiv_ts+0x5675>
               :  11236b:	movzwl 0x10(%r14),%ebx
               :  112370:	movzwl %r11w,%ecx
               :  112374:	mov    (%r14),%rdx
               :  112377:	add    %rcx,%rbx
               :  11237a:	movzwl %r11w,%r11d
               :  11237e:	add    %rdx,%rbx
               :  112381:	sub    %r11d,%eax
               :  112384:	cmp    %r13,0x100(%r12)
               :  11238c:	ja     112396 <mlx5_tx_burst_mtiv_ts+0x55d6>
               :  11238e:	mov    0xf8(%r12),%r13
               :  112396:	mov    %rbx,%rcx
               :  112399:	cmp    $0xc,%eax
               :  11239c:	ja     114ad5 <mlx5_tx_burst_mtiv_ts+0x7d15>
               :  1123a2:	mov    %eax,%edx
               :  1123a4:	or     $0x80000000,%edx
               :  1123aa:	bswap  %edx
               :  1123ac:	mov    %edx,0x0(%r13)
               :  1123b0:	lea    0x4(%r13),%rdx
               :  1123b4:	test   $0x8,%al
               :  1123b6:	je     1123c7 <mlx5_tx_burst_mtiv_ts+0x5607>
               :  1123b8:	mov    (%rbx),%rdx
               :  1123bb:	add    $0x8,%rcx
               :  1123bf:	mov    %rdx,0x4(%r13)
               :  1123c3:	lea    0xc(%r13),%rdx
               :  1123c7:	test   $0x4,%al
               :  1123c9:	je     1123d8 <mlx5_tx_burst_mtiv_ts+0x5618>
               :  1123cb:	mov    (%rcx),%esi
               :  1123cd:	add    $0x4,%rdx
               :  1123d1:	mov    %esi,-0x4(%rdx)
               :  1123d4:	add    $0x4,%rcx
               :  1123d8:	test   $0x2,%al
               :  1123da:	je     1123eb <mlx5_tx_burst_mtiv_ts+0x562b>
               :  1123dc:	movzwl (%rcx),%esi
               :  1123df:	add    $0x2,%rdx
               :  1123e3:	mov    %si,-0x2(%rdx)
               :  1123e7:	add    $0x2,%rcx
               :  1123eb:	test   $0x1,%al
               :  1123ed:	je     1123f4 <mlx5_tx_burst_mtiv_ts+0x5634>
               :  1123ef:	movzbl (%rcx),%eax
               :  1123f2:	mov    %al,(%rdx)
               :  1123f4:	movzwl (%r12),%eax
     1 3.0e-05 :  1123f9:	decw   0xc8(%rsp)
               :  112401:	lea    0x1(%rax),%edx
               :  112404:	add    $0x10,%r13
               :  112408:	and    0x8(%r12),%ax
               :  11240e:	decw   0x90(%rsp)
               :  112416:	movzwl %ax,%eax
               :  112419:	mov    %dx,(%r12)
               :  11241e:	mov    %r9,0x188(%r12,%rax,8)
               :  112426:	je     10f1e9 <mlx5_tx_burst_mtiv_ts+0x2429>
               :  11242c:	mov    0x40(%r9),%r9
               :  112430:	movzwl 0x28(%r9),%eax
               :  112435:	movzwl 0x90(%rsp),%r15d
               :  11243e:	lea    0x38(%r12),%rbx
               :  112443:	mov    %rbx,0x88(%rsp)
               :  11244b:	dec    %r15d
               :  11244e:	lea    0x48(%r12),%rbx
               :  112453:	mov    %rbx,0xd0(%rsp)
               :  11245b:	movzwl 0xc8(%rsp),%r14d
               :  112464:	mov    %r9,%rbx
               :  112467:	mov    %r15d,%ecx
               :  11246a:	jmpq   1124f8 <mlx5_tx_burst_mtiv_ts+0x5738>
               :  11246f:	nop
               :  112470:	or     $0x80000000,%edx
               :  112476:	bswap  %edx
               :  112478:	mov    %edx,0x0(%r13)
               :  11247c:	lea    0x4(%r13),%rdx
               :  112480:	test   $0x8,%al
               :  112482:	je     112493 <mlx5_tx_burst_mtiv_ts+0x56d3>
               :  112484:	mov    (%r15),%rdx
               :  112487:	add    $0x8,%rsi
               :  11248b:	mov    %rdx,0x4(%r13)
               :  11248f:	lea    0xc(%r13),%rdx
               :  112493:	test   $0x4,%al
               :  112495:	je     1124a4 <mlx5_tx_burst_mtiv_ts+0x56e4>
               :  112497:	mov    (%rsi),%edi
               :  112499:	add    $0x4,%rdx
               :  11249d:	mov    %edi,-0x4(%rdx)
               :  1124a0:	add    $0x4,%rsi
               :  1124a4:	test   $0x2,%al
               :  1124a6:	je     1124b7 <mlx5_tx_burst_mtiv_ts+0x56f7>
               :  1124a8:	movzwl (%rsi),%edi
               :  1124ab:	add    $0x2,%rdx
               :  1124af:	mov    %di,-0x2(%rdx)
               :  1124b3:	add    $0x2,%rsi
               :  1124b7:	test   $0x1,%al
               :  1124b9:	je     1124c0 <mlx5_tx_burst_mtiv_ts+0x5700>
               :  1124bb:	movzbl (%rsi),%eax
               :  1124be:	mov    %al,(%rdx)
               :  1124c0:	movzwl (%r12),%eax
               :  1124c5:	dec    %r14d
               :  1124c8:	lea    0x1(%rax),%edx
               :  1124cb:	and    0x8(%r12),%ax
               :  1124d1:	movzwl %ax,%eax
               :  1124d4:	mov    %dx,(%r12)
               :  1124d9:	add    $0x10,%r13
               :  1124dd:	mov    %rbx,0x188(%r12,%rax,8)
               :  1124e5:	test   %cx,%cx
               :  1124e8:	je     112bd3 <mlx5_tx_burst_mtiv_ts+0x5e13>
               :  1124ee:	mov    0x40(%rbx),%rbx
               :  1124f2:	movzwl 0x28(%rbx),%eax
               :  1124f6:	dec    %ecx
               :  1124f8:	test   %ax,%ax
               :  1124fb:	je     11258e <mlx5_tx_burst_mtiv_ts+0x57ce>
               :  112501:	cmp    %r13,0x100(%r12)
               :  112509:	ja     112513 <mlx5_tx_burst_mtiv_ts+0x5753>
               :  11250b:	mov    0xf8(%r12),%r13
               :  112513:	mov    (%rbx),%rdi
               :  112516:	movzwl 0x10(%rbx),%r15d
               :  11251b:	movzwl %ax,%edx
               :  11251e:	add    %rdi,%r15
               :  112521:	mov    %r15,%rsi
               :  112524:	cmp    $0xc,%ax
               :  112528:	jbe    112470 <mlx5_tx_burst_mtiv_ts+0x56b0>
               :  11252e:	bswap  %edx
               :  112530:	mov    %edx,0x0(%r13)
               :  112534:	mov    0x38(%r12),%rax
               :  112539:	mov    0x40(%r12),%esi
               :  11253e:	cmp    %esi,(%rax)
               :  112540:	jne    1134b8 <mlx5_tx_burst_mtiv_ts+0x66f8>
               :  112546:	movzwl 0x44(%r12),%eax
               :  11254c:	mov    0xd0(%rsp),%rsi
               :  112554:	lea    (%rax,%rax,4),%rax
               :  112558:	lea    (%rsi,%rax,4),%rax
               :  11255c:	mov    %rsi,%rdx
               :  11255f:	cmp    (%rax),%rdi
               :  112562:	jb     1129d2 <mlx5_tx_burst_mtiv_ts+0x5c12>
               :  112568:	cmp    0x8(%rax),%rdi
               :  11256c:	jae    1129d2 <mlx5_tx_burst_mtiv_ts+0x5c12>
               :  112572:	mov    0x10(%rax),%eax
               :  112575:	cmp    $0xffffffff,%eax
               :  112578:	je     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  11257e:	mov    %eax,0x4(%r13)
               :  112582:	bswap  %r15
               :  112585:	mov    %r15,0x8(%r13)
               :  112589:	jmpq   1124c0 <mlx5_tx_burst_mtiv_ts+0x5700>
               :  11258e:	mov    0x40(%rbx),%rax
               :  112592:	mov    %rax,0xc8(%rsp)
               :  11259a:	lea    0x12(%rbx),%rax
               :  11259e:	movzwl 0x12(%rbx),%edx
               :  1125a2:	cmp    $0x1,%dx
               :  1125a6:	jne    114ba3 <mlx5_tx_burst_mtiv_ts+0x7de3>
               :  1125ac:	mov    0x18(%rbx),%rax
               :  1125b0:	movabs $0x6000000000000000,%rdi
               :  1125ba:	mov    0x38(%rbx),%r15
               :  1125be:	test   %rdi,%rax
               :  1125c1:	je     112629 <mlx5_tx_burst_mtiv_ts+0x5869>
               :  1125c3:	movabs $0x2000000000000000,%rdi
               :  1125cd:	test   %rdi,%rax
               :  1125d0:	je     114761 <mlx5_tx_burst_mtiv_ts+0x79a1>
               :  1125d6:	mov    0x44(%r15),%edx
               :  1125da:	test   %edx,%edx
               :  1125dc:	jne    114547 <mlx5_tx_burst_mtiv_ts+0x7787>
               :  1125e2:	testb  $0x1,0xc4(%r15)
               :  1125ea:	je     1144aa <mlx5_tx_burst_mtiv_ts+0x76ea>
               :  1125f0:	mov    $0xc0,%eax
               :  1125f5:	testb  $0x1,0x4(%r15,%rax,1)
               :  1125fb:	je     1144a2 <mlx5_tx_burst_mtiv_ts+0x76e2>
               :  112601:	movabs $0x2000000000000000,%rdi
               :  11260b:	mov    %rdi,0x18(%rbx)
               :  11260f:	mov    0x50(%rbx),%rax
               :  112613:	movzwl 0x10(%rax),%esi
               :  112617:	lea    0x10(%rax),%rdx
               :  11261b:	cmp    $0x1,%si
               :  11261f:	jne    116a9c <mlx5_tx_burst_mtiv_ts+0x9cdc>
               :  112625:	mov    0x38(%rbx),%r15
               :  112629:	mov    0x44(%r15),%edx
               :  11262d:	vzeroupper 
               :  112630:	cmpq   $0x0,0x40(%rbx)
               :  112635:	je     11263f <mlx5_tx_burst_mtiv_ts+0x587f>
               :  112637:	movq   $0x0,0x40(%rbx)
               :  11263f:	cmpw   $0x1,0x14(%rbx)
               :  112644:	je     11264f <mlx5_tx_burst_mtiv_ts+0x588f>
               :  112646:	mov    $0x1,%eax
               :  11264b:	mov    %ax,0x14(%rbx)
               :  11264f:	mov    %ecx,0x90(%rsp)
               :  112656:	mov    %edx,0xa0(%rsp)
               :  11265d:	mov    %rbx,0x128(%rsp)
               :  112665:	data16 lea 0x837db(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  11266d:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  112675:	mov    0x90(%rsp),%ecx
               :  11267c:	mov    (%rax),%eax
               :  11267e:	cmp    $0x7f,%eax
               :  112681:	ja     113d30 <mlx5_tx_burst_mtiv_ts+0x6f70>
               :  112687:	mov    0xa0(%rsp),%edx
               :  11268e:	test   %edx,%edx
               :  112690:	je     113d30 <mlx5_tx_burst_mtiv_ts+0x6f70>
               :  112696:	mov    %eax,%ebx
               :  112698:	imul   $0x2040,%rbx,%rbx
               :  11269f:	add    0x60(%r15),%rbx
               :  1126a3:	je     113d30 <mlx5_tx_burst_mtiv_ts+0x6f70>
               :  1126a9:	mov    0x4(%rbx),%eax
               :  1126ac:	test   %eax,%eax
               :  1126ae:	je     113d30 <mlx5_tx_burst_mtiv_ts+0x6f70>
               :  1126b4:	mov    0x8(%rbx),%edx
               :  1126b7:	lea    0x1(%rdx),%edi
               :  1126ba:	cmp    %edi,%eax
               :  1126bc:	jb     11399c <mlx5_tx_burst_mtiv_ts+0x6bdc>
               :  1126c2:	mov    %edi,0x8(%rbx)
               :  1126c5:	lea    0x40(%rbx,%rdx,8),%rsi
               :  1126ca:	mov    0x128(%rsp),%rax
               :  1126d2:	mov    %rax,(%rsi)
               :  1126d5:	test   %cx,%cx
               :  1126d8:	je     112bd3 <mlx5_tx_burst_mtiv_ts+0x5e13>
               :  1126de:	mov    0xc8(%rsp),%rbx
               :  1126e6:	jmpq   1124f2 <mlx5_tx_burst_mtiv_ts+0x5732>
               :  1126eb:	mov    %rcx,%rax
               :  1126ee:	mov    %rsi,%rdx
               :  1126f1:	jmpq   1114c4 <mlx5_tx_burst_mtiv_ts+0x4704>
               :  1126f6:	movzwl 0x28(%r14),%edx
               :  1126fb:	mov    %r14,%r13
               :  1126fe:	xor    %r11d,%r11d
               :  112701:	jmpq   110680 <mlx5_tx_burst_mtiv_ts+0x38c0>
               :  112706:	prefetcht0 (%rdx)
               :  112709:	cmp    $0x12,%esi
               :  11270c:	jbe    116080 <mlx5_tx_burst_mtiv_ts+0x92c0>
               :  112712:	lea    0x84e67(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :  112719:	test   %rcx,(%rax)
               :  11271c:	je     113e02 <mlx5_tx_burst_mtiv_ts+0x7042>
               :  112722:	test   %r12d,%r12d
               :  112725:	je     112732 <mlx5_tx_burst_mtiv_ts+0x5972>
               :  112727:	cmpb   $0x0,0x1f(%r14)
               :  11272c:	jns    10e7c7 <mlx5_tx_burst_mtiv_ts+0x1a07>
               :  112732:	movzwl 0xa(%r14),%eax
               :  112737:	movzwl 0x10(%r14),%ebx
               :  11273c:	and    %eax,%ebx
               :  11273e:	movzwl %bx,%ebx
               :  112741:	shl    $0x6,%rbx
               :  112745:	shl    $0x8,%eax
               :  112748:	add    0xf8(%r14),%rbx
               :  11274f:	or     $0xa,%eax
               :  112752:	bswap  %eax
               :  112754:	mov    %eax,(%rbx)
               :  112756:	mov    0x28(%r14),%eax
               :  11275a:	or     $0x3,%eax
               :  11275d:	bswap  %eax
               :  11275f:	mov    %eax,0x4(%rbx)
               :  112762:	mov    0x8386f(%rip),%rax        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :  112769:	movq   $0x4000000,0x8(%rbx)
               :  112771:	movq   $0x0,0x10(%rbx)
               :  112779:	test   %rcx,(%rax)
               :  11277c:	jne    11422d <mlx5_tx_burst_mtiv_ts+0x746d>
               :  112782:	xor    %eax,%eax
               :  112784:	mov    %eax,0x18(%rbx)
               :  112787:	test   %r8,%r8
               :  11278a:	je     114221 <mlx5_tx_burst_mtiv_ts+0x7461>
               :  112790:	movzwl 0x2a(%r15),%eax
               :  112795:	or     $0x80000000,%eax
               :  11279a:	bswap  %eax
               :  11279c:	mov    %eax,0x1c(%rbx)
               :  11279f:	bswap  %r9d
               :  1127a2:	mov    %r9d,0x20(%rbx)
               :  1127a6:	mov    0x38(%r14),%rax
               :  1127aa:	mov    0x40(%r14),%ecx
               :  1127ae:	lea    0x38(%r14),%r12
               :  1127b2:	cmp    %ecx,(%rax)
               :  1127b4:	jne    115701 <mlx5_tx_burst_mtiv_ts+0x8941>
               :  1127ba:	movzwl 0x44(%r14),%ecx
               :  1127bf:	lea    0x48(%r14),%rax
               :  1127c3:	lea    (%rcx,%rcx,4),%rcx
               :  1127c7:	lea    (%rax,%rcx,4),%rcx
               :  1127cb:	cmp    (%rcx),%rdi
               :  1127ce:	jb     115266 <mlx5_tx_burst_mtiv_ts+0x84a6>
               :  1127d4:	cmp    0x8(%rcx),%rdi
               :  1127d8:	jae    115266 <mlx5_tx_burst_mtiv_ts+0x84a6>
               :  1127de:	mov    0x10(%rcx),%eax
               :  1127e1:	cmp    $0xffffffff,%eax
               :  1127e4:	je     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  1127ea:	mov    %eax,0x24(%rbx)
               :  1127ed:	mov    %rdx,%rax
               :  1127f0:	bswap  %rax
               :  1127f3:	mov    %rax,0x28(%rbx)
               :  1127f7:	movzwl (%r14),%eax
               :  1127fb:	incw   0xa(%r14)
               :  112800:	lea    0x1(%rax),%edx
               :  112803:	and    0x8(%r14),%ax
               :  112808:	movzwl %ax,%eax
               :  11280b:	mov    %dx,(%r14)
               :  11280f:	mov    %r15,0x188(%r14,%rax,8)
               :  112817:	movzwl 0x28(%r15),%eax
               :  11281c:	decw   0xc8(%rsp)
               :  112824:	add    0x158(%r14),%rax
               :  11282b:	dec    %r13d
               :  11282e:	lea    0x4(%rax),%rdx
               :  112832:	testb  $0x2,0x1f(%r15)
               :  112837:	cmovne %rdx,%rax
               :  11283b:	mov    %rax,0x158(%r14)
               :  112842:	jmpq   10e8f3 <mlx5_tx_burst_mtiv_ts+0x1b33>
               :  112847:	testb  $0x1,0x1020c4(%r14)
               :  11284f:	je     110fce <mlx5_tx_burst_mtiv_ts+0x420e>
               :  112855:	mov    $0x1020c0,%eax
               :  11285a:	testb  $0x1,0x4(%r14,%rax,1)
               :  112860:	je     114219 <mlx5_tx_burst_mtiv_ts+0x7459>
               :  112866:	movabs $0x2000000000000000,%rdi
               :  112870:	mov    %rdi,0x18(%r13)
               :  112874:	mov    0x50(%r13),%rax
               :  112878:	movzwl 0x10(%rax),%esi
               :  11287c:	lea    0x10(%rax),%rdx
               :  112880:	cmp    $0x1,%si
               :  112884:	jne    116737 <mlx5_tx_burst_mtiv_ts+0x9977>
               :  11288a:	mov    0x38(%r13),%r14
               :  11288e:	mov    0x44(%r14),%edx
               :  112892:	vzeroupper 
               :  112895:	jmpq   111080 <mlx5_tx_burst_mtiv_ts+0x42c0>
               :  11289a:	mov    0x90(%rsp),%eax
               :  1128a1:	mov    %r15w,0xc8(%rsp)
               :  1128aa:	add    $0x3,%eax
               :  1128ad:	shr    $0x2,%eax
               :  1128b0:	add    %ax,0xa(%r12)
               :  1128b6:	sub    %ax,0xdc(%rsp)
               :  1128be:	jmpq   10f227 <mlx5_tx_burst_mtiv_ts+0x2467>
               :  1128c3:	vmovdqu64 (%rax),%ymm0
               :  1128c9:	jmpq   1118f6 <mlx5_tx_burst_mtiv_ts+0x4b36>
               :  1128ce:	mov    %rdi,%r10
               :  1128d1:	mov    %r14,%r9
               :  1128d4:	jmpq   111736 <mlx5_tx_burst_mtiv_ts+0x4976>
               :  1128d9:	mov    %r15,%rdx
               :  1128dc:	and    $0x1f,%edx
               :  1128df:	je     113413 <mlx5_tx_burst_mtiv_ts+0x6653>
               :  1128e5:	mov    $0x20,%r9d
               :  1128eb:	sub    %rdx,%r9
               :  1128ee:	add    %r9,%rax
               :  1128f1:	lea    -0x20(%rdi,%rdx,1),%r11
               :  1128f6:	vmovdqu64 %ymm0,(%r15)
               :  1128fc:	add    %r15,%r9
               :  1128ff:	lea    -0x80(%r11),%rdx
               :  112903:	and    $0xffffffffffffff80,%rdx
               :  112907:	lea    0x80(%rax,%rdx,1),%r10
               :  11290f:	mov    %r9,%r8
               :  112912:	mov    %rax,%rdx
               :  112915:	nopl   (%rax)
               :  112918:	vmovdqu64 (%rdx),%ymm2
               :  11291e:	vmovdqu64 0x20(%rdx),%ymm1
               :  112925:	vmovdqu64 0x40(%rdx),%ymm0
               :  11292c:	vmovdqu64 0x60(%rdx),%ymm7
               :  112933:	sub    $0xffffffffffffff80,%rdx
               :  112937:	vmovdqu64 %ymm7,0x60(%r8)
               :  11293e:	vmovdqu64 %ymm2,(%r8)
               :  112944:	vmovdqu64 %ymm1,0x20(%r8)
               :  11294b:	vmovdqu64 %ymm0,0x40(%r8)
               :  112952:	sub    $0xffffffffffffff80,%r8
               :  112956:	cmp    %r10,%rdx
               :  112959:	jne    112918 <mlx5_tx_burst_mtiv_ts+0x5b58>
               :  11295b:	mov    %r11,%rdx
               :  11295e:	and    $0xffffffffffffff80,%r11
               :  112962:	and    $0x7f,%edx
               :  112965:	add    %r11,%rax
               :  112968:	add    %r11,%r9
               :  11296b:	jmpq   10faa2 <mlx5_tx_burst_mtiv_ts+0x2ce2>
               :  112970:	movzwl 0xd0(%rsp),%eax
               :  112978:	mov    %r15,0xc0(%rsp)
               :  112980:	mov    %ax,0xc8(%rsp)
               :  112988:	movzwl %si,%ebx
               :  11298b:	mov    %esi,%r15d
               :  11298e:	jmpq   10de01 <mlx5_tx_burst_mtiv_ts+0x1041>
               :  112993:	movslq 0x58(%r8),%rax
               :  112997:	lea    0x40(%r13),%rsi
               :  11299b:	cmp    $0xf,%eax
               :  11299e:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1129a4:	shl    $0x7,%rax
               :  1129a8:	add    0x83561(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1129af:	mov    %r8,%rdi
               :  1129b2:	mov    %rsi,0x88(%rsp)
               :  1129ba:	callq  *0x70(%rax)
               :  1129bd:	movl   $0x1,0x8(%r13)
               :  1129c5:	mov    0x88(%rsp),%rsi
               :  1129cd:	jmpq   1109c4 <mlx5_tx_burst_mtiv_ts+0x3c04>
               :  1129d2:	mov    0x48(%r12),%rax
               :  1129d7:	test   %rax,%rax
               :  1129da:	je     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  1129e0:	cmp    %rax,%rdi
               :  1129e3:	jb     1129f0 <mlx5_tx_burst_mtiv_ts+0x5c30>
               :  1129e5:	cmp    0x50(%r12),%rdi
               :  1129ea:	jb     114835 <mlx5_tx_burst_mtiv_ts+0x7a75>
               :  1129f0:	mov    0x5c(%r12),%rax
               :  1129f5:	test   %rax,%rax
               :  1129f8:	je     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  1129fe:	cmp    %rax,%rdi
               :  112a01:	jb     112a18 <mlx5_tx_burst_mtiv_ts+0x5c58>
               :  112a03:	lea    0x5c(%r12),%rdx
               :  112a08:	mov    $0x1,%eax
               :  112a0d:	cmp    0x64(%r12),%rdi
               :  112a12:	jb     114837 <mlx5_tx_burst_mtiv_ts+0x7a77>
               :  112a18:	mov    0x70(%r12),%rax
               :  112a1d:	test   %rax,%rax
               :  112a20:	je     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  112a26:	cmp    %rax,%rdi
               :  112a29:	jb     112a40 <mlx5_tx_burst_mtiv_ts+0x5c80>
               :  112a2b:	lea    0x70(%r12),%rdx
               :  112a30:	mov    $0x2,%eax
               :  112a35:	cmp    0x78(%r12),%rdi
               :  112a3a:	jb     114837 <mlx5_tx_burst_mtiv_ts+0x7a77>
               :  112a40:	mov    0x84(%r12),%rax
               :  112a48:	test   %rax,%rax
               :  112a4b:	je     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  112a51:	cmp    %rax,%rdi
               :  112a54:	jb     112a71 <mlx5_tx_burst_mtiv_ts+0x5cb1>
               :  112a56:	lea    0x84(%r12),%rdx
               :  112a5e:	mov    $0x3,%eax
               :  112a63:	cmp    0x8c(%r12),%rdi
               :  112a6b:	jb     114837 <mlx5_tx_burst_mtiv_ts+0x7a77>
               :  112a71:	mov    0x98(%r12),%rax
               :  112a79:	test   %rax,%rax
               :  112a7c:	je     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  112a82:	cmp    %rax,%rdi
               :  112a85:	jb     112aa2 <mlx5_tx_burst_mtiv_ts+0x5ce2>
               :  112a87:	lea    0x98(%r12),%rdx
               :  112a8f:	mov    $0x4,%eax
               :  112a94:	cmp    0xa0(%r12),%rdi
               :  112a9c:	jb     114837 <mlx5_tx_burst_mtiv_ts+0x7a77>
               :  112aa2:	mov    0xac(%r12),%rax
               :  112aaa:	test   %rax,%rax
               :  112aad:	je     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  112aaf:	cmp    %rax,%rdi
               :  112ab2:	jb     112acf <mlx5_tx_burst_mtiv_ts+0x5d0f>
               :  112ab4:	lea    0xac(%r12),%rdx
               :  112abc:	mov    $0x5,%eax
               :  112ac1:	cmp    0xb4(%r12),%rdi
               :  112ac9:	jb     114837 <mlx5_tx_burst_mtiv_ts+0x7a77>
               :  112acf:	mov    0xc0(%r12),%rax
               :  112ad7:	test   %rax,%rax
               :  112ada:	je     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  112adc:	cmp    %rax,%rdi
               :  112adf:	jb     112afc <mlx5_tx_burst_mtiv_ts+0x5d3c>
               :  112ae1:	lea    0xc0(%r12),%rdx
               :  112ae9:	mov    $0x6,%eax
               :  112aee:	cmp    0xc8(%r12),%rdi
               :  112af6:	jb     114837 <mlx5_tx_burst_mtiv_ts+0x7a77>
               :  112afc:	mov    0xd4(%r12),%rax
               :  112b04:	cmp    %rax,%rdi
               :  112b07:	jb     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  112b09:	test   %rax,%rax
               :  112b0c:	je     112b29 <mlx5_tx_burst_mtiv_ts+0x5d69>
               :  112b0e:	lea    0xd4(%r12),%rdx
               :  112b16:	mov    $0x7,%eax
               :  112b1b:	cmp    0xdc(%r12),%rdi
               :  112b23:	jb     114837 <mlx5_tx_burst_mtiv_ts+0x7a77>
               :  112b29:	mov    0x88(%rsp),%rdi
               :  112b31:	mov    %rbx,%rsi
               :  112b34:	mov    %ecx,0xc8(%rsp)
               :  112b3b:	vzeroupper 
               :  112b3e:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :  112b43:	mov    0xc8(%rsp),%ecx
               :  112b4a:	jmpq   11257e <mlx5_tx_burst_mtiv_ts+0x57be>
               :  112b4f:	mov    0x2(%rdx),%rax
               :  112b53:	mov    %rax,0x20(%rbx)
               :  112b57:	movzwl 0xa(%rdx),%eax
               :  112b5b:	mov    %ax,0x28(%rbx)
               :  112b5f:	movzwl 0x2a(%r15),%eax
               :  112b64:	or     $0x81000000,%eax
               :  112b69:	bswap  %eax
               :  112b6b:	mov    %eax,0x2a(%rbx)
               :  112b6e:	movzwl 0xc(%rdx),%eax
               :  112b72:	mov    %ax,0x2e(%rbx)
               :  112b76:	jmpq   10e850 <mlx5_tx_burst_mtiv_ts+0x1a90>
               :  112b7b:	mov    %r15,%r9
               :  112b7e:	mov    %rdi,%rdx
               :  112b81:	vmovdqu64 %ymm0,(%r9)
               :  112b87:	vmovdqu64 0x20(%rax),%ymm4
               :  112b8e:	sub    $0x40,%rdx
               :  112b92:	vmovdqu64 %ymm4,0x20(%r9)
               :  112b99:	add    $0x40,%rax
               :  112b9d:	add    $0x40,%r9
               :  112ba1:	jmpq   10faac <mlx5_tx_burst_mtiv_ts+0x2cec>
               :  112ba6:	mov    0xa0(%rsp),%edi
               :  112bad:	movzwl %si,%esi
               :  112bb0:	add    %rdi,%rdx
               :  112bb3:	mov    %rdi,%r11
               :  112bb6:	cmp    %rsi,%rdx
               :  112bb9:	mov    %edx,%edi
               :  112bbb:	cmova  %r11d,%edi
               :  112bbf:	mov    %edi,0xa0(%rsp)
               :  112bc6:	jmpq   10df11 <mlx5_tx_burst_mtiv_ts+0x1151>
               :  112bcb:	vzeroupper 
               :  112bce:	jmpq   111e99 <mlx5_tx_burst_mtiv_ts+0x50d9>
               :  112bd3:	mov    %r14w,0xc8(%rsp)
               :  112bdc:	jmpq   10f1e9 <mlx5_tx_burst_mtiv_ts+0x2429>
               :  112be1:	vmovdqu64 (%rax),%xmm6
               :  112be7:	vmovups %xmm6,(%r15)
               :  112bec:	vmovdqu64 -0x10(%rax,%rsi,1),%xmm7
               :  112bf4:	vmovups %xmm7,-0x10(%r15,%rsi,1)
               :  112bfb:	jmpq   110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  112c00:	vmovdqu64 (%rax),%xmm4
               :  112c06:	vmovups %xmm4,(%r15)
               :  112c0b:	vmovdqu64 -0x10(%rax,%rsi,1),%xmm5
               :  112c13:	vmovups %xmm5,-0x10(%r15,%rsi,1)
               :  112c1a:	jmpq   110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  112c1f:	vmovdqu64 (%rcx),%xmm5
               :  112c25:	vmovups %xmm5,(%rsi)
               :  112c29:	vmovdqu64 -0x10(%rcx,%r11,1),%xmm6
               :  112c31:	vmovups %xmm6,-0x10(%rsi,%r11,1)
               :  112c38:	jmpq   10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  112c3d:	vmovdqu64 (%rcx),%xmm3
               :  112c43:	vmovups %xmm3,(%rsi)
               :  112c47:	vmovdqu64 -0x10(%rcx,%r11,1),%xmm4
               :  112c4f:	vmovups %xmm4,-0x10(%rsi,%r11,1)
               :  112c56:	jmpq   10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  112c5b:	mov    0x90(%rsp),%rax
               :  112c63:	mov    %r9d,0x98(%rsp)
               :  112c6b:	mov    0xf8(%rax),%rsi
               :  112c72:	add    %r11,%rcx
               :  112c75:	jmpq   10db3c <mlx5_tx_burst_mtiv_ts+0xd7c>
               :  112c7a:	lock incq 0x3a0(%rdi)
               :  112c82:	mov    0x18(%r10),%rcx
               :  112c86:	jmpq   10d98e <mlx5_tx_burst_mtiv_ts+0xbce>
               :  112c8b:	lea    0x118(%rsp),%rax
               :  112c93:	movl   $0x0,0xd0(%rsp)
               :  112c9e:	mov    %rax,0x80(%rsp)
               :  112ca6:	mov    %r12,0x40(%rsp)
               :  112cab:	xor    %r11d,%r11d
               :  112cae:	mov    $0xc,%r14d
               :  112cb4:	cmp    %dx,%r11w
               :  112cb8:	jae    112e58 <mlx5_tx_burst_mtiv_ts+0x6098>
               :  112cbe:	movzwl 0x10(%r13),%eax
               :  112cc3:	movzwl %r11w,%ecx
               :  112cc7:	add    %rcx,%rax
               :  112cca:	movzwl %r11w,%ecx
               :  112cce:	sub    %ecx,%edx
               :  112cd0:	add    0x0(%r13),%rax
               :  112cd4:	mov    %edx,%ecx
               :  112cd6:	cmp    %r14d,%edx
               :  112cd9:	mov    %rax,%rdx
               :  112cdc:	cmova  %r14d,%ecx
               :  112ce0:	or     %rbx,%rdx
               :  112ce3:	and    $0x1f,%edx
               :  112ce6:	mov    %ecx,%esi
               :  112ce8:	jne    112d9a <mlx5_tx_burst_mtiv_ts+0x5fda>
               :  112cee:	cmp    $0xf,%ecx
               :  112cf1:	jbe    112fe1 <mlx5_tx_burst_mtiv_ts+0x6221>
               :  112cf7:	cmp    $0x20,%ecx
               :  112cfa:	jbe    1136cc <mlx5_tx_burst_mtiv_ts+0x690c>
               :  112d00:	cmp    $0x40,%rsi
               :  112d04:	jbe    11428d <mlx5_tx_burst_mtiv_ts+0x74cd>
               :  112d0a:	lea    -0x40(%rsi),%rdi
               :  112d0e:	shr    $0x6,%rdi
               :  112d12:	lea    0x1(%rdi),%r8
               :  112d16:	shl    $0x6,%r8
               :  112d1a:	lea    (%rax,%r8,1),%r9
               :  112d1e:	mov    %rbx,%rdx
               :  112d21:	vmovdqu64 (%rax),%ymm7
               :  112d27:	add    $0x40,%rax
               :  112d2b:	vmovdqu64 %ymm7,(%rdx)
               :  112d31:	vmovdqu64 -0x20(%rax),%ymm2
               :  112d38:	add    $0x40,%rdx
               :  112d3c:	vmovdqu64 %ymm2,-0x20(%rdx)
               :  112d43:	cmp    %r9,%rax
               :  112d46:	jne    112d21 <mlx5_tx_burst_mtiv_ts+0x5f61>
               :  112d48:	neg    %rdi
               :  112d4b:	mov    %rdi,%rdx
               :  112d4e:	shl    $0x6,%rdx
               :  112d52:	lea    -0x80(%rsi,%rdx,1),%rdx
               :  112d57:	add    %rdx,%rax
               :  112d5a:	vmovdqu64 (%rax),%ymm5
               :  112d60:	add    %r8,%rdx
               :  112d63:	add    %rbx,%rdx
               :  112d66:	vmovdqu64 %ymm5,(%rdx)
               :  112d6c:	vmovdqu64 0x20(%rax),%ymm6
               :  112d73:	vmovdqu64 %ymm6,0x20(%rdx)
               :  112d7a:	add    %ecx,0xd0(%rsp)
               :  112d81:	movzwl 0x28(%r13),%edx
               :  112d86:	add    %ecx,%r11d
               :  112d89:	sub    %ecx,%r14d
               :  112d8c:	je     114f22 <mlx5_tx_burst_mtiv_ts+0x8162>
               :  112d92:	add    %rsi,%rbx
               :  112d95:	jmpq   112cb4 <mlx5_tx_burst_mtiv_ts+0x5ef4>
               :  112d9a:	cmp    $0xf,%ecx
               :  112d9d:	jbe    112fe1 <mlx5_tx_burst_mtiv_ts+0x6221>
               :  112da3:	cmp    $0x20,%ecx
               :  112da6:	jbe    11366c <mlx5_tx_burst_mtiv_ts+0x68ac>
               :  112dac:	cmp    $0x30,%rsi
               :  112db0:	jbe    1142ae <mlx5_tx_burst_mtiv_ts+0x74ee>
               :  112db6:	vmovdqu64 (%rax),%ymm0
               :  112dbc:	cmp    $0x40,%rsi
               :  112dc0:	jbe    114aba <mlx5_tx_burst_mtiv_ts+0x7cfa>
               :  112dc6:	cmp    $0x100,%rsi
               :  112dcd:	ja     1151d3 <mlx5_tx_burst_mtiv_ts+0x8413>
               :  112dd3:	cmp    $0x7f,%rsi
               :  112dd7:	jbe    114a89 <mlx5_tx_burst_mtiv_ts+0x7cc9>
               :  112ddd:	vmovdqu64 %ymm0,(%rbx)
               :  112de3:	vmovdqu64 0x20(%rax),%ymm5
               :  112dea:	lea    -0x80(%rsi),%rdi
               :  112dee:	vmovdqu64 %ymm5,0x20(%rbx)
               :  112df5:	vmovdqu64 0x40(%rax),%ymm6
               :  112dfc:	lea    0x80(%rbx),%rdx
               :  112e03:	vmovdqu64 %ymm6,0x40(%rbx)
               :  112e0a:	vmovdqu64 0x60(%rax),%ymm7
               :  112e11:	sub    $0xffffffffffffff80,%rax
               :  112e15:	vmovdqu64 %ymm7,0x60(%rbx)
               :  112e1c:	cmp    $0x3f,%rdi
               :  112e20:	ja     114a8f <mlx5_tx_burst_mtiv_ts+0x7ccf>
               :  112e26:	cmp    $0x20,%rdi
               :  112e2a:	jbe    114a6b <mlx5_tx_burst_mtiv_ts+0x7cab>
               :  112e30:	vmovdqu64 (%rax),%ymm2
               :  112e36:	vmovdqu64 %ymm2,(%rdx)
               :  112e3c:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm3
               :  112e44:	vmovdqu64 %ymm3,-0x20(%rdx,%rdi,1)
               :  112e4c:	jmpq   112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  112e51:	nopl   0x0(%rax)
               :  112e58:	mov    0x40(%r13),%r15
               :  112e5c:	movzwl 0x12(%r13),%edx
               :  112e61:	lea    0x12(%r13),%rax
               :  112e65:	cmp    $0x1,%dx
               :  112e69:	jne    114958 <mlx5_tx_burst_mtiv_ts+0x7b98>
               :  112e6f:	mov    0x18(%r13),%rax
               :  112e73:	movabs $0x6000000000000000,%rdi
               :  112e7d:	mov    0x38(%r13),%r12
               :  112e81:	test   %rdi,%rax
               :  112e84:	je     112eee <mlx5_tx_burst_mtiv_ts+0x612e>
               :  112e86:	movabs $0x2000000000000000,%rdi
               :  112e90:	test   %rdi,%rax
               :  112e93:	je     1143a8 <mlx5_tx_burst_mtiv_ts+0x75e8>
               :  112e99:	mov    0x44(%r12),%edx
               :  112e9e:	test   %edx,%edx
               :  112ea0:	jne    114388 <mlx5_tx_burst_mtiv_ts+0x75c8>
               :  112ea6:	testb  $0x1,0xc4(%r12)
               :  112eaf:	je     1142f0 <mlx5_tx_burst_mtiv_ts+0x7530>
               :  112eb5:	mov    $0xc0,%eax
               :  112eba:	testb  $0x1,0x4(%r12,%rax,1)
               :  112ec0:	je     1142e8 <mlx5_tx_burst_mtiv_ts+0x7528>
               :  112ec6:	movabs $0x2000000000000000,%rdi
               :  112ed0:	mov    %rdi,0x18(%r13)
               :  112ed4:	mov    0x50(%r13),%rax
               :  112ed8:	movzwl 0x10(%rax),%ecx
               :  112edc:	lea    0x10(%rax),%rdx
               :  112ee0:	cmp    $0x1,%cx
               :  112ee4:	jne    115fd9 <mlx5_tx_burst_mtiv_ts+0x9219>
               :  112eea:	mov    0x38(%r13),%r12
               :  112eee:	mov    0x44(%r12),%edx
               :  112ef3:	vzeroupper 
               :  112ef6:	cmpq   $0x0,0x40(%r13)
               :  112efb:	je     112f05 <mlx5_tx_burst_mtiv_ts+0x6145>
               :  112efd:	movq   $0x0,0x40(%r13)
               :  112f05:	cmpw   $0x1,0x14(%r13)
               :  112f0b:	je     112f17 <mlx5_tx_burst_mtiv_ts+0x6157>
               :  112f0d:	mov    $0x1,%esi
               :  112f12:	mov    %si,0x14(%r13)
               :  112f17:	mov    %edx,0x88(%rsp)
               :  112f1e:	mov    %r13,0x118(%rsp)
               :  112f26:	data16 lea 0x82f1a(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  112f2e:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  112f36:	mov    (%rax),%eax
               :  112f38:	cmp    $0x7f,%eax
               :  112f3b:	ja     113bde <mlx5_tx_burst_mtiv_ts+0x6e1e>
               :  112f41:	mov    0x88(%rsp),%edx
               :  112f48:	test   %edx,%edx
               :  112f4a:	je     113bde <mlx5_tx_burst_mtiv_ts+0x6e1e>
               :  112f50:	mov    %eax,%r13d
               :  112f53:	imul   $0x2040,%r13,%r13
               :  112f5a:	add    0x60(%r12),%r13
               :  112f5f:	je     113bde <mlx5_tx_burst_mtiv_ts+0x6e1e>
               :  112f65:	mov    0x4(%r13),%eax
               :  112f69:	test   %eax,%eax
               :  112f6b:	je     113bde <mlx5_tx_burst_mtiv_ts+0x6e1e>
               :  112f71:	mov    0x8(%r13),%edx
               :  112f75:	lea    0x1(%rdx),%esi
               :  112f78:	cmp    %esi,%eax
               :  112f7a:	jb     113689 <mlx5_tx_burst_mtiv_ts+0x68c9>
               :  112f80:	mov    %esi,0x8(%r13)
               :  112f84:	lea    0x40(%r13,%rdx,8),%rcx
               :  112f89:	mov    0x118(%rsp),%rax
               :  112f91:	mov    %rax,(%rcx)
               :  112f94:	mov    0x18(%r15),%rcx
               :  112f98:	lea    0x845e1(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :  112f9f:	decw   0x90(%rsp)
               :  112fa7:	movzwl 0x28(%r15),%edx
               :  112fac:	test   %rcx,(%rax)
               :  112faf:	je     112fd6 <mlx5_tx_burst_mtiv_ts+0x6216>
               :  112fb1:	mov    0xd0(%rsp),%edi
               :  112fb8:	cmp    $0xb,%edi
               :  112fbb:	ja     11328a <mlx5_tx_burst_mtiv_ts+0x64ca>
               :  112fc1:	mov    $0xc,%eax
               :  112fc6:	sub    %edi,%eax
               :  112fc8:	movzwl %dx,%ecx
               :  112fcb:	cmp    %ecx,%eax
               :  112fcd:	ja     112fd6 <mlx5_tx_burst_mtiv_ts+0x6216>
               :  112fcf:	cmp    %eax,%r14d
               :  112fd2:	cmova  %eax,%r14d
               :  112fd6:	mov    %r15,%r13
               :  112fd9:	xor    %r11d,%r11d
               :  112fdc:	jmpq   112cb4 <mlx5_tx_burst_mtiv_ts+0x5ef4>
               :  112fe1:	mov    %rbx,%rdx
               :  112fe4:	test   $0x8,%cl
               :  112fe7:	je     112ff7 <mlx5_tx_burst_mtiv_ts+0x6237>
               :  112fe9:	mov    (%rax),%rdx
               :  112fec:	add    $0x8,%rax
               :  112ff0:	mov    %rdx,(%rbx)
               :  112ff3:	lea    0x8(%rbx),%rdx
               :  112ff7:	test   $0x4,%cl
               :  112ffa:	je     113009 <mlx5_tx_burst_mtiv_ts+0x6249>
               :  112ffc:	mov    (%rax),%edi
               :  112ffe:	add    $0x4,%rdx
               :  113002:	mov    %edi,-0x4(%rdx)
               :  113005:	add    $0x4,%rax
               :  113009:	test   $0x2,%cl
               :  11300c:	je     11301d <mlx5_tx_burst_mtiv_ts+0x625d>
               :  11300e:	movzwl (%rax),%edi
               :  113011:	add    $0x2,%rdx
               :  113015:	mov    %di,-0x2(%rdx)
               :  113019:	add    $0x2,%rax
               :  11301d:	test   $0x1,%cl
               :  113020:	je     112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  113026:	movzbl (%rax),%eax
               :  113029:	mov    %al,(%rdx)
               :  11302b:	jmpq   112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  113030:	vmovdqu64 (%rsi),%ymm0
               :  113036:	jmpq   112292 <mlx5_tx_burst_mtiv_ts+0x54d2>
               :  11303b:	mov    %rax,0x40(%rsp)
               :  113040:	mov    %r9,0x80(%rsp)
               :  113048:	mov    %rbx,0x38(%rsp)
               :  11304d:	jmpq   112088 <mlx5_tx_burst_mtiv_ts+0x52c8>
               :  113052:	testb  $0x1,0x1020c4(%r12)
               :  11305b:	je     110a9a <mlx5_tx_burst_mtiv_ts+0x3cda>
               :  113061:	mov    $0x1020c0,%eax
               :  113066:	testb  $0x1,0x4(%r12,%rax,1)
               :  11306c:	je     114ddf <mlx5_tx_burst_mtiv_ts+0x801f>
               :  113072:	movabs $0x2000000000000000,%rdi
               :  11307c:	mov    %rdi,0x18(%r13)
               :  113080:	mov    0x50(%r13),%rax
               :  113084:	movzwl 0x10(%rax),%ecx
               :  113088:	lea    0x10(%rax),%rdx
               :  11308c:	cmp    $0x1,%cx
               :  113090:	jne    116861 <mlx5_tx_burst_mtiv_ts+0x9aa1>
               :  113096:	mov    0x38(%r13),%r12
               :  11309a:	mov    0x44(%r12),%r14d
               :  11309f:	vzeroupper 
               :  1130a2:	jmpq   110b47 <mlx5_tx_burst_mtiv_ts+0x3d87>
               :  1130a7:	vmovdqu64 (%rcx),%ymm0
               :  1130ad:	jmpq   112152 <mlx5_tx_burst_mtiv_ts+0x5392>
               :  1130b2:	mov    0xf8(%r14),%rdx
               :  1130b9:	jmpq   10dc44 <mlx5_tx_burst_mtiv_ts+0xe84>
               :  1130be:	mov    %rdx,0x40(%rsp)
               :  1130c3:	mov    %r9,0x80(%rsp)
               :  1130cb:	mov    %rax,0x38(%rsp)
               :  1130d0:	mov    %r9,%r14
               :  1130d3:	jmpq   111f97 <mlx5_tx_burst_mtiv_ts+0x51d7>
               :  1130d8:	lock incq 0x3a0(%r8)
               :  1130e0:	movzwl 0x14(%r13),%ebx
               :  1130e5:	jmpq   10e03e <mlx5_tx_burst_mtiv_ts+0x127e>
               :  1130ea:	mov    %r14,%r13
               :  1130ed:	xor    %r11d,%r11d
               :  1130f0:	jmpq   110680 <mlx5_tx_burst_mtiv_ts+0x38c0>
               :  1130f5:	xor    %eax,%eax
               :  1130f7:	mov    %ax,0x44(%r12)
               :  1130fd:	mov    0x10(%rsi),%eax
               :  113100:	jmpq   110ee9 <mlx5_tx_burst_mtiv_ts+0x4129>
               :  113105:	movslq 0x58(%r8),%rax
               :  113109:	cmp    $0xf,%eax
               :  11310c:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  113112:	shl    $0x7,%rax
               :  113116:	mov    0x20(%rsp),%rsi
               :  11311b:	add    0x82dee(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  113122:	mov    $0x1,%edx
               :  113127:	mov    %r8,%rdi
               :  11312a:	callq  *0x70(%rax)
               :  11312d:	jmpq   1109cf <mlx5_tx_burst_mtiv_ts+0x3c0f>
               :  113132:	lock incq 0x3a8(%r8)
               :  11313a:	movzwl 0x14(%r13),%ebx
               :  11313f:	jmpq   10e03e <mlx5_tx_burst_mtiv_ts+0x127e>
               :  113144:	vmovdqu64 (%rcx),%ymm7
               :  11314a:	vmovdqu64 %ymm7,(%rsi)
               :  113150:	vmovdqu64 -0x20(%rcx,%r11,1),%ymm0
               :  113158:	vmovdqu64 %ymm0,-0x20(%rsi,%r11,1)
               :  113160:	jmpq   10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  113165:	vmovdqu64 (%rcx),%xmm5
               :  11316b:	vmovups %xmm5,(%rsi)
               :  11316f:	vmovdqu64 0x10(%rcx),%xmm6
               :  113176:	vmovups %xmm6,0x10(%rsi)
               :  11317b:	vmovdqu64 -0x10(%rcx,%r11,1),%xmm7
               :  113183:	vmovups %xmm7,-0x10(%rsi,%r11,1)
               :  11318a:	jmpq   10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  11318f:	mov    0x0(%r13),%rax
               :  113193:	movzwl 0x58(%r13),%edx
               :  113198:	add    $0xffffffffffffff80,%rax
               :  11319c:	sub    %rdx,%rax
               :  11319f:	movzwl 0x12(%rax),%ecx
               :  1131a3:	lea    0x12(%rax),%rdx
               :  1131a7:	cmp    $0x1,%cx
               :  1131ab:	jne    115caf <mlx5_tx_burst_mtiv_ts+0x8eef>
               :  1131b1:	movw   $0x0,0x12(%rax)
               :  1131b7:	mov    $0x1,%edx
               :  1131bc:	mov    %r8,0x40(%rsp)
               :  1131c1:	movq   $0x0,0x40(%rax)
               :  1131c9:	mov    %dx,0x14(%rax)
               :  1131cd:	movw   $0x1,0x12(%rax)
               :  1131d3:	mov    %rax,0x138(%rsp)
               :  1131db:	mov    0x38(%rax),%rdi
               :  1131df:	mov    %rdi,0x88(%rsp)
               :  1131e7:	vzeroupper 
               :  1131ea:	data16 lea 0x82c56(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  1131f2:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  1131fa:	mov    0x88(%rsp),%rdi
               :  113202:	mov    0x40(%rsp),%r8
               :  113207:	mov    0x44(%rdi),%ecx
               :  11320a:	test   %ecx,%ecx
               :  11320c:	mov    (%rax),%eax
               :  11320e:	je     115c72 <mlx5_tx_burst_mtiv_ts+0x8eb2>
               :  113214:	cmp    $0x7f,%eax
               :  113217:	ja     115c72 <mlx5_tx_burst_mtiv_ts+0x8eb2>
               :  11321d:	mov    %eax,%ecx
               :  11321f:	imul   $0x2040,%rcx,%rcx
               :  113226:	add    0x60(%rdi),%rcx
               :  11322a:	je     115c72 <mlx5_tx_burst_mtiv_ts+0x8eb2>
               :  113230:	mov    0x4(%rcx),%esi
               :  113233:	test   %esi,%esi
               :  113235:	je     115c72 <mlx5_tx_burst_mtiv_ts+0x8eb2>
               :  11323b:	mov    0x8(%rcx),%edx
               :  11323e:	lea    0x1(%rdx),%eax
               :  113241:	cmp    %eax,%esi
               :  113243:	jb     115c23 <mlx5_tx_burst_mtiv_ts+0x8e63>
               :  113249:	mov    %eax,0x8(%rcx)
               :  11324c:	lea    0x40(%rcx,%rdx,8),%rsi
               :  113251:	mov    0x138(%rsp),%rax
               :  113259:	mov    %rax,(%rsi)
               :  11325c:	jmpq   1108c4 <mlx5_tx_burst_mtiv_ts+0x3b04>
               :  113261:	vmovdqu64 (%rax),%ymm0
               :  113267:	vmovdqu64 %ymm0,(%r15)
               :  11326d:	vmovdqu64 -0x20(%rax,%rsi,1),%ymm1
               :  113275:	vmovdqu64 %ymm1,-0x20(%r15,%rsi,1)
               :  11327d:	jmpq   110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  113282:	vzeroupper 
               :  113285:	jmpq   110928 <mlx5_tx_burst_mtiv_ts+0x3b68>
               :  11328a:	mov    0x40(%rsp),%r12
               :  11328f:	xor    %r11d,%r11d
               :  113292:	movzwl 0x2a(%r15),%eax
               :  113297:	or     $0x81000000,%eax
               :  11329c:	bswap  %eax
               :  11329e:	mov    0xc0(%rsp),%rbx
               :  1132a6:	movl   $0x10,0xd0(%rsp)
               :  1132b1:	mov    %eax,0x2a(%rbx)
               :  1132b4:	mov    0xa0(%rsp),%eax
               :  1132bb:	add    $0x2e,%rbx
               :  1132bf:	lea    -0x10(%rax),%ecx
               :  1132c2:	mov    %r15,%r13
               :  1132c5:	jmpq   110623 <mlx5_tx_burst_mtiv_ts+0x3863>
               :  1132ca:	vmovdqu64 (%rax),%xmm6
               :  1132d0:	vmovups %xmm6,(%r15)
               :  1132d5:	vmovdqu64 0x10(%rax),%xmm7
               :  1132dc:	vmovups %xmm7,0x10(%r15)
               :  1132e2:	vmovdqu64 -0x10(%rax,%rsi,1),%xmm0
               :  1132ea:	vmovups %xmm0,-0x10(%r15,%rsi,1)
               :  1132f1:	jmpq   110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  1132f6:	movl   $0x0,0x1c(%rbx)
               :  1132fd:	mov    %rbx,%rax
               :  113300:	jmpq   110e66 <mlx5_tx_burst_mtiv_ts+0x40a6>
               :  113305:	mov    0x48(%r14),%rsi
               :  113309:	test   %rsi,%rsi
               :  11330c:	je     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  113312:	cmp    %rsi,%rax
               :  113315:	jb     113321 <mlx5_tx_burst_mtiv_ts+0x6561>
               :  113317:	cmp    0x50(%r14),%rax
               :  11331b:	jb     116116 <mlx5_tx_burst_mtiv_ts+0x9356>
               :  113321:	mov    0x5c(%r14),%rcx
               :  113325:	test   %rcx,%rcx
               :  113328:	je     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  11332e:	cmp    %rcx,%rax
               :  113331:	jb     11333d <mlx5_tx_burst_mtiv_ts+0x657d>
               :  113333:	cmp    0x64(%r14),%rax
               :  113337:	jb     116125 <mlx5_tx_burst_mtiv_ts+0x9365>
               :  11333d:	mov    0x70(%r14),%rcx
               :  113341:	test   %rcx,%rcx
               :  113344:	je     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  11334a:	cmp    %rcx,%rax
               :  11334d:	jb     113359 <mlx5_tx_burst_mtiv_ts+0x6599>
               :  11334f:	cmp    0x78(%r14),%rax
               :  113353:	jb     116130 <mlx5_tx_burst_mtiv_ts+0x9370>
               :  113359:	mov    0x84(%r14),%rcx
               :  113360:	test   %rcx,%rcx
               :  113363:	je     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  113369:	cmp    %rcx,%rax
               :  11336c:	jb     11337b <mlx5_tx_burst_mtiv_ts+0x65bb>
               :  11336e:	cmp    0x8c(%r14),%rax
               :  113375:	jb     11613b <mlx5_tx_burst_mtiv_ts+0x937b>
               :  11337b:	mov    0x98(%r14),%rcx
               :  113382:	test   %rcx,%rcx
               :  113385:	je     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  113387:	cmp    %rcx,%rax
               :  11338a:	jb     113399 <mlx5_tx_burst_mtiv_ts+0x65d9>
               :  11338c:	cmp    0xa0(%r14),%rax
               :  113393:	jb     116149 <mlx5_tx_burst_mtiv_ts+0x9389>
               :  113399:	mov    0xac(%r14),%rcx
               :  1133a0:	test   %rcx,%rcx
               :  1133a3:	je     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  1133a5:	cmp    %rcx,%rax
               :  1133a8:	jb     1133b7 <mlx5_tx_burst_mtiv_ts+0x65f7>
               :  1133aa:	cmp    0xb4(%r14),%rax
               :  1133b1:	jb     116157 <mlx5_tx_burst_mtiv_ts+0x9397>
               :  1133b7:	mov    0xc0(%r14),%rcx
               :  1133be:	test   %rcx,%rcx
               :  1133c1:	je     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  1133c3:	cmp    %rax,%rcx
               :  1133c6:	ja     1133d5 <mlx5_tx_burst_mtiv_ts+0x6615>
               :  1133c8:	cmp    0xc8(%r14),%rax
               :  1133cf:	jb     116a8b <mlx5_tx_burst_mtiv_ts+0x9ccb>
               :  1133d5:	mov    0xd4(%r14),%rcx
               :  1133dc:	cmp    %rcx,%rax
               :  1133df:	jb     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  1133e1:	test   %rcx,%rcx
               :  1133e4:	je     1133f3 <mlx5_tx_burst_mtiv_ts+0x6633>
               :  1133e6:	cmp    0xdc(%r14),%rax
               :  1133ed:	jb     1169ed <mlx5_tx_burst_mtiv_ts+0x9c2d>
               :  1133f3:	mov    %r15,%rsi
               :  1133f6:	mov    %rdx,0xc0(%rsp)
               :  1133fe:	vzeroupper 
               :  113401:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :  113406:	mov    0xc0(%rsp),%rdx
               :  11340e:	jmpq   10e8af <mlx5_tx_burst_mtiv_ts+0x1aef>
               :  113413:	mov    %rdi,%r11
               :  113416:	mov    %r15,%r9
               :  113419:	jmpq   1128ff <mlx5_tx_burst_mtiv_ts+0x5b3f>
               :  11341e:	vmovdqu64 (%rax),%ymm0
               :  113424:	jmpq   112b81 <mlx5_tx_burst_mtiv_ts+0x5dc1>
               :  113429:	lock decw (%rcx)
               :  11342d:	je     1101cc <mlx5_tx_burst_mtiv_ts+0x340c>
               :  113433:	vzeroupper 
               :  113436:	jmpq   10e315 <mlx5_tx_burst_mtiv_ts+0x1555>
               :  11343b:	lock decw (%rcx)
               :  11343f:	jne    113433 <mlx5_tx_burst_mtiv_ts+0x6673>
               :  113441:	jmpq   10e2ea <mlx5_tx_burst_mtiv_ts+0x152a>
               :  113446:	movslq 0x58(%r14),%rax
               :  11344a:	mov    %r10,0x40(%rsp)
               :  11344f:	mov    %r8d,0x88(%rsp)
               :  113457:	lea    0x40(%r13),%rsi
               :  11345b:	cmp    $0xf,%eax
               :  11345e:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  113464:	shl    $0x7,%rax
               :  113468:	add    0x82aa1(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11346f:	mov    %r14,%rdi
               :  113472:	mov    %rsi,0xc8(%rsp)
               :  11347a:	callq  *0x70(%rax)
               :  11347d:	movl   $0x1,0x8(%r13)
               :  113485:	mov    0x40(%rsp),%r10
               :  11348a:	mov    0x88(%rsp),%r8d
               :  113492:	mov    0xc8(%rsp),%rsi
               :  11349a:	jmpq   11112c <mlx5_tx_burst_mtiv_ts+0x436c>
               :  11349f:	lock decw (%rcx)
               :  1134a3:	jne    10ed1c <mlx5_tx_burst_mtiv_ts+0x1f5c>
               :  1134a9:	movw   $0x1,0x10(%rax)
               :  1134af:	jmpq   10ec5a <mlx5_tx_burst_mtiv_ts+0x1e9a>
               :  1134b4:	nopl   0x0(%rax)
               :  1134b8:	mov    0x88(%rsp),%rdi
               :  1134c0:	mov    %ecx,0xc8(%rsp)
               :  1134c7:	vzeroupper 
               :  1134ca:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :  1134cf:	mov    (%rbx),%rdi
               :  1134d2:	mov    0xc8(%rsp),%ecx
               :  1134d9:	jmpq   112546 <mlx5_tx_burst_mtiv_ts+0x5786>
               :  1134de:	movslq 0x2a0(%rdi),%rdx
               :  1134e5:	sub    %rdx,%rax
               :  1134e8:	mov    %rax,%rdi
               :  1134eb:	movzwl %r8w,%eax
               :  1134ef:	shl    $0x8,%eax
               :  1134f2:	or     $0x200000f,%eax
               :  1134f7:	bswap  %eax
               :  1134f9:	mov    %eax,(%rsi)
               :  1134fb:	mov    0x28(%r14),%eax
               :  1134ff:	or     $0x3,%eax
               :  113502:	bswap  %eax
               :  113504:	lea    0x10(%rsi),%r9
               :  113508:	and    $0x4,%r11d
               :  11350c:	mov    %eax,0x4(%rsi)
               :  11350f:	movq   $0x4000000,0x8(%rsi)
               :  113517:	movq   $0x5000000,0x10(%rsi)
               :  11351f:	movq   $0x0,0x8(%r9)
               :  113527:	je     11355e <mlx5_tx_burst_mtiv_ts+0x679e>
               :  113529:	mov    %rdi,%rax
               :  11352c:	shr    $0x9,%rax
               :  113530:	movabs $0x44b82fa09b5a53,%rsi
               :  11353a:	mul    %rsi
               :  11353d:	mov    %rdx,%rax
               :  113540:	shr    $0xb,%rax
               :  113544:	mov    %rax,%rdx
               :  113547:	imul   $0x3b9aca00,%rax,%rax
               :  11354e:	shl    $0x20,%rdx
               :  113552:	sub    %rax,%rdi
               :  113555:	mov    %rdi,%rax
               :  113558:	mov    %rdx,%rdi
               :  11355b:	or     %rax,%rdi
               :  11355e:	mov    %rdi,%rax
               :  113561:	bswap  %rax
               :  113564:	mov    %rax,0x10(%r9)
               :  113568:	mov    0x130(%r14),%rax
               :  11356f:	mov    %rax,0x18(%r9)
               :  113573:	jmpq   10e77b <mlx5_tx_burst_mtiv_ts+0x19bb>
               :  113578:	vmovdqu64 %ymm0,(%r15)
               :  11357e:	vmovdqu64 -0x20(%rax,%rsi,1),%ymm1
               :  113586:	vmovdqu64 %ymm1,-0x20(%r15,%rsi,1)
               :  11358e:	jmpq   110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  113593:	mov    %r13,%r14
               :  113596:	cmp    %dx,%r11w
               :  11359a:	jb     1122f0 <mlx5_tx_burst_mtiv_ts+0x5530>
               :  1135a0:	mov    0x40(%r13),%r14
               :  1135a4:	movzwl 0x12(%r13),%eax
               :  1135a9:	cmp    $0x1,%ax
               :  1135ad:	jne    1165ea <mlx5_tx_burst_mtiv_ts+0x982a>
               :  1135b3:	mov    $0x3,%eax
               :  1135b8:	shl    $0x3d,%rax
               :  1135bc:	test   %rax,0x18(%r13)
               :  1135c0:	jne    115dea <mlx5_tx_burst_mtiv_ts+0x902a>
               :  1135c6:	mov    0x38(%r13),%r15
               :  1135ca:	vzeroupper 
               :  1135cd:	cmpq   $0x0,0x40(%r13)
               :  1135d2:	je     1135dc <mlx5_tx_burst_mtiv_ts+0x681c>
               :  1135d4:	movq   $0x0,0x40(%r13)
               :  1135dc:	cmpw   $0x1,0x14(%r13)
               :  1135e2:	je     1135eb <mlx5_tx_burst_mtiv_ts+0x682b>
               :  1135e4:	movw   $0x1,0x14(%r13)
               :  1135eb:	mov    %r13,0x190(%rsp)
               :  1135f3:	data16 lea 0x8284d(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  1135fb:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  113603:	cmpl   $0x0,0x44(%r15)
               :  113608:	mov    (%rax),%eax
               :  11360a:	je     1166f1 <mlx5_tx_burst_mtiv_ts+0x9931>
               :  113610:	cmp    $0x7f,%eax
               :  113613:	ja     1166f1 <mlx5_tx_burst_mtiv_ts+0x9931>
               :  113619:	mov    %eax,%r13d
               :  11361c:	imul   $0x2040,%r13,%r13
               :  113623:	add    0x60(%r15),%r13
               :  113627:	je     1166f1 <mlx5_tx_burst_mtiv_ts+0x9931>
               :  11362d:	mov    0x4(%r13),%ecx
               :  113631:	test   %ecx,%ecx
               :  113633:	je     1166f1 <mlx5_tx_burst_mtiv_ts+0x9931>
               :  113639:	mov    0x8(%r13),%edx
               :  11363d:	lea    0x1(%rdx),%eax
               :  113640:	cmp    %eax,%ecx
               :  113642:	jb     1158d4 <mlx5_tx_burst_mtiv_ts+0x8b14>
               :  113648:	mov    %eax,0x8(%r13)
               :  11364c:	lea    0x40(%r13,%rdx,8),%rcx
               :  113651:	mov    0x190(%rsp),%rax
               :  113659:	mov    %rax,(%rcx)
               :  11365c:	decw   0x90(%rsp)
               :  113664:	xor    %r11d,%r11d
               :  113667:	jmpq   1122f0 <mlx5_tx_burst_mtiv_ts+0x5530>
               :  11366c:	vmovdqu64 (%rax),%xmm7
               :  113672:	vmovups %xmm7,(%rbx)
               :  113676:	vmovdqu64 -0x10(%rax,%rsi,1),%xmm0
               :  11367e:	vmovups %xmm0,-0x10(%rbx,%rsi,1)
               :  113684:	jmpq   112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  113689:	movslq 0x58(%r12),%rax
               :  11368e:	lea    0x40(%r13),%rcx
               :  113692:	cmp    $0xf,%eax
               :  113695:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  11369b:	shl    $0x7,%rax
               :  11369f:	mov    %rcx,%rsi
               :  1136a2:	add    0x82867(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1136a9:	mov    %r12,%rdi
               :  1136ac:	mov    %rcx,0x88(%rsp)
               :  1136b4:	callq  *0x70(%rax)
               :  1136b7:	movl   $0x1,0x8(%r13)
               :  1136bf:	mov    0x88(%rsp),%rcx
               :  1136c7:	jmpq   112f89 <mlx5_tx_burst_mtiv_ts+0x61c9>
               :  1136cc:	vmovdqu64 (%rax),%xmm5
               :  1136d2:	vmovups %xmm5,(%rbx)
               :  1136d6:	vmovdqu64 -0x10(%rax,%rsi,1),%xmm6
               :  1136de:	vmovups %xmm6,-0x10(%rbx,%rsi,1)
               :  1136e4:	jmpq   112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  1136e9:	lock decw (%rdx)
               :  1136ed:	jne    1109cf <mlx5_tx_burst_mtiv_ts+0x3c0f>
               :  1136f3:	movabs $0x6000000000000000,%rax
               :  1136fd:	test   %rax,0x18(%r13)
               :  113701:	jne    115169 <mlx5_tx_burst_mtiv_ts+0x83a9>
               :  113707:	vzeroupper 
               :  11370a:	cmpq   $0x0,0x40(%r13)
               :  11370f:	je     113719 <mlx5_tx_burst_mtiv_ts+0x6959>
               :  113711:	movq   $0x0,0x40(%r13)
               :  113719:	cmpw   $0x1,0x14(%r13)
               :  11371f:	je     11372b <mlx5_tx_burst_mtiv_ts+0x696b>
               :  113721:	mov    $0x1,%eax
               :  113726:	mov    %ax,0x14(%r13)
               :  11372b:	movw   $0x1,(%rdx)
               :  113730:	mov    0x38(%r13),%r8
               :  113734:	mov    0x44(%r8),%edx
               :  113738:	jmpq   110949 <mlx5_tx_burst_mtiv_ts+0x3b89>
               :  11373d:	movslq 0x58(%rdi),%rax
               :  113741:	mov    %r9,0x18(%rsp)
               :  113746:	mov    %r8,0x80(%rsp)
               :  11374e:	mov    %rcx,0x40(%rsp)
               :  113753:	lea    0x40(%rcx),%rsi
               :  113757:	cmp    $0xf,%eax
               :  11375a:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  113760:	shl    $0x7,%rax
               :  113764:	add    0x827a5(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11376b:	mov    %rsi,0x88(%rsp)
               :  113773:	callq  *0x70(%rax)
               :  113776:	mov    0x40(%rsp),%rcx
               :  11377b:	mov    0x18(%rsp),%r9
               :  113780:	movl   $0x1,0x8(%rcx)
               :  113787:	mov    0x80(%rsp),%r8
               :  11378f:	mov    0x88(%rsp),%rsi
               :  113797:	jmpq   110279 <mlx5_tx_burst_mtiv_ts+0x34b9>
               :  11379c:	testb  $0x1,0x1020c4(%rdi)
               :  1137a3:	jne    11649f <mlx5_tx_burst_mtiv_ts+0x96df>
               :  1137a9:	mov    0x50(%r13),%rdx
               :  1137ad:	movzwl 0x10(%rdx),%esi
               :  1137b1:	lea    0x10(%rdx),%rax
               :  1137b5:	cmp    $0x1,%si
               :  1137b9:	jne    115817 <mlx5_tx_burst_mtiv_ts+0x8a57>
               :  1137bf:	movw   $0x0,0x10(%rdx)
               :  1137c5:	mov    0x50(%r13),%rax
               :  1137c9:	mov    0x0(%r13),%rdi
               :  1137cd:	mov    0x8(%rax),%rsi
               :  1137d1:	mov    %r9,0x80(%rsp)
               :  1137d9:	mov    %rcx,0x40(%rsp)
               :  1137de:	vzeroupper 
               :  1137e1:	callq  *(%rax)
               :  1137e3:	mov    0x40(%rsp),%rcx
               :  1137e8:	mov    0x80(%rsp),%r9
               :  1137f0:	mov    0x88(%rsp),%rdi
               :  1137f8:	cmpl   $0x1,0x44(%rdi)
               :  1137fc:	sbb    %rax,%rax
               :  1137ff:	and    $0xffffffffffefe000,%rax
               :  113805:	lea    0x1020c0(%rdi,%rax,1),%rax
               :  11380d:	movzwl 0x2(%rax),%edx
               :  113811:	movzwl (%rax),%eax
               :  113814:	mov    %dx,0x58(%r13)
               :  113819:	sub    $0xffffffffffffff80,%rdx
               :  11381d:	lea    0x0(%r13,%rdx,1),%rsi
               :  113822:	add    -0x8(%r13),%rdx
               :  113826:	mov    %rdx,0x8(%r13)
               :  11382a:	cmp    $0x80,%ax
               :  11382e:	mov    $0x80,%edx
               :  113833:	mov    %ax,0x36(%r13)
               :  113838:	cmova  %edx,%eax
               :  11383b:	xor    %r10d,%r10d
               :  11383e:	mov    %rsi,0x0(%r13)
               :  113842:	mov    %ax,0x10(%r13)
               :  113847:	mov    %r10w,0x28(%r13)
               :  11384c:	movq   $0x0,0x18(%r13)
               :  113854:	jmpq   1113ab <mlx5_tx_burst_mtiv_ts+0x45eb>
               :  113859:	vmovdqu64 %ymm0,(%rsi)
               :  11385f:	vmovdqu64 -0x20(%rcx,%r11,1),%ymm0
               :  113867:	vmovdqu64 %ymm0,-0x20(%rsi,%r11,1)
               :  11386f:	jmpq   10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  113874:	mov    0x0(%r13),%rax
               :  113878:	movzwl 0x58(%r13),%edx
               :  11387d:	add    $0xffffffffffffff80,%rax
               :  113881:	sub    %rdx,%rax
               :  113884:	movzwl 0x12(%rax),%esi
               :  113888:	lea    0x12(%rax),%rdx
               :  11388c:	cmp    $0x1,%si
               :  113890:	jne    1159ad <mlx5_tx_burst_mtiv_ts+0x8bed>
               :  113896:	movw   $0x0,0x12(%rax)
               :  11389c:	mov    %r9,0x18(%rsp)
               :  1138a1:	mov    %rcx,0x80(%rsp)
               :  1138a9:	movq   $0x0,0x40(%rax)
               :  1138b1:	movw   $0x1,0x14(%rax)
               :  1138b7:	movw   $0x1,0x12(%rax)
               :  1138bd:	mov    %rax,0x170(%rsp)
               :  1138c5:	mov    0x38(%rax),%rdi
               :  1138c9:	mov    %rdi,0x40(%rsp)
               :  1138ce:	vzeroupper 
               :  1138d1:	data16 lea 0x8256f(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  1138d9:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  1138e1:	mov    0x40(%rsp),%rdi
               :  1138e6:	mov    0x80(%rsp),%rcx
               :  1138ee:	cmpl   $0x0,0x44(%rdi)
               :  1138f2:	mov    0x18(%rsp),%r9
               :  1138f7:	mov    (%rax),%eax
               :  1138f9:	je     116672 <mlx5_tx_burst_mtiv_ts+0x98b2>
               :  1138ff:	cmp    $0x7f,%eax
               :  113902:	ja     116672 <mlx5_tx_burst_mtiv_ts+0x98b2>
               :  113908:	mov    %eax,%r8d
               :  11390b:	imul   $0x2040,%r8,%r8
               :  113912:	add    0x60(%rdi),%r8
               :  113916:	je     116672 <mlx5_tx_burst_mtiv_ts+0x98b2>
               :  11391c:	mov    0x4(%r8),%esi
               :  113920:	test   %esi,%esi
               :  113922:	je     116672 <mlx5_tx_burst_mtiv_ts+0x98b2>
               :  113928:	mov    0x8(%r8),%edx
               :  11392c:	lea    0x1(%rdx),%eax
               :  11392f:	cmp    %eax,%esi
               :  113931:	jb     115953 <mlx5_tx_burst_mtiv_ts+0x8b93>
               :  113937:	mov    %eax,0x8(%r8)
               :  11393b:	lea    0x40(%r8,%rdx,8),%rsi
               :  113940:	mov    0x170(%rsp),%rax
               :  113948:	mov    %rax,(%rsi)
               :  11394b:	jmpq   1137f0 <mlx5_tx_burst_mtiv_ts+0x6a30>
               :  113950:	test   %rdi,%rdi
               :  113953:	je     110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  113959:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm0
               :  113961:	vmovdqu64 %ymm0,-0x20(%rdx,%rdi,1)
               :  113969:	jmpq   110750 <mlx5_tx_burst_mtiv_ts+0x3990>
               :  11396e:	vzeroupper 
               :  113971:	jmpq   111c9b <mlx5_tx_burst_mtiv_ts+0x4edb>
               :  113976:	test   %rax,%rax
               :  113979:	je     10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  11397f:	vmovdqu64 -0x20(%rdx,%rax,1),%ymm0
               :  113987:	vmovdqa64 %ymm0,0x60(%rsp)
               :  11398f:	vmovdqu64 %ymm0,-0x20(%r14,%rax,1)
               :  113997:	jmpq   10dc18 <mlx5_tx_burst_mtiv_ts+0xe58>
               :  11399c:	movslq 0x58(%r15),%rax
               :  1139a0:	mov    %ecx,0x90(%rsp)
               :  1139a7:	lea    0x40(%rbx),%rsi
               :  1139ab:	cmp    $0xf,%eax
               :  1139ae:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1139b4:	shl    $0x7,%rax
               :  1139b8:	add    0x82551(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1139bf:	mov    %r15,%rdi
               :  1139c2:	mov    %rsi,0xa0(%rsp)
               :  1139ca:	callq  *0x70(%rax)
               :  1139cd:	movl   $0x1,0x8(%rbx)
               :  1139d4:	mov    0x90(%rsp),%ecx
               :  1139db:	mov    0xa0(%rsp),%rsi
               :  1139e3:	jmpq   1126ca <mlx5_tx_burst_mtiv_ts+0x590a>
               :  1139e8:	movslq 0x2a0(%rdi),%rdx
               :  1139ef:	sub    %rdx,%rax
               :  1139f2:	mov    %rax,%rdi
               :  1139f5:	movzwl %cx,%eax
               :  1139f8:	shl    $0x8,%eax
               :  1139fb:	or     $0x200000f,%eax
               :  113a00:	bswap  %eax
               :  113a02:	mov    %eax,(%rsi)
               :  113a04:	mov    0x28(%r12),%eax
               :  113a09:	or     $0x3,%eax
               :  113a0c:	bswap  %eax
               :  113a0e:	lea    0x10(%rsi),%r8
               :  113a12:	and    $0x4,%r9d
               :  113a16:	mov    %eax,0x4(%rsi)
               :  113a19:	movq   $0x4000000,0x8(%rsi)
               :  113a21:	movq   $0x5000000,0x10(%rsi)
               :  113a29:	movq   $0x0,0x8(%r8)
               :  113a31:	je     113a68 <mlx5_tx_burst_mtiv_ts+0x6ca8>
               :  113a33:	mov    %rdi,%rax
               :  113a36:	shr    $0x9,%rax
               :  113a3a:	movabs $0x44b82fa09b5a53,%rdx
               :  113a44:	mul    %rdx
               :  113a47:	mov    %rdx,%rax
               :  113a4a:	shr    $0xb,%rax
               :  113a4e:	mov    %rax,%rdx
               :  113a51:	imul   $0x3b9aca00,%rax,%rax
               :  113a58:	shl    $0x20,%rdx
               :  113a5c:	sub    %rax,%rdi
               :  113a5f:	mov    %rdi,%rax
               :  113a62:	mov    %rdx,%rdi
               :  113a65:	or     %rax,%rdi
               :  113a68:	mov    %rdi,%rax
               :  113a6b:	bswap  %rax
               :  113a6e:	mov    %rax,0x10(%r8)
               :  113a72:	mov    0x130(%r12),%rax
               :  113a7a:	mov    %rax,0x18(%r8)
               :  113a7e:	jmpq   110459 <mlx5_tx_burst_mtiv_ts+0x3699>
               :  113a83:	movslq 0x58(%r14),%rax
               :  113a87:	mov    %r10,0x88(%rsp)
               :  113a8f:	mov    %r8d,0xc8(%rsp)
               :  113a97:	cmp    $0xf,%eax
               :  113a9a:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  113aa0:	shl    $0x7,%rax
               :  113aa4:	lea    0x110(%rsp),%rsi
               :  113aac:	add    0x8245d(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  113ab3:	mov    $0x1,%edx
               :  113ab8:	mov    %r14,%rdi
               :  113abb:	callq  *0x70(%rax)
               :  113abe:	mov    0x88(%rsp),%r10
               :  113ac6:	mov    0xc8(%rsp),%r8d
               :  113ace:	jmpq   111137 <mlx5_tx_burst_mtiv_ts+0x4377>
               :  113ad3:	lea    0x5c(%r14),%rcx
               :  113ad7:	mov    $0x1,%eax
               :  113adc:	jmpq   10ea8a <mlx5_tx_burst_mtiv_ts+0x1cca>
               :  113ae1:	xor    %eax,%eax
               :  113ae3:	jmpq   10ea8a <mlx5_tx_burst_mtiv_ts+0x1cca>
               :  113ae8:	mov    %r15,%r10
               :  113aeb:	movzwl 0xdc(%rsp),%r15d
               :  113af4:	mov    %rbx,0xc0(%rsp)
               :  113afc:	movzwl %r15w,%ebx
               :  113b00:	jmpq   10de01 <mlx5_tx_burst_mtiv_ts+0x1041>
               :  113b05:	lea    0x70(%r14),%rcx
               :  113b09:	mov    $0x2,%eax
               :  113b0e:	jmpq   10ea8a <mlx5_tx_burst_mtiv_ts+0x1cca>
               :  113b13:	movslq 0x2a0(%rdi),%rdx
               :  113b1a:	sub    %rdx,%rax
               :  113b1d:	mov    %rax,%rdi
               :  113b20:	movzwl %cx,%eax
               :  113b23:	shl    $0x8,%eax
               :  113b26:	or     $0x200000f,%eax
               :  113b2b:	bswap  %eax
               :  113b2d:	mov    %eax,(%rsi)
               :  113b2f:	mov    0x28(%r12),%eax
               :  113b34:	or     $0x3,%eax
               :  113b37:	bswap  %eax
               :  113b39:	lea    0x10(%rsi),%r8
               :  113b3d:	and    $0x4,%r9d
               :  113b41:	mov    %eax,0x4(%rsi)
               :  113b44:	movq   $0x4000000,0x8(%rsi)
               :  113b4c:	movq   $0x5000000,0x10(%rsi)
               :  113b54:	movq   $0x0,0x8(%r8)
               :  113b5c:	je     113b93 <mlx5_tx_burst_mtiv_ts+0x6dd3>
               :  113b5e:	mov    %rdi,%rax
               :  113b61:	shr    $0x9,%rax
               :  113b65:	movabs $0x44b82fa09b5a53,%rdx
               :  113b6f:	mul    %rdx
               :  113b72:	mov    %rdx,%rax
               :  113b75:	shr    $0xb,%rax
               :  113b79:	mov    %rax,%rdx
               :  113b7c:	imul   $0x3b9aca00,%rax,%rax
               :  113b83:	shl    $0x20,%rdx
               :  113b87:	sub    %rax,%rdi
               :  113b8a:	mov    %rdi,%rax
               :  113b8d:	mov    %rdx,%rdi
               :  113b90:	or     %rax,%rdi
               :  113b93:	mov    %rdi,%rax
               :  113b96:	bswap  %rax
               :  113b99:	mov    %rax,0x10(%r8)
               :  113b9d:	mov    0x130(%r12),%rax
               :  113ba5:	mov    %rax,0x18(%r8)
               :  113ba9:	jmpq   110d5a <mlx5_tx_burst_mtiv_ts+0x3f9a>
               :  113bae:	mov    %rdx,0xa0(%rsp)
               :  113bb6:	mov    %rdi,0xc0(%rsp)
               :  113bbe:	vzeroupper 
               :  113bc1:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :  113bc6:	mov    (%r15),%rax
               :  113bc9:	mov    0xa0(%rsp),%rdx
               :  113bd1:	mov    0xc0(%rsp),%rdi
               :  113bd9:	jmpq   10e87f <mlx5_tx_burst_mtiv_ts+0x1abf>
               :  113bde:	movslq 0x58(%r12),%rax
               :  113be3:	cmp    $0xf,%eax
               :  113be6:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  113bec:	shl    $0x7,%rax
               :  113bf0:	mov    0x80(%rsp),%rsi
               :  113bf8:	add    0x82311(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  113bff:	mov    $0x1,%edx
               :  113c04:	mov    %r12,%rdi
               :  113c07:	callq  *0x70(%rax)
               :  113c0a:	jmpq   112f94 <mlx5_tx_burst_mtiv_ts+0x61d4>
               :  113c0f:	mov    0x48(%r12),%rcx
               :  113c14:	test   %rcx,%rcx
               :  113c17:	je     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  113c1d:	cmp    %rcx,%rax
               :  113c20:	jb     113c2d <mlx5_tx_burst_mtiv_ts+0x6e6d>
               :  113c22:	cmp    0x50(%r12),%rax
               :  113c27:	jb     1160fa <mlx5_tx_burst_mtiv_ts+0x933a>
               :  113c2d:	mov    0x5c(%r12),%rdx
               :  113c32:	test   %rdx,%rdx
               :  113c35:	je     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  113c3b:	cmp    %rax,%rdx
               :  113c3e:	ja     113c4b <mlx5_tx_burst_mtiv_ts+0x6e8b>
               :  113c40:	cmp    %rax,0x64(%r12)
               :  113c45:	ja     11610a <mlx5_tx_burst_mtiv_ts+0x934a>
               :  113c4b:	mov    0x70(%r12),%rdx
               :  113c50:	test   %rdx,%rdx
               :  113c53:	je     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  113c59:	cmp    %rdx,%rax
               :  113c5c:	jb     113c69 <mlx5_tx_burst_mtiv_ts+0x6ea9>
               :  113c5e:	cmp    0x78(%r12),%rax
               :  113c63:	jb     11681c <mlx5_tx_burst_mtiv_ts+0x9a5c>
               :  113c69:	mov    0x84(%r12),%rdx
               :  113c71:	test   %rdx,%rdx
               :  113c74:	je     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  113c7a:	cmp    %rdx,%rax
               :  113c7d:	jb     113c8d <mlx5_tx_burst_mtiv_ts+0x6ecd>
               :  113c7f:	cmp    0x8c(%r12),%rax
               :  113c87:	jb     11682b <mlx5_tx_burst_mtiv_ts+0x9a6b>
               :  113c8d:	mov    0x98(%r12),%rdx
               :  113c95:	test   %rdx,%rdx
               :  113c98:	je     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  113c9a:	cmp    %rdx,%rax
               :  113c9d:	jb     113cad <mlx5_tx_burst_mtiv_ts+0x6eed>
               :  113c9f:	cmp    0xa0(%r12),%rax
               :  113ca7:	jb     11683d <mlx5_tx_burst_mtiv_ts+0x9a7d>
               :  113cad:	mov    0xac(%r12),%rdx
               :  113cb5:	test   %rdx,%rdx
               :  113cb8:	je     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  113cba:	cmp    %rdx,%rax
               :  113cbd:	jb     113ccd <mlx5_tx_burst_mtiv_ts+0x6f0d>
               :  113cbf:	cmp    0xb4(%r12),%rax
               :  113cc7:	jb     11684f <mlx5_tx_burst_mtiv_ts+0x9a8f>
               :  113ccd:	mov    0xc0(%r12),%rdx
               :  113cd5:	test   %rdx,%rdx
               :  113cd8:	je     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  113cda:	cmp    %rdx,%rax
               :  113cdd:	jb     113ced <mlx5_tx_burst_mtiv_ts+0x6f2d>
               :  113cdf:	cmp    0xc8(%r12),%rax
               :  113ce7:	jb     11695b <mlx5_tx_burst_mtiv_ts+0x9b9b>
               :  113ced:	mov    0xd4(%r12),%rdx
               :  113cf5:	cmp    %rdx,%rax
               :  113cf8:	jb     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  113cfa:	test   %rdx,%rdx
               :  113cfd:	je     113d0d <mlx5_tx_burst_mtiv_ts+0x6f4d>
               :  113cff:	cmp    0xdc(%r12),%rax
               :  113d07:	jb     1164ca <mlx5_tx_burst_mtiv_ts+0x970a>
               :  113d0d:	mov    %r9,%rsi
               :  113d10:	mov    %r15,%rdi
               :  113d13:	mov    %r9,0xd0(%rsp)
               :  113d1b:	vzeroupper 
               :  113d1e:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :  113d23:	mov    0xd0(%rsp),%r9
               :  113d2b:	jmpq   111d8a <mlx5_tx_burst_mtiv_ts+0x4fca>
               :  113d30:	movslq 0x58(%r15),%rax
               :  113d34:	mov    %ecx,0xa0(%rsp)
               :  113d3b:	cmp    $0xf,%eax
               :  113d3e:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  113d44:	shl    $0x7,%rax
               :  113d48:	lea    0x128(%rsp),%rsi
               :  113d50:	add    0x821b9(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  113d57:	mov    $0x1,%edx
               :  113d5c:	mov    %r15,%rdi
               :  113d5f:	callq  *0x70(%rax)
               :  113d62:	mov    0xa0(%rsp),%ecx
               :  113d69:	jmpq   1126d5 <mlx5_tx_burst_mtiv_ts+0x5915>
               :  113d6e:	movslq 0x58(%rdi),%rax
               :  113d72:	mov    %r9,0x40(%rsp)
               :  113d77:	mov    %r8,0x88(%rsp)
               :  113d7f:	cmp    $0xf,%eax
               :  113d82:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  113d88:	shl    $0x7,%rax
               :  113d8c:	lea    0x168(%rsp),%rsi
               :  113d94:	add    0x82175(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  113d9b:	mov    $0x1,%edx
               :  113da0:	callq  *0x70(%rax)
               :  113da3:	mov    0x40(%rsp),%r9
               :  113da8:	mov    0x88(%rsp),%r8
               :  113db0:	jmpq   10e315 <mlx5_tx_burst_mtiv_ts+0x1555>
               :  113db5:	movslq 0x58(%r12),%rax
               :  113dba:	mov    %r9,0x40(%rsp)
               :  113dbf:	mov    %r8d,0x88(%rsp)
               :  113dc7:	lea    0x40(%r13),%r14
               :  113dcb:	cmp    $0xf,%eax
               :  113dce:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  113dd4:	shl    $0x7,%rax
               :  113dd8:	add    0x82131(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  113ddf:	mov    %r14,%rsi
               :  113de2:	mov    %r12,%rdi
               :  113de5:	callq  *0x70(%rax)
               :  113de8:	movl   $0x1,0x8(%r13)
               :  113df0:	mov    0x40(%rsp),%r9
               :  113df5:	mov    0x88(%rsp),%r8d
               :  113dfd:	jmpq   110be7 <mlx5_tx_burst_mtiv_ts+0x3e27>
               :  113e02:	lea    0x2d(%rsi),%edi
               :  113e05:	shr    $0x4,%edi
               :  113e08:	lea    0x3(%rdi),%eax
               :  113e0b:	shr    $0x2,%eax
               :  113e0e:	mov    %eax,%r10d
               :  113e11:	movzwl %r13w,%eax
               :  113e15:	cmp    %eax,%r10d
               :  113e18:	ja     1166d7 <mlx5_tx_burst_mtiv_ts+0x9917>
               :  113e1e:	movzwl 0xa(%r14),%eax
               :  113e23:	movzwl 0x10(%r14),%ebx
               :  113e28:	and    %eax,%ebx
               :  113e2a:	movzwl %bx,%ebx
               :  113e2d:	shl    $0x6,%rbx
               :  113e31:	shl    $0x8,%eax
               :  113e34:	add    0xf8(%r14),%rbx
               :  113e3b:	or     $0xa,%eax
               :  113e3e:	bswap  %eax
               :  113e40:	mov    %eax,(%rbx)
               :  113e42:	mov    0x28(%r14),%eax
               :  113e46:	or     %edi,%eax
               :  113e48:	bswap  %eax
               :  113e4a:	mov    0x82187(%rip),%rdi        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :  113e51:	mov    %eax,0x4(%rbx)
               :  113e54:	movq   $0x4000000,0x8(%rbx)
               :  113e5c:	movq   $0x0,0x10(%rbx)
               :  113e64:	xor    %eax,%eax
               :  113e66:	test   %rcx,(%rdi)
               :  113e69:	je     113e7b <mlx5_tx_burst_mtiv_ts+0x70bb>
               :  113e6b:	mov    0x820de(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :  113e72:	movslq (%rax),%rax
               :  113e75:	mov    (%r15,%rax,1),%eax
               :  113e79:	bswap  %eax
               :  113e7b:	mov    %eax,0x18(%rbx)
               :  113e7e:	mov    %esi,%eax
               :  113e80:	xchg   %al,%ah
               :  113e82:	mov    %ax,0x1c(%rbx)
               :  113e86:	movzwl (%rdx),%eax
               :  113e89:	mov    %ax,0x1e(%rbx)
               :  113e8d:	test   %r12d,%r12d
               :  113e90:	jne    11560f <mlx5_tx_burst_mtiv_ts+0x884f>
               :  113e96:	vmovdqu64 0x2(%rdx),%xmm6
               :  113ea0:	lea    0x12(%rdx),%rax
               :  113ea4:	vmovups %xmm6,0x20(%rbx)
               :  113ea9:	lea    -0x12(%rsi),%r11d
               :  113ead:	mov    0x100(%r14),%rsi
               :  113eb4:	lea    0x30(%rbx),%rdx
               :  113eb8:	sub    %rdx,%rsi
               :  113ebb:	cmp    %esi,%r11d
               :  113ebe:	mov    %r15,0xc0(%rsp)
               :  113ec6:	cmovb  %r11d,%esi
               :  113eca:	mov    %rax,%rdi
               :  113ecd:	or     %rdx,%rdi
               :  113ed0:	and    $0x1f,%edi
               :  113ed3:	mov    %esi,%ecx
               :  113ed5:	jne    11489b <mlx5_tx_burst_mtiv_ts+0x7adb>
               :  113edb:	cmp    $0xf,%rcx
               :  113edf:	jbe    1155b6 <mlx5_tx_burst_mtiv_ts+0x87f6>
               :  113ee5:	cmp    $0x20,%rcx
               :  113ee9:	jbe    115eef <mlx5_tx_burst_mtiv_ts+0x912f>
               :  113eef:	cmp    $0x40,%rcx
               :  113ef3:	jbe    1164a9 <mlx5_tx_burst_mtiv_ts+0x96e9>
               :  113ef9:	lea    -0x40(%rcx),%r8
               :  113efd:	shr    $0x6,%r8
               :  113f01:	lea    0x1(%r8),%rdi
               :  113f05:	shl    $0x6,%rdi
               :  113f09:	lea    (%rdx,%rdi,1),%r15
               :  113f0d:	mov    %rax,%r9
               :  113f10:	vmovdqu64 (%r9),%ymm3
               :  113f16:	add    $0x40,%rdx
               :  113f1a:	vmovdqu64 %ymm3,-0x40(%rdx)
               :  113f21:	vmovdqu64 0x20(%r9),%ymm4
               :  113f28:	add    $0x40,%r9
               :  113f2c:	vmovdqu64 %ymm4,-0x20(%rdx)
               :  113f33:	cmp    %r15,%rdx
               :  113f36:	jne    113f10 <mlx5_tx_burst_mtiv_ts+0x7150>
               :  113f38:	imul   $0xffffffffffffffc0,%r8,%r8
               :  113f3c:	lea    -0x80(%rcx,%r8,1),%r8
               :  113f41:	add    %r8,%rdi
               :  113f44:	add    %rax,%rdi
               :  113f47:	vmovdqu64 (%rdi),%ymm5
               :  113f4d:	add    %r8,%rdx
               :  113f50:	vmovdqu64 %ymm5,(%rdx)
               :  113f56:	vmovdqu64 0x20(%rdi),%ymm6
               :  113f5d:	vmovdqu64 %ymm6,0x20(%rdx)
               :  113f64:	sub    %esi,%r11d
               :  113f67:	jne    115edd <mlx5_tx_burst_mtiv_ts+0x911d>
               :  113f6d:	add    %r10w,0xa(%r14)
               :  113f72:	mov    0xc0(%rsp),%r15
               :  113f7a:	sub    %r10d,%r13d
               :  113f7d:	movzwl 0x12(%r15),%eax
               :  113f82:	cmp    $0x1,%ax
               :  113f86:	jne    115e55 <mlx5_tx_burst_mtiv_ts+0x9095>
               :  113f8c:	mov    0x18(%r15),%rax
               :  113f90:	movabs $0x6000000000000000,%rdx
               :  113f9a:	mov    0x38(%r15),%r8
               :  113f9e:	test   %rdx,%rax
               :  113fa1:	je     115161 <mlx5_tx_burst_mtiv_ts+0x83a1>
               :  113fa7:	movabs $0x2000000000000000,%rdi
               :  113fb1:	test   %rdi,%rax
               :  113fb4:	je     115b51 <mlx5_tx_burst_mtiv_ts+0x8d91>
               :  113fba:	cmpl   $0x1,0x44(%r8)
               :  113fbf:	sbb    %rax,%rax
               :  113fc2:	and    $0xffffffffffefe000,%rax
               :  113fc8:	testb  $0x1,0x1020c4(%r8,%rax,1)
               :  113fd1:	jne    115120 <mlx5_tx_burst_mtiv_ts+0x8360>
               :  113fd7:	mov    0x50(%r15),%rdx
               :  113fdb:	movzwl 0x10(%rdx),%ecx
               :  113fdf:	lea    0x10(%rdx),%rax
               :  113fe3:	dec    %cx
               :  113fe6:	jne    116721 <mlx5_tx_burst_mtiv_ts+0x9961>
               :  113fec:	movw   $0x0,0x10(%rdx)
               :  113ff2:	mov    0x50(%r15),%rax
               :  113ff6:	mov    (%r15),%rdi
               :  113ff9:	mov    0x8(%rax),%rsi
               :  113ffd:	mov    %r8,0xc0(%rsp)
               :  114005:	vzeroupper 
               :  114008:	callq  *(%rax)
               :  11400a:	mov    0xc0(%rsp),%r8
               :  114012:	cmpl   $0x1,0x44(%r8)
               :  114017:	sbb    %rax,%rax
               :  11401a:	and    $0xffffffffffefe000,%rax
               :  114020:	lea    0x1020c0(%r8,%rax,1),%rax
               :  114028:	movzwl 0x2(%rax),%edx
               :  11402c:	movzwl (%rax),%eax
               :  11402f:	mov    %dx,0x58(%r15)
               :  114034:	sub    $0xffffffffffffff80,%rdx
               :  114038:	lea    (%r15,%rdx,1),%rcx
               :  11403c:	add    -0x8(%r15),%rdx
               :  114040:	mov    %rdx,0x8(%r15)
               :  114044:	cmp    $0x80,%ax
               :  114048:	mov    $0x80,%edx
               :  11404d:	mov    %ax,0x36(%r15)
               :  114052:	cmova  %edx,%eax
               :  114055:	mov    %rcx,(%r15)
               :  114058:	mov    %ax,0x10(%r15)
               :  11405d:	movw   $0x0,0x28(%r15)
               :  114064:	movq   $0x0,0x18(%r15)
               :  11406c:	mov    0x38(%r15),%r8
               :  114070:	cmpq   $0x0,0x40(%r15)
               :  114075:	je     11407f <mlx5_tx_burst_mtiv_ts+0x72bf>
               :  114077:	movq   $0x0,0x40(%r15)
               :  11407f:	cmpw   $0x1,0x14(%r15)
               :  114085:	je     114092 <mlx5_tx_burst_mtiv_ts+0x72d2>
               :  114087:	mov    $0x1,%r9d
               :  11408d:	mov    %r9w,0x14(%r15)
               :  114092:	mov    %r8,0xc0(%rsp)
               :  11409a:	mov    %r15,0x190(%rsp)
               :  1140a2:	data16 lea 0x81d9e(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  1140aa:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  1140b2:	mov    0xc0(%rsp),%r8
               :  1140ba:	mov    0x44(%r8),%ecx
               :  1140be:	mov    (%rax),%eax
               :  1140c0:	test   %ecx,%ecx
               :  1140c2:	je     1158ba <mlx5_tx_burst_mtiv_ts+0x8afa>
               :  1140c8:	cmp    $0x7f,%eax
               :  1140cb:	ja     1158ba <mlx5_tx_burst_mtiv_ts+0x8afa>
               :  1140d1:	mov    %eax,%ecx
               :  1140d3:	imul   $0x2040,%rcx,%rcx
               :  1140da:	add    0x60(%r8),%rcx
               :  1140de:	je     1158ba <mlx5_tx_burst_mtiv_ts+0x8afa>
               :  1140e4:	mov    0x4(%rcx),%esi
               :  1140e7:	test   %esi,%esi
               :  1140e9:	je     1158ba <mlx5_tx_burst_mtiv_ts+0x8afa>
               :  1140ef:	mov    0x8(%rcx),%edx
               :  1140f2:	lea    0x1(%rdx),%eax
               :  1140f5:	cmp    %eax,%esi
               :  1140f7:	jb     115882 <mlx5_tx_burst_mtiv_ts+0x8ac2>
               :  1140fd:	mov    %eax,0x8(%rcx)
               :  114100:	lea    0x40(%rcx,%rdx,8),%rsi
               :  114105:	mov    0x190(%rsp),%rax
               :  11410d:	mov    %rax,(%rsi)
               :  114110:	jmpq   10e8e4 <mlx5_tx_burst_mtiv_ts+0x1b24>
               :  114115:	lea    0x98(%r14),%rcx
               :  11411c:	mov    $0x4,%eax
               :  114121:	jmpq   10ea8a <mlx5_tx_burst_mtiv_ts+0x1cca>
               :  114126:	lea    0x84(%r14),%rcx
               :  11412d:	mov    $0x3,%eax
               :  114132:	jmpq   10ea8a <mlx5_tx_burst_mtiv_ts+0x1cca>
               :  114137:	mov    0x0(%r13),%rax
               :  11413b:	movzwl 0x58(%r13),%edx
               :  114140:	add    $0xffffffffffffff80,%rax
               :  114144:	sub    %rdx,%rax
               :  114147:	movzwl 0x12(%rax),%esi
               :  11414b:	lea    0x12(%rax),%rdx
               :  11414f:	cmp    $0x1,%si
               :  114153:	jne    116806 <mlx5_tx_burst_mtiv_ts+0x9a46>
               :  114159:	movw   $0x0,0x12(%rax)
               :  11415f:	mov    %r10,0x40(%rsp)
               :  114164:	mov    %r8d,0x88(%rsp)
               :  11416c:	movq   $0x0,0x40(%rax)
               :  114174:	movw   $0x1,0x14(%rax)
               :  11417a:	movw   $0x1,0x12(%rax)
               :  114180:	mov    %rax,0x148(%rsp)
               :  114188:	mov    0x38(%rax),%rdi
               :  11418c:	mov    %rdi,0xc8(%rsp)
               :  114194:	vzeroupper 
               :  114197:	data16 lea 0x81ca9(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  11419f:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  1141a7:	mov    0xc8(%rsp),%rdi
               :  1141af:	mov    0x88(%rsp),%r8d
               :  1141b7:	cmpl   $0x0,0x44(%rdi)
               :  1141bb:	mov    0x40(%rsp),%r10
               :  1141c0:	mov    (%rax),%eax
               :  1141c2:	je     1167b9 <mlx5_tx_burst_mtiv_ts+0x99f9>
               :  1141c8:	cmp    $0x7f,%eax
               :  1141cb:	ja     1167b9 <mlx5_tx_burst_mtiv_ts+0x99f9>
               :  1141d1:	mov    %eax,%r11d
               :  1141d4:	imul   $0x2040,%r11,%r11
               :  1141db:	add    0x60(%rdi),%r11
               :  1141df:	je     1167b9 <mlx5_tx_burst_mtiv_ts+0x99f9>
               :  1141e5:	mov    0x4(%r11),%esi
               :  1141e9:	test   %esi,%esi
               :  1141eb:	je     1167b9 <mlx5_tx_burst_mtiv_ts+0x99f9>
               :  1141f1:	mov    0x8(%r11),%edx
               :  1141f5:	lea    0x1(%rdx),%eax
               :  1141f8:	cmp    %eax,%esi
               :  1141fa:	jb     116753 <mlx5_tx_burst_mtiv_ts+0x9993>
               :  114200:	mov    %eax,0x8(%r11)
               :  114204:	lea    0x40(%r11,%rdx,8),%rsi
               :  114209:	mov    0x148(%rsp),%rax
               :  114211:	mov    %rax,(%rsi)
               :  114214:	jmpq   11101b <mlx5_tx_burst_mtiv_ts+0x425b>
               :  114219:	vzeroupper 
               :  11421c:	jmpq   111080 <mlx5_tx_burst_mtiv_ts+0x42c0>
               :  114221:	movl   $0x0,0x1c(%rbx)
               :  114228:	jmpq   11279f <mlx5_tx_burst_mtiv_ts+0x59df>
               :  11422d:	mov    0x81d1c(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :  114234:	movslq (%rax),%rax
               :  114237:	mov    (%r15,%rax,1),%eax
               :  11423b:	bswap  %eax
               :  11423d:	jmpq   112784 <mlx5_tx_burst_mtiv_ts+0x59c4>
               :  114242:	movslq 0x58(%r12),%rax
               :  114247:	mov    %r9,0x40(%rsp)
               :  11424c:	mov    %r8d,0x88(%rsp)
               :  114254:	cmp    $0xf,%eax
               :  114257:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  11425d:	shl    $0x7,%rax
               :  114261:	lea    0xf8(%rsp),%rsi
               :  114269:	add    0x81ca0(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  114270:	mov    $0x1,%edx
               :  114275:	mov    %r12,%rdi
               :  114278:	callq  *0x70(%rax)
               :  11427b:	mov    0x40(%rsp),%r9
               :  114280:	mov    0x88(%rsp),%r8d
               :  114288:	jmpq   110bf2 <mlx5_tx_burst_mtiv_ts+0x3e32>
               :  11428d:	vmovdqu64 (%rax),%ymm3
               :  114293:	vmovdqu64 %ymm3,(%rbx)
               :  114299:	vmovdqu64 -0x20(%rax,%rsi,1),%ymm4
               :  1142a1:	vmovdqu64 %ymm4,-0x20(%rbx,%rsi,1)
               :  1142a9:	jmpq   112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  1142ae:	vmovdqu64 (%rax),%xmm1
               :  1142b4:	vmovups %xmm1,(%rbx)
               :  1142b8:	vmovdqu64 0x10(%rax),%xmm2
               :  1142bf:	vmovups %xmm2,0x10(%rbx)
               :  1142c4:	vmovdqu64 -0x10(%rax,%rsi,1),%xmm3
               :  1142cc:	vmovups %xmm3,-0x10(%rbx,%rsi,1)
               :  1142d2:	jmpq   112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  1142d7:	lea    0xac(%r14),%rcx
               :  1142de:	mov    $0x5,%eax
               :  1142e3:	jmpq   10ea8a <mlx5_tx_burst_mtiv_ts+0x1cca>
               :  1142e8:	vzeroupper 
               :  1142eb:	jmpq   112ef6 <mlx5_tx_burst_mtiv_ts+0x6136>
               :  1142f0:	mov    0x50(%r13),%rdx
               :  1142f4:	movzwl 0x10(%rdx),%ecx
               :  1142f8:	lea    0x10(%rdx),%rax
               :  1142fc:	cmp    $0x1,%cx
               :  114300:	jne    116a75 <mlx5_tx_burst_mtiv_ts+0x9cb5>
               :  114306:	movw   $0x0,0x10(%rdx)
               :  11430c:	mov    0x50(%r13),%rax
               :  114310:	mov    0x0(%r13),%rdi
               :  114314:	mov    0x8(%rax),%rsi
               :  114318:	vzeroupper 
               :  11431b:	callq  *(%rax)
               :  11431d:	cmpl   $0x1,0x44(%r12)
               :  114323:	sbb    %rax,%rax
               :  114326:	and    $0xffffffffffefe000,%rax
               :  11432c:	lea    0x1020c0(%r12,%rax,1),%rax
               :  114334:	movzwl 0x2(%rax),%edx
               :  114338:	movzwl (%rax),%eax
               :  11433b:	mov    %dx,0x58(%r13)
               :  114340:	sub    $0xffffffffffffff80,%rdx
               :  114344:	lea    0x0(%r13,%rdx,1),%rcx
               :  114349:	add    -0x8(%r13),%rdx
               :  11434d:	mov    %rdx,0x8(%r13)
               :  114351:	cmp    $0x80,%ax
               :  114355:	mov    $0x80,%edx
               :  11435a:	mov    %ax,0x36(%r13)
               :  11435f:	mov    0x38(%r13),%r12
               :  114363:	cmova  %edx,%eax
               :  114366:	xor    %edi,%edi
               :  114368:	mov    %rcx,0x0(%r13)
               :  11436c:	mov    %ax,0x10(%r13)
               :  114371:	mov    %di,0x28(%r13)
               :  114376:	movq   $0x0,0x18(%r13)
               :  11437e:	mov    0x44(%r12),%edx
               :  114383:	jmpq   112ef6 <mlx5_tx_burst_mtiv_ts+0x6136>
               :  114388:	testb  $0x1,0x1020c4(%r12)
               :  114391:	je     1142f0 <mlx5_tx_burst_mtiv_ts+0x7530>
               :  114397:	mov    $0x1020c0,%eax
               :  11439c:	jmpq   112eba <mlx5_tx_burst_mtiv_ts+0x60fa>
               :  1143a1:	nopl   0x0(%rax)
               :  1143a8:	mov    0x0(%r13),%rax
               :  1143ac:	movzwl 0x58(%r13),%edx
               :  1143b1:	add    $0xffffffffffffff80,%rax
               :  1143b5:	sub    %rdx,%rax
               :  1143b8:	movzwl 0x12(%rax),%ecx
               :  1143bc:	lea    0x12(%rax),%rdx
               :  1143c0:	cmp    $0x1,%cx
               :  1143c4:	jne    116022 <mlx5_tx_burst_mtiv_ts+0x9262>
               :  1143ca:	movw   $0x0,0x12(%rax)
               :  1143d0:	movq   $0x0,0x40(%rax)
               :  1143d8:	movw   $0x1,0x14(%rax)
               :  1143de:	movw   $0x1,0x12(%rax)
               :  1143e4:	mov    %rax,0x130(%rsp)
               :  1143ec:	mov    0x38(%rax),%rdi
               :  1143f0:	mov    %rdi,0x88(%rsp)
               :  1143f8:	vzeroupper 
               :  1143fb:	data16 lea 0x81a45(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  114403:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  11440b:	mov    0x88(%rsp),%rdi
               :  114413:	cmpl   $0x0,0x44(%rdi)
               :  114417:	mov    (%rax),%eax
               :  114419:	je     115ff5 <mlx5_tx_burst_mtiv_ts+0x9235>
               :  11441f:	cmp    $0x7f,%eax
               :  114422:	ja     115ff5 <mlx5_tx_burst_mtiv_ts+0x9235>
               :  114428:	mov    %eax,%ecx
               :  11442a:	imul   $0x2040,%rcx,%rcx
               :  114431:	add    0x60(%rdi),%rcx
               :  114435:	je     115ff5 <mlx5_tx_burst_mtiv_ts+0x9235>
               :  11443b:	mov    0x4(%rcx),%esi
               :  11443e:	test   %esi,%esi
               :  114440:	je     115ff5 <mlx5_tx_burst_mtiv_ts+0x9235>
               :  114446:	mov    0x8(%rcx),%edx
               :  114449:	lea    0x1(%rdx),%eax
               :  11444c:	cmp    %eax,%esi
               :  11444e:	jb     11603b <mlx5_tx_burst_mtiv_ts+0x927b>
               :  114454:	mov    %eax,0x8(%rcx)
               :  114457:	lea    0x40(%rcx,%rdx,8),%rsi
               :  11445c:	mov    0x130(%rsp),%rax
               :  114464:	mov    %rax,(%rsi)
               :  114467:	jmpq   11431d <mlx5_tx_burst_mtiv_ts+0x755d>
               :  11446c:	movzwl 0x28(%r15),%eax
               :  114471:	movzwl 0x24(%r14),%edx
               :  114476:	add    $0x4,%rax
               :  11447a:	cmp    %rdx,%rax
               :  11447d:	jbe    10e972 <mlx5_tx_burst_mtiv_ts+0x1bb2>
               :  114483:	jmpq   10e664 <mlx5_tx_burst_mtiv_ts+0x18a4>
               :  114488:	nopl   0x0(%rax,%rax,1)
               :  114490:	lock decw (%rdx)
               :  114494:	je     111821 <mlx5_tx_burst_mtiv_ts+0x4a61>
               :  11449a:	vzeroupper 
               :  11449d:	jmpq   10ffe2 <mlx5_tx_burst_mtiv_ts+0x3222>
               :  1144a2:	vzeroupper 
               :  1144a5:	jmpq   112630 <mlx5_tx_burst_mtiv_ts+0x5870>
               :  1144aa:	mov    0x50(%rbx),%rdx
               :  1144ae:	movzwl 0x10(%rdx),%esi
               :  1144b2:	lea    0x10(%rdx),%rax
               :  1144b6:	cmp    $0x1,%si
               :  1144ba:	jne    116a5c <mlx5_tx_burst_mtiv_ts+0x9c9c>
               :  1144c0:	movw   $0x0,0x10(%rdx)
               :  1144c6:	mov    0x50(%rbx),%rax
               :  1144ca:	mov    (%rbx),%rdi
               :  1144cd:	mov    0x8(%rax),%rsi
               :  1144d1:	mov    %ecx,0xa0(%rsp)
               :  1144d8:	vzeroupper 
               :  1144db:	callq  *(%rax)
               :  1144dd:	mov    0xa0(%rsp),%ecx
               :  1144e4:	cmpl   $0x1,0x44(%r15)
               :  1144e9:	sbb    %rax,%rax
               :  1144ec:	and    $0xffffffffffefe000,%rax
               :  1144f2:	lea    0x1020c0(%r15,%rax,1),%rax
               :  1144fa:	movzwl 0x2(%rax),%edx
               :  1144fe:	movzwl (%rax),%eax
               :  114501:	mov    %dx,0x58(%rbx)
               :  114505:	sub    $0xffffffffffffff80,%rdx
               :  114509:	lea    (%rbx,%rdx,1),%rsi
               :  11450d:	add    -0x8(%rbx),%rdx
               :  114511:	mov    %rdx,0x8(%rbx)
               :  114515:	cmp    $0x80,%ax
               :  114519:	mov    $0x80,%edx
               :  11451e:	mov    %ax,0x36(%rbx)
               :  114522:	cmova  %edx,%eax
               :  114525:	mov    0x38(%rbx),%r15
               :  114529:	mov    %ax,0x10(%rbx)
               :  11452d:	xor    %eax,%eax
               :  11452f:	mov    %rsi,(%rbx)
               :  114532:	mov    %ax,0x28(%rbx)
               :  114536:	movq   $0x0,0x18(%rbx)
               :  11453e:	mov    0x44(%r15),%edx
               :  114542:	jmpq   112630 <mlx5_tx_burst_mtiv_ts+0x5870>
               :  114547:	testb  $0x1,0x1020c4(%r15)
               :  11454f:	je     1144aa <mlx5_tx_burst_mtiv_ts+0x76ea>
               :  114555:	mov    $0x1020c0,%eax
               :  11455a:	jmpq   1125f5 <mlx5_tx_burst_mtiv_ts+0x5835>
               :  11455f:	nop
               :  114560:	mov    %rsi,%rdx
               :  114563:	and    $0x1f,%edx
               :  114566:	je     1153c9 <mlx5_tx_burst_mtiv_ts+0x8609>
               :  11456c:	mov    $0x20,%eax
               :  114571:	sub    %rdx,%rax
               :  114574:	lea    -0x20(%r11,%rdx,1),%rdx
               :  114579:	mov    %rdx,0x60(%rsp)
               :  11457e:	lea    (%rcx,%rax,1),%rdx
               :  114582:	add    %rsi,%rax
               :  114585:	mov    %rdx,0x88(%rsp)
               :  11458d:	mov    %rax,0x40(%rsp)
               :  114592:	vmovdqu64 %ymm0,(%rsi)
               :  114598:	mov    %rdx,%r14
               :  11459b:	mov    0x60(%rsp),%rax
               :  1145a0:	mov    0x40(%rsp),%rdx
               :  1145a5:	add    $0xffffffffffffff80,%rax
               :  1145a9:	and    $0xffffffffffffff80,%rax
               :  1145ad:	lea    0x80(%r14,%rax,1),%rax
               :  1145b5:	mov    %rax,0x80(%rsp)
               :  1145bd:	mov    %r14,%rax
               :  1145c0:	mov    0x90(%rsp),%r14
               :  1145c8:	vmovdqu64 (%rax),%ymm2
               :  1145ce:	vmovdqu64 0x20(%rax),%ymm1
               :  1145d5:	vmovdqu64 0x40(%rax),%ymm0
               :  1145dc:	vmovdqu64 0x60(%rax),%ymm6
               :  1145e3:	sub    $0xffffffffffffff80,%rax
               :  1145e7:	vmovdqu64 %ymm6,0x60(%rdx)
               :  1145ee:	vmovdqu64 %ymm2,(%rdx)
               :  1145f4:	vmovdqu64 %ymm1,0x20(%rdx)
               :  1145fb:	vmovdqu64 %ymm0,0x40(%rdx)
               :  114602:	sub    $0xffffffffffffff80,%rdx
               :  114606:	cmp    0x80(%rsp),%rax
               :  11460e:	jne    1145c8 <mlx5_tx_burst_mtiv_ts+0x7808>
               :  114610:	mov    0x60(%rsp),%rdx
               :  114615:	mov    %r14,0x90(%rsp)
               :  11461d:	mov    0x88(%rsp),%r14
               :  114625:	mov    %rdx,%rax
               :  114628:	and    $0xffffffffffffff80,%rdx
               :  11462c:	mov    %rdx,0x60(%rsp)
               :  114631:	add    %rdx,%r14
               :  114634:	mov    %r14,%rdx
               :  114637:	mov    0x40(%rsp),%r14
               :  11463c:	and    $0x7f,%eax
               :  11463f:	add    0x60(%rsp),%r14
               :  114644:	jmpq   10dbd9 <mlx5_tx_burst_mtiv_ts+0xe19>
               :  114649:	mov    %rsi,%r14
               :  11464c:	mov    %rcx,%rdx
               :  11464f:	mov    %r11,%rax
               :  114652:	vmovdqu64 %ymm0,(%r14)
               :  114658:	vmovdqu64 0x20(%rdx),%ymm4
               :  11465f:	sub    $0x40,%rax
               :  114663:	vmovdqu64 %ymm4,0x20(%r14)
               :  11466a:	add    $0x40,%rdx
               :  11466e:	add    $0x40,%r14
               :  114672:	jmpq   10dbe3 <mlx5_tx_burst_mtiv_ts+0xe23>
               :  114677:	lock decw (%rdx)
               :  11467b:	jne    10f9a1 <mlx5_tx_burst_mtiv_ts+0x2be1>
               :  114681:	movw   $0x1,0x10(%rax)
               :  114687:	jmpq   1117e8 <mlx5_tx_burst_mtiv_ts+0x4a28>
               :  11468c:	nopl   0x0(%rax)
               :  114690:	lock decw (%rdx)
               :  114694:	jne    11449a <mlx5_tx_burst_mtiv_ts+0x76da>
               :  11469a:	jmpq   10ffc1 <mlx5_tx_burst_mtiv_ts+0x3201>
               :  11469f:	mov    %r15,%rdi
               :  1146a2:	and    $0x1f,%edi
               :  1146a5:	je     11542b <mlx5_tx_burst_mtiv_ts+0x866b>
               :  1146ab:	mov    $0x20,%edx
               :  1146b0:	sub    %rdi,%rdx
               :  1146b3:	lea    -0x20(%rsi,%rdi,1),%r9
               :  1146b8:	vmovdqu64 %ymm0,(%r15)
               :  1146be:	add    %rdx,%rax
               :  1146c1:	lea    (%r15,%rdx,1),%r8
               :  1146c5:	lea    -0x80(%r9),%rdx
               :  1146c9:	and    $0xffffffffffffff80,%rdx
               :  1146cd:	lea    0x80(%rax,%rdx,1),%r10
               :  1146d5:	mov    %r8,%rdi
               :  1146d8:	mov    %rax,%rdx
               :  1146db:	vmovdqu64 (%rdx),%ymm2
               :  1146e1:	vmovdqu64 0x20(%rdx),%ymm1
               :  1146e8:	vmovdqu64 0x40(%rdx),%ymm0
               :  1146ef:	vmovdqu64 0x60(%rdx),%ymm7
               :  1146f6:	sub    $0xffffffffffffff80,%rdx
               :  1146fa:	vmovdqu64 %ymm7,0x60(%rdi)
               :  114701:	vmovdqu64 %ymm2,(%rdi)
               :  114707:	vmovdqu64 %ymm1,0x20(%rdi)
               :  11470e:	vmovdqu64 %ymm0,0x40(%rdi)
               :  114715:	sub    $0xffffffffffffff80,%rdi
               :  114719:	cmp    %r10,%rdx
               :  11471c:	jne    1146db <mlx5_tx_burst_mtiv_ts+0x791b>
               :  11471e:	mov    %r9,%rdx
               :  114721:	and    $0xffffffffffffff80,%rdx
               :  114725:	mov    %r9,%rdi
               :  114728:	add    %rdx,%rax
               :  11472b:	and    $0x7f,%edi
               :  11472e:	add    %r8,%rdx
               :  114731:	jmpq   1107ed <mlx5_tx_burst_mtiv_ts+0x3a2d>
               :  114736:	mov    %r15,%rdx
               :  114739:	mov    %rsi,%rdi
               :  11473c:	vmovdqu64 %ymm0,(%rdx)
               :  114742:	vmovdqu64 0x20(%rax),%ymm5
               :  114749:	sub    $0x40,%rdi
               :  11474d:	vmovdqu64 %ymm5,0x20(%rdx)
               :  114754:	add    $0x40,%rax
               :  114758:	add    $0x40,%rdx
               :  11475c:	jmpq   1107f7 <mlx5_tx_burst_mtiv_ts+0x3a37>
               :  114761:	mov    (%rbx),%rax
               :  114764:	movzwl 0x58(%rbx),%edx
               :  114768:	add    $0xffffffffffffff80,%rax
               :  11476c:	sub    %rdx,%rax
               :  11476f:	movzwl 0x12(%rax),%esi
               :  114773:	lea    0x12(%rax),%rdx
               :  114777:	cmp    $0x1,%si
               :  11477b:	jne    116b47 <mlx5_tx_burst_mtiv_ts+0x9d87>
               :  114781:	movw   $0x0,0x12(%rax)
               :  114787:	mov    %ecx,0x90(%rsp)
               :  11478e:	movq   $0x0,0x40(%rax)
               :  114796:	movw   $0x1,0x14(%rax)
               :  11479c:	movw   $0x1,0x12(%rax)
               :  1147a2:	mov    %rax,0x140(%rsp)
               :  1147aa:	mov    0x38(%rax),%rdi
               :  1147ae:	mov    %rdi,0xa0(%rsp)
               :  1147b6:	vzeroupper 
               :  1147b9:	data16 lea 0x81687(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  1147c1:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  1147c9:	mov    0xa0(%rsp),%rdi
               :  1147d1:	mov    0x90(%rsp),%ecx
               :  1147d8:	cmpl   $0x0,0x44(%rdi)
               :  1147dc:	mov    (%rax),%eax
               :  1147de:	je     116b0c <mlx5_tx_burst_mtiv_ts+0x9d4c>
               :  1147e4:	cmp    $0x7f,%eax
               :  1147e7:	ja     116b0c <mlx5_tx_burst_mtiv_ts+0x9d4c>
               :  1147ed:	mov    %eax,%r10d
               :  1147f0:	imul   $0x2040,%r10,%r10
               :  1147f7:	add    0x60(%rdi),%r10
               :  1147fb:	je     116b0c <mlx5_tx_burst_mtiv_ts+0x9d4c>
               :  114801:	mov    0x4(%r10),%esi
               :  114805:	test   %esi,%esi
               :  114807:	je     116b0c <mlx5_tx_burst_mtiv_ts+0x9d4c>
               :  11480d:	mov    0x8(%r10),%edx
               :  114811:	lea    0x1(%rdx),%eax
               :  114814:	cmp    %eax,%esi
               :  114816:	jb     116ab8 <mlx5_tx_burst_mtiv_ts+0x9cf8>
               :  11481c:	mov    %eax,0x8(%r10)
               :  114820:	lea    0x40(%r10,%rdx,8),%rsi
               :  114825:	mov    0x140(%rsp),%rax
               :  11482d:	mov    %rax,(%rsi)
               :  114830:	jmpq   1144e4 <mlx5_tx_burst_mtiv_ts+0x7724>
               :  114835:	xor    %eax,%eax
               :  114837:	mov    %ax,0x44(%r12)
               :  11483d:	mov    0x10(%rdx),%eax
               :  114840:	jmpq   112575 <mlx5_tx_burst_mtiv_ts+0x57b5>
               :  114845:	movslq 0x58(%rdi),%rax
               :  114849:	mov    %r8,0x38(%rsp)
               :  11484e:	mov    %r9,0x88(%rsp)
               :  114856:	lea    0x40(%r9),%rsi
               :  11485a:	cmp    $0xf,%eax
               :  11485d:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  114863:	shl    $0x7,%rax
               :  114867:	add    0x816a2(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11486e:	mov    %rsi,0x90(%rsp)
               :  114876:	callq  *0x70(%rax)
               :  114879:	mov    0x88(%rsp),%r9
               :  114881:	mov    0x38(%rsp),%r8
               :  114886:	movl   $0x1,0x8(%r9)
               :  11488e:	mov    0x90(%rsp),%rsi
               :  114896:	jmpq   1118c5 <mlx5_tx_burst_mtiv_ts+0x4b05>
               :  11489b:	cmp    $0xf,%rcx
               :  11489f:	jbe    1155b6 <mlx5_tx_burst_mtiv_ts+0x87f6>
               :  1148a5:	cmp    $0x20,%rcx
               :  1148a9:	jbe    115eef <mlx5_tx_burst_mtiv_ts+0x912f>
               :  1148af:	cmp    $0x30,%rcx
               :  1148b3:	jbe    1162ea <mlx5_tx_burst_mtiv_ts+0x952a>
               :  1148b9:	vmovdqu64 (%rax),%ymm0
               :  1148bf:	cmp    $0x40,%rcx
               :  1148c3:	jbe    1162cf <mlx5_tx_burst_mtiv_ts+0x950f>
               :  1148c9:	cmp    $0x100,%rcx
               :  1148d0:	ja     116241 <mlx5_tx_burst_mtiv_ts+0x9481>
               :  1148d6:	cmp    $0x7f,%rcx
               :  1148da:	jbe    116210 <mlx5_tx_burst_mtiv_ts+0x9450>
               :  1148e0:	vmovdqu64 %ymm0,(%rdx)
               :  1148e6:	vmovdqu64 0x20(%rax),%ymm5
               :  1148ed:	lea    -0x80(%rcx),%r8
               :  1148f1:	vmovdqu64 %ymm5,0x20(%rdx)
               :  1148f8:	vmovdqu64 0x40(%rax),%ymm6
               :  1148ff:	lea    0x80(%rax),%rdi
               :  114906:	vmovdqu64 %ymm6,0x40(%rdx)
               :  11490d:	vmovdqu64 0x60(%rax),%ymm7
               :  114914:	sub    $0xffffffffffffff80,%rdx
               :  114918:	vmovdqu64 %ymm7,-0x20(%rdx)
               :  11491f:	cmp    $0x3f,%r8
               :  114923:	ja     116216 <mlx5_tx_burst_mtiv_ts+0x9456>
               :  114929:	cmp    $0x20,%r8
               :  11492d:	jbe    1166b9 <mlx5_tx_burst_mtiv_ts+0x98f9>
               :  114933:	vmovdqu64 (%rdi),%ymm2
               :  114939:	vmovdqu64 %ymm2,(%rdx)
               :  11493f:	vmovdqu64 -0x20(%rdi,%r8,1),%ymm3
               :  114947:	vmovdqu64 %ymm3,-0x20(%rdx,%r8,1)
               :  11494f:	jmpq   113f64 <mlx5_tx_burst_mtiv_ts+0x71a4>
               :  114954:	nopl   0x0(%rax)
               :  114958:	lock decw (%rax)
               :  11495c:	jne    112f94 <mlx5_tx_burst_mtiv_ts+0x61d4>
               :  114962:	mov    $0x3,%eax
               :  114967:	shl    $0x3d,%rax
               :  11496b:	test   %rax,0x18(%r13)
               :  11496f:	jne    11590a <mlx5_tx_burst_mtiv_ts+0x8b4a>
               :  114975:	vzeroupper 
               :  114978:	cmpq   $0x0,0x40(%r13)
               :  11497d:	je     114987 <mlx5_tx_burst_mtiv_ts+0x7bc7>
               :  11497f:	movq   $0x0,0x40(%r13)
               :  114987:	cmpw   $0x1,0x14(%r13)
               :  11498d:	je     114996 <mlx5_tx_burst_mtiv_ts+0x7bd6>
               :  11498f:	movw   $0x1,0x14(%r13)
               :  114996:	mov    %r13,%rdi
               :  114999:	callq  e2e70 <rte_mbuf_refcnt_set.constprop.0>
               :  11499e:	mov    0x38(%r13),%r12
               :  1149a2:	mov    0x44(%r12),%edx
               :  1149a7:	jmpq   112f17 <mlx5_tx_burst_mtiv_ts+0x6157>
               :  1149ac:	lock incq 0x3a0(%rdi)
               :  1149b4:	mov    0x18(%r15),%rcx
               :  1149b8:	jmpq   10e786 <mlx5_tx_burst_mtiv_ts+0x19c6>
               :  1149bd:	mov    0x28(%rsp),%rax
               :  1149c2:	movzwl 0x28(%r14),%edx
               :  1149c7:	mov    0xf8(%rax),%rax
               :  1149ce:	mov    %r14,%r13
               :  1149d1:	mov    %rax,0x38(%rsp)
               :  1149d6:	mov    0xa0(%rsp),%eax
               :  1149dd:	sub    0xd0(%rsp),%eax
               :  1149e4:	mov    %eax,0x80(%rsp)
               :  1149eb:	mov    0x38(%rsp),%r15
               :  1149f0:	jmpq   110647 <mlx5_tx_burst_mtiv_ts+0x3887>
               :  1149f5:	movslq 0x58(%rdi),%rax
               :  1149f9:	mov    %r8,0x40(%rsp)
               :  1149fe:	mov    %ecx,0x90(%rsp)
               :  114a05:	mov    %r10,0xa0(%rsp)
               :  114a0d:	lea    0x40(%r10),%rsi
               :  114a11:	cmp    $0xf,%eax
               :  114a14:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  114a1a:	shl    $0x7,%rax
               :  114a1e:	add    0x814eb(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  114a25:	mov    %rsi,0xc8(%rsp)
               :  114a2d:	callq  *0x70(%rax)
               :  114a30:	mov    0xa0(%rsp),%r10
               :  114a38:	mov    0x40(%rsp),%r8
               :  114a3d:	movl   $0x1,0x8(%r10)
               :  114a45:	mov    0x90(%rsp),%ecx
               :  114a4c:	mov    0xc8(%rsp),%rsi
               :  114a54:	jmpq   111baa <mlx5_tx_burst_mtiv_ts+0x4dea>
               :  114a59:	lock decw (%rdx)
               :  114a5d:	je     111af8 <mlx5_tx_burst_mtiv_ts+0x4d38>
               :  114a63:	vzeroupper 
               :  114a66:	jmpq   111a6f <mlx5_tx_burst_mtiv_ts+0x4caf>
               :  114a6b:	test   %rdi,%rdi
               :  114a6e:	je     112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  114a74:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm4
               :  114a7c:	vmovdqu64 %ymm4,-0x20(%rdx,%rdi,1)
               :  114a84:	jmpq   112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  114a89:	mov    %rbx,%rdx
               :  114a8c:	mov    %rsi,%rdi
               :  114a8f:	vmovdqu64 (%rax),%ymm0
               :  114a95:	sub    $0x40,%rdi
               :  114a99:	vmovdqu64 %ymm0,(%rdx)
               :  114a9f:	vmovdqu64 0x20(%rax),%ymm1
               :  114aa6:	add    $0x40,%rdx
               :  114aaa:	vmovdqu64 %ymm1,-0x20(%rdx)
               :  114ab1:	add    $0x40,%rax
               :  114ab5:	jmpq   112e26 <mlx5_tx_burst_mtiv_ts+0x6066>
               :  114aba:	vmovdqu64 %ymm0,(%rbx)
               :  114ac0:	vmovdqu64 -0x20(%rax,%rsi,1),%ymm4
               :  114ac8:	vmovdqu64 %ymm4,-0x20(%rbx,%rsi,1)
               :  114ad0:	jmpq   112d7a <mlx5_tx_burst_mtiv_ts+0x5fba>
               :  114ad5:	bswap  %eax
               :  114ad7:	mov    %eax,0x0(%r13)
               :  114adb:	mov    0x40(%r12),%edi
               :  114ae0:	mov    0x38(%r12),%rax
               :  114ae5:	lea    0x38(%r12),%r14
               :  114aea:	cmp    %edi,(%rax)
               :  114aec:	jne    116475 <mlx5_tx_burst_mtiv_ts+0x96b5>
               :  114af2:	movzwl 0x44(%r12),%eax
               :  114af8:	lea    0x48(%r12),%rcx
               :  114afd:	lea    (%rax,%rax,4),%rax
               :  114b01:	lea    (%rcx,%rax,4),%rax
               :  114b05:	cmp    (%rax),%rdx
               :  114b08:	jb     1159f0 <mlx5_tx_burst_mtiv_ts+0x8c30>
               :  114b0e:	cmp    0x8(%rax),%rdx
               :  114b12:	jae    1159f0 <mlx5_tx_burst_mtiv_ts+0x8c30>
               :  114b18:	mov    0x10(%rax),%eax
               :  114b1b:	cmp    $0xffffffff,%eax
               :  114b1e:	je     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  114b24:	mov    %eax,0x4(%r13)
               :  114b28:	bswap  %rbx
               :  114b2b:	mov    %rbx,0x8(%r13)
               :  114b2f:	jmpq   1123f4 <mlx5_tx_burst_mtiv_ts+0x5634>
               :  114b34:	lock decw (%rdx)
               :  114b38:	jne    10f3bd <mlx5_tx_burst_mtiv_ts+0x25fd>
               :  114b3e:	movw   $0x1,0x10(%rax)
               :  114b44:	jmpq   10fbc2 <mlx5_tx_burst_mtiv_ts+0x2e02>
               :  114b49:	nopl   0x0(%rax)
               :  114b50:	lock decw (%r14)
               :  114b55:	jne    111137 <mlx5_tx_burst_mtiv_ts+0x4377>
               :  114b5b:	movabs $0x6000000000000000,%rax
               :  114b65:	test   %rax,0x18(%r13)
               :  114b69:	jne    11578e <mlx5_tx_burst_mtiv_ts+0x89ce>
               :  114b6f:	vzeroupper 
               :  114b72:	cmpq   $0x0,0x40(%r13)
               :  114b77:	je     114b81 <mlx5_tx_burst_mtiv_ts+0x7dc1>
               :  114b79:	movq   $0x0,0x40(%r13)
               :  114b81:	cmpw   $0x1,0x14(%r13)
               :  114b87:	je     114b90 <mlx5_tx_burst_mtiv_ts+0x7dd0>
               :  114b89:	movw   $0x1,0x14(%r13)
               :  114b90:	movw   $0x1,(%r14)
               :  114b96:	mov    0x38(%r13),%r14
               :  114b9a:	mov    0x44(%r14),%edx
               :  114b9e:	jmpq   1110a1 <mlx5_tx_burst_mtiv_ts+0x42e1>
               :  114ba3:	lock decw (%rax)
               :  114ba7:	jne    1126d5 <mlx5_tx_burst_mtiv_ts+0x5915>
               :  114bad:	mov    $0x3,%eax
               :  114bb2:	shl    $0x3d,%rax
               :  114bb6:	test   %rax,0x18(%rbx)
               :  114bba:	jne    115729 <mlx5_tx_burst_mtiv_ts+0x8969>
               :  114bc0:	vzeroupper 
               :  114bc3:	cmpq   $0x0,0x40(%rbx)
               :  114bc8:	je     114bd2 <mlx5_tx_burst_mtiv_ts+0x7e12>
               :  114bca:	movq   $0x0,0x40(%rbx)
               :  114bd2:	cmpw   $0x1,0x14(%rbx)
               :  114bd7:	je     114bdf <mlx5_tx_burst_mtiv_ts+0x7e1f>
               :  114bd9:	movw   $0x1,0x14(%rbx)
               :  114bdf:	mov    %rbx,%rdi
               :  114be2:	mov    %ecx,0xa0(%rsp)
               :  114be9:	callq  e2e70 <rte_mbuf_refcnt_set.constprop.0>
               :  114bee:	mov    0x38(%rbx),%r15
               :  114bf2:	mov    0xa0(%rsp),%ecx
               :  114bf9:	mov    0x44(%r15),%edx
               :  114bfd:	jmpq   11264f <mlx5_tx_burst_mtiv_ts+0x588f>
               :  114c02:	mov    0x50(%rbx),%rdx
               :  114c06:	movzwl 0x10(%rdx),%esi
               :  114c0a:	lea    0x10(%rdx),%rax
               :  114c0e:	cmp    $0x1,%si
               :  114c12:	jne    11670b <mlx5_tx_burst_mtiv_ts+0x994b>
               :  114c18:	movw   $0x0,0x10(%rdx)
               :  114c1e:	mov    0x50(%rbx),%rax
               :  114c22:	mov    (%rbx),%rdi
               :  114c25:	mov    0x8(%rax),%rsi
               :  114c29:	mov    %r8,0x90(%rsp)
               :  114c31:	mov    %ecx,0xa0(%rsp)
               :  114c38:	vzeroupper 
               :  114c3b:	callq  *(%rax)
               :  114c3d:	mov    0xa0(%rsp),%ecx
               :  114c44:	mov    0x90(%rsp),%r8
               :  114c4c:	mov    0xc8(%rsp),%rdi
               :  114c54:	cmpl   $0x1,0x44(%rdi)
               :  114c58:	sbb    %rax,%rax
               :  114c5b:	and    $0xffffffffffefe000,%rax
               :  114c61:	lea    0x1020c0(%rdi,%rax,1),%rax
               :  114c69:	movzwl 0x2(%rax),%edx
               :  114c6d:	movzwl (%rax),%eax
               :  114c70:	mov    %dx,0x58(%rbx)
               :  114c74:	sub    $0xffffffffffffff80,%rdx
               :  114c78:	lea    (%rbx,%rdx,1),%rsi
               :  114c7c:	add    -0x8(%rbx),%rdx
               :  114c80:	mov    %rdx,0x8(%rbx)
               :  114c84:	cmp    $0x80,%ax
               :  114c88:	mov    $0x80,%edx
               :  114c8d:	mov    %ax,0x36(%rbx)
               :  114c91:	cmova  %edx,%eax
               :  114c94:	xor    %r11d,%r11d
               :  114c97:	mov    %rsi,(%rbx)
               :  114c9a:	mov    %ax,0x10(%rbx)
               :  114c9e:	mov    %r11w,0x28(%rbx)
               :  114ca3:	movq   $0x0,0x18(%rbx)
               :  114cab:	jmpq   112253 <mlx5_tx_burst_mtiv_ts+0x5493>
               :  114cb0:	testb  $0x1,0x1020c4(%rdi)
               :  114cb7:	je     114c02 <mlx5_tx_burst_mtiv_ts+0x7e42>
               :  114cbd:	mov    $0x1020c0,%eax
               :  114cc2:	jmpq   11221d <mlx5_tx_burst_mtiv_ts+0x545d>
               :  114cc7:	nopw   0x0(%rax,%rax,1)
               :  114cd0:	mov    $0xc0,%eax
               :  114cd5:	jmpq   10ec2a <mlx5_tx_burst_mtiv_ts+0x1e6a>
               :  114cda:	lock decw (%rdx)
               :  114cde:	jne    114a63 <mlx5_tx_burst_mtiv_ts+0x7ca3>
               :  114ce4:	jmpq   111a41 <mlx5_tx_burst_mtiv_ts+0x4c81>
               :  114ce9:	mov    %r15,%rdi
               :  114cec:	mov    %r9,0xd0(%rsp)
               :  114cf4:	vzeroupper 
               :  114cf7:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :  114cfc:	mov    0xd0(%rsp),%r9
               :  114d04:	mov    (%r9),%rax
               :  114d07:	jmpq   111d58 <mlx5_tx_burst_mtiv_ts+0x4f98>
               :  114d0c:	mov    0x0(%r13),%rax
               :  114d10:	movzwl 0x58(%r13),%edx
               :  114d15:	add    $0xffffffffffffff80,%rax
               :  114d19:	sub    %rdx,%rax
               :  114d1c:	movzwl 0x12(%rax),%ecx
               :  114d20:	lea    0x12(%rax),%rdx
               :  114d24:	cmp    $0x1,%cx
               :  114d28:	jne    116923 <mlx5_tx_burst_mtiv_ts+0x9b63>
               :  114d2e:	movw   $0x0,0x12(%rax)
               :  114d34:	mov    %r9,0x40(%rsp)
               :  114d39:	mov    %r8d,0x88(%rsp)
               :  114d41:	movq   $0x0,0x40(%rax)
               :  114d49:	movw   $0x1,0x14(%rax)
               :  114d4f:	movw   $0x1,0x12(%rax)
               :  114d55:	mov    %rax,0x178(%rsp)
               :  114d5d:	mov    0x38(%rax),%r15
               :  114d61:	vzeroupper 
               :  114d64:	data16 lea 0x810dc(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  114d6c:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  114d74:	cmpl   $0x0,0x44(%r15)
               :  114d79:	mov    0x88(%rsp),%r8d
               :  114d81:	mov    0x40(%rsp),%r9
               :  114d86:	mov    (%rax),%eax
               :  114d88:	je     1168d9 <mlx5_tx_burst_mtiv_ts+0x9b19>
               :  114d8e:	cmp    $0x7f,%eax
               :  114d91:	ja     1168d9 <mlx5_tx_burst_mtiv_ts+0x9b19>
               :  114d97:	mov    %eax,%r14d
               :  114d9a:	imul   $0x2040,%r14,%r14
               :  114da1:	add    0x60(%r15),%r14
               :  114da5:	je     1168d9 <mlx5_tx_burst_mtiv_ts+0x9b19>
               :  114dab:	mov    0x4(%r14),%ecx
               :  114daf:	test   %ecx,%ecx
               :  114db1:	je     1168d9 <mlx5_tx_burst_mtiv_ts+0x9b19>
               :  114db7:	mov    0x8(%r14),%edx
               :  114dbb:	lea    0x1(%rdx),%eax
               :  114dbe:	cmp    %eax,%ecx
               :  114dc0:	jb     11687d <mlx5_tx_burst_mtiv_ts+0x9abd>
               :  114dc6:	mov    %eax,0x8(%r14)
               :  114dca:	lea    0x40(%r14,%rdx,8),%rcx
               :  114dcf:	mov    0x178(%rsp),%rax
               :  114dd7:	mov    %rax,(%rcx)
               :  114dda:	jmpq   110ae1 <mlx5_tx_burst_mtiv_ts+0x3d21>
               :  114ddf:	vzeroupper 
               :  114de2:	jmpq   110b47 <mlx5_tx_burst_mtiv_ts+0x3d87>
               :  114de7:	testb  $0x1,0x1020c4(%rdi)
               :  114dee:	je     111df8 <mlx5_tx_burst_mtiv_ts+0x5038>
               :  114df4:	mov    $0x1020c0,%eax
               :  114df9:	mov    0x90(%rsp),%rdi
               :  114e01:	testb  $0x1,0x4(%rdi,%rax,1)
               :  114e06:	je     112bcb <mlx5_tx_burst_mtiv_ts+0x5e0b>
               :  114e0c:	movabs $0x2000000000000000,%rdi
               :  114e16:	mov    %rdi,0x18(%r13)
               :  114e1a:	mov    0x50(%r13),%rax
               :  114e1e:	movzwl 0x10(%rax),%esi
               :  114e22:	lea    0x10(%rax),%rdx
               :  114e26:	cmp    $0x1,%si
               :  114e2a:	je     112bcb <mlx5_tx_burst_mtiv_ts+0x5e0b>
               :  114e30:	or     $0xffffffff,%esi
               :  114e33:	lock xadd %si,(%rdx)
               :  114e38:	dec    %si
               :  114e3b:	jne    10f9a1 <mlx5_tx_burst_mtiv_ts+0x2be1>
               :  114e41:	movw   $0x1,0x10(%rax)
               :  114e47:	vzeroupper 
               :  114e4a:	jmpq   111e99 <mlx5_tx_burst_mtiv_ts+0x50d9>
               :  114e4f:	nop
               :  114e50:	mov    0x0(%r13),%rax
               :  114e54:	movzwl 0x58(%r13),%edx
               :  114e59:	add    $0xffffffffffffff80,%rax
               :  114e5d:	sub    %rdx,%rax
               :  114e60:	movzwl 0x12(%rax),%esi
               :  114e64:	lea    0x12(%rax),%rdx
               :  114e68:	cmp    $0x1,%si
               :  114e6c:	jne    116406 <mlx5_tx_burst_mtiv_ts+0x9646>
               :  114e72:	movw   $0x0,0x12(%rax)
               :  114e78:	mov    %r8,0x38(%rsp)
               :  114e7d:	movq   $0x0,0x40(%rax)
               :  114e85:	movw   $0x1,0x14(%rax)
               :  114e8b:	movw   $0x1,0x12(%rax)
               :  114e91:	mov    %rax,0x158(%rsp)
               :  114e99:	mov    0x38(%rax),%rdi
               :  114e9d:	mov    %rdi,0x88(%rsp)
               :  114ea5:	vzeroupper 
               :  114ea8:	data16 lea 0x80f98(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  114eb0:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  114eb8:	mov    0x88(%rsp),%rdi
               :  114ec0:	mov    0x38(%rsp),%r8
               :  114ec5:	cmpl   $0x0,0x44(%rdi)
               :  114ec9:	mov    (%rax),%eax
               :  114ecb:	je     1163c9 <mlx5_tx_burst_mtiv_ts+0x9609>
               :  114ed1:	cmp    $0x7f,%eax
               :  114ed4:	ja     1163c9 <mlx5_tx_burst_mtiv_ts+0x9609>
               :  114eda:	mov    %eax,%r9d
               :  114edd:	imul   $0x2040,%r9,%r9
               :  114ee4:	add    0x60(%rdi),%r9
               :  114ee8:	je     1163c9 <mlx5_tx_burst_mtiv_ts+0x9609>
               :  114eee:	mov    0x4(%r9),%esi
               :  114ef2:	test   %esi,%esi
               :  114ef4:	je     1163c9 <mlx5_tx_burst_mtiv_ts+0x9609>
               :  114efa:	mov    0x8(%r9),%edx
               :  114efe:	lea    0x1(%rdx),%eax
               :  114f01:	cmp    %eax,%esi
               :  114f03:	jb     116379 <mlx5_tx_burst_mtiv_ts+0x95b9>
               :  114f09:	mov    %eax,0x8(%r9)
               :  114f0d:	lea    0x40(%r9,%rdx,8),%rsi
               :  114f12:	mov    0x158(%rsp),%rax
               :  114f1a:	mov    %rax,(%rsi)
               :  114f1d:	jmpq   111e35 <mlx5_tx_burst_mtiv_ts+0x5075>
               :  114f22:	mov    0x40(%rsp),%r12
               :  114f27:	mov    %r13,%r15
               :  114f2a:	cmp    %dx,%r11w
               :  114f2e:	jb     113292 <mlx5_tx_burst_mtiv_ts+0x64d2>
               :  114f34:	mov    0x40(%r13),%r15
               :  114f38:	movzwl 0x12(%r13),%eax
               :  114f3d:	dec    %ax
               :  114f40:	jne    11653f <mlx5_tx_burst_mtiv_ts+0x977f>
               :  114f46:	mov    $0x3,%eax
               :  114f4b:	shl    $0x3d,%rax
               :  114f4f:	test   %rax,0x18(%r13)
               :  114f53:	jne    1164e6 <mlx5_tx_burst_mtiv_ts+0x9726>
               :  114f59:	mov    0x38(%r13),%rdi
               :  114f5d:	vzeroupper 
               :  114f60:	cmpq   $0x0,0x40(%r13)
               :  114f65:	je     114f6f <mlx5_tx_burst_mtiv_ts+0x81af>
               :  114f67:	movq   $0x0,0x40(%r13)
               :  114f6f:	cmpw   $0x1,0x14(%r13)
               :  114f75:	je     114f7e <mlx5_tx_burst_mtiv_ts+0x81be>
               :  114f77:	movw   $0x1,0x14(%r13)
               :  114f7e:	mov    %rdi,0xd0(%rsp)
               :  114f86:	mov    %r13,0x190(%rsp)
               :  114f8e:	data16 lea 0x80eb2(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  114f96:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  114f9e:	mov    0xd0(%rsp),%rdi
               :  114fa6:	cmpl   $0x0,0x44(%rdi)
               :  114faa:	mov    (%rax),%eax
               :  114fac:	je     116a16 <mlx5_tx_burst_mtiv_ts+0x9c56>
               :  114fb2:	cmp    $0x7f,%eax
               :  114fb5:	ja     116a16 <mlx5_tx_burst_mtiv_ts+0x9c56>
               :  114fbb:	mov    %eax,%ebx
               :  114fbd:	imul   $0x2040,%rbx,%rbx
               :  114fc4:	add    0x60(%rdi),%rbx
               :  114fc8:	je     116a16 <mlx5_tx_burst_mtiv_ts+0x9c56>
               :  114fce:	mov    0x4(%rbx),%ecx
               :  114fd1:	test   %ecx,%ecx
               :  114fd3:	je     116a16 <mlx5_tx_burst_mtiv_ts+0x9c56>
               :  114fd9:	mov    0x8(%rbx),%edx
               :  114fdc:	lea    0x1(%rdx),%eax
               :  114fdf:	cmp    %eax,%ecx
               :  114fe1:	jb     1169fe <mlx5_tx_burst_mtiv_ts+0x9c3e>
               :  114fe7:	mov    %eax,0x8(%rbx)
               :  114fea:	lea    0x40(%rbx,%rdx,8),%r14
               :  114fef:	mov    0x190(%rsp),%rax
               :  114ff7:	mov    %rax,(%r14)
               :  114ffa:	decw   0x90(%rsp)
               :  115002:	movzwl 0x28(%r15),%edx
               :  115007:	xor    %r11d,%r11d
               :  11500a:	jmpq   113292 <mlx5_tx_burst_mtiv_ts+0x64d2>
               :  11500f:	mov    (%rbx),%rax
               :  115012:	movzwl 0x58(%rbx),%edx
               :  115016:	add    $0xffffffffffffff80,%rax
               :  11501a:	sub    %rdx,%rax
               :  11501d:	movzwl 0x12(%rax),%esi
               :  115021:	lea    0x12(%rax),%rdx
               :  115025:	cmp    $0x1,%si
               :  115029:	jne    1160e1 <mlx5_tx_burst_mtiv_ts+0x9321>
               :  11502f:	movw   $0x0,0x12(%rax)
               :  115035:	mov    %r8,0x40(%rsp)
               :  11503a:	mov    %ecx,0x90(%rsp)
               :  115041:	movq   $0x0,0x40(%rax)
               :  115049:	movw   $0x1,0x14(%rax)
               :  11504f:	movw   $0x1,0x12(%rax)
               :  115055:	mov    %rax,0x188(%rsp)
               :  11505d:	mov    0x38(%rax),%rdi
               :  115061:	mov    %rdi,0xa0(%rsp)
               :  115069:	vzeroupper 
               :  11506c:	data16 lea 0x80dd4(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  115074:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  11507c:	mov    0xa0(%rsp),%rdi
               :  115084:	mov    0x90(%rsp),%ecx
               :  11508b:	cmpl   $0x0,0x44(%rdi)
               :  11508f:	mov    0x40(%rsp),%r8
               :  115094:	mov    (%rax),%eax
               :  115096:	je     116096 <mlx5_tx_burst_mtiv_ts+0x92d6>
               :  11509c:	cmp    $0x7f,%eax
               :  11509f:	ja     116096 <mlx5_tx_burst_mtiv_ts+0x92d6>
               :  1150a5:	mov    %eax,%r11d
               :  1150a8:	imul   $0x2040,%r11,%r11
               :  1150af:	add    0x60(%rdi),%r11
               :  1150b3:	je     116096 <mlx5_tx_burst_mtiv_ts+0x92d6>
               :  1150b9:	mov    0x4(%r11),%esi
               :  1150bd:	test   %esi,%esi
               :  1150bf:	je     116096 <mlx5_tx_burst_mtiv_ts+0x92d6>
               :  1150c5:	mov    0x8(%r11),%edx
               :  1150c9:	lea    0x1(%rdx),%eax
               :  1150cc:	cmp    %eax,%esi
               :  1150ce:	jb     116989 <mlx5_tx_burst_mtiv_ts+0x9bc9>
               :  1150d4:	mov    %eax,0x8(%r11)
               :  1150d8:	lea    0x40(%r11,%rdx,8),%rsi
               :  1150dd:	mov    0x188(%rsp),%rax
               :  1150e5:	mov    %rax,(%rsi)
               :  1150e8:	jmpq   114c4c <mlx5_tx_burst_mtiv_ts+0x7e8c>
               :  1150ed:	lock incq 0x3a8(%rdi)
               :  1150f5:	mov    0x18(%r15),%rcx
               :  1150f9:	jmpq   10e786 <mlx5_tx_burst_mtiv_ts+0x19c6>
               :  1150fe:	lock incq 0x3a8(%rdi)
               :  115106:	mov    0x18(%r13),%r10
               :  11510a:	jmpq   110469 <mlx5_tx_burst_mtiv_ts+0x36a9>
               :  11510f:	lock incq 0x3a0(%rdi)
               :  115117:	mov    0x18(%r13),%r10
               :  11511b:	jmpq   110469 <mlx5_tx_burst_mtiv_ts+0x36a9>
               :  115120:	mov    %r8,%rdi
               :  115123:	mov    %r8,0xc0(%rsp)
               :  11512b:	vzeroupper 
               :  11512e:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  115133:	test   $0x1,%al
               :  115135:	mov    0xc0(%rsp),%r8
               :  11513d:	je     114070 <mlx5_tx_burst_mtiv_ts+0x72b0>
               :  115143:	mov    0x50(%r15),%rsi
               :  115147:	lea    0x18(%r15),%rdi
               :  11514b:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  115150:	test   %eax,%eax
               :  115152:	jne    10e8e4 <mlx5_tx_burst_mtiv_ts+0x1b24>
               :  115158:	mov    0x38(%r15),%r8
               :  11515c:	jmpq   114070 <mlx5_tx_burst_mtiv_ts+0x72b0>
               :  115161:	vzeroupper 
               :  115164:	jmpq   114070 <mlx5_tx_burst_mtiv_ts+0x72b0>
               :  115169:	mov    %r13,%rdi
               :  11516c:	mov    %rdx,0x88(%rsp)
               :  115174:	vzeroupper 
               :  115177:	callq  e2e80 <rte_pktmbuf_detach>
               :  11517c:	movabs $0x2000000000000000,%rax
               :  115186:	test   %rax,0x18(%r13)
               :  11518a:	mov    0x88(%rsp),%rdx
               :  115192:	je     11370a <mlx5_tx_burst_mtiv_ts+0x694a>
               :  115198:	mov    0x38(%r13),%rdi
               :  11519c:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  1151a1:	test   $0x1,%al
               :  1151a3:	mov    0x88(%rsp),%rdx
               :  1151ab:	je     11370a <mlx5_tx_burst_mtiv_ts+0x694a>
               :  1151b1:	mov    0x50(%r13),%rsi
               :  1151b5:	lea    0x18(%r13),%rdi
               :  1151b9:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  1151be:	test   %eax,%eax
               :  1151c0:	mov    0x88(%rsp),%rdx
               :  1151c8:	je     11370a <mlx5_tx_burst_mtiv_ts+0x694a>
               :  1151ce:	jmpq   1109cf <mlx5_tx_burst_mtiv_ts+0x3c0f>
               :  1151d3:	mov    %rbx,%rdi
               :  1151d6:	and    $0x1f,%edi
               :  1151d9:	je     1156f6 <mlx5_tx_burst_mtiv_ts+0x8936>
               :  1151df:	mov    $0x20,%edx
               :  1151e4:	sub    %rdi,%rdx
               :  1151e7:	add    %rdx,%rax
               :  1151ea:	lea    -0x20(%rsi,%rdi,1),%r8
               :  1151ef:	vmovdqu64 %ymm0,(%rbx)
               :  1151f5:	add    %rbx,%rdx
               :  1151f8:	lea    -0x80(%r8),%rdi
               :  1151fc:	and    $0xffffffffffffff80,%rdi
               :  115200:	lea    0x80(%rax,%rdi,1),%r10
               :  115208:	mov    %rdx,%r9
               :  11520b:	mov    %rax,%rdi
               :  11520e:	vmovdqu64 (%rdi),%ymm2
               :  115214:	vmovdqu64 0x20(%rdi),%ymm1
               :  11521b:	vmovdqu64 0x40(%rdi),%ymm0
               :  115222:	vmovdqu64 0x60(%rdi),%ymm5
               :  115229:	sub    $0xffffffffffffff80,%rdi
               :  11522d:	vmovdqu64 %ymm5,0x60(%r9)
               :  115234:	vmovdqu64 %ymm2,(%r9)
               :  11523a:	vmovdqu64 %ymm1,0x20(%r9)
               :  115241:	vmovdqu64 %ymm0,0x40(%r9)
               :  115248:	sub    $0xffffffffffffff80,%r9
               :  11524c:	cmp    %r10,%rdi
               :  11524f:	jne    11520e <mlx5_tx_burst_mtiv_ts+0x844e>
               :  115251:	mov    %r8,%rdi
               :  115254:	and    $0xffffffffffffff80,%r8
               :  115258:	and    $0x7f,%edi
               :  11525b:	add    %r8,%rax
               :  11525e:	add    %r8,%rdx
               :  115261:	jmpq   112e1c <mlx5_tx_burst_mtiv_ts+0x605c>
               :  115266:	mov    0x48(%r14),%rcx
               :  11526a:	test   %rcx,%rcx
               :  11526d:	je     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  115273:	cmp    %rcx,%rdi
               :  115276:	jb     115282 <mlx5_tx_burst_mtiv_ts+0x84c2>
               :  115278:	cmp    0x50(%r14),%rdi
               :  11527c:	jb     116a2d <mlx5_tx_burst_mtiv_ts+0x9c6d>
               :  115282:	mov    0x5c(%r14),%rax
               :  115286:	test   %rax,%rax
               :  115289:	je     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  11528f:	cmp    %rax,%rdi
               :  115292:	jb     1152a7 <mlx5_tx_burst_mtiv_ts+0x84e7>
               :  115294:	lea    0x5c(%r14),%rax
               :  115298:	mov    $0x1,%ecx
               :  11529d:	cmp    %rdi,0x64(%r14)
               :  1152a1:	ja     116a2f <mlx5_tx_burst_mtiv_ts+0x9c6f>
               :  1152a7:	mov    0x70(%r14),%rax
               :  1152ab:	test   %rax,%rax
               :  1152ae:	je     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  1152b4:	cmp    %rax,%rdi
               :  1152b7:	jb     1152cc <mlx5_tx_burst_mtiv_ts+0x850c>
               :  1152b9:	lea    0x70(%r14),%rax
               :  1152bd:	mov    $0x2,%ecx
               :  1152c2:	cmp    0x78(%r14),%rdi
               :  1152c6:	jb     116a2f <mlx5_tx_burst_mtiv_ts+0x9c6f>
               :  1152cc:	mov    0x84(%r14),%rax
               :  1152d3:	test   %rax,%rax
               :  1152d6:	je     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  1152dc:	cmp    %rax,%rdi
               :  1152df:	jb     1152fa <mlx5_tx_burst_mtiv_ts+0x853a>
               :  1152e1:	lea    0x84(%r14),%rax
               :  1152e8:	mov    $0x3,%ecx
               :  1152ed:	cmp    0x8c(%r14),%rdi
               :  1152f4:	jb     116a2f <mlx5_tx_burst_mtiv_ts+0x9c6f>
               :  1152fa:	mov    0x98(%r14),%rax
               :  115301:	test   %rax,%rax
               :  115304:	je     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  11530a:	cmp    %rdi,%rax
               :  11530d:	ja     115328 <mlx5_tx_burst_mtiv_ts+0x8568>
               :  11530f:	lea    0x98(%r14),%rax
               :  115316:	mov    $0x4,%ecx
               :  11531b:	cmp    0xa0(%r14),%rdi
               :  115322:	jb     116a2f <mlx5_tx_burst_mtiv_ts+0x9c6f>
               :  115328:	mov    0xac(%r14),%rax
               :  11532f:	test   %rax,%rax
               :  115332:	je     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  115334:	cmp    %rdi,%rax
               :  115337:	ja     115352 <mlx5_tx_burst_mtiv_ts+0x8592>
               :  115339:	lea    0xac(%r14),%rax
               :  115340:	mov    $0x5,%ecx
               :  115345:	cmp    %rdi,0xb4(%r14)
               :  11534c:	ja     116a2f <mlx5_tx_burst_mtiv_ts+0x9c6f>
               :  115352:	mov    0xc0(%r14),%rax
               :  115359:	test   %rax,%rax
               :  11535c:	je     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  11535e:	cmp    %rax,%rdi
               :  115361:	jb     11537c <mlx5_tx_burst_mtiv_ts+0x85bc>
               :  115363:	lea    0xc0(%r14),%rax
               :  11536a:	mov    $0x6,%ecx
               :  11536f:	cmp    0xc8(%r14),%rdi
               :  115376:	jb     116a2f <mlx5_tx_burst_mtiv_ts+0x9c6f>
               :  11537c:	mov    0xd4(%r14),%rax
               :  115383:	test   %rax,%rax
               :  115386:	je     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  115388:	cmp    %rax,%rdi
               :  11538b:	jb     1153a6 <mlx5_tx_burst_mtiv_ts+0x85e6>
               :  11538d:	lea    0xd4(%r14),%rax
               :  115394:	mov    $0x7,%ecx
               :  115399:	cmp    0xdc(%r14),%rdi
               :  1153a0:	jb     116a2f <mlx5_tx_burst_mtiv_ts+0x9c6f>
               :  1153a6:	mov    %r15,%rsi
               :  1153a9:	mov    %r12,%rdi
               :  1153ac:	mov    %rdx,0xc0(%rsp)
               :  1153b4:	vzeroupper 
               :  1153b7:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :  1153bc:	mov    0xc0(%rsp),%rdx
               :  1153c4:	jmpq   1127ea <mlx5_tx_burst_mtiv_ts+0x5a2a>
               :  1153c9:	mov    %r11,0x60(%rsp)
               :  1153ce:	mov    %rcx,0x88(%rsp)
               :  1153d6:	mov    %rsi,0x40(%rsp)
               :  1153db:	mov    %rcx,%r14
               :  1153de:	jmpq   11459b <mlx5_tx_burst_mtiv_ts+0x77db>
               :  1153e3:	vmovdqu64 (%rax),%ymm0
               :  1153e9:	jmpq   11473c <mlx5_tx_burst_mtiv_ts+0x797c>
               :  1153ee:	movslq 0x58(%rdi),%rax
               :  1153f2:	mov    %r8,0x90(%rsp)
               :  1153fa:	cmp    $0xf,%eax
               :  1153fd:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  115403:	shl    $0x7,%rax
               :  115407:	lea    0x150(%rsp),%rsi
               :  11540f:	add    0x80afa(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  115416:	mov    $0x1,%edx
               :  11541b:	callq  *0x70(%rax)
               :  11541e:	mov    0x90(%rsp),%r8
               :  115426:	jmpq   10ffe2 <mlx5_tx_burst_mtiv_ts+0x3222>
               :  11542b:	mov    %rsi,%r9
               :  11542e:	mov    %r15,%r8
               :  115431:	jmpq   1146c5 <mlx5_tx_burst_mtiv_ts+0x7905>
               :  115436:	mov    %r13,%rdi
               :  115439:	mov    %r9,0x40(%rsp)
               :  11543e:	mov    %r15d,0x88(%rsp)
               :  115446:	vzeroupper 
               :  115449:	callq  e2e60 <__rte_mbuf_refcnt_update.constprop.0>
               :  11544e:	test   %ax,%ax
               :  115451:	mov    0x88(%rsp),%r8d
               :  115459:	mov    0x40(%rsp),%r9
               :  11545e:	jne    110bf2 <mlx5_tx_burst_mtiv_ts+0x3e32>
               :  115464:	mov    $0x3,%eax
               :  115469:	shl    $0x3d,%rax
               :  11546d:	test   %rax,0x18(%r13)
               :  115471:	je     1154dd <mlx5_tx_burst_mtiv_ts+0x871d>
               :  115473:	mov    %r9,0x40(%rsp)
               :  115478:	mov    %r8d,0x88(%rsp)
               :  115480:	callq  e2e80 <rte_pktmbuf_detach>
               :  115485:	mov    $0x1,%eax
               :  11548a:	shl    $0x3d,%rax
               :  11548e:	test   %rax,0x18(%r13)
               :  115492:	mov    0x88(%rsp),%r8d
               :  11549a:	mov    0x40(%rsp),%r9
               :  11549f:	je     1154dd <mlx5_tx_burst_mtiv_ts+0x871d>
               :  1154a1:	mov    0x38(%r13),%rdi
               :  1154a5:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  1154aa:	test   $0x1,%al
               :  1154ac:	mov    0x88(%rsp),%r8d
               :  1154b4:	mov    0x40(%rsp),%r9
               :  1154b9:	je     1154dd <mlx5_tx_burst_mtiv_ts+0x871d>
               :  1154bb:	mov    0x50(%r13),%rsi
               :  1154bf:	lea    0x18(%r13),%rdi
               :  1154c3:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  1154c8:	test   %eax,%eax
               :  1154ca:	mov    0x88(%rsp),%r8d
               :  1154d2:	mov    0x40(%rsp),%r9
               :  1154d7:	jne    110bf2 <mlx5_tx_burst_mtiv_ts+0x3e32>
               :  1154dd:	cmpq   $0x0,0x40(%r13)
               :  1154e2:	je     1154ec <mlx5_tx_burst_mtiv_ts+0x872c>
               :  1154e4:	movq   $0x0,0x40(%r13)
               :  1154ec:	cmpw   $0x1,0x14(%r13)
               :  1154f2:	je     1154fb <mlx5_tx_burst_mtiv_ts+0x873b>
               :  1154f4:	movw   $0x1,0x14(%r13)
               :  1154fb:	mov    %r13,%rdi
               :  1154fe:	mov    %r9,0x40(%rsp)
               :  115503:	mov    %r8d,0x88(%rsp)
               :  11550b:	callq  e2e70 <rte_mbuf_refcnt_set.constprop.0>
               :  115510:	mov    0x38(%r13),%r12
               :  115514:	mov    0x88(%rsp),%r8d
               :  11551c:	mov    0x44(%r12),%r14d
               :  115521:	mov    0x40(%rsp),%r9
               :  115526:	jmpq   110b68 <mlx5_tx_burst_mtiv_ts+0x3da8>
               :  11552b:	lock incq 0x3a8(%rdi)
               :  115533:	movzwl 0x14(%r13),%ebx
               :  115538:	jmpq   110d6a <mlx5_tx_burst_mtiv_ts+0x3faa>
               :  11553d:	lock incq 0x3a0(%rdi)
               :  115545:	movzwl 0x14(%r13),%ebx
               :  11554a:	jmpq   110d6a <mlx5_tx_burst_mtiv_ts+0x3faa>
               :  11554f:	vmovdqu64 (%rdx),%ymm0
               :  115555:	jmpq   114652 <mlx5_tx_burst_mtiv_ts+0x7892>
               :  11555a:	movslq 0x58(%r14),%rax
               :  11555e:	mov    %r8,0xd0(%rsp)
               :  115566:	lea    0x40(%r8),%r13
               :  11556a:	cmp    $0xf,%eax
               :  11556d:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  115573:	shl    $0x7,%rax
               :  115577:	add    0x80992(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11557e:	mov    %r13,%rsi
               :  115581:	mov    %r14,%rdi
               :  115584:	callq  *0x70(%rax)
               :  115587:	mov    0xd0(%rsp),%r8
               :  11558f:	movl   $0x1,0x8(%r8)
               :  115597:	jmpq   111d21 <mlx5_tx_burst_mtiv_ts+0x4f61>
               :  11559c:	lea    0xe8(%rsp),%rsi
               :  1155a4:	mov    $0x1,%edx
               :  1155a9:	mov    %r14,%rdi
               :  1155ac:	callq  e2e30 <rte_mempool_ops_enqueue_bulk>
               :  1155b1:	jmpq   111d2d <mlx5_tx_burst_mtiv_ts+0x4f6d>
               :  1155b6:	mov    %rax,%rdi
               :  1155b9:	test   $0x8,%sil
               :  1155bd:	je     1155ce <mlx5_tx_burst_mtiv_ts+0x880e>
               :  1155bf:	mov    (%rax),%rdi
               :  1155c2:	add    $0x8,%rdx
               :  1155c6:	mov    %rdi,-0x8(%rdx)
               :  1155ca:	lea    0x8(%rax),%rdi
               :  1155ce:	test   $0x4,%sil
               :  1155d2:	je     1155e3 <mlx5_tx_burst_mtiv_ts+0x8823>
               :  1155d4:	mov    (%rdi),%r8d
               :  1155d7:	add    $0x4,%rdx
               :  1155db:	mov    %r8d,-0x4(%rdx)
               :  1155df:	add    $0x4,%rdi
               :  1155e3:	test   $0x2,%sil
               :  1155e7:	je     1155fa <mlx5_tx_burst_mtiv_ts+0x883a>
               :  1155e9:	movzwl (%rdi),%r8d
               :  1155ed:	add    $0x2,%rdx
               :  1155f1:	mov    %r8w,-0x2(%rdx)
               :  1155f6:	add    $0x2,%rdi
               :  1155fa:	test   $0x1,%sil
               :  1155fe:	je     113f64 <mlx5_tx_burst_mtiv_ts+0x71a4>
               :  115604:	movzbl (%rdi),%edi
               :  115607:	mov    %dil,(%rdx)
               :  11560a:	jmpq   113f64 <mlx5_tx_burst_mtiv_ts+0x71a4>
               :  11560f:	mov    0x2(%rdx),%rax
               :  115613:	mov    %rax,0x20(%rbx)
               :  115617:	movzwl 0xa(%rdx),%eax
               :  11561b:	mov    %ax,0x28(%rbx)
               :  11561f:	movzwl 0x2a(%r15),%eax
               :  115624:	or     $0x81000000,%eax
               :  115629:	bswap  %eax
               :  11562b:	mov    %eax,0x2a(%rbx)
               :  11562e:	movzwl 0xc(%rdx),%eax
               :  115632:	mov    %ax,0x2e(%rbx)
               :  115636:	lea    0xe(%rdx),%rax
               :  11563a:	jmpq   113ea9 <mlx5_tx_burst_mtiv_ts+0x70e9>
               :  11563f:	movslq 0x58(%rdi),%rax
               :  115643:	mov    %r8,0xa0(%rsp)
               :  11564b:	mov    %ecx,0xc8(%rsp)
               :  115652:	cmp    $0xf,%eax
               :  115655:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  11565b:	shl    $0x7,%rax
               :  11565f:	lea    0x180(%rsp),%rsi
               :  115667:	add    0x808a2(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11566e:	mov    $0x1,%edx
               :  115673:	callq  *0x70(%rax)
               :  115676:	mov    0xa0(%rsp),%r8
               :  11567e:	mov    0xc8(%rsp),%ecx
               :  115685:	jmpq   111a6f <mlx5_tx_burst_mtiv_ts+0x4caf>
               :  11568a:	lea    0x84(%r14),%r8
               :  115691:	mov    $0x3,%eax
               :  115696:	mov    %ax,0x44(%r14)
               :  11569b:	mov    0x10(%r8),%eax
               :  11569f:	jmpq   10dca1 <mlx5_tx_burst_mtiv_ts+0xee1>
               :  1156a4:	lea    0x98(%r14),%r8
               :  1156ab:	mov    $0x4,%eax
               :  1156b0:	jmp    115696 <mlx5_tx_burst_mtiv_ts+0x88d6>
               :  1156b2:	lea    0xac(%r14),%r8
               :  1156b9:	mov    $0x5,%eax
               :  1156be:	jmp    115696 <mlx5_tx_burst_mtiv_ts+0x88d6>
               :  1156c0:	lea    0xc0(%r14),%r8
               :  1156c7:	mov    $0x6,%eax
               :  1156cc:	jmp    115696 <mlx5_tx_burst_mtiv_ts+0x88d6>
               :  1156ce:	lea    0x5c(%r14),%r8
               :  1156d2:	mov    $0x1,%eax
               :  1156d7:	jmp    115696 <mlx5_tx_burst_mtiv_ts+0x88d6>
               :  1156d9:	lea    0x70(%r14),%r8
               :  1156dd:	mov    $0x2,%eax
               :  1156e2:	jmp    115696 <mlx5_tx_burst_mtiv_ts+0x88d6>
               :  1156e4:	xor    %eax,%eax
               :  1156e6:	jmp    115696 <mlx5_tx_burst_mtiv_ts+0x88d6>
               :  1156e8:	lea    0xd4(%r14),%r8
               :  1156ef:	mov    $0x7,%eax
               :  1156f4:	jmp    115696 <mlx5_tx_burst_mtiv_ts+0x88d6>
               :  1156f6:	mov    %rsi,%r8
               :  1156f9:	mov    %rbx,%rdx
               :  1156fc:	jmpq   1151f8 <mlx5_tx_burst_mtiv_ts+0x8438>
               :  115701:	mov    %r12,%rdi
               :  115704:	mov    %rdx,0xc0(%rsp)
               :  11570c:	vzeroupper 
               :  11570f:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :  115714:	mov    (%r15),%rdi
               :  115717:	mov    0xc0(%rsp),%rdx
               :  11571f:	jmpq   1127ba <mlx5_tx_burst_mtiv_ts+0x59fa>
               :  115724:	callq  aaf0 <__stack_chk_fail@plt>
               :  115729:	mov    %rbx,%rdi
               :  11572c:	mov    %ecx,0xa0(%rsp)
               :  115733:	vzeroupper 
               :  115736:	callq  e2e80 <rte_pktmbuf_detach>
               :  11573b:	mov    $0x1,%eax
               :  115740:	shl    $0x3d,%rax
               :  115744:	test   %rax,0x18(%rbx)
               :  115748:	mov    0xa0(%rsp),%ecx
               :  11574f:	je     114bc3 <mlx5_tx_burst_mtiv_ts+0x7e03>
               :  115755:	mov    0x38(%rbx),%rdi
               :  115759:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  11575e:	test   $0x1,%al
               :  115760:	mov    0xa0(%rsp),%ecx
               :  115767:	je     114bc3 <mlx5_tx_burst_mtiv_ts+0x7e03>
               :  11576d:	mov    0x50(%rbx),%rsi
               :  115771:	lea    0x18(%rbx),%rdi
               :  115775:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  11577a:	test   %eax,%eax
               :  11577c:	mov    0xa0(%rsp),%ecx
               :  115783:	je     114bc3 <mlx5_tx_burst_mtiv_ts+0x7e03>
               :  115789:	jmpq   1126d5 <mlx5_tx_burst_mtiv_ts+0x5915>
               :  11578e:	mov    %r13,%rdi
               :  115791:	mov    %r10,0x88(%rsp)
               :  115799:	mov    %r8d,0xc8(%rsp)
               :  1157a1:	vzeroupper 
               :  1157a4:	callq  e2e80 <rte_pktmbuf_detach>
               :  1157a9:	mov    $0x1,%eax
               :  1157ae:	shl    $0x3d,%rax
               :  1157b2:	test   %rax,0x18(%r13)
               :  1157b6:	mov    0xc8(%rsp),%r8d
               :  1157be:	mov    0x88(%rsp),%r10
               :  1157c6:	je     114b72 <mlx5_tx_burst_mtiv_ts+0x7db2>
               :  1157cc:	mov    0x38(%r13),%rdi
               :  1157d0:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  1157d5:	test   $0x1,%al
               :  1157d7:	mov    0xc8(%rsp),%r8d
               :  1157df:	mov    0x88(%rsp),%r10
               :  1157e7:	je     114b72 <mlx5_tx_burst_mtiv_ts+0x7db2>
               :  1157ed:	mov    0x50(%r13),%rsi
               :  1157f1:	lea    0x18(%r13),%rdi
               :  1157f5:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  1157fa:	test   %eax,%eax
               :  1157fc:	mov    0xc8(%rsp),%r8d
               :  115804:	mov    0x88(%rsp),%r10
               :  11580c:	je     114b72 <mlx5_tx_burst_mtiv_ts+0x7db2>
               :  115812:	jmpq   111137 <mlx5_tx_burst_mtiv_ts+0x4377>
               :  115817:	or     $0xffffffff,%edx
               :  11581a:	lock xadd %dx,(%rax)
               :  11581f:	dec    %dx
               :  115822:	je     1137c5 <mlx5_tx_burst_mtiv_ts+0x6a05>
               :  115828:	vzeroupper 
               :  11582b:	jmpq   1137f0 <mlx5_tx_burst_mtiv_ts+0x6a30>
               :  115830:	mov    0xa0(%rsp),%r8d
               :  115838:	movzwl 0x10(%rdx),%edi
               :  11583c:	sub    %r10d,%r8d
               :  11583f:	add    %r8,%rdi
               :  115842:	add    (%rdx),%rdi
               :  115845:	mov    %rdi,%rdx
               :  115848:	jmpq   10df05 <mlx5_tx_burst_mtiv_ts+0x1145>
               :  11584d:	or     $0xffffffff,%ecx
               :  115850:	lock xadd %cx,(%rdx)
               :  115855:	dec    %cx
               :  115858:	jne    1109cf <mlx5_tx_burst_mtiv_ts+0x3c0f>
               :  11585e:	movw   $0x1,0x10(%rax)
               :  115864:	jmpq   1116b1 <mlx5_tx_burst_mtiv_ts+0x48f1>
               :  115869:	or     $0xffffffff,%edx
               :  11586c:	lock xadd %dx,(%rax)
               :  115871:	dec    %dx
               :  115874:	je     1108a3 <mlx5_tx_burst_mtiv_ts+0x3ae3>
               :  11587a:	vzeroupper 
               :  11587d:	jmpq   1108c4 <mlx5_tx_burst_mtiv_ts+0x3b04>
               :  115882:	lea    0x40(%rcx),%rsi
               :  115886:	mov    %r8,%rdi
               :  115889:	mov    %rcx,0xa0(%rsp)
               :  115891:	mov    %rsi,0xc0(%rsp)
               :  115899:	callq  e2e30 <rte_mempool_ops_enqueue_bulk>
               :  11589e:	mov    0xa0(%rsp),%rcx
               :  1158a6:	mov    0xc0(%rsp),%rsi
               :  1158ae:	movl   $0x1,0x8(%rcx)
               :  1158b5:	jmpq   114105 <mlx5_tx_burst_mtiv_ts+0x7345>
               :  1158ba:	lea    0x190(%rsp),%rsi
               :  1158c2:	mov    $0x1,%edx
               :  1158c7:	mov    %r8,%rdi
               :  1158ca:	callq  e2e30 <rte_mempool_ops_enqueue_bulk>
               :  1158cf:	jmpq   10e8e4 <mlx5_tx_burst_mtiv_ts+0x1b24>
               :  1158d4:	lea    0x40(%r13),%rcx
               :  1158d8:	mov    %rcx,%rsi
               :  1158db:	mov    %r15,%rdi
               :  1158de:	mov    %rcx,0x88(%rsp)
               :  1158e6:	callq  e2e30 <rte_mempool_ops_enqueue_bulk>
               :  1158eb:	movl   $0x1,0x8(%r13)
               :  1158f3:	mov    0x88(%rsp),%rcx
               :  1158fb:	jmpq   113651 <mlx5_tx_burst_mtiv_ts+0x6891>
               :  115900:	mov    $0xc0,%eax
               :  115905:	jmpq   1117bc <mlx5_tx_burst_mtiv_ts+0x49fc>
               :  11590a:	mov    %r13,%rdi
               :  11590d:	vzeroupper 
               :  115910:	callq  e2e80 <rte_pktmbuf_detach>
               :  115915:	mov    $0x1,%eax
               :  11591a:	shl    $0x3d,%rax
               :  11591e:	test   %rax,0x18(%r13)
               :  115922:	je     114978 <mlx5_tx_burst_mtiv_ts+0x7bb8>
               :  115928:	mov    0x38(%r13),%rdi
               :  11592c:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  115931:	test   $0x1,%al
               :  115933:	je     114978 <mlx5_tx_burst_mtiv_ts+0x7bb8>
               :  115939:	mov    0x50(%r13),%rsi
               :  11593d:	lea    0x18(%r13),%rdi
               :  115941:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  115946:	test   %eax,%eax
               :  115948:	je     114978 <mlx5_tx_burst_mtiv_ts+0x7bb8>
               :  11594e:	jmpq   112f94 <mlx5_tx_burst_mtiv_ts+0x61d4>
               :  115953:	movslq 0x58(%rdi),%rax
               :  115957:	mov    %r9,0x10(%rsp)
               :  11595c:	mov    %rcx,0x18(%rsp)
               :  115961:	mov    %r8,0x80(%rsp)
               :  115969:	lea    0x40(%r8),%rsi
               :  11596d:	cmp    $0xf,%eax
               :  115970:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  115976:	shl    $0x7,%rax
               :  11597a:	add    0x8058f(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  115981:	mov    %rsi,0x40(%rsp)
               :  115986:	callq  *0x70(%rax)
               :  115989:	mov    0x80(%rsp),%r8
               :  115991:	mov    0x10(%rsp),%r9
               :  115996:	movl   $0x1,0x8(%r8)
               :  11599e:	mov    0x18(%rsp),%rcx
               :  1159a3:	mov    0x40(%rsp),%rsi
               :  1159a8:	jmpq   113940 <mlx5_tx_burst_mtiv_ts+0x6b80>
               :  1159ad:	or     $0xffffffff,%esi
               :  1159b0:	lock xadd %si,(%rdx)
               :  1159b5:	dec    %si
               :  1159b8:	jne    115828 <mlx5_tx_burst_mtiv_ts+0x8a68>
               :  1159be:	jmpq   11389c <mlx5_tx_burst_mtiv_ts+0x6adc>
               :  1159c3:	mov    $0x1020c0,%eax
               :  1159c8:	jmpq   10fb92 <mlx5_tx_burst_mtiv_ts+0x2dd2>
               :  1159cd:	mov    %r9,%rsi
               :  1159d0:	mov    %r14,%rdi
               :  1159d3:	mov    %r9,0xd0(%rsp)
               :  1159db:	vzeroupper 
               :  1159de:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :  1159e3:	mov    0xd0(%rsp),%r9
               :  1159eb:	jmpq   114b24 <mlx5_tx_burst_mtiv_ts+0x7d64>
               :  1159f0:	mov    0x48(%r12),%rax
               :  1159f5:	test   %rax,%rax
               :  1159f8:	je     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  1159fa:	cmp    %rax,%rdx
               :  1159fd:	jb     115a0a <mlx5_tx_burst_mtiv_ts+0x8c4a>
               :  1159ff:	cmp    %rdx,0x50(%r12)
               :  115a04:	ja     116498 <mlx5_tx_burst_mtiv_ts+0x96d8>
               :  115a0a:	mov    0x5c(%r12),%rax
               :  115a0f:	test   %rax,%rax
               :  115a12:	je     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  115a14:	cmp    %rax,%rdx
               :  115a17:	jb     115a2e <mlx5_tx_burst_mtiv_ts+0x8c6e>
               :  115a19:	lea    0x5c(%r12),%rcx
               :  115a1e:	mov    $0x1,%eax
               :  115a23:	cmp    0x64(%r12),%rdx
               :  115a28:	jb     115b43 <mlx5_tx_burst_mtiv_ts+0x8d83>
               :  115a2e:	mov    0x70(%r12),%rax
               :  115a33:	test   %rax,%rax
               :  115a36:	je     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  115a38:	cmp    %rax,%rdx
               :  115a3b:	jb     115a52 <mlx5_tx_burst_mtiv_ts+0x8c92>
               :  115a3d:	lea    0x70(%r12),%rcx
               :  115a42:	mov    $0x2,%eax
               :  115a47:	cmp    0x78(%r12),%rdx
               :  115a4c:	jb     115b43 <mlx5_tx_burst_mtiv_ts+0x8d83>
               :  115a52:	mov    0x84(%r12),%rax
               :  115a5a:	test   %rax,%rax
               :  115a5d:	je     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  115a63:	cmp    %rax,%rdx
               :  115a66:	jb     115a83 <mlx5_tx_burst_mtiv_ts+0x8cc3>
               :  115a68:	lea    0x84(%r12),%rcx
               :  115a70:	mov    $0x3,%eax
               :  115a75:	cmp    0x8c(%r12),%rdx
               :  115a7d:	jb     115b43 <mlx5_tx_burst_mtiv_ts+0x8d83>
               :  115a83:	mov    0x98(%r12),%rax
               :  115a8b:	test   %rax,%rax
               :  115a8e:	je     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  115a94:	cmp    %rax,%rdx
               :  115a97:	jb     115ab4 <mlx5_tx_burst_mtiv_ts+0x8cf4>
               :  115a99:	lea    0x98(%r12),%rcx
               :  115aa1:	mov    $0x4,%eax
               :  115aa6:	cmp    0xa0(%r12),%rdx
               :  115aae:	jb     115b43 <mlx5_tx_burst_mtiv_ts+0x8d83>
               :  115ab4:	mov    0xac(%r12),%rax
               :  115abc:	test   %rax,%rax
               :  115abf:	je     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  115ac5:	cmp    %rdx,%rax
               :  115ac8:	ja     115ae1 <mlx5_tx_burst_mtiv_ts+0x8d21>
               :  115aca:	lea    0xac(%r12),%rcx
               :  115ad2:	mov    $0x5,%eax
               :  115ad7:	cmp    0xb4(%r12),%rdx
               :  115adf:	jb     115b43 <mlx5_tx_burst_mtiv_ts+0x8d83>
               :  115ae1:	mov    0xc0(%r12),%rax
               :  115ae9:	test   %rax,%rax
               :  115aec:	je     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  115af2:	cmp    %rax,%rdx
               :  115af5:	jb     115b0e <mlx5_tx_burst_mtiv_ts+0x8d4e>
               :  115af7:	lea    0xc0(%r12),%rcx
               :  115aff:	mov    $0x6,%eax
               :  115b04:	cmp    %rdx,0xc8(%r12)
               :  115b0c:	ja     115b43 <mlx5_tx_burst_mtiv_ts+0x8d83>
               :  115b0e:	mov    0xd4(%r12),%rax
               :  115b16:	test   %rax,%rax
               :  115b19:	je     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  115b1f:	cmp    %rax,%rdx
               :  115b22:	jb     1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  115b28:	lea    0xd4(%r12),%rcx
               :  115b30:	mov    $0x7,%eax
               :  115b35:	cmp    0xdc(%r12),%rdx
               :  115b3d:	jae    1159cd <mlx5_tx_burst_mtiv_ts+0x8c0d>
               :  115b43:	mov    %ax,0x44(%r12)
               :  115b49:	mov    0x10(%rcx),%eax
               :  115b4c:	jmpq   114b1b <mlx5_tx_burst_mtiv_ts+0x7d5b>
               :  115b51:	mov    (%r15),%rax
               :  115b54:	movzwl 0x58(%r15),%edx
               :  115b59:	add    $0xffffffffffffff80,%rax
               :  115b5d:	sub    %rdx,%rax
               :  115b60:	movzwl 0x12(%rax),%ecx
               :  115b64:	lea    0x12(%rax),%rdx
               :  115b68:	dec    %cx
               :  115b6b:	jne    11645c <mlx5_tx_burst_mtiv_ts+0x969c>
               :  115b71:	movw   $0x0,0x12(%rax)
               :  115b77:	movq   $0x0,0x40(%rax)
               :  115b7f:	movw   $0x1,0x14(%rax)
               :  115b85:	mov    %r8,0xa0(%rsp)
               :  115b8d:	movw   $0x1,0x12(%rax)
               :  115b93:	mov    0x38(%rax),%rdi
               :  115b97:	mov    %rax,0x190(%rsp)
               :  115b9f:	mov    %rdi,0xc0(%rsp)
               :  115ba7:	vzeroupper 
               :  115baa:	data16 lea 0x80296(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  115bb2:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  115bba:	mov    0xc0(%rsp),%rdi
               :  115bc2:	mov    0xa0(%rsp),%r8
               :  115bca:	cmpl   $0x0,0x44(%rdi)
               :  115bce:	mov    (%rax),%eax
               :  115bd0:	je     11641f <mlx5_tx_burst_mtiv_ts+0x965f>
               :  115bd6:	cmp    $0x7f,%eax
               :  115bd9:	ja     11641f <mlx5_tx_burst_mtiv_ts+0x965f>
               :  115bdf:	mov    %eax,%ecx
               :  115be1:	imul   $0x2040,%rcx,%rcx
               :  115be8:	add    0x60(%rdi),%rcx
               :  115bec:	je     11641f <mlx5_tx_burst_mtiv_ts+0x965f>
               :  115bf2:	mov    0x4(%rcx),%esi
               :  115bf5:	test   %esi,%esi
               :  115bf7:	je     11641f <mlx5_tx_burst_mtiv_ts+0x965f>
               :  115bfd:	mov    0x8(%rcx),%edx
               :  115c00:	lea    0x1(%rdx),%eax
               :  115c03:	cmp    %eax,%esi
               :  115c05:	jb     11631e <mlx5_tx_burst_mtiv_ts+0x955e>
               :  115c0b:	mov    %eax,0x8(%rcx)
               :  115c0e:	lea    0x40(%rcx,%rdx,8),%rsi
               :  115c13:	mov    0x190(%rsp),%rax
               :  115c1b:	mov    %rax,(%rsi)
               :  115c1e:	jmpq   114012 <mlx5_tx_burst_mtiv_ts+0x7252>
               :  115c23:	movslq 0x58(%rdi),%rax
               :  115c27:	mov    %r8,0x18(%rsp)
               :  115c2c:	mov    %rcx,0x40(%rsp)
               :  115c31:	lea    0x40(%rcx),%rsi
               :  115c35:	cmp    $0xf,%eax
               :  115c38:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  115c3e:	shl    $0x7,%rax
               :  115c42:	add    0x802c7(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  115c49:	mov    %rsi,0x88(%rsp)
               :  115c51:	callq  *0x70(%rax)
               :  115c54:	mov    0x40(%rsp),%rcx
               :  115c59:	mov    0x18(%rsp),%r8
               :  115c5e:	movl   $0x1,0x8(%rcx)
               :  115c65:	mov    0x88(%rsp),%rsi
               :  115c6d:	jmpq   113251 <mlx5_tx_burst_mtiv_ts+0x6491>
               :  115c72:	movslq 0x58(%rdi),%rax
               :  115c76:	mov    %r8,0x88(%rsp)
               :  115c7e:	cmp    $0xf,%eax
               :  115c81:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  115c87:	shl    $0x7,%rax
               :  115c8b:	lea    0x138(%rsp),%rsi
               :  115c93:	add    0x80276(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  115c9a:	mov    $0x1,%edx
               :  115c9f:	callq  *0x70(%rax)
               :  115ca2:	mov    0x88(%rsp),%r8
               :  115caa:	jmpq   1108c4 <mlx5_tx_burst_mtiv_ts+0x3b04>
               :  115caf:	or     $0xffffffff,%ecx
               :  115cb2:	lock xadd %cx,(%rdx)
               :  115cb7:	dec    %cx
               :  115cba:	jne    11587a <mlx5_tx_burst_mtiv_ts+0x8aba>
               :  115cc0:	jmpq   1131b7 <mlx5_tx_burst_mtiv_ts+0x63f7>
               :  115cc5:	mov    0x0(%r13),%rax
               :  115cc9:	movzwl 0x58(%r13),%edx
               :  115cce:	add    $0xffffffffffffff80,%rax
               :  115cd2:	sub    %rdx,%rax
               :  115cd5:	movzwl 0x12(%rax),%ecx
               :  115cd9:	lea    0x12(%rax),%rdx
               :  115cdd:	dec    %cx
               :  115ce0:	jne    1161fa <mlx5_tx_burst_mtiv_ts+0x943a>
               :  115ce6:	movw   $0x0,0x12(%rax)
               :  115cec:	movq   $0x0,0x40(%rax)
               :  115cf4:	movw   $0x1,0x14(%rax)
               :  115cfa:	movw   $0x1,0x12(%rax)
               :  115d00:	mov    %rax,0x160(%rsp)
               :  115d08:	mov    0x38(%rax),%rdi
               :  115d0c:	mov    %rdi,0xd0(%rsp)
               :  115d14:	vzeroupper 
               :  115d17:	data16 lea 0x80129(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  115d1f:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  115d27:	mov    0xd0(%rsp),%rdi
               :  115d2f:	cmpl   $0x0,0x44(%rdi)
               :  115d33:	mov    (%rax),%eax
               :  115d35:	je     1161cd <mlx5_tx_burst_mtiv_ts+0x940d>
               :  115d3b:	cmp    $0x7f,%eax
               :  115d3e:	ja     1161cd <mlx5_tx_burst_mtiv_ts+0x940d>
               :  115d44:	imul   $0x2040,%rax,%rax
               :  115d4b:	add    0x60(%rdi),%rax
               :  115d4f:	mov    %rax,%r8
               :  115d52:	je     1161cd <mlx5_tx_burst_mtiv_ts+0x940d>
               :  115d58:	mov    0x4(%rax),%ecx
               :  115d5b:	test   %ecx,%ecx
               :  115d5d:	je     1161cd <mlx5_tx_burst_mtiv_ts+0x940d>
               :  115d63:	mov    0x8(%rax),%edx
               :  115d66:	lea    0x1(%rdx),%eax
               :  115d69:	cmp    %eax,%ecx
               :  115d6b:	jb     11617e <mlx5_tx_burst_mtiv_ts+0x93be>
               :  115d71:	mov    %eax,0x8(%r8)
               :  115d75:	lea    0x40(%r8,%rdx,8),%rcx
               :  115d7a:	mov    0x160(%rsp),%rax
               :  115d82:	mov    %rax,(%rcx)
               :  115d85:	cmpl   $0x1,0x44(%r14)
               :  115d8a:	sbb    %rax,%rax
               :  115d8d:	and    $0xffffffffffefe000,%rax
               :  115d93:	lea    0x1020c0(%r14,%rax,1),%rax
               :  115d9b:	movzwl 0x2(%rax),%edx
               :  115d9f:	movzwl (%rax),%eax
               :  115da2:	mov    %dx,0x58(%r13)
               :  115da7:	sub    $0xffffffffffffff80,%rdx
               :  115dab:	lea    0x0(%r13,%rdx,1),%rcx
               :  115db0:	add    -0x8(%r13),%rdx
               :  115db4:	mov    %rdx,0x8(%r13)
               :  115db8:	cmp    $0x80,%ax
               :  115dbc:	mov    $0x80,%edx
               :  115dc1:	mov    %ax,0x36(%r13)
               :  115dc6:	cmova  %edx,%eax
               :  115dc9:	xor    %edi,%edi
               :  115dcb:	mov    %rcx,0x0(%r13)
               :  115dcf:	mov    %ax,0x10(%r13)
               :  115dd4:	mov    %di,0x28(%r13)
               :  115dd9:	movq   $0x0,0x18(%r13)
               :  115de1:	mov    0x38(%r13),%r14
               :  115de5:	jmpq   111c9b <mlx5_tx_burst_mtiv_ts+0x4edb>
               :  115dea:	mov    %r13,%rdi
               :  115ded:	vzeroupper 
               :  115df0:	callq  e2e80 <rte_pktmbuf_detach>
               :  115df5:	mov    $0x1,%eax
               :  115dfa:	shl    $0x3d,%rax
               :  115dfe:	test   %rax,0x18(%r13)
               :  115e02:	je     115e2d <mlx5_tx_burst_mtiv_ts+0x906d>
               :  115e04:	mov    0x38(%r13),%r15
               :  115e08:	mov    %r15,%rdi
               :  115e0b:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  115e10:	test   $0x1,%al
               :  115e12:	je     1135cd <mlx5_tx_burst_mtiv_ts+0x680d>
               :  115e18:	mov    0x50(%r13),%rsi
               :  115e1c:	lea    0x18(%r13),%rdi
               :  115e20:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  115e25:	test   %eax,%eax
               :  115e27:	jne    11365c <mlx5_tx_burst_mtiv_ts+0x689c>
               :  115e2d:	mov    0x38(%r13),%r15
               :  115e31:	jmpq   1135cd <mlx5_tx_burst_mtiv_ts+0x680d>
               :  115e36:	or     $0xffffffff,%esi
               :  115e39:	lock xadd %si,(%rdx)
               :  115e3e:	dec    %si
               :  115e41:	jne    10ed1c <mlx5_tx_burst_mtiv_ts+0x1f5c>
               :  115e47:	movw   $0x1,0x10(%rax)
               :  115e4d:	vzeroupper 
               :  115e50:	jmpq   1113ab <mlx5_tx_burst_mtiv_ts+0x45eb>
               :  115e55:	mov    %r15,%rdi
               :  115e58:	vzeroupper 
               :  115e5b:	callq  e2e60 <__rte_mbuf_refcnt_update.constprop.0>
               :  115e60:	test   %ax,%ax
               :  115e63:	jne    10e8e4 <mlx5_tx_burst_mtiv_ts+0x1b24>
               :  115e69:	mov    $0x3,%eax
               :  115e6e:	shl    $0x3d,%rax
               :  115e72:	test   %rax,0x18(%r15)
               :  115e76:	je     115eae <mlx5_tx_burst_mtiv_ts+0x90ee>
               :  115e78:	callq  e2e80 <rte_pktmbuf_detach>
               :  115e7d:	mov    $0x1,%eax
               :  115e82:	shl    $0x3d,%rax
               :  115e86:	test   %rax,0x18(%r15)
               :  115e8a:	je     115eae <mlx5_tx_burst_mtiv_ts+0x90ee>
               :  115e8c:	mov    0x38(%r15),%rdi
               :  115e90:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  115e95:	test   $0x1,%al
               :  115e97:	je     115eae <mlx5_tx_burst_mtiv_ts+0x90ee>
               :  115e99:	mov    0x50(%r15),%rsi
               :  115e9d:	lea    0x18(%r15),%rdi
               :  115ea1:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  115ea6:	test   %eax,%eax
               :  115ea8:	jne    10e8e4 <mlx5_tx_burst_mtiv_ts+0x1b24>
               :  115eae:	cmpq   $0x0,0x40(%r15)
               :  115eb3:	je     115ebd <mlx5_tx_burst_mtiv_ts+0x90fd>
               :  115eb5:	movq   $0x0,0x40(%r15)
               :  115ebd:	cmpw   $0x1,0x14(%r15)
               :  115ec3:	je     115ecc <mlx5_tx_burst_mtiv_ts+0x910c>
               :  115ec5:	movw   $0x1,0x14(%r15)
               :  115ecc:	mov    %r15,%rdi
               :  115ecf:	callq  e2e70 <rte_mbuf_refcnt_set.constprop.0>
               :  115ed4:	mov    0x38(%r15),%r8
               :  115ed8:	jmpq   114092 <mlx5_tx_burst_mtiv_ts+0x72d2>
               :  115edd:	mov    0xf8(%r14),%rdx
               :  115ee4:	add    %rcx,%rax
               :  115ee7:	mov    %r11d,%esi
               :  115eea:	jmpq   113eca <mlx5_tx_burst_mtiv_ts+0x710a>
               :  115eef:	vmovdqu64 (%rax),%xmm7
               :  115ef5:	vmovups %xmm7,(%rdx)
               :  115ef9:	vmovdqu64 -0x10(%rax,%rcx,1),%xmm0
               :  115f01:	vmovups %xmm0,-0x10(%rdx,%rcx,1)
               :  115f07:	jmpq   113f64 <mlx5_tx_burst_mtiv_ts+0x71a4>
               :  115f0c:	mov    0x50(%r13),%rdx
               :  115f10:	movzwl 0x10(%rdx),%ecx
               :  115f14:	lea    0x10(%rdx),%rax
               :  115f18:	dec    %cx
               :  115f1b:	jne    116165 <mlx5_tx_burst_mtiv_ts+0x93a5>
               :  115f21:	movw   $0x0,0x10(%rdx)
               :  115f27:	mov    0x50(%r13),%rax
               :  115f2b:	mov    0x0(%r13),%rdi
               :  115f2f:	mov    0x8(%rax),%rsi
               :  115f33:	vzeroupper 
               :  115f36:	callq  *(%rax)
               :  115f38:	jmpq   115d85 <mlx5_tx_burst_mtiv_ts+0x8fc5>
               :  115f3d:	testb  $0x1,0x1020c4(%r14)
               :  115f45:	je     115f0c <mlx5_tx_burst_mtiv_ts+0x914c>
               :  115f47:	mov    $0x1020c0,%eax
               :  115f4c:	jmpq   111c73 <mlx5_tx_burst_mtiv_ts+0x4eb3>
               :  115f51:	mov    %r13,%rdi
               :  115f54:	vzeroupper 
               :  115f57:	callq  e2e60 <__rte_mbuf_refcnt_update.constprop.0>
               :  115f5c:	test   %ax,%ax
               :  115f5f:	jne    111d2d <mlx5_tx_burst_mtiv_ts+0x4f6d>
               :  115f65:	mov    $0x3,%eax
               :  115f6a:	shl    $0x3d,%rax
               :  115f6e:	test   %rax,0x18(%r13)
               :  115f72:	je     115faa <mlx5_tx_burst_mtiv_ts+0x91ea>
               :  115f74:	callq  e2e80 <rte_pktmbuf_detach>
               :  115f79:	mov    $0x1,%eax
               :  115f7e:	shl    $0x3d,%rax
               :  115f82:	test   %rax,0x18(%r13)
               :  115f86:	je     115faa <mlx5_tx_burst_mtiv_ts+0x91ea>
               :  115f88:	mov    0x38(%r13),%rdi
               :  115f8c:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  115f91:	test   $0x1,%al
               :  115f93:	je     115faa <mlx5_tx_burst_mtiv_ts+0x91ea>
               :  115f95:	mov    0x50(%r13),%rsi
               :  115f99:	lea    0x18(%r13),%rdi
               :  115f9d:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  115fa2:	test   %eax,%eax
               :  115fa4:	jne    111d2d <mlx5_tx_burst_mtiv_ts+0x4f6d>
               :  115faa:	cmpq   $0x0,0x40(%r13)
               :  115faf:	je     115fb9 <mlx5_tx_burst_mtiv_ts+0x91f9>
               :  115fb1:	movq   $0x0,0x40(%r13)
               :  115fb9:	cmpw   $0x1,0x14(%r13)
               :  115fbf:	je     115fc8 <mlx5_tx_burst_mtiv_ts+0x9208>
               :  115fc1:	movw   $0x1,0x14(%r13)
               :  115fc8:	mov    %r13,%rdi
               :  115fcb:	callq  e2e70 <rte_mbuf_refcnt_set.constprop.0>
               :  115fd0:	mov    0x38(%r13),%r14
               :  115fd4:	jmpq   111cbc <mlx5_tx_burst_mtiv_ts+0x4efc>
               :  115fd9:	or     $0xffffffff,%ecx
               :  115fdc:	lock xadd %cx,(%rdx)
               :  115fe1:	dec    %cx
               :  115fe4:	jne    112f94 <mlx5_tx_burst_mtiv_ts+0x61d4>
               :  115fea:	movw   $0x1,0x10(%rax)
               :  115ff0:	jmpq   112eea <mlx5_tx_burst_mtiv_ts+0x612a>
               :  115ff5:	movslq 0x58(%rdi),%rax
               :  115ff9:	cmp    $0xf,%eax
               :  115ffc:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  116002:	shl    $0x7,%rax
               :  116006:	lea    0x130(%rsp),%rsi
               :  11600e:	add    0x7fefb(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  116015:	mov    $0x1,%edx
               :  11601a:	callq  *0x70(%rax)
               :  11601d:	jmpq   11431d <mlx5_tx_burst_mtiv_ts+0x755d>
               :  116022:	or     $0xffffffff,%ecx
               :  116025:	lock xadd %cx,(%rdx)
               :  11602a:	dec    %cx
               :  11602d:	je     1143d0 <mlx5_tx_burst_mtiv_ts+0x7610>
               :  116033:	vzeroupper 
               :  116036:	jmpq   11431d <mlx5_tx_burst_mtiv_ts+0x755d>
               :  11603b:	movslq 0x58(%rdi),%rax
               :  11603f:	lea    0x40(%rcx),%rsi
               :  116043:	cmp    $0xf,%eax
               :  116046:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  11604c:	shl    $0x7,%rax
               :  116050:	add    0x7feb9(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  116057:	mov    %rcx,0x38(%rsp)
               :  11605c:	mov    %rsi,0x88(%rsp)
               :  116064:	callq  *0x70(%rax)
               :  116067:	mov    0x38(%rsp),%rcx
               :  11606c:	mov    0x88(%rsp),%rsi
               :  116074:	movl   $0x1,0x8(%rcx)
               :  11607b:	jmpq   11445c <mlx5_tx_burst_mtiv_ts+0x769c>
               :  116080:	mov    %rbx,0xc0(%rsp)
               :  116088:	movzwl 0xdc(%rsp),%r15d
               :  116091:	jmpq   10d68e <mlx5_tx_burst_mtiv_ts+0x8ce>
               :  116096:	movslq 0x58(%rdi),%rax
               :  11609a:	mov    %r8,0x90(%rsp)
               :  1160a2:	mov    %ecx,0xa0(%rsp)
               :  1160a9:	cmp    $0xf,%eax
               :  1160ac:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1160b2:	shl    $0x7,%rax
               :  1160b6:	lea    0x188(%rsp),%rsi
               :  1160be:	add    0x7fe4b(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1160c5:	mov    $0x1,%edx
               :  1160ca:	callq  *0x70(%rax)
               :  1160cd:	mov    0x90(%rsp),%r8
               :  1160d5:	mov    0xa0(%rsp),%ecx
               :  1160dc:	jmpq   114c4c <mlx5_tx_burst_mtiv_ts+0x7e8c>
               :  1160e1:	or     $0xffffffff,%esi
               :  1160e4:	lock xadd %si,(%rdx)
               :  1160e9:	dec    %si
               :  1160ec:	je     115035 <mlx5_tx_burst_mtiv_ts+0x8275>
               :  1160f2:	vzeroupper 
               :  1160f5:	jmpq   114c4c <mlx5_tx_burst_mtiv_ts+0x7e8c>
               :  1160fa:	xor    %eax,%eax
               :  1160fc:	mov    %ax,0x44(%r12)
               :  116102:	mov    0x10(%rdx),%eax
               :  116105:	jmpq   111d81 <mlx5_tx_burst_mtiv_ts+0x4fc1>
               :  11610a:	lea    0x5c(%r12),%rdx
               :  11610f:	mov    $0x1,%eax
               :  116114:	jmp    1160fc <mlx5_tx_burst_mtiv_ts+0x933c>
               :  116116:	xor    %eax,%eax
               :  116118:	mov    %ax,0x44(%r14)
               :  11611d:	mov    0x10(%rcx),%eax
               :  116120:	jmpq   10e8a6 <mlx5_tx_burst_mtiv_ts+0x1ae6>
               :  116125:	lea    0x5c(%r14),%rcx
               :  116129:	mov    $0x1,%eax
               :  11612e:	jmp    116118 <mlx5_tx_burst_mtiv_ts+0x9358>
               :  116130:	lea    0x70(%r14),%rcx
               :  116134:	mov    $0x2,%eax
               :  116139:	jmp    116118 <mlx5_tx_burst_mtiv_ts+0x9358>
               :  11613b:	lea    0x84(%r14),%rcx
               :  116142:	mov    $0x3,%eax
               :  116147:	jmp    116118 <mlx5_tx_burst_mtiv_ts+0x9358>
               :  116149:	lea    0x98(%r14),%rcx
               :  116150:	mov    $0x4,%eax
               :  116155:	jmp    116118 <mlx5_tx_burst_mtiv_ts+0x9358>
               :  116157:	lea    0xac(%r14),%rcx
               :  11615e:	mov    $0x5,%eax
               :  116163:	jmp    116118 <mlx5_tx_burst_mtiv_ts+0x9358>
               :  116165:	or     $0xffffffff,%edx
               :  116168:	lock xadd %dx,(%rax)
               :  11616d:	dec    %dx
               :  116170:	je     115f27 <mlx5_tx_burst_mtiv_ts+0x9167>
               :  116176:	vzeroupper 
               :  116179:	jmpq   115d85 <mlx5_tx_burst_mtiv_ts+0x8fc5>
               :  11617e:	movslq 0x58(%rdi),%rax
               :  116182:	mov    %r8,0x90(%rsp)
               :  11618a:	lea    0x40(%r8),%rcx
               :  11618e:	cmp    $0xf,%eax
               :  116191:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  116197:	shl    $0x7,%rax
               :  11619b:	mov    %rcx,%rsi
               :  11619e:	add    0x7fd6b(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1161a5:	mov    %rcx,0xd0(%rsp)
               :  1161ad:	callq  *0x70(%rax)
               :  1161b0:	mov    0x90(%rsp),%r8
               :  1161b8:	mov    0xd0(%rsp),%rcx
               :  1161c0:	movl   $0x1,0x8(%r8)
               :  1161c8:	jmpq   115d7a <mlx5_tx_burst_mtiv_ts+0x8fba>
               :  1161cd:	movslq 0x58(%rdi),%rax
               :  1161d1:	cmp    $0xf,%eax
               :  1161d4:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1161da:	shl    $0x7,%rax
               :  1161de:	lea    0x160(%rsp),%rsi
               :  1161e6:	add    0x7fd23(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1161ed:	mov    $0x1,%edx
               :  1161f2:	callq  *0x70(%rax)
               :  1161f5:	jmpq   115d85 <mlx5_tx_burst_mtiv_ts+0x8fc5>
               :  1161fa:	or     $0xffffffff,%ecx
               :  1161fd:	lock xadd %cx,(%rdx)
               :  116202:	dec    %cx
               :  116205:	jne    116176 <mlx5_tx_burst_mtiv_ts+0x93b6>
               :  11620b:	jmpq   115cec <mlx5_tx_burst_mtiv_ts+0x8f2c>
               :  116210:	mov    %rax,%rdi
               :  116213:	mov    %rcx,%r8
               :  116216:	vmovdqu64 (%rdi),%ymm0
               :  11621c:	sub    $0x40,%r8
               :  116220:	vmovdqu64 %ymm0,(%rdx)
               :  116226:	vmovdqu64 0x20(%rdi),%ymm1
               :  11622d:	add    $0x40,%rdx
               :  116231:	vmovdqu64 %ymm1,-0x20(%rdx)
               :  116238:	add    $0x40,%rdi
               :  11623c:	jmpq   114929 <mlx5_tx_burst_mtiv_ts+0x7b69>
               :  116241:	mov    %rdx,%rdi
               :  116244:	and    $0x1f,%edi
               :  116247:	je     116313 <mlx5_tx_burst_mtiv_ts+0x9553>
               :  11624d:	mov    $0x20,%r8d
               :  116253:	sub    %rdi,%r8
               :  116256:	lea    -0x20(%rcx,%rdi,1),%r9
               :  11625b:	vmovdqu64 %ymm0,(%rdx)
               :  116261:	lea    (%rax,%r8,1),%rdi
               :  116265:	add    %r8,%rdx
               :  116268:	xor    %r8d,%r8d
               :  11626b:	vmovdqu64 0x20(%rdi,%r8,1),%ymm2
               :  116273:	vmovdqu64 0x40(%rdi,%r8,1),%ymm1
               :  11627b:	vmovdqu64 0x60(%rdi,%r8,1),%ymm0
               :  116283:	vmovdqu64 (%rdi,%r8,1),%ymm5
               :  11628a:	mov    %r9,%r15
               :  11628d:	vmovdqu64 %ymm5,(%rdx,%r8,1)
               :  116294:	vmovdqu64 %ymm2,0x20(%rdx,%r8,1)
               :  11629c:	vmovdqu64 %ymm1,0x40(%rdx,%r8,1)
               :  1162a4:	vmovdqu64 %ymm0,0x60(%rdx,%r8,1)
               :  1162ac:	sub    $0xffffffffffffff80,%r8
               :  1162b0:	sub    %r8,%r15
               :  1162b3:	cmp    $0x7f,%r15
               :  1162b7:	ja     11626b <mlx5_tx_burst_mtiv_ts+0x94ab>
               :  1162b9:	mov    %r9,%r8
               :  1162bc:	and    $0xffffffffffffff80,%r9
               :  1162c0:	and    $0x7f,%r8d
               :  1162c4:	add    %r9,%rdi
               :  1162c7:	add    %r9,%rdx
               :  1162ca:	jmpq   11491f <mlx5_tx_burst_mtiv_ts+0x7b5f>
               :  1162cf:	vmovdqu64 %ymm0,(%rdx)
               :  1162d5:	vmovdqu64 -0x20(%rax,%rcx,1),%ymm4
               :  1162dd:	vmovdqu64 %ymm4,-0x20(%rdx,%rcx,1)
               :  1162e5:	jmpq   113f64 <mlx5_tx_burst_mtiv_ts+0x71a4>
               :  1162ea:	vmovdqu64 (%rax),%xmm1
               :  1162f0:	vmovups %xmm1,(%rdx)
               :  1162f4:	vmovdqu64 0x10(%rax),%xmm2
               :  1162fb:	vmovups %xmm2,0x10(%rdx)
               :  116300:	vmovdqu64 -0x10(%rax,%rcx,1),%xmm3
               :  116308:	vmovups %xmm3,-0x10(%rdx,%rcx,1)
               :  11630e:	jmpq   113f64 <mlx5_tx_burst_mtiv_ts+0x71a4>
               :  116313:	mov    %rcx,%r9
               :  116316:	mov    %rax,%rdi
               :  116319:	jmpq   116268 <mlx5_tx_burst_mtiv_ts+0x94a8>
               :  11631e:	movslq 0x58(%rdi),%rax
               :  116322:	mov    %r8,0x98(%rsp)
               :  11632a:	mov    %rcx,0xa0(%rsp)
               :  116332:	lea    0x40(%rcx),%rsi
               :  116336:	cmp    $0xf,%eax
               :  116339:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  11633f:	shl    $0x7,%rax
               :  116343:	add    0x7fbc6(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11634a:	mov    %rsi,0xc0(%rsp)
               :  116352:	callq  *0x70(%rax)
               :  116355:	mov    0xa0(%rsp),%rcx
               :  11635d:	mov    0x98(%rsp),%r8
               :  116365:	movl   $0x1,0x8(%rcx)
               :  11636c:	mov    0xc0(%rsp),%rsi
               :  116374:	jmpq   115c13 <mlx5_tx_burst_mtiv_ts+0x8e53>
               :  116379:	movslq 0x58(%rdi),%rax
               :  11637d:	mov    %r8,0x30(%rsp)
               :  116382:	mov    %r9,0x38(%rsp)
               :  116387:	lea    0x40(%r9),%rsi
               :  11638b:	cmp    $0xf,%eax
               :  11638e:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  116394:	shl    $0x7,%rax
               :  116398:	add    0x7fb71(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11639f:	mov    %rsi,0x88(%rsp)
               :  1163a7:	callq  *0x70(%rax)
               :  1163aa:	mov    0x38(%rsp),%r9
               :  1163af:	mov    0x30(%rsp),%r8
               :  1163b4:	movl   $0x1,0x8(%r9)
               :  1163bc:	mov    0x88(%rsp),%rsi
               :  1163c4:	jmpq   114f12 <mlx5_tx_burst_mtiv_ts+0x8152>
               :  1163c9:	movslq 0x58(%rdi),%rax
               :  1163cd:	mov    %r8,0x88(%rsp)
               :  1163d5:	cmp    $0xf,%eax
               :  1163d8:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1163de:	shl    $0x7,%rax
               :  1163e2:	lea    0x158(%rsp),%rsi
               :  1163ea:	add    0x7fb1f(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1163f1:	mov    $0x1,%edx
               :  1163f6:	callq  *0x70(%rax)
               :  1163f9:	mov    0x88(%rsp),%r8
               :  116401:	jmpq   111e35 <mlx5_tx_burst_mtiv_ts+0x5075>
               :  116406:	or     $0xffffffff,%esi
               :  116409:	lock xadd %si,(%rdx)
               :  11640e:	dec    %si
               :  116411:	je     114e78 <mlx5_tx_burst_mtiv_ts+0x80b8>
               :  116417:	vzeroupper 
               :  11641a:	jmpq   111e35 <mlx5_tx_burst_mtiv_ts+0x5075>
               :  11641f:	movslq 0x58(%rdi),%rax
               :  116423:	mov    %r8,0xc0(%rsp)
               :  11642b:	cmp    $0xf,%eax
               :  11642e:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  116434:	shl    $0x7,%rax
               :  116438:	lea    0x190(%rsp),%rsi
               :  116440:	add    0x7fac9(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  116447:	mov    $0x1,%edx
               :  11644c:	callq  *0x70(%rax)
               :  11644f:	mov    0xc0(%rsp),%r8
               :  116457:	jmpq   114012 <mlx5_tx_burst_mtiv_ts+0x7252>
               :  11645c:	or     $0xffffffff,%ecx
               :  11645f:	lock xadd %cx,(%rdx)
               :  116464:	dec    %cx
               :  116467:	je     115b77 <mlx5_tx_burst_mtiv_ts+0x8db7>
               :  11646d:	vzeroupper 
               :  116470:	jmpq   114012 <mlx5_tx_burst_mtiv_ts+0x7252>
               :  116475:	mov    %r14,%rdi
               :  116478:	mov    %r9,0xd0(%rsp)
               :  116480:	vzeroupper 
               :  116483:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :  116488:	mov    0xd0(%rsp),%r9
               :  116490:	mov    (%r9),%rdx
               :  116493:	jmpq   114af2 <mlx5_tx_burst_mtiv_ts+0x7d32>
               :  116498:	xor    %eax,%eax
               :  11649a:	jmpq   115b43 <mlx5_tx_burst_mtiv_ts+0x8d83>
               :  11649f:	mov    $0x1020c0,%eax
               :  1164a4:	jmpq   111375 <mlx5_tx_burst_mtiv_ts+0x45b5>
               :  1164a9:	vmovdqu64 (%rax),%ymm1
               :  1164af:	vmovdqu64 %ymm1,(%rdx)
               :  1164b5:	vmovdqu64 -0x20(%rax,%rcx,1),%ymm2
               :  1164bd:	vmovdqu64 %ymm2,-0x20(%rdx,%rcx,1)
               :  1164c5:	jmpq   113f64 <mlx5_tx_burst_mtiv_ts+0x71a4>
               :  1164ca:	lea    0xd4(%r12),%rdx
               :  1164d2:	mov    $0x7,%eax
               :  1164d7:	jmpq   1160fc <mlx5_tx_burst_mtiv_ts+0x933c>
               :  1164dc:	mov    $0xc0,%eax
               :  1164e1:	jmpq   111681 <mlx5_tx_burst_mtiv_ts+0x48c1>
               :  1164e6:	mov    %r13,%rdi
               :  1164e9:	vzeroupper 
               :  1164ec:	callq  e2e80 <rte_pktmbuf_detach>
               :  1164f1:	mov    $0x1,%eax
               :  1164f6:	shl    $0x3d,%rax
               :  1164fa:	test   %rax,0x18(%r13)
               :  1164fe:	je     116536 <mlx5_tx_burst_mtiv_ts+0x9776>
               :  116500:	mov    0x38(%r13),%rdi
               :  116504:	mov    %rdi,0xd0(%rsp)
               :  11650c:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  116511:	test   $0x1,%al
               :  116513:	mov    0xd0(%rsp),%rdi
               :  11651b:	je     114f60 <mlx5_tx_burst_mtiv_ts+0x81a0>
               :  116521:	mov    0x50(%r13),%rsi
               :  116525:	lea    0x18(%r13),%rdi
               :  116529:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  11652e:	test   %eax,%eax
               :  116530:	jne    114ffa <mlx5_tx_burst_mtiv_ts+0x823a>
               :  116536:	mov    0x38(%r13),%rdi
               :  11653a:	jmpq   114f60 <mlx5_tx_burst_mtiv_ts+0x81a0>
               :  11653f:	mov    %r13,%rdi
               :  116542:	vzeroupper 
               :  116545:	callq  e2e60 <__rte_mbuf_refcnt_update.constprop.0>
               :  11654a:	test   %ax,%ax
               :  11654d:	jne    114ffa <mlx5_tx_burst_mtiv_ts+0x823a>
               :  116553:	mov    $0x3,%eax
               :  116558:	shl    $0x3d,%rax
               :  11655c:	test   %rax,0x18(%r13)
               :  116560:	je     116598 <mlx5_tx_burst_mtiv_ts+0x97d8>
               :  116562:	callq  e2e80 <rte_pktmbuf_detach>
               :  116567:	mov    $0x1,%eax
               :  11656c:	shl    $0x3d,%rax
               :  116570:	test   %rax,0x18(%r13)
               :  116574:	je     116598 <mlx5_tx_burst_mtiv_ts+0x97d8>
               :  116576:	mov    0x38(%r13),%rdi
               :  11657a:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  11657f:	test   $0x1,%al
               :  116581:	je     116598 <mlx5_tx_burst_mtiv_ts+0x97d8>
               :  116583:	mov    0x50(%r13),%rsi
               :  116587:	lea    0x18(%r13),%rdi
               :  11658b:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  116590:	test   %eax,%eax
               :  116592:	jne    114ffa <mlx5_tx_burst_mtiv_ts+0x823a>
               :  116598:	cmpq   $0x0,0x40(%r13)
               :  11659d:	je     1165a7 <mlx5_tx_burst_mtiv_ts+0x97e7>
               :  11659f:	movq   $0x0,0x40(%r13)
               :  1165a7:	cmpw   $0x1,0x14(%r13)
               :  1165ad:	je     1165b6 <mlx5_tx_burst_mtiv_ts+0x97f6>
               :  1165af:	movw   $0x1,0x14(%r13)
               :  1165b6:	mov    %r13,%rdi
               :  1165b9:	callq  e2e70 <rte_mbuf_refcnt_set.constprop.0>
               :  1165be:	mov    0x38(%r13),%rdi
               :  1165c2:	jmpq   114f7e <mlx5_tx_burst_mtiv_ts+0x81be>
               :  1165c7:	or     $0xffffffff,%edx
               :  1165ca:	lock xadd %dx,(%rax)
               :  1165cf:	dec    %dx
               :  1165d2:	je     110fea <mlx5_tx_burst_mtiv_ts+0x422a>
               :  1165d8:	vzeroupper 
               :  1165db:	jmpq   11101b <mlx5_tx_burst_mtiv_ts+0x425b>
               :  1165e0:	mov    $0xc0,%eax
               :  1165e5:	jmpq   11285a <mlx5_tx_burst_mtiv_ts+0x5a9a>
               :  1165ea:	mov    %r13,%rdi
               :  1165ed:	vzeroupper 
               :  1165f0:	callq  e2e60 <__rte_mbuf_refcnt_update.constprop.0>
               :  1165f5:	test   %ax,%ax
               :  1165f8:	jne    11365c <mlx5_tx_burst_mtiv_ts+0x689c>
               :  1165fe:	mov    $0x3,%eax
               :  116603:	shl    $0x3d,%rax
               :  116607:	test   %rax,0x18(%r13)
               :  11660b:	je     116643 <mlx5_tx_burst_mtiv_ts+0x9883>
               :  11660d:	callq  e2e80 <rte_pktmbuf_detach>
               :  116612:	mov    $0x1,%eax
               :  116617:	shl    $0x3d,%rax
               :  11661b:	test   %rax,0x18(%r13)
               :  11661f:	je     116643 <mlx5_tx_burst_mtiv_ts+0x9883>
               :  116621:	mov    0x38(%r13),%rdi
               :  116625:	callq  e2dd0 <rte_pktmbuf_priv_flags>
               :  11662a:	test   $0x1,%al
               :  11662c:	je     116643 <mlx5_tx_burst_mtiv_ts+0x9883>
               :  11662e:	mov    0x50(%r13),%rsi
               :  116632:	lea    0x18(%r13),%rdi
               :  116636:	callq  e2df0 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :  11663b:	test   %eax,%eax
               :  11663d:	jne    11365c <mlx5_tx_burst_mtiv_ts+0x689c>
               :  116643:	cmpq   $0x0,0x40(%r13)
               :  116648:	je     116652 <mlx5_tx_burst_mtiv_ts+0x9892>
               :  11664a:	movq   $0x0,0x40(%r13)
               :  116652:	cmpw   $0x1,0x14(%r13)
               :  116658:	je     116661 <mlx5_tx_burst_mtiv_ts+0x98a1>
               :  11665a:	movw   $0x1,0x14(%r13)
               :  116661:	mov    %r13,%rdi
               :  116664:	callq  e2e70 <rte_mbuf_refcnt_set.constprop.0>
               :  116669:	mov    0x38(%r13),%r15
               :  11666d:	jmpq   1135eb <mlx5_tx_burst_mtiv_ts+0x682b>
               :  116672:	movslq 0x58(%rdi),%rax
               :  116676:	mov    %r9,0x80(%rsp)
               :  11667e:	mov    %rcx,0x40(%rsp)
               :  116683:	cmp    $0xf,%eax
               :  116686:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  11668c:	shl    $0x7,%rax
               :  116690:	lea    0x170(%rsp),%rsi
               :  116698:	add    0x7f871(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  11669f:	mov    $0x1,%edx
               :  1166a4:	callq  *0x70(%rax)
               :  1166a7:	mov    0x80(%rsp),%r9
               :  1166af:	mov    0x40(%rsp),%rcx
               :  1166b4:	jmpq   1137f0 <mlx5_tx_burst_mtiv_ts+0x6a30>
               :  1166b9:	test   %r8,%r8
               :  1166bc:	je     113f64 <mlx5_tx_burst_mtiv_ts+0x71a4>
               :  1166c2:	vmovdqu64 -0x20(%rdi,%r8,1),%ymm4
               :  1166ca:	vmovdqu64 %ymm4,-0x20(%rdx,%r8,1)
               :  1166d2:	jmpq   113f64 <mlx5_tx_burst_mtiv_ts+0x71a4>
               :  1166d7:	movzwl 0xdc(%rsp),%r15d
               :  1166e0:	mov    %rbx,0xc0(%rsp)
               :  1166e8:	movzwl %r15w,%ebx
               :  1166ec:	jmpq   10d06b <mlx5_tx_burst_mtiv_ts+0x2ab>
               :  1166f1:	lea    0x190(%rsp),%rsi
               :  1166f9:	mov    $0x1,%edx
               :  1166fe:	mov    %r15,%rdi
               :  116701:	callq  e2e30 <rte_mempool_ops_enqueue_bulk>
               :  116706:	jmpq   11365c <mlx5_tx_burst_mtiv_ts+0x689c>
               :  11670b:	or     $0xffffffff,%edx
               :  11670e:	lock xadd %dx,(%rax)
               :  116713:	dec    %dx
               :  116716:	jne    1160f2 <mlx5_tx_burst_mtiv_ts+0x9332>
               :  11671c:	jmpq   114c1e <mlx5_tx_burst_mtiv_ts+0x7e5e>
               :  116721:	or     $0xffffffff,%edx
               :  116724:	lock xadd %dx,(%rax)
               :  116729:	dec    %dx
               :  11672c:	jne    11646d <mlx5_tx_burst_mtiv_ts+0x96ad>
               :  116732:	jmpq   113ff2 <mlx5_tx_burst_mtiv_ts+0x7232>
               :  116737:	or     $0xffffffff,%esi
               :  11673a:	lock xadd %si,(%rdx)
               :  11673f:	dec    %si
               :  116742:	jne    111137 <mlx5_tx_burst_mtiv_ts+0x4377>
               :  116748:	movw   $0x1,0x10(%rax)
               :  11674e:	jmpq   11288a <mlx5_tx_burst_mtiv_ts+0x5aca>
               :  116753:	movslq 0x58(%rdi),%rax
               :  116757:	mov    %r10,0x80(%rsp)
               :  11675f:	mov    %r8d,0x40(%rsp)
               :  116764:	mov    %r11,0x88(%rsp)
               :  11676c:	lea    0x40(%r11),%rsi
               :  116770:	cmp    $0xf,%eax
               :  116773:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  116779:	shl    $0x7,%rax
               :  11677d:	add    0x7f78c(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  116784:	mov    %rsi,0xc8(%rsp)
               :  11678c:	callq  *0x70(%rax)
               :  11678f:	mov    0x88(%rsp),%r11
               :  116797:	mov    0x80(%rsp),%r10
               :  11679f:	movl   $0x1,0x8(%r11)
               :  1167a7:	mov    0x40(%rsp),%r8d
               :  1167ac:	mov    0xc8(%rsp),%rsi
               :  1167b4:	jmpq   114209 <mlx5_tx_burst_mtiv_ts+0x7449>
               :  1167b9:	movslq 0x58(%rdi),%rax
               :  1167bd:	mov    %r10,0x88(%rsp)
               :  1167c5:	mov    %r8d,0xc8(%rsp)
               :  1167cd:	cmp    $0xf,%eax
               :  1167d0:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1167d6:	shl    $0x7,%rax
               :  1167da:	lea    0x148(%rsp),%rsi
               :  1167e2:	add    0x7f727(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1167e9:	mov    $0x1,%edx
               :  1167ee:	callq  *0x70(%rax)
               :  1167f1:	mov    0x88(%rsp),%r10
               :  1167f9:	mov    0xc8(%rsp),%r8d
               :  116801:	jmpq   11101b <mlx5_tx_burst_mtiv_ts+0x425b>
               :  116806:	or     $0xffffffff,%esi
               :  116809:	lock xadd %si,(%rdx)
               :  11680e:	dec    %si
               :  116811:	jne    1165d8 <mlx5_tx_burst_mtiv_ts+0x9818>
               :  116817:	jmpq   11415f <mlx5_tx_burst_mtiv_ts+0x739f>
               :  11681c:	lea    0x70(%r12),%rdx
               :  116821:	mov    $0x2,%eax
               :  116826:	jmpq   1160fc <mlx5_tx_burst_mtiv_ts+0x933c>
               :  11682b:	lea    0x84(%r12),%rdx
               :  116833:	mov    $0x3,%eax
               :  116838:	jmpq   1160fc <mlx5_tx_burst_mtiv_ts+0x933c>
               :  11683d:	lea    0x98(%r12),%rdx
               :  116845:	mov    $0x4,%eax
               :  11684a:	jmpq   1160fc <mlx5_tx_burst_mtiv_ts+0x933c>
               :  11684f:	lea    0xac(%r12),%rdx
               :  116857:	mov    $0x5,%eax
               :  11685c:	jmpq   1160fc <mlx5_tx_burst_mtiv_ts+0x933c>
               :  116861:	or     $0xffffffff,%ecx
               :  116864:	lock xadd %cx,(%rdx)
               :  116869:	dec    %cx
               :  11686c:	jne    110bf2 <mlx5_tx_burst_mtiv_ts+0x3e32>
               :  116872:	movw   $0x1,0x10(%rax)
               :  116878:	jmpq   113096 <mlx5_tx_burst_mtiv_ts+0x62d6>
               :  11687d:	movslq 0x58(%r15),%rax
               :  116881:	mov    %r9,0x80(%rsp)
               :  116889:	mov    %r8d,0x40(%rsp)
               :  11688e:	lea    0x40(%r14),%rcx
               :  116892:	cmp    $0xf,%eax
               :  116895:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  11689b:	shl    $0x7,%rax
               :  11689f:	mov    %rcx,%rsi
               :  1168a2:	add    0x7f667(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1168a9:	mov    %r15,%rdi
               :  1168ac:	mov    %rcx,0x88(%rsp)
               :  1168b4:	callq  *0x70(%rax)
               :  1168b7:	movl   $0x1,0x8(%r14)
               :  1168bf:	mov    0x80(%rsp),%r9
               :  1168c7:	mov    0x40(%rsp),%r8d
               :  1168cc:	mov    0x88(%rsp),%rcx
               :  1168d4:	jmpq   114dcf <mlx5_tx_burst_mtiv_ts+0x800f>
               :  1168d9:	movslq 0x58(%r15),%rax
               :  1168dd:	mov    %r9,0x40(%rsp)
               :  1168e2:	mov    %r8d,0x88(%rsp)
               :  1168ea:	cmp    $0xf,%eax
               :  1168ed:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1168f3:	shl    $0x7,%rax
               :  1168f7:	lea    0x178(%rsp),%rsi
               :  1168ff:	add    0x7f60a(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  116906:	mov    $0x1,%edx
               :  11690b:	mov    %r15,%rdi
               :  11690e:	callq  *0x70(%rax)
               :  116911:	mov    0x40(%rsp),%r9
               :  116916:	mov    0x88(%rsp),%r8d
               :  11691e:	jmpq   110ae1 <mlx5_tx_burst_mtiv_ts+0x3d21>
               :  116923:	or     $0xffffffff,%ecx
               :  116926:	lock xadd %cx,(%rdx)
               :  11692b:	dec    %cx
               :  11692e:	je     114d34 <mlx5_tx_burst_mtiv_ts+0x7f74>
               :  116934:	vzeroupper 
               :  116937:	jmpq   110ae1 <mlx5_tx_burst_mtiv_ts+0x3d21>
               :  11693c:	or     $0xffffffff,%esi
               :  11693f:	lock xadd %si,(%rdx)
               :  116944:	dec    %si
               :  116947:	jne    10f3bd <mlx5_tx_burst_mtiv_ts+0x25fd>
               :  11694d:	movw   $0x1,0x10(%rax)
               :  116953:	vzeroupper 
               :  116956:	jmpq   112253 <mlx5_tx_burst_mtiv_ts+0x5493>
               :  11695b:	lea    0xc0(%r12),%rdx
               :  116963:	mov    $0x6,%eax
               :  116968:	jmpq   1160fc <mlx5_tx_burst_mtiv_ts+0x933c>
               :  11696d:	or     $0xffffffff,%edx
               :  116970:	lock xadd %dx,(%rax)
               :  116975:	dec    %dx
               :  116978:	jne    116934 <mlx5_tx_burst_mtiv_ts+0x9b74>
               :  11697a:	jmpq   110ab6 <mlx5_tx_burst_mtiv_ts+0x3cf6>
               :  11697f:	mov    $0xc0,%eax
               :  116984:	jmpq   113066 <mlx5_tx_burst_mtiv_ts+0x62a6>
               :  116989:	movslq 0x58(%rdi),%rax
               :  11698d:	mov    %r8,0x80(%rsp)
               :  116995:	mov    %ecx,0x40(%rsp)
               :  116999:	mov    %r11,0x90(%rsp)
               :  1169a1:	lea    0x40(%r11),%rsi
               :  1169a5:	cmp    $0xf,%eax
               :  1169a8:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  1169ae:	shl    $0x7,%rax
               :  1169b2:	add    0x7f557(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1169b9:	mov    %rsi,0xa0(%rsp)
               :  1169c1:	callq  *0x70(%rax)
               :  1169c4:	mov    0x90(%rsp),%r11
               :  1169cc:	mov    0x80(%rsp),%r8
               :  1169d4:	movl   $0x1,0x8(%r11)
               :  1169dc:	mov    0x40(%rsp),%ecx
               :  1169e0:	mov    0xa0(%rsp),%rsi
               :  1169e8:	jmpq   1150dd <mlx5_tx_burst_mtiv_ts+0x831d>
               :  1169ed:	lea    0xd4(%r14),%rcx
               :  1169f4:	mov    $0x7,%eax
               :  1169f9:	jmpq   116118 <mlx5_tx_burst_mtiv_ts+0x9358>
               :  1169fe:	lea    0x40(%rbx),%r14
               :  116a02:	mov    %r14,%rsi
               :  116a05:	callq  e2e30 <rte_mempool_ops_enqueue_bulk>
               :  116a0a:	movl   $0x1,0x8(%rbx)
               :  116a11:	jmpq   114fef <mlx5_tx_burst_mtiv_ts+0x822f>
               :  116a16:	lea    0x190(%rsp),%rsi
               :  116a1e:	mov    $0x1,%edx
               :  116a23:	callq  e2e30 <rte_mempool_ops_enqueue_bulk>
               :  116a28:	jmpq   114ffa <mlx5_tx_burst_mtiv_ts+0x823a>
               :  116a2d:	xor    %ecx,%ecx
               :  116a2f:	mov    %cx,0x44(%r14)
               :  116a34:	mov    0x10(%rax),%eax
               :  116a37:	jmpq   1127e1 <mlx5_tx_burst_mtiv_ts+0x5a21>
               :  116a3c:	or     $0xffffffff,%edx
               :  116a3f:	lock xadd %dx,(%rax)
               :  116a44:	dec    %dx
               :  116a47:	jne    116417 <mlx5_tx_burst_mtiv_ts+0x9657>
               :  116a4d:	jmpq   111e14 <mlx5_tx_burst_mtiv_ts+0x5054>
               :  116a52:	mov    $0xc0,%eax
               :  116a57:	jmpq   114df9 <mlx5_tx_burst_mtiv_ts+0x8039>
               :  116a5c:	or     $0xffffffff,%edx
               :  116a5f:	lock xadd %dx,(%rax)
               :  116a64:	dec    %dx
               :  116a67:	je     1144c6 <mlx5_tx_burst_mtiv_ts+0x7706>
               :  116a6d:	vzeroupper 
               :  116a70:	jmpq   1144e4 <mlx5_tx_burst_mtiv_ts+0x7724>
               :  116a75:	or     $0xffffffff,%edx
               :  116a78:	lock xadd %dx,(%rax)
               :  116a7d:	dec    %dx
               :  116a80:	jne    116033 <mlx5_tx_burst_mtiv_ts+0x9273>
               :  116a86:	jmpq   11430c <mlx5_tx_burst_mtiv_ts+0x754c>
               :  116a8b:	lea    0xc0(%r14),%rcx
               :  116a92:	mov    $0x6,%eax
               :  116a97:	jmpq   116118 <mlx5_tx_burst_mtiv_ts+0x9358>
               :  116a9c:	or     $0xffffffff,%esi
               :  116a9f:	lock xadd %si,(%rdx)
               :  116aa4:	dec    %si
               :  116aa7:	jne    1126d5 <mlx5_tx_burst_mtiv_ts+0x5915>
               :  116aad:	movw   $0x1,0x10(%rax)
               :  116ab3:	jmpq   112625 <mlx5_tx_burst_mtiv_ts+0x5865>
               :  116ab8:	movslq 0x58(%rdi),%rax
               :  116abc:	mov    %ecx,0x40(%rsp)
               :  116ac0:	mov    %r10,0x90(%rsp)
               :  116ac8:	lea    0x40(%r10),%rsi
               :  116acc:	cmp    $0xf,%eax
               :  116acf:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  116ad5:	shl    $0x7,%rax
               :  116ad9:	add    0x7f430(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  116ae0:	mov    %rsi,0xa0(%rsp)
               :  116ae8:	callq  *0x70(%rax)
               :  116aeb:	mov    0x90(%rsp),%r10
               :  116af3:	mov    0x40(%rsp),%ecx
               :  116af7:	movl   $0x1,0x8(%r10)
               :  116aff:	mov    0xa0(%rsp),%rsi
               :  116b07:	jmpq   114825 <mlx5_tx_burst_mtiv_ts+0x7a65>
               :  116b0c:	movslq 0x58(%rdi),%rax
               :  116b10:	mov    %ecx,0xa0(%rsp)
               :  116b17:	cmp    $0xf,%eax
               :  116b1a:	ja     1448e <mlx5_tx_burst_mtiv_ts.cold>
               :  116b20:	shl    $0x7,%rax
               :  116b24:	lea    0x140(%rsp),%rsi
               :  116b2c:	add    0x7f3dd(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  116b33:	mov    $0x1,%edx
               :  116b38:	callq  *0x70(%rax)
               :  116b3b:	mov    0xa0(%rsp),%ecx
               :  116b42:	jmpq   1144e4 <mlx5_tx_burst_mtiv_ts+0x7724>
               :  116b47:	or     $0xffffffff,%esi
               :  116b4a:	lock xadd %si,(%rdx)
               :  116b4f:	dec    %si
               :  116b52:	jne    116a6d <mlx5_tx_burst_mtiv_ts+0x9cad>
               :  116b58:	jmpq   114787 <mlx5_tx_burst_mtiv_ts+0x79c7>
               :  116b5d:	nopl   (%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000001406e0 <rxq_copy_mprq_mbuf_v>: /* rxq_copy_mprq_mbuf_v total:      2 5.9e-05 */
               :  1406e0:	push   %rbp
               :  1406e1:	mov    %rdi,%r11
               :  1406e4:	mov    %rsp,%rbp
               :  1406e7:	push   %r15
               :  1406e9:	push   %r14
               :  1406eb:	push   %r13
               :  1406ed:	push   %r12
               :  1406ef:	push   %rbx
               :  1406f0:	mov    %edx,%ebx
               :  1406f2:	and    $0xffffffffffffffe0,%rsp
               :  1406f6:	sub    $0xa0,%rsp
               :  1406fd:	mov    %edx,0x18(%rsp)
               :  140701:	mov    %dx,0x4e(%rsp)
               :  140706:	movzwl 0x2(%r11),%edx
               :  14070b:	mov    %rsi,0x38(%rsp)
               :  140710:	shr    $0x7,%dx
               :  140714:	mov    %edx,%ecx
               :  140716:	and    $0xf,%edx
               :  140719:	mov    %fs:0x28,%rax
               :  140722:	mov    %rax,0x98(%rsp)
               :  14072a:	xor    %eax,%eax
               :  14072c:	mov    %edx,0x44(%rsp)
               :  140730:	movzbl 0x2(%r11),%edx
               :  140735:	movzbl 0x1(%rdi),%eax
               :  140739:	shr    $0x2,%dl
               :  14073c:	and    $0x1f,%edx
               :  14073f:	mov    $0x1,%esi
               :  140744:	shr    $0x4,%al
               :  140747:	shlx   %eax,%esi,%eax
               :  14074c:	shlx   %edx,%esi,%esi
               :  140751:	lea    -0x1(%rax),%edi
               :  140754:	shlx   %edx,%eax,%eax
               :  140759:	mov    0x118(%r11),%rdx
               :  140760:	dec    %eax
               :  140762:	mov    0x20(%r11),%r10d
               :  140766:	and    0x28(%r11),%eax
               :  14076a:	mov    %esi,0x58(%rsp)
               :  14076e:	lea    (%rdx,%rax,8),%rsi
               :  140772:	movzwl %di,%eax
               :  140775:	mov    0x120(%r11),%rdx
               :  14077c:	mov    %eax,0x1c(%rsp)
               :  140780:	and    %r10d,%eax
               :  140783:	mov    (%rdx,%rax,8),%rax
               :  140787:	mov    %di,0x4c(%rsp)
               :  14078c:	mov    %r10d,0x48(%rsp)
               :  140791:	mov    %rax,0x50(%rsp)
               :  140796:	and    $0xf,%ecx
               :  140799:	test   %bx,%bx
               :  14079c:	je     1424af <rxq_copy_mprq_mbuf_v+0x1dcf>
               :  1407a2:	mov    $0xffffffff,%eax
               :  1407a7:	xor    %r13d,%r13d
               :  1407aa:	shlx   %ecx,%eax,%ecx
               :  1407af:	not    %ecx
               :  1407b1:	mov    %ecx,0x40(%rsp)
               :  1407b5:	mov    %r13w,0x5c(%rsp)
               :  1407bb:	xor    %r12d,%r12d
               :  1407be:	mov    %r12w,0x5e(%rsp)
               :  1407c4:	mov    %rsi,%r15
               :  1407c7:	mov    %r11,%r12
               :  1407ca:	nopw   0x0(%rax,%rax,1)
               :  1407d0:	movzwl 0x24(%r12),%eax
               :  1407d6:	mov    %rax,%rsi
               :  1407d9:	cmp    0x58(%rsp),%eax
               :  1407dd:	je     140d90 <rxq_copy_mprq_mbuf_v+0x6b0>
               :  1407e3:	mov    (%r15),%rbx
               :  1407e6:	mov    0x24(%rbx),%r14d
               :  1407ea:	test   %r14d,%r14d
               :  1407ed:	je     140e17 <rxq_copy_mprq_mbuf_v+0x737>
               :  1407f3:	movzbl 0x44(%rsp),%edi
               :  1407f8:	xor    %eax,%eax
               :  1407fa:	shrx   %edi,%r14d,%edx
               :  1407ff:	test   %r14d,0x40(%rsp)
               :  140804:	movzbl 0x3(%r12),%edi
               :  14080a:	setne  %al
               :  14080d:	lea    (%rax,%rdx,1),%r11d
               :  140811:	mov    %edi,%eax
               :  140813:	movzwl 0x2(%r12),%edx
               :  140819:	shr    $0x3,%al
               :  14081c:	and    $0x1,%eax
               :  14081f:	movzbl 0x2(%r12),%r8d
               :  140825:	shr    $0x7,%dx
               :  140829:	add    %eax,%eax
               :  14082b:	and    $0xf,%edx
               :  14082e:	movzwl %ax,%eax
               :  140831:	movzwl %si,%ecx
               :  140834:	shr    $0x2,%r8b
               :  140838:	shlx   %edx,%ecx,%ecx
               :  14083d:	mov    0x50(%rsp),%r10
               :  140842:	add    %ecx,%eax
               :  140844:	mov    $0x1,%ecx
               :  140849:	shlx   %r8d,%ecx,%ecx
               :  14084e:	lea    (%rcx,%rcx,2),%rcx
               :  140852:	lea    (%r10,%rcx,8),%rcx
               :  140856:	cltq   
               :  140858:	add    %rcx,%rax
               :  14085b:	movzwl 0x104(%r12),%r9d
               :  140864:	lea    0xc0(%rax),%rcx
               :  14086b:	mov    %rcx,%r8
               :  14086e:	cmp    %r9d,%r14d
               :  140871:	jbe    140a18 <rxq_copy_mprq_mbuf_v+0x338>
               :  140877:	cmpq   $0x0,0x138(%r12)
               :  140880:	je     140a18 <rxq_copy_mprq_mbuf_v+0x338>
               :  140886:	movzwl %r11w,%r9d
               :  14088a:	lea    0x80(%r14),%r13d
               :  140891:	shlx   %edx,%r9d,%r9d
               :  140896:	sub    %r9d,%r13d
               :  140899:	test   %r13d,%r13d
               :  14089c:	jle    140fa0 <rxq_copy_mprq_mbuf_v+0x8c0>
               :  1408a2:	and    $0x40,%edi
               :  1408a5:	jne    140fa0 <rxq_copy_mprq_mbuf_v+0x8c0>
               :  1408ab:	movzwl 0x36(%rbx),%edx
               :  1408af:	add    $0xffffff80,%edx
               :  1408b2:	cmp    %edx,%r14d
               :  1408b5:	ja     141f30 <rxq_copy_mprq_mbuf_v+0x1850>
               :  1408bb:	nopl   0x0(%rax,%rax,1)
               :  1408c0:	movzwl 0x10(%rbx),%edx
               :  1408c4:	mov    %rcx,%rdi
               :  1408c7:	add    (%rbx),%rdx
               :  1408ca:	or     %rdx,%rdi
               :  1408cd:	and    $0x1f,%edi
               :  1408d0:	mov    %r14d,%esi
               :  1408d3:	jne    140cf0 <rxq_copy_mprq_mbuf_v+0x610>
               :  1408d9:	cmp    $0xf,%rsi
               :  1408dd:	jbe    140f40 <rxq_copy_mprq_mbuf_v+0x860>
               :  1408e3:	cmp    $0x20,%rsi
               :  1408e7:	jbe    141300 <rxq_copy_mprq_mbuf_v+0xc20>
               :  1408ed:	cmp    $0x40,%rsi
               :  1408f1:	jbe    141570 <rxq_copy_mprq_mbuf_v+0xe90>
               :  1408f7:	lea    -0x40(%rsi),%r9
               :  1408fb:	shr    $0x6,%r9
               :  1408ff:	lea    0x1(%r9),%rdi
               :  140903:	shl    $0x6,%rdi
               :  140907:	sub    %rdx,%rax
               :  14090a:	lea    (%rdx,%rdi,1),%r8
               :  14090e:	lea    0xc0(%rax),%r10
               :  140915:	nopl   (%rax)
               :  140918:	lea    (%rdx,%r10,1),%rax
               :  14091c:	vmovdqu64 (%rax),%ymm3
               :  140922:	add    $0x40,%rdx
               :  140926:	vmovdqu64 %ymm3,-0x40(%rdx)
               :  14092d:	vmovdqu64 0x20(%rax),%ymm4
               :  140934:	vmovdqu64 %ymm4,-0x20(%rdx)
               :  14093b:	cmp    %r8,%rdx
               :  14093e:	jne    140918 <rxq_copy_mprq_mbuf_v+0x238>
               :  140940:	neg    %r9
               :  140943:	shl    $0x6,%r9
               :  140947:	lea    -0x80(%rsi,%r9,1),%rax
               :  14094c:	add    %rax,%rdi
               :  14094f:	add    %rdi,%rcx
               :  140952:	vmovdqu64 (%rcx),%ymm7
               :  140958:	add    %rax,%rdx
               :  14095b:	vmovdqu64 %ymm7,(%rdx)
               :  140961:	vmovdqu64 0x20(%rcx),%ymm7
               :  140968:	vmovdqu64 %ymm7,0x20(%rdx)
               :  14096f:	nop
               :  140970:	mov    %r14w,0x28(%rbx)
               :  140975:	add    %r11w,0x24(%r12)
               :  14097b:	movzwl 0x5c(%rsp),%eax
               :  140980:	mov    (%r15),%rdx
               :  140983:	mov    0x38(%rsp),%rsi
               :  140988:	mov    %rax,%rdi
               :  14098b:	inc    %edi
               :  14098d:	mov    %rdx,(%rsi,%rax,8)
               :  140991:	mov    %di,0x5c(%rsp)
               :  140996:	incw   0x5e(%rsp)
               :  14099b:	add    $0x8,%r15
               :  14099f:	movzwl 0x5e(%rsp),%eax
               :  1409a4:	cmp    %ax,0x4e(%rsp)
               :  1409a9:	jne    1407d0 <rxq_copy_mprq_mbuf_v+0xf0>
               :  1409af:	movzwl 0x18(%rsp),%edx
               :  1409b4:	mov    0x28(%r12),%ecx
               :  1409b9:	mov    0x20(%r12),%eax
               :  1409be:	mov    %r12,%r11
               :  1409c1:	add    %edx,%ecx
               :  1409c3:	mov    0x48(%rsp),%ebx
               :  1409c7:	add    %edx,0x2c(%r11)
               :  1409cb:	mov    %ecx,0x28(%r11)
               :  1409cf:	cmp    %eax,%ebx
               :  1409d1:	je     141bb0 <rxq_copy_mprq_mbuf_v+0x14d0>
               :  1409d7:	mov    %ebx,0x20(%r11)
               :  1409db:	mov    0x20(%r11),%eax
               :  1409df:	bswap  %eax
               :  1409e1:	mov    0x8(%r11),%rdx
               :  1409e5:	mov    %eax,(%rdx)
               :  1409e7:	vzeroupper 
               :  1409ea:	mov    0x98(%rsp),%rax
               :  1409f2:	xor    %fs:0x28,%rax
               :  1409fb:	jne    142dd2 <rxq_copy_mprq_mbuf_v+0x26f2>
               :  140a01:	movzwl 0x5c(%rsp),%eax
               :  140a06:	lea    -0x28(%rbp),%rsp
               :  140a0a:	pop    %rbx
               :  140a0b:	pop    %r12
               :  140a0d:	pop    %r13
               :  140a0f:	pop    %r14
               :  140a11:	pop    %r15
               :  140a13:	pop    %rbp
               :  140a14:	retq   
               :  140a15:	nopl   (%rax)
               :  140a18:	movzwl 0x36(%rbx),%edx
               :  140a1c:	add    $0xffffff80,%edx
               :  140a1f:	cmp    %edx,%r14d
               :  140a22:	jbe    1408c0 <rxq_copy_mprq_mbuf_v+0x1e0>
               :  140a28:	and    $0x40,%edi
               :  140a2b:	je     141f30 <rxq_copy_mprq_mbuf_v+0x1850>
               :  140a31:	movzwl 0x10(%rbx),%esi
               :  140a35:	mov    %rcx,%rdi
               :  140a38:	add    (%rbx),%rsi
               :  140a3b:	or     %rsi,%rdi
               :  140a3e:	sub    %edx,%r14d
               :  140a41:	and    $0x1f,%edi
               :  140a44:	mov    %edx,%r13d
               :  140a47:	mov    %edx,%r10d
               :  140a4a:	jne    141768 <rxq_copy_mprq_mbuf_v+0x1088>
               :  140a50:	cmp    $0xf,%edx
               :  140a53:	jbe    141bc0 <rxq_copy_mprq_mbuf_v+0x14e0>
               :  140a59:	cmp    $0x20,%edx
               :  140a5c:	jbe    1421e6 <rxq_copy_mprq_mbuf_v+0x1b06>
               :  140a62:	cmp    $0x40,%r10
               :  140a66:	jbe    142462 <rxq_copy_mprq_mbuf_v+0x1d82>
               :  140a6c:	lea    -0x40(%r10),%rdi
               :  140a70:	shr    $0x6,%rdi
               :  140a74:	mov    %rdi,0x28(%rsp)
               :  140a79:	inc    %rdi
               :  140a7c:	shl    $0x6,%rdi
               :  140a80:	sub    %rsi,%rax
               :  140a83:	mov    %rdi,0x30(%rsp)
               :  140a88:	lea    0xc0(%rax),%r9
               :  140a8f:	add    %rsi,%rdi
               :  140a92:	nopw   0x0(%rax,%rax,1)
               :  140a98:	lea    (%rsi,%r9,1),%rax
               :  140a9c:	vmovdqu64 (%rax),%ymm7
               :  140aa2:	add    $0x40,%rsi
               :  140aa6:	vmovdqu64 %ymm7,-0x40(%rsi)
               :  140aad:	vmovdqu64 0x20(%rax),%ymm6
               :  140ab4:	vmovdqu64 %ymm6,-0x20(%rsi)
               :  140abb:	cmp    %rdi,%rsi
               :  140abe:	jne    140a98 <rxq_copy_mprq_mbuf_v+0x3b8>
               :  140ac0:	mov    0x28(%rsp),%rdi
               :  140ac5:	neg    %rdi
               :  140ac8:	mov    %rdi,%rax
               :  140acb:	shl    $0x6,%rax
               :  140acf:	mov    0x30(%rsp),%rdi
               :  140ad4:	lea    -0x80(%r10,%rax,1),%rax
               :  140ad9:	add    %rax,%rdi
               :  140adc:	add    %rdi,%rcx
               :  140adf:	vmovdqu64 (%rcx),%ymm2
               :  140ae5:	add    %rsi,%rax
               :  140ae8:	vmovdqu64 %ymm2,(%rax)
               :  140aee:	vmovdqu64 0x20(%rcx),%ymm6
               :  140af5:	vmovdqu64 %ymm6,0x20(%rax)
               :  140afc:	nopl   0x0(%rax)
               :  140b00:	mov    %dx,0x28(%rbx)
               :  140b04:	test   %r14d,%r14d
               :  140b07:	je     14101a <rxq_copy_mprq_mbuf_v+0x93a>
               :  140b0d:	mov    %rbx,0x30(%rsp)
               :  140b12:	mov    %r11w,0x10(%rsp)
               :  140b18:	mov    %r15,0x8(%rsp)
               :  140b1d:	mov    %r12,0x28(%rsp)
               :  140b22:	mov    %r8,%r15
               :  140b25:	mov    %r13d,%r12d
               :  140b28:	nopl   0x0(%rax,%rax,1)
               :  140b30:	mov    0x28(%rsp),%rax
               :  140b35:	mov    0x128(%rax),%r13
               :  140b3c:	vzeroupper 
               :  140b3f:	data16 lea 0x55301(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  140b47:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  140b4f:	mov    (%rax),%ecx
               :  140b51:	mov    0x44(%r13),%eax
               :  140b55:	test   %eax,%eax
               :  140b57:	je     141d88 <rxq_copy_mprq_mbuf_v+0x16a8>
               :  140b5d:	cmp    $0x7f,%ecx
               :  140b60:	ja     141d88 <rxq_copy_mprq_mbuf_v+0x16a8>
               :  140b66:	imul   $0x2040,%rcx,%rcx
               :  140b6d:	add    0x60(%r13),%rcx
               :  140b71:	je     141d8a <rxq_copy_mprq_mbuf_v+0x16aa>
               :  140b77:	mov    0x8(%rcx),%edx
               :  140b7a:	mov    $0x1,%esi
               :  140b7f:	mov    %rdx,%rax
               :  140b82:	test   %eax,%eax
               :  140b84:	cmove  %eax,%esi
               :  140b87:	mov    %eax,%edi
               :  140b89:	sub    %esi,%edi
               :  140b8b:	mov    %edi,0x8(%rcx)
               :  140b8e:	lea    0x40(%rcx,%rdx,8),%rdx
               :  140b93:	test   %eax,%eax
               :  140b95:	je     141c10 <rxq_copy_mprq_mbuf_v+0x1530>
               :  140b9b:	mov    -0x8(%rdx),%rax
               :  140b9f:	mov    %rax,0x90(%rsp)
               :  140ba7:	mov    0x90(%rsp),%rax
               :  140baf:	test   %rax,%rax
               :  140bb2:	je     141c6f <rxq_copy_mprq_mbuf_v+0x158f>
               :  140bb8:	mov    %r12d,%r8d
               :  140bbb:	lea    (%r15,%r8,1),%rcx
               :  140bbf:	movzwl 0x36(%rax),%r8d
               :  140bc4:	movabs $0x2000000000000000,%rsi
               :  140bce:	and    %rsi,0x18(%rax)
               :  140bd2:	add    $0xffffff80,%r8d
               :  140bd6:	mov    0x30(%rsp),%rsi
               :  140bdb:	mov    (%rax),%rdx
               :  140bde:	xor    %r10d,%r10d
               :  140be1:	xor    %r11d,%r11d
               :  140be4:	cmp    %r14d,%r8d
               :  140be7:	cmova  %r14d,%r8d
               :  140beb:	movq   $0x0,0x40(%rax)
               :  140bf3:	movq   $0x0,0x48(%rax)
               :  140bfb:	mov    %r10w,0x34(%rax)
               :  140c00:	movl   $0xffff0001,0x14(%rax)
               :  140c07:	movq   $0x0,0x20(%rax)
               :  140c0f:	movl   $0x0,0x28(%rax)
               :  140c16:	mov    %rax,0x40(%rsi)
               :  140c1a:	mov    %rdx,%rsi
               :  140c1d:	or     %rcx,%rsi
               :  140c20:	mov    %r8d,%edi
               :  140c23:	and    $0x1f,%esi
               :  140c26:	mov    %r11w,0x10(%rax)
               :  140c2b:	mov    %rcx,%r15
               :  140c2e:	mov    %rdi,%r12
               :  140c31:	jne    141c88 <rxq_copy_mprq_mbuf_v+0x15a8>
               :  140c37:	cmp    $0xf,%edi
               :  140c3a:	jbe    141df0 <rxq_copy_mprq_mbuf_v+0x1710>
               :  140c40:	cmp    $0x20,%edi
               :  140c43:	jbe    141e48 <rxq_copy_mprq_mbuf_v+0x1768>
               :  140c49:	cmp    $0x40,%rdi
               :  140c4d:	jbe    141e88 <rxq_copy_mprq_mbuf_v+0x17a8>
               :  140c53:	lea    -0x40(%rdi),%r13
               :  140c57:	shr    $0x6,%r13
               :  140c5b:	lea    0x1(%r13),%r9
               :  140c5f:	shl    $0x6,%r9
               :  140c63:	mov    %rcx,%r10
               :  140c66:	lea    (%rdx,%r9,1),%r11
               :  140c6a:	sub    %rdx,%r10
               :  140c6d:	nopl   (%rax)
               :  140c70:	lea    (%rdx,%r10,1),%rsi
               :  140c74:	vmovdqu64 (%rsi),%ymm5
     1 3.0e-05 :  140c7a:	add    $0x40,%rdx
               :  140c7e:	vmovdqu64 %ymm5,-0x40(%rdx)
               :  140c85:	vmovdqu64 0x20(%rsi),%ymm6
               :  140c8c:	vmovdqu64 %ymm6,-0x20(%rdx)
               :  140c93:	cmp    %r11,%rdx
               :  140c96:	jne    140c70 <rxq_copy_mprq_mbuf_v+0x590>
               :  140c98:	neg    %r13
               :  140c9b:	shl    $0x6,%r13
               :  140c9f:	lea    -0x80(%rdi,%r13,1),%rsi
               :  140ca4:	add    %rsi,%r9
               :  140ca7:	add    %r9,%rcx
               :  140caa:	vmovdqu64 (%rcx),%ymm5
               :  140cb0:	add    %rsi,%rdx
               :  140cb3:	vmovdqu64 %ymm5,(%rdx)
               :  140cb9:	vmovdqu64 0x20(%rcx),%ymm7
               :  140cc0:	vmovdqu64 %ymm7,0x20(%rdx)
               :  140cc7:	nopw   0x0(%rax,%rax,1)
               :  140cd0:	mov    %r12w,0x28(%rax)
               :  140cd5:	incw   0x14(%rbx)
               :  140cd9:	sub    %r12d,%r14d
               :  140cdc:	je     141d70 <rxq_copy_mprq_mbuf_v+0x1690>
               :  140ce2:	mov    %rax,0x30(%rsp)
               :  140ce7:	jmpq   140b30 <rxq_copy_mprq_mbuf_v+0x450>
               :  140cec:	nopl   0x0(%rax)
               :  140cf0:	cmp    $0xf,%rsi
               :  140cf4:	jbe    140f40 <rxq_copy_mprq_mbuf_v+0x860>
               :  140cfa:	cmp    $0x20,%rsi
               :  140cfe:	jbe    1412d8 <rxq_copy_mprq_mbuf_v+0xbf8>
               :  140d04:	cmp    $0x30,%rsi
               :  140d08:	jbe    141598 <rxq_copy_mprq_mbuf_v+0xeb8>
               :  140d0e:	vmovdqu64 0xc0(%rax),%ymm0
               :  140d15:	vmovdqa64 %ymm0,%ymm1
               :  140d1b:	cmp    $0x40,%rsi
               :  140d1f:	jbe    141998 <rxq_copy_mprq_mbuf_v+0x12b8>
               :  140d25:	cmp    $0x100,%rsi
               :  140d2c:	ja     141b30 <rxq_copy_mprq_mbuf_v+0x1450>
               :  140d32:	cmp    $0x7f,%rsi
               :  140d36:	ja     141820 <rxq_copy_mprq_mbuf_v+0x1140>
               :  140d3c:	vmovdqu64 %ymm1,(%rdx)
               :  140d42:	vmovdqu64 0x20(%r8),%ymm1
               :  140d49:	lea    -0x40(%rsi),%rax
               :  140d4d:	vmovdqu64 %ymm1,0x20(%rdx)
               :  140d54:	add    $0x40,%r8
     1 3.0e-05 :  140d58:	add    $0x40,%rdx
               :  140d5c:	cmp    $0x20,%rax
               :  140d60:	jbe    1419b8 <rxq_copy_mprq_mbuf_v+0x12d8>
               :  140d66:	vmovdqu64 (%r8),%ymm7
               :  140d6c:	vmovdqu64 %ymm7,(%rdx)
               :  140d72:	vmovdqu64 -0x20(%r8,%rax,1),%ymm0
               :  140d7a:	vmovdqu64 %ymm0,-0x20(%rdx,%rax,1)
               :  140d82:	jmpq   140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  140d87:	nopw   0x0(%rax,%rax,1)
               :  140d90:	mov    0x138(%r12),%rdx
               :  140d98:	movzwl 0x4c(%rsp),%ecx
               :  140d9d:	mov    %rdx,0x60(%rsp)
               :  140da2:	mov    0x120(%r12),%r14
               :  140daa:	and    0x48(%rsp),%cx
               :  140daf:	movzwl %cx,%esi
               :  140db2:	mov    (%r14,%rsi,8),%r13
               :  140db6:	movzbl 0x2(%r12),%eax
               :  140dbc:	mov    0x108(%r12),%rbx
               :  140dc4:	movzwl 0x8(%r13),%edi
               :  140dc9:	shr    $0x2,%al
               :  140dcc:	and    $0x1f,%eax
               :  140dcf:	cmp    $0x1,%di
               :  140dd3:	ja     141028 <rxq_copy_mprq_mbuf_v+0x948>
               :  140dd9:	mov    %rdx,%rbx
               :  140ddc:	test   %rdx,%rdx
               :  140ddf:	je     142250 <rxq_copy_mprq_mbuf_v+0x1b70>
               :  140de5:	incl   0x48(%rsp)
               :  140de9:	mov    0x1c(%rsp),%eax
               :  140ded:	xor    %r10d,%r10d
               :  140df0:	mov    %r10w,0x24(%r12)
               :  140df6:	mov    0x48(%rsp),%ebx
               :  140dfa:	xor    %esi,%esi
               :  140dfc:	and    %ebx,%eax
               :  140dfe:	mov    (%r15),%rbx
               :  140e01:	mov    (%r14,%rax,8),%rax
               :  140e05:	mov    0x24(%rbx),%r14d
               :  140e09:	mov    %rax,0x50(%rsp)
               :  140e0e:	test   %r14d,%r14d
               :  140e11:	jne    1407f3 <rxq_copy_mprq_mbuf_v+0x113>
               :  140e17:	movzwl 0x58(%rsp),%eax
               :  140e1c:	lea    0x12(%rbx),%r13
               :  140e20:	mov    %ax,0x24(%r12)
               :  140e26:	movzwl 0x12(%rbx),%eax
               :  140e2a:	cmp    $0x1,%ax
               :  140e2e:	jne    141a98 <rxq_copy_mprq_mbuf_v+0x13b8>
               :  140e34:	mov    0x38(%rbx),%r14
               :  140e38:	mov    0x18(%rbx),%rax
               :  140e3c:	movabs $0x6000000000000000,%rsi
               :  140e46:	mov    %r14,%r13
               :  140e49:	test   %rsi,%rax
               :  140e4c:	je     140ea2 <rxq_copy_mprq_mbuf_v+0x7c2>
               :  140e4e:	movabs $0x2000000000000000,%rsi
               :  140e58:	test   %rsi,%rax
               :  140e5b:	je     1418d0 <rxq_copy_mprq_mbuf_v+0x11f0>
               :  140e61:	cmpl   $0x1,0x44(%r14)
               :  140e66:	sbb    %rax,%rax
               :  140e69:	and    $0xffffffffffefe000,%rax
               :  140e6f:	testb  $0x1,0x1020c4(%r14,%rax,1)
               :  140e78:	mov    0x50(%rbx),%rax
               :  140e7c:	je     1416d8 <rxq_copy_mprq_mbuf_v+0xff8>
               :  140e82:	movabs $0x2000000000000000,%rsi
               :  140e8c:	mov    %rsi,0x18(%rbx)
               :  140e90:	lea    0x10(%rax),%rcx
               :  140e94:	movzwl 0x10(%rax),%edx
               :  140e98:	cmp    $0x1,%dx
               :  140e9c:	jne    142591 <rxq_copy_mprq_mbuf_v+0x1eb1>
               :  140ea2:	mov    0x44(%r14),%r13d
               :  140ea6:	vzeroupper 
               :  140ea9:	cmpq   $0x0,0x40(%rbx)
               :  140eae:	je     140eb8 <rxq_copy_mprq_mbuf_v+0x7d8>
               :  140eb0:	movq   $0x0,0x40(%rbx)
               :  140eb8:	cmpw   $0x1,0x14(%rbx)
               :  140ebd:	je     140ec8 <rxq_copy_mprq_mbuf_v+0x7e8>
               :  140ebf:	mov    $0x1,%esi
               :  140ec4:	mov    %si,0x14(%rbx)
               :  140ec8:	mov    %rbx,0x68(%rsp)
               :  140ecd:	data16 lea 0x54f73(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  140ed5:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  140edd:	mov    (%rax),%ebx
               :  140edf:	cmp    $0x7f,%ebx
               :  140ee2:	ja     1415c8 <rxq_copy_mprq_mbuf_v+0xee8>
               :  140ee8:	test   %r13d,%r13d
               :  140eeb:	je     1415c8 <rxq_copy_mprq_mbuf_v+0xee8>
               :  140ef1:	imul   $0x2040,%rbx,%rbx
               :  140ef8:	add    0x60(%r14),%rbx
               :  140efc:	je     1415c8 <rxq_copy_mprq_mbuf_v+0xee8>
               :  140f02:	mov    0x4(%rbx),%eax
               :  140f05:	test   %eax,%eax
               :  140f07:	je     1415c8 <rxq_copy_mprq_mbuf_v+0xee8>
               :  140f0d:	mov    0x8(%rbx),%edx
               :  140f10:	lea    0x1(%rdx),%ecx
               :  140f13:	cmp    %ecx,%eax
               :  140f15:	jb     141368 <rxq_copy_mprq_mbuf_v+0xc88>
               :  140f1b:	mov    %ecx,0x8(%rbx)
               :  140f1e:	lea    0x40(%rbx,%rdx,8),%r13
               :  140f23:	mov    0x68(%rsp),%rax
               :  140f28:	mov    %rax,0x0(%r13)
               :  140f2c:	decq   0x150(%r12)
               :  140f34:	jmpq   140996 <rxq_copy_mprq_mbuf_v+0x2b6>
               :  140f39:	nopl   0x0(%rax)
               :  140f40:	test   $0x8,%r14b
               :  140f44:	je     140f58 <rxq_copy_mprq_mbuf_v+0x878>
               :  140f46:	mov    0xc0(%rax),%rax
               :  140f4d:	lea    0x8(%rcx),%r8
               :  140f51:	mov    %rax,(%rdx)
               :  140f54:	add    $0x8,%rdx
               :  140f58:	test   $0x4,%r14b
               :  140f5c:	je     140f6c <rxq_copy_mprq_mbuf_v+0x88c>
               :  140f5e:	mov    (%r8),%eax
               :  140f61:	add    $0x4,%rdx
               :  140f65:	mov    %eax,-0x4(%rdx)
               :  140f68:	add    $0x4,%r8
               :  140f6c:	test   $0x2,%r14b
               :  140f70:	je     140f82 <rxq_copy_mprq_mbuf_v+0x8a2>
               :  140f72:	movzwl (%r8),%eax
               :  140f76:	add    $0x2,%rdx
               :  140f7a:	mov    %ax,-0x2(%rdx)
               :  140f7e:	add    $0x2,%r8
               :  140f82:	test   $0x1,%r14b
               :  140f86:	je     140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  140f8c:	movzbl (%r8),%eax
               :  140f90:	mov    %al,(%rdx)
               :  140f92:	jmpq   140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  140f97:	nopw   0x0(%rax,%rax,1)
               :  140fa0:	mov    %rcx,0x28(%rsp)
               :  140fa5:	mov    0x50(%rsp),%rcx
               :  140faa:	mov    %r9d,0x30(%rsp)
               :  140faf:	lock incw 0x8(%rcx)
               :  140fb4:	mov    $0x80,%r9d
               :  140fba:	add    $0x40,%rax
               :  140fbe:	mov    %rax,%r8
               :  140fc1:	lea    (%rsi,%rsi,2),%rdi
               :  140fc5:	shl    $0x3,%rdi
               :  140fc9:	sub    %rcx,%r8
               :  140fcc:	add    -0x8(%rcx),%r8
               :  140fd0:	movw   $0x1,0x20(%rcx,%rdi,1)
               :  140fd7:	mov    $0x1,%esi
               :  140fdc:	shlx   %edx,%esi,%edx
               :  140fe1:	imul   %r11d,%edx
               :  140fe5:	mov    %rax,(%rbx)
               :  140fe8:	movabs $0x2000000000000000,%rax
               :  140ff2:	or     %rax,0x18(%rbx)
               :  140ff6:	lea    0x10(%rcx,%rdi,1),%rax
               :  140ffb:	mov    %r8,0x8(%rbx)
               :  140fff:	mov    %dx,0x36(%rbx)
               :  141003:	mov    %rax,0x50(%rbx)
               :  141007:	mov    %r9w,0x10(%rbx)
               :  14100c:	mov    %r14w,0x28(%rbx)
               :  141011:	test   %r13d,%r13d
               :  141014:	jg     141100 <rxq_copy_mprq_mbuf_v+0xa20>
               :  14101a:	add    %r11w,0x24(%r12)
               :  141020:	jmpq   14097b <rxq_copy_mprq_mbuf_v+0x29b>
               :  141025:	nopl   (%rax)
               :  141028:	movzwl %cx,%ecx
               :  14102b:	shl    $0x5,%rcx
               :  14102f:	add    %rcx,%rbx
               :  141032:	mov    $0x1,%ecx
               :  141037:	shlx   %eax,%ecx,%eax
               :  14103c:	lea    (%rax,%rax,2),%rax
               :  141040:	mov    %rdx,(%r14,%rsi,8)
               :  141044:	lea    0xc0(%rdx,%rax,8),%rdx
               :  14104c:	mov    %rdx,%rax
               :  14104f:	bswap  %rax
               :  141052:	mov    %rax,0x18(%rbx)
               :  141056:	mov    0xf4(%r12),%eax
               :  14105e:	dec    %eax
               :  141060:	cmp    $0x1,%eax
               :  141063:	ja     142379 <rxq_copy_mprq_mbuf_v+0x1c99>
               :  141069:	vzeroupper 
               :  14106c:	data16 lea 0x54dd4(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  141074:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  14107c:	mov    0x130(%r12),%r14
               :  141084:	mov    0x44(%r14),%ebx
               :  141088:	mov    (%rax),%eax
               :  14108a:	test   %ebx,%ebx
               :  14108c:	je     1419e0 <rxq_copy_mprq_mbuf_v+0x1300>
               :  141092:	cmp    $0x7f,%eax
               :  141095:	ja     1419e0 <rxq_copy_mprq_mbuf_v+0x1300>
               :  14109b:	mov    %eax,%ebx
               :  14109d:	imul   $0x2040,%rbx,%rbx
               :  1410a4:	add    0x60(%r14),%rbx
               :  1410a8:	je     1419e2 <rxq_copy_mprq_mbuf_v+0x1302>
               :  1410ae:	mov    0x8(%rbx),%eax
               :  1410b1:	mov    $0x1,%ecx
               :  1410b6:	mov    %rax,%rdx
               :  1410b9:	test   %edx,%edx
               :  1410bb:	cmove  %edx,%ecx
               :  1410be:	mov    %edx,%esi
               :  1410c0:	sub    %ecx,%esi
               :  1410c2:	mov    %esi,0x8(%rbx)
               :  1410c5:	lea    0x40(%rbx,%rax,8),%rax
               :  1410ca:	test   %edx,%edx
               :  1410cc:	je     14131e <rxq_copy_mprq_mbuf_v+0xc3e>
               :  1410d2:	mov    -0x8(%rax),%rax
               :  1410d6:	mov    %rax,0x60(%rsp)
               :  1410db:	mov    0x60(%rsp),%rbx
               :  1410e0:	mov    %rbx,0x138(%r12)
               :  1410e8:	mov    %r13,%rdi
               :  1410eb:	callq  63500 <mlx5_mprq_buf_free>
               :  1410f0:	mov    0x120(%r12),%r14
               :  1410f8:	jmpq   140de5 <rxq_copy_mprq_mbuf_v+0x705>
               :  1410fd:	nopl   (%rax)
               :  141100:	mov    0x128(%r12),%rdi
               :  141108:	mov    %r11d,0x10(%rsp)
               :  14110d:	mov    %rdi,0x20(%rsp)
               :  141112:	vzeroupper 
               :  141115:	data16 lea 0x54d2b(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  14111d:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  141125:	mov    0x20(%rsp),%rdi
               :  14112a:	mov    0x10(%rsp),%r11d
               :  14112f:	mov    0x44(%rdi),%r8d
               :  141133:	mov    0x30(%rsp),%r9d
               :  141138:	test   %r8d,%r8d
               :  14113b:	mov    (%rax),%eax
               :  14113d:	mov    0x28(%rsp),%rcx
               :  141142:	je     141a20 <rxq_copy_mprq_mbuf_v+0x1340>
               :  141148:	cmp    $0x7f,%eax
               :  14114b:	ja     141a20 <rxq_copy_mprq_mbuf_v+0x1340>
               :  141151:	mov    %eax,%r8d
               :  141154:	imul   $0x2040,%r8,%r8
               :  14115b:	add    0x60(%rdi),%r8
               :  14115f:	je     141a23 <rxq_copy_mprq_mbuf_v+0x1343>
               :  141165:	mov    0x8(%r8),%eax
               :  141169:	mov    $0x1,%esi
               :  14116e:	mov    %rax,%rdx
               :  141171:	test   %edx,%edx
               :  141173:	cmove  %edx,%esi
               :  141176:	mov    %edx,%r10d
               :  141179:	sub    %esi,%r10d
               :  14117c:	mov    %r10d,0x8(%r8)
               :  141180:	lea    0x40(%r8,%rax,8),%rax
               :  141185:	test   %edx,%edx
               :  141187:	je     141399 <rxq_copy_mprq_mbuf_v+0xcb9>
               :  14118d:	mov    -0x8(%rax),%rax
               :  141191:	mov    %rax,0x90(%rsp)
               :  141199:	mov    0x90(%rsp),%rax
               :  1411a1:	test   %rax,%rax
               :  1411a4:	je     141420 <rxq_copy_mprq_mbuf_v+0xd40>
               :  1411aa:	lea    -0x80(%r9),%edx
               :  1411ae:	add    %rdx,%rcx
               :  1411b1:	mov    (%rax),%rdx
               :  1411b4:	xor    %esi,%esi
               :  1411b6:	mov    %rdx,%r8
               :  1411b9:	mov    %si,0x34(%rax)
               :  1411bd:	or     %rcx,%r8
               :  1411c0:	movabs $0x2000000000000000,%rsi
               :  1411ca:	xor    %edi,%edi
               :  1411cc:	and    %rsi,0x18(%rax)
               :  1411d0:	and    $0x1f,%r8d
               :  1411d4:	mov    %di,0x10(%rax)
               :  1411d8:	movq   $0x0,0x40(%rax)
               :  1411e0:	movq   $0x0,0x48(%rax)
               :  1411e8:	movl   $0xffff0001,0x14(%rax)
               :  1411ef:	movq   $0x0,0x20(%rax)
               :  1411f7:	movl   $0x0,0x28(%rax)
               :  1411fe:	movslq %r13d,%rdi
               :  141201:	mov    %rcx,%rsi
               :  141204:	jne    1415f8 <rxq_copy_mprq_mbuf_v+0xf18>
               :  14120a:	cmp    $0xf,%r13d
               :  14120e:	jle    141880 <rxq_copy_mprq_mbuf_v+0x11a0>
               :  141214:	cmp    $0x20,%r13d
               :  141218:	jle    1423b6 <rxq_copy_mprq_mbuf_v+0x1cd6>
               :  14121e:	cmp    $0x40,%rdi
               :  141222:	jbe    142205 <rxq_copy_mprq_mbuf_v+0x1b25>
               :  141228:	lea    -0x40(%rdi),%r10
               :  14122c:	shr    $0x6,%r10
               :  141230:	lea    0x1(%r10),%rsi
               :  141234:	shl    $0x6,%rsi
               :  141238:	mov    %rsi,0x30(%rsp)
               :  14123d:	mov    %rcx,%r8
               :  141240:	lea    (%rdx,%rsi,1),%r9
               :  141244:	sub    %rdx,%r8
               :  141247:	nopw   0x0(%rax,%rax,1)
               :  141250:	lea    (%rdx,%r8,1),%rsi
               :  141254:	vmovdqu64 (%rsi),%ymm2
               :  14125a:	add    $0x40,%rdx
               :  14125e:	vmovdqu64 %ymm2,-0x40(%rdx)
               :  141265:	vmovdqu64 0x20(%rsi),%ymm7
               :  14126c:	vmovdqu64 %ymm7,-0x20(%rdx)
               :  141273:	cmp    %r9,%rdx
               :  141276:	jne    141250 <rxq_copy_mprq_mbuf_v+0xb70>
               :  141278:	neg    %r10
               :  14127b:	mov    %r10,%rsi
               :  14127e:	shl    $0x6,%rsi
               :  141282:	lea    -0x80(%rdi,%rsi,1),%rsi
               :  141287:	mov    0x30(%rsp),%rdi
               :  14128c:	add    %rsi,%rdx
               :  14128f:	add    %rsi,%rdi
               :  141292:	add    %rdi,%rcx
               :  141295:	vmovdqu64 (%rcx),%ymm6
               :  14129b:	vmovdqu64 %ymm6,(%rdx)
               :  1412a1:	vmovdqu64 0x20(%rcx),%ymm5
               :  1412a8:	vmovdqu64 %ymm5,0x20(%rdx)
               :  1412af:	nop
               :  1412b0:	sub    %r13d,%r14d
               :  1412b3:	mov    $0x2,%ecx
               :  1412b8:	mov    %r13w,0x28(%rax)
               :  1412bd:	mov    %r14w,0x28(%rbx)
               :  1412c2:	mov    %rax,0x40(%rbx)
               :  1412c6:	mov    %cx,0x14(%rbx)
               :  1412ca:	add    %r11w,0x24(%r12)
               :  1412d0:	jmpq   14097b <rxq_copy_mprq_mbuf_v+0x29b>
               :  1412d5:	nopl   (%rax)
               :  1412d8:	vmovdqu64 0xc0(%rax),%xmm2
               :  1412df:	vmovups %xmm2,(%rdx)
               :  1412e3:	vmovdqu64 0xb0(%rsi,%rax,1),%xmm1
               :  1412eb:	vmovups %xmm1,-0x10(%rdx,%rsi,1)
               :  1412f1:	jmpq   140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  1412f6:	nopw   %cs:0x0(%rax,%rax,1)
               :  141300:	vmovdqu64 0xc0(%rax),%xmm1
               :  141307:	vmovups %xmm1,(%rdx)
               :  14130b:	vmovdqu64 0xb0(%rsi,%rax,1),%xmm6
               :  141313:	vmovups %xmm6,-0x10(%rdx,%rsi,1)
               :  141319:	jmpq   140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  14131e:	mov    (%rbx),%eax
               :  141320:	lea    0x40(%rbx),%rsi
               :  141324:	lea    0x1(%rax),%edx
               :  141327:	movslq 0x58(%r14),%rax
               :  14132b:	cmp    $0xf,%eax
               :  14132e:	ja     142ddc <rxq_copy_mprq_mbuf_v+0x26fc>
               :  141334:	shl    $0x7,%rax
               :  141338:	add    0x54bd1(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  14133f:	mov    %r14,%rdi
               :  141342:	callq  *0x78(%rax)
               :  141345:	test   %eax,%eax
               :  141347:	js     1419e2 <rxq_copy_mprq_mbuf_v+0x1302>
               :  14134d:	mov    (%rbx),%eax
               :  14134f:	lea    0x1(%rax),%edx
               :  141352:	mov    0x38(%rbx,%rdx,8),%rdx
               :  141357:	mov    %eax,0x8(%rbx)
               :  14135a:	mov    %rdx,0x60(%rsp)
               :  14135f:	jmpq   1410db <rxq_copy_mprq_mbuf_v+0x9fb>
               :  141364:	nopl   0x0(%rax)
               :  141368:	movslq 0x58(%r14),%rax
               :  14136c:	lea    0x40(%rbx),%r13
               :  141370:	cmp    $0xf,%eax
               :  141373:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  141379:	shl    $0x7,%rax
               :  14137d:	add    0x54b8c(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  141384:	mov    %r13,%rsi
               :  141387:	mov    %r14,%rdi
               :  14138a:	callq  *0x70(%rax)
               :  14138d:	movl   $0x1,0x8(%rbx)
               :  141394:	jmpq   140f23 <rxq_copy_mprq_mbuf_v+0x843>
               :  141399:	mov    (%r8),%eax
               :  14139c:	lea    0x40(%r8),%rsi
               :  1413a0:	lea    0x1(%rax),%edx
               :  1413a3:	movslq 0x58(%rdi),%rax
               :  1413a7:	cmp    $0xf,%eax
               :  1413aa:	ja     142de6 <rxq_copy_mprq_mbuf_v+0x2706>
               :  1413b0:	shl    $0x7,%rax
               :  1413b4:	add    0x54b55(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1413bb:	mov    %r8,0x8(%rsp)
               :  1413c0:	mov    %rcx,0x10(%rsp)
               :  1413c5:	mov    %r9d,0x20(%rsp)
               :  1413ca:	mov    %r11d,0x28(%rsp)
               :  1413cf:	mov    %rdi,0x30(%rsp)
               :  1413d4:	callq  *0x78(%rax)
               :  1413d7:	test   %eax,%eax
               :  1413d9:	mov    0x30(%rsp),%rdi
               :  1413de:	mov    0x28(%rsp),%r11d
               :  1413e3:	mov    0x20(%rsp),%r9d
               :  1413e8:	mov    0x10(%rsp),%rcx
               :  1413ed:	mov    0x8(%rsp),%r8
               :  1413f2:	js     141a23 <rxq_copy_mprq_mbuf_v+0x1343>
               :  1413f8:	mov    (%r8),%eax
               :  1413fb:	lea    0x1(%rax),%edx
               :  1413fe:	mov    0x38(%r8,%rdx,8),%rdx
               :  141403:	mov    %rdx,0x90(%rsp)
               :  14140b:	mov    %eax,0x8(%r8)
               :  14140f:	mov    0x90(%rsp),%rax
               :  141417:	test   %rax,%rax
               :  14141a:	jne    1411aa <rxq_copy_mprq_mbuf_v+0xaca>
               :  141420:	add    %r11w,0x24(%r12)
               :  141426:	movl   $0x1,0x30(%rsp)
               :  14142e:	mov    (%r15),%rbx
               :  141431:	movzwl 0x12(%rbx),%eax
               :  141435:	lea    0x12(%rbx),%r14
               :  141439:	cmp    $0x1,%ax
               :  14143d:	jne    141f53 <rxq_copy_mprq_mbuf_v+0x1873>
               :  141443:	mov    0x38(%rbx),%r14
               :  141447:	mov    0x18(%rbx),%rax
               :  14144b:	movabs $0x6000000000000000,%rsi
               :  141455:	mov    %r14,%r13
               :  141458:	test   %rsi,%rax
               :  14145b:	je     1414b1 <rxq_copy_mprq_mbuf_v+0xdd1>
               :  14145d:	movabs $0x2000000000000000,%rsi
               :  141467:	test   %rsi,%rax
               :  14146a:	je     141fd0 <rxq_copy_mprq_mbuf_v+0x18f0>
               :  141470:	cmpl   $0x1,0x44(%r14)
               :  141475:	sbb    %rax,%rax
               :  141478:	and    $0xffffffffffefe000,%rax
               :  14147e:	testb  $0x1,0x1020c4(%r14,%rax,1)
               :  141487:	mov    0x50(%rbx),%rax
               :  14148b:	je     142090 <rxq_copy_mprq_mbuf_v+0x19b0>
               :  141491:	movabs $0x2000000000000000,%rsi
               :  14149b:	mov    %rsi,0x18(%rbx)
               :  14149f:	lea    0x10(%rax),%rcx
               :  1414a3:	movzwl 0x10(%rax),%edx
               :  1414a7:	cmp    $0x1,%dx
               :  1414ab:	jne    1426f3 <rxq_copy_mprq_mbuf_v+0x2013>
               :  1414b1:	mov    0x44(%r14),%r13d
               :  1414b5:	vzeroupper 
               :  1414b8:	cmpq   $0x0,0x40(%rbx)
               :  1414bd:	je     1414c7 <rxq_copy_mprq_mbuf_v+0xde7>
               :  1414bf:	movq   $0x0,0x40(%rbx)
               :  1414c7:	cmpw   $0x1,0x14(%rbx)
               :  1414cc:	je     1414d9 <rxq_copy_mprq_mbuf_v+0xdf9>
               :  1414ce:	mov    $0x1,%r9d
               :  1414d4:	mov    %r9w,0x14(%rbx)
               :  1414d9:	mov    %rbx,0x70(%rsp)
               :  1414de:	data16 lea 0x54962(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  1414e6:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  1414ee:	mov    (%rax),%eax
               :  1414f0:	cmp    $0x7f,%eax
               :  1414f3:	ja     141ee0 <rxq_copy_mprq_mbuf_v+0x1800>
               :  1414f9:	test   %r13d,%r13d
               :  1414fc:	je     141ee0 <rxq_copy_mprq_mbuf_v+0x1800>
               :  141502:	mov    %eax,%ebx
               :  141504:	imul   $0x2040,%rbx,%rbx
               :  14150b:	add    0x60(%r14),%rbx
               :  14150f:	je     141ee0 <rxq_copy_mprq_mbuf_v+0x1800>
               :  141515:	mov    0x4(%rbx),%eax
               :  141518:	test   %eax,%eax
               :  14151a:	je     141ee0 <rxq_copy_mprq_mbuf_v+0x1800>
               :  141520:	mov    0x8(%rbx),%edx
               :  141523:	lea    0x1(%rdx),%ecx
               :  141526:	cmp    %ecx,%eax
               :  141528:	jb     141af8 <rxq_copy_mprq_mbuf_v+0x1418>
               :  14152e:	mov    %ecx,0x8(%rbx)
               :  141531:	lea    0x40(%rbx,%rdx,8),%r13
               :  141536:	mov    0x70(%rsp),%rax
               :  14153b:	mov    %rax,0x0(%r13)
               :  14153f:	mov    (%r15),%rax
               :  141542:	decq   0x150(%r12)
               :  14154a:	mov    0x24(%rax),%eax
               :  14154d:	sub    %rax,0x158(%r12)
               :  141555:	cmpl   $0x1,0x30(%rsp)
               :  14155a:	je     142441 <rxq_copy_mprq_mbuf_v+0x1d61>
               :  141560:	incq   0x160(%r12)
               :  141568:	jmpq   140996 <rxq_copy_mprq_mbuf_v+0x2b6>
               :  14156d:	nopl   (%rax)
               :  141570:	vmovdqu64 0xc0(%rax),%ymm2
               :  141577:	vmovdqu64 %ymm2,(%rdx)
               :  14157d:	vmovdqu64 0xa0(%rsi,%rax,1),%ymm5
               :  141585:	vmovdqu64 %ymm5,-0x20(%rdx,%rsi,1)
               :  14158d:	jmpq   140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  141592:	nopw   0x0(%rax,%rax,1)
               :  141598:	vmovdqu64 0xc0(%rax),%xmm0
               :  14159f:	vmovups %xmm0,(%rdx)
               :  1415a3:	vmovdqu64 0x10(%rcx),%xmm2
               :  1415aa:	vmovups %xmm2,0x10(%rdx)
               :  1415af:	vmovdqu64 0xb0(%rsi,%rax,1),%xmm1
               :  1415b7:	vmovups %xmm1,-0x10(%rdx,%rsi,1)
               :  1415bd:	jmpq   140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  1415c2:	nopw   0x0(%rax,%rax,1)
               :  1415c8:	movslq 0x58(%r14),%rax
               :  1415cc:	cmp    $0xf,%eax
               :  1415cf:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  1415d5:	shl    $0x7,%rax
               :  1415d9:	lea    0x68(%rsp),%rsi
               :  1415de:	add    0x5492b(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1415e5:	mov    $0x1,%edx
               :  1415ea:	mov    %r14,%rdi
               :  1415ed:	callq  *0x70(%rax)
               :  1415f0:	jmpq   140f2c <rxq_copy_mprq_mbuf_v+0x84c>
               :  1415f5:	nopl   (%rax)
               :  1415f8:	cmp    $0xf,%r13d
               :  1415fc:	jle    141880 <rxq_copy_mprq_mbuf_v+0x11a0>
               :  141602:	cmp    $0x20,%r13d
               :  141606:	jle    1423d3 <rxq_copy_mprq_mbuf_v+0x1cf3>
               :  14160c:	cmp    $0x30,%rdi
               :  141610:	jbe    142226 <rxq_copy_mprq_mbuf_v+0x1b46>
               :  141616:	vmovdqu64 (%rcx),%ymm0
               :  14161c:	vmovdqa64 %ymm0,%ymm1
               :  141622:	cmp    $0x40,%rdi
               :  141626:	jbe    1424bb <rxq_copy_mprq_mbuf_v+0x1ddb>
               :  14162c:	cmp    $0x100,%rdi
               :  141633:	ja     1428d7 <rxq_copy_mprq_mbuf_v+0x21f7>
               :  141639:	cmp    $0x7f,%rdi
               :  14163d:	jbe    14168a <rxq_copy_mprq_mbuf_v+0xfaa>
               :  14163f:	vmovdqu64 %ymm0,(%rdx)
               :  141645:	vmovdqu64 0x20(%rcx),%ymm1
               :  14164c:	lea    -0x80(%rdi),%r8
               :  141650:	vmovdqu64 %ymm1,0x20(%rdx)
               :  141657:	vmovdqu64 0x40(%rcx),%ymm2
               :  14165e:	sub    $0xffffffffffffff80,%rsi
               :  141662:	vmovdqu64 %ymm2,0x40(%rdx)
               :  141669:	vmovdqu64 0x60(%rcx),%ymm5
               :  141670:	sub    $0xffffffffffffff80,%rdx
               :  141674:	vmovdqu64 %ymm5,-0x20(%rdx)
               :  14167b:	cmp    $0x3f,%r8
               :  14167f:	jbe    1416aa <rxq_copy_mprq_mbuf_v+0xfca>
               :  141681:	vmovdqu64 (%rsi),%ymm1
               :  141687:	mov    %r8,%rdi
               :  14168a:	vmovdqu64 %ymm1,(%rdx)
               :  141690:	vmovdqu64 0x20(%rsi),%ymm5
               :  141697:	lea    -0x40(%rdi),%r8
               :  14169b:	vmovdqu64 %ymm5,0x20(%rdx)
               :  1416a2:	add    $0x40,%rsi
               :  1416a6:	add    $0x40,%rdx
               :  1416aa:	cmp    $0x20,%r8
               :  1416ae:	jbe    14273c <rxq_copy_mprq_mbuf_v+0x205c>
               :  1416b4:	vmovdqu64 (%rsi),%ymm6
               :  1416ba:	vmovdqu64 %ymm6,(%rdx)
               :  1416c0:	vmovdqu64 -0x20(%rsi,%r8,1),%ymm7
               :  1416c8:	vmovdqu64 %ymm7,-0x20(%rdx,%r8,1)
               :  1416d0:	jmpq   1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  1416d5:	nopl   (%rax)
               :  1416d8:	movzwl 0x10(%rax),%edx
               :  1416dc:	lea    0x10(%rax),%rcx
               :  1416e0:	cmp    $0x1,%dx
               :  1416e4:	jne    14275a <rxq_copy_mprq_mbuf_v+0x207a>
               :  1416ea:	movw   $0x0,0x10(%rax)
               :  1416f0:	mov    0x50(%rbx),%rax
               :  1416f4:	mov    (%rbx),%rdi
               :  1416f7:	mov    0x8(%rax),%rsi
               :  1416fb:	vzeroupper 
               :  1416fe:	callq  *(%rax)
               :  141700:	cmpl   $0x1,0x44(%r13)
               :  141705:	sbb    %rax,%rax
               :  141708:	and    $0xffffffffffefe000,%rax
               :  14170e:	lea    0x1020c0(%r13,%rax,1),%rax
               :  141716:	movzwl 0x2(%rax),%edx
               :  14171a:	movzwl (%rax),%eax
               :  14171d:	mov    %dx,0x58(%rbx)
               :  141721:	sub    $0xffffffffffffff80,%rdx
               :  141725:	lea    (%rbx,%rdx,1),%rcx
               :  141729:	add    -0x8(%rbx),%rdx
               :  14172d:	mov    %rdx,0x8(%rbx)
               :  141731:	cmp    $0x80,%ax
               :  141735:	mov    $0x80,%edx
               :  14173a:	mov    %ax,0x36(%rbx)
               :  14173e:	mov    0x38(%rbx),%r14
               :  141742:	cmova  %edx,%eax
               :  141745:	xor    %edi,%edi
               :  141747:	mov    %rcx,(%rbx)
               :  14174a:	mov    %ax,0x10(%rbx)
               :  14174e:	mov    %di,0x28(%rbx)
               :  141752:	movq   $0x0,0x18(%rbx)
               :  14175a:	mov    0x44(%r14),%r13d
               :  14175e:	jmpq   140ea9 <rxq_copy_mprq_mbuf_v+0x7c9>
               :  141763:	nopl   0x0(%rax,%rax,1)
               :  141768:	cmp    $0xf,%edx
               :  14176b:	jbe    141bc0 <rxq_copy_mprq_mbuf_v+0x14e0>
               :  141771:	cmp    $0x20,%edx
               :  141774:	jbe    1421b0 <rxq_copy_mprq_mbuf_v+0x1ad0>
               :  14177a:	cmp    $0x30,%r10
               :  14177e:	jbe    142484 <rxq_copy_mprq_mbuf_v+0x1da4>
               :  141784:	vmovdqu64 0xc0(%rax),%ymm0
               :  14178b:	cmp    $0x40,%r10
               :  14178f:	jbe    1427b0 <rxq_copy_mprq_mbuf_v+0x20d0>
               :  141795:	cmp    $0x100,%r10
               :  14179c:	ja     14262d <rxq_copy_mprq_mbuf_v+0x1f4d>
               :  1417a2:	cmp    $0x7f,%r10
               :  1417a6:	jbe    1427f2 <rxq_copy_mprq_mbuf_v+0x2112>
               :  1417ac:	vmovdqu64 %ymm0,(%rsi)
               :  1417b2:	vmovdqu64 0x20(%rcx),%ymm6
               :  1417b9:	lea    -0x80(%r10),%rax
               :  1417bd:	vmovdqu64 %ymm6,0x20(%rsi)
               :  1417c4:	vmovdqu64 0x40(%rcx),%ymm7
               :  1417cb:	sub    $0xffffffffffffff80,%rsi
               :  1417cf:	vmovdqu64 %ymm7,-0x40(%rsi)
               :  1417d6:	vmovdqu64 0x60(%rcx),%ymm6
               :  1417dd:	sub    $0xffffffffffffff80,%rcx
               :  1417e1:	vmovdqu64 %ymm6,-0x20(%rsi)
               :  1417e8:	cmp    $0x3f,%rax
               :  1417ec:	ja     1427e9 <rxq_copy_mprq_mbuf_v+0x2109>
               :  1417f2:	cmp    $0x20,%rax
               :  1417f6:	jbe    1427cb <rxq_copy_mprq_mbuf_v+0x20eb>
               :  1417fc:	vmovdqu64 (%rcx),%ymm2
               :  141802:	vmovdqu64 %ymm2,(%rsi)
               :  141808:	vmovdqu64 -0x20(%rcx,%rax,1),%ymm0
               :  141810:	vmovdqu64 %ymm0,-0x20(%rsi,%rax,1)
               :  141818:	jmpq   140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  14181d:	nopl   (%rax)
               :  141820:	vmovdqu64 %ymm0,(%rdx)
               :  141826:	vmovdqu64 0x20(%rcx),%ymm0
               :  14182d:	lea    -0x80(%rsi),%rax
               :  141831:	vmovdqu64 %ymm0,0x20(%rdx)
               :  141838:	vmovdqu64 0x40(%rcx),%ymm2
               :  14183f:	lea    0x80(%rcx),%r8
               :  141846:	vmovdqu64 %ymm2,0x40(%rdx)
               :  14184d:	vmovdqu64 0x60(%rcx),%ymm6
               :  141854:	sub    $0xffffffffffffff80,%rdx
               :  141858:	vmovdqu64 %ymm6,-0x20(%rdx)
               :  14185f:	cmp    $0x3f,%rax
               :  141863:	jbe    140d5c <rxq_copy_mprq_mbuf_v+0x67c>
               :  141869:	vmovdqu64 (%r8),%ymm1
               :  14186f:	mov    %rax,%rsi
               :  141872:	jmpq   140d3c <rxq_copy_mprq_mbuf_v+0x65c>
               :  141877:	nopw   0x0(%rax,%rax,1)
               :  141880:	test   $0x8,%r13b
               :  141884:	je     141894 <rxq_copy_mprq_mbuf_v+0x11b4>
               :  141886:	mov    (%rcx),%rcx
               :  141889:	add    $0x8,%rsi
               :  14188d:	mov    %rcx,(%rdx)
               :  141890:	add    $0x8,%rdx
               :  141894:	test   $0x4,%r13b
               :  141898:	je     1418a7 <rxq_copy_mprq_mbuf_v+0x11c7>
               :  14189a:	mov    (%rsi),%ecx
               :  14189c:	add    $0x4,%rdx
               :  1418a0:	mov    %ecx,-0x4(%rdx)
               :  1418a3:	add    $0x4,%rsi
               :  1418a7:	test   $0x2,%r13b
               :  1418ab:	je     1418bc <rxq_copy_mprq_mbuf_v+0x11dc>
               :  1418ad:	movzwl (%rsi),%ecx
               :  1418b0:	add    $0x2,%rdx
               :  1418b4:	mov    %cx,-0x2(%rdx)
               :  1418b8:	add    $0x2,%rsi
               :  1418bc:	test   $0x1,%r13b
               :  1418c0:	je     1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  1418c6:	movzbl (%rsi),%ecx
               :  1418c9:	mov    %cl,(%rdx)
               :  1418cb:	jmpq   1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  1418d0:	mov    (%rbx),%rax
               :  1418d3:	movzwl 0x58(%rbx),%edx
               :  1418d7:	add    $0xffffffffffffff80,%rax
               :  1418db:	sub    %rdx,%rax
               :  1418de:	movzwl 0x12(%rax),%edx
               :  1418e2:	lea    0x12(%rax),%rcx
               :  1418e6:	cmp    $0x1,%dx
               :  1418ea:	jne    14276c <rxq_copy_mprq_mbuf_v+0x208c>
               :  1418f0:	movw   $0x0,0x12(%rax)
               :  1418f6:	mov    $0x1,%r8d
               :  1418fc:	movq   $0x0,0x40(%rax)
               :  141904:	mov    %r8w,0x14(%rax)
               :  141909:	movw   $0x1,0x12(%rax)
               :  14190f:	mov    %rax,0x78(%rsp)
               :  141914:	mov    0x38(%rax),%rdi
               :  141918:	mov    %rdi,0x30(%rsp)
               :  14191d:	vzeroupper 
               :  141920:	data16 lea 0x54520(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  141928:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  141930:	mov    0x30(%rsp),%rdi
               :  141935:	mov    0x44(%rdi),%r9d
               :  141939:	mov    (%rax),%eax
               :  14193b:	test   %r9d,%r9d
               :  14193e:	je     1426c9 <rxq_copy_mprq_mbuf_v+0x1fe9>
               :  141944:	cmp    $0x7f,%eax
               :  141947:	ja     1426c9 <rxq_copy_mprq_mbuf_v+0x1fe9>
               :  14194d:	mov    %eax,%r14d
               :  141950:	imul   $0x2040,%r14,%r14
               :  141957:	add    0x60(%rdi),%r14
               :  14195b:	je     1426c9 <rxq_copy_mprq_mbuf_v+0x1fe9>
               :  141961:	mov    0x4(%r14),%ecx
               :  141965:	test   %ecx,%ecx
               :  141967:	je     1426c9 <rxq_copy_mprq_mbuf_v+0x1fe9>
               :  14196d:	mov    0x8(%r14),%edx
               :  141971:	lea    0x1(%rdx),%eax
               :  141974:	cmp    %eax,%ecx
               :  141976:	jb     142777 <rxq_copy_mprq_mbuf_v+0x2097>
               :  14197c:	mov    %eax,0x8(%r14)
               :  141980:	lea    0x40(%r14,%rdx,8),%rcx
               :  141985:	mov    0x78(%rsp),%rax
               :  14198a:	mov    %rax,(%rcx)
               :  14198d:	jmpq   141700 <rxq_copy_mprq_mbuf_v+0x1020>
               :  141992:	nopw   0x0(%rax,%rax,1)
               :  141998:	vmovdqu64 %ymm0,(%rdx)
               :  14199e:	vmovdqu64 0xa0(%rsi,%rax,1),%ymm5
               :  1419a6:	vmovdqu64 %ymm5,-0x20(%rdx,%rsi,1)
               :  1419ae:	jmpq   140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  1419b3:	nopl   0x0(%rax,%rax,1)
               :  1419b8:	test   %rax,%rax
               :  1419bb:	je     140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  1419c1:	vmovdqu64 -0x20(%r8,%rax,1),%ymm1
               :  1419c9:	vmovdqu64 %ymm1,-0x20(%rdx,%rax,1)
               :  1419d1:	jmpq   140970 <rxq_copy_mprq_mbuf_v+0x290>
               :  1419d6:	nopw   %cs:0x0(%rax,%rax,1)
               :  1419e0:	xor    %ebx,%ebx
               :  1419e2:	movslq 0x58(%r14),%rax
               :  1419e6:	cmp    $0xf,%eax
               :  1419e9:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  1419ef:	shl    $0x7,%rax
               :  1419f3:	add    0x54516(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1419fa:	lea    0x60(%rsp),%rsi
               :  1419ff:	mov    $0x1,%edx
               :  141a04:	mov    %r14,%rdi
               :  141a07:	callq  *0x78(%rax)
               :  141a0a:	test   %eax,%eax
               :  141a0c:	js     1421cf <rxq_copy_mprq_mbuf_v+0x1aef>
               :  141a12:	je     1410db <rxq_copy_mprq_mbuf_v+0x9fb>
               :  141a18:	xor    %ebx,%ebx
               :  141a1a:	jmpq   1410e0 <rxq_copy_mprq_mbuf_v+0xa00>
               :  141a1f:	nop
               :  141a20:	xor    %r8d,%r8d
               :  141a23:	movslq 0x58(%rdi),%rax
               :  141a27:	mov    %r8,0x10(%rsp)
               :  141a2c:	mov    %rcx,0x20(%rsp)
               :  141a31:	mov    %r9d,0x28(%rsp)
               :  141a36:	mov    %r11d,0x30(%rsp)
               :  141a3b:	cmp    $0xf,%eax
               :  141a3e:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  141a44:	shl    $0x7,%rax
               :  141a48:	add    0x544c1(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  141a4f:	lea    0x90(%rsp),%rsi
               :  141a57:	mov    $0x1,%edx
               :  141a5c:	callq  *0x78(%rax)
               :  141a5f:	test   %eax,%eax
               :  141a61:	mov    0x30(%rsp),%r11d
               :  141a66:	mov    0x28(%rsp),%r9d
               :  141a6b:	mov    0x20(%rsp),%rcx
               :  141a70:	jns    141199 <rxq_copy_mprq_mbuf_v+0xab9>
               :  141a76:	mov    0x10(%rsp),%r8
               :  141a7b:	test   %r8,%r8
               :  141a7e:	je     141420 <rxq_copy_mprq_mbuf_v+0xd40>
               :  141a84:	movl   $0x0,0x8(%r8)
               :  141a8c:	jmpq   141420 <rxq_copy_mprq_mbuf_v+0xd40>
               :  141a91:	nopl   0x0(%rax)
               :  141a98:	lock decw 0x0(%r13)
               :  141a9e:	jne    140f2c <rxq_copy_mprq_mbuf_v+0x84c>
               :  141aa4:	mov    0x18(%rbx),%rax
               :  141aa8:	movabs $0x6000000000000000,%rsi
               :  141ab2:	test   %rsi,%rax
               :  141ab5:	jne    14213c <rxq_copy_mprq_mbuf_v+0x1a5c>
               :  141abb:	vzeroupper 
               :  141abe:	cmpq   $0x0,0x40(%rbx)
               :  141ac3:	je     141acd <rxq_copy_mprq_mbuf_v+0x13ed>
               :  141ac5:	movq   $0x0,0x40(%rbx)
               :  141acd:	cmpw   $0x1,0x14(%rbx)
               :  141ad2:	je     141add <rxq_copy_mprq_mbuf_v+0x13fd>
               :  141ad4:	mov    $0x1,%eax
               :  141ad9:	mov    %ax,0x14(%rbx)
               :  141add:	movw   $0x1,0x0(%r13)
               :  141ae4:	mov    0x38(%rbx),%r14
               :  141ae8:	mov    0x44(%r14),%r13d
               :  141aec:	jmpq   140ec8 <rxq_copy_mprq_mbuf_v+0x7e8>
               :  141af1:	nopl   0x0(%rax)
               :  141af8:	movslq 0x58(%r14),%rax
               :  141afc:	lea    0x40(%rbx),%r13
               :  141b00:	cmp    $0xf,%eax
               :  141b03:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  141b09:	shl    $0x7,%rax
               :  141b0d:	add    0x543fc(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  141b14:	mov    %r13,%rsi
               :  141b17:	mov    %r14,%rdi
               :  141b1a:	callq  *0x70(%rax)
               :  141b1d:	movl   $0x1,0x8(%rbx)
               :  141b24:	jmpq   141536 <rxq_copy_mprq_mbuf_v+0xe56>
               :  141b29:	nopl   0x0(%rax)
               :  141b30:	mov    %rdx,%rdi
               :  141b33:	and    $0x1f,%edi
               :  141b36:	jne    14211d <rxq_copy_mprq_mbuf_v+0x1a3d>
               :  141b3c:	lea    -0x80(%rsi),%rax
               :  141b40:	and    $0xffffffffffffff80,%rax
               :  141b44:	lea    0x80(%r8,%rax,1),%rdi
               :  141b4c:	mov    %rdx,%rcx
               :  141b4f:	mov    %r8,%rax
               :  141b52:	nopw   0x0(%rax,%rax,1)
               :  141b58:	vmovdqu64 (%rax),%ymm2
               :  141b5e:	vmovdqu64 0x20(%rax),%ymm1
               :  141b65:	vmovdqu64 0x40(%rax),%ymm0
               :  141b6c:	vmovdqu64 0x60(%rax),%ymm7
               :  141b73:	sub    $0xffffffffffffff80,%rax
               :  141b77:	vmovdqu64 %ymm7,0x60(%rcx)
               :  141b7e:	vmovdqu64 %ymm2,(%rcx)
               :  141b84:	vmovdqu64 %ymm1,0x20(%rcx)
               :  141b8b:	vmovdqu64 %ymm0,0x40(%rcx)
               :  141b92:	sub    $0xffffffffffffff80,%rcx
               :  141b96:	cmp    %rdi,%rax
               :  141b99:	jne    141b58 <rxq_copy_mprq_mbuf_v+0x1478>
               :  141b9b:	mov    %rsi,%rax
               :  141b9e:	and    $0xffffffffffffff80,%rsi
               :  141ba2:	and    $0x7f,%eax
               :  141ba5:	add    %rsi,%r8
               :  141ba8:	add    %rsi,%rdx
               :  141bab:	jmpq   14185f <rxq_copy_mprq_mbuf_v+0x117f>
               :  141bb0:	vzeroupper 
               :  141bb3:	jmpq   1409ea <rxq_copy_mprq_mbuf_v+0x30a>
               :  141bb8:	nopl   0x0(%rax,%rax,1)
               :  141bc0:	test   $0x8,%dl
               :  141bc3:	je     141bd7 <rxq_copy_mprq_mbuf_v+0x14f7>
               :  141bc5:	mov    0xc0(%rax),%rax
               :  141bcc:	add    $0x8,%rcx
               :  141bd0:	mov    %rax,(%rsi)
               :  141bd3:	add    $0x8,%rsi
               :  141bd7:	test   $0x4,%dl
               :  141bda:	je     141be9 <rxq_copy_mprq_mbuf_v+0x1509>
               :  141bdc:	mov    (%rcx),%eax
               :  141bde:	add    $0x4,%rsi
               :  141be2:	mov    %eax,-0x4(%rsi)
               :  141be5:	add    $0x4,%rcx
               :  141be9:	test   $0x2,%dl
               :  141bec:	je     141bfd <rxq_copy_mprq_mbuf_v+0x151d>
               :  141bee:	movzwl (%rcx),%eax
               :  141bf1:	add    $0x2,%rsi
               :  141bf5:	mov    %ax,-0x2(%rsi)
               :  141bf9:	add    $0x2,%rcx
               :  141bfd:	test   $0x1,%dl
               :  141c00:	je     140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  141c06:	movzbl (%rcx),%eax
               :  141c09:	mov    %al,(%rsi)
               :  141c0b:	jmpq   140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  141c10:	mov    (%rcx),%eax
               :  141c12:	lea    0x40(%rcx),%rsi
               :  141c16:	lea    0x1(%rax),%edx
               :  141c19:	movslq 0x58(%r13),%rax
               :  141c1d:	cmp    $0xf,%eax
               :  141c20:	ja     142de1 <rxq_copy_mprq_mbuf_v+0x2701>
               :  141c26:	shl    $0x7,%rax
               :  141c2a:	add    0x542df(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  141c31:	mov    %r13,%rdi
               :  141c34:	mov    %rcx,0x20(%rsp)
               :  141c39:	callq  *0x78(%rax)
               :  141c3c:	test   %eax,%eax
               :  141c3e:	mov    0x20(%rsp),%rcx
               :  141c43:	js     141d8a <rxq_copy_mprq_mbuf_v+0x16aa>
               :  141c49:	mov    (%rcx),%eax
               :  141c4b:	lea    0x1(%rax),%edx
               :  141c4e:	mov    0x38(%rcx,%rdx,8),%rdx
               :  141c53:	mov    %rdx,0x90(%rsp)
               :  141c5b:	mov    %eax,0x8(%rcx)
               :  141c5e:	mov    0x90(%rsp),%rax
               :  141c66:	test   %rax,%rax
               :  141c69:	jne    140bb8 <rxq_copy_mprq_mbuf_v+0x4d8>
               :  141c6f:	movzwl 0x10(%rsp),%r11d
               :  141c75:	mov    0x8(%rsp),%r15
               :  141c7a:	mov    0x28(%rsp),%r12
               :  141c7f:	jmpq   141420 <rxq_copy_mprq_mbuf_v+0xd40>
               :  141c84:	nopl   0x0(%rax)
               :  141c88:	cmp    $0xf,%edi
               :  141c8b:	jbe    141df0 <rxq_copy_mprq_mbuf_v+0x1710>
               :  141c91:	cmp    $0x20,%edi
               :  141c94:	jbe    141e68 <rxq_copy_mprq_mbuf_v+0x1788>
               :  141c9a:	cmp    $0x30,%rdi
               :  141c9e:	jbe    141eb0 <rxq_copy_mprq_mbuf_v+0x17d0>
               :  141ca4:	vmovdqu64 (%rcx),%ymm0
               :  141caa:	cmp    $0x40,%rdi
               :  141cae:	jbe    141f10 <rxq_copy_mprq_mbuf_v+0x1830>
               :  141cb4:	cmp    $0x100,%rdi
               :  141cbb:	ja     1422dc <rxq_copy_mprq_mbuf_v+0x1bfc>
               :  141cc1:	cmp    $0x7f,%rdi
               :  141cc5:	jbe    141d15 <rxq_copy_mprq_mbuf_v+0x1635>
               :  141cc7:	vmovdqu64 %ymm0,(%rdx)
               :  141ccd:	vmovdqu64 0x20(%rcx),%ymm0
               :  141cd4:	lea    -0x80(%rdi),%rsi
               :  141cd8:	vmovdqu64 %ymm0,0x20(%rdx)
               :  141cdf:	vmovdqu64 0x40(%rcx),%ymm2
               :  141ce6:	sub    $0xffffffffffffff80,%rdx
               :  141cea:	vmovdqu64 %ymm2,-0x40(%rdx)
               :  141cf1:	vmovdqu64 0x60(%rcx),%ymm1
               :  141cf8:	lea    0x80(%rcx),%rcx
               :  141cff:	vmovdqu64 %ymm1,-0x20(%rdx)
               :  141d06:	cmp    $0x3f,%rsi
               :  141d0a:	jbe    141d35 <rxq_copy_mprq_mbuf_v+0x1655>
               :  141d0c:	vmovdqu64 (%rcx),%ymm0
               :  141d12:	mov    %rsi,%rdi
               :  141d15:	vmovdqu64 %ymm0,(%rdx)
               :  141d1b:	vmovdqu64 0x20(%rcx),%ymm2
               :  141d22:	lea    -0x40(%rdi),%rsi
               :  141d26:	vmovdqu64 %ymm2,0x20(%rdx)
               :  141d2d:	add    $0x40,%rcx
               :  141d31:	add    $0x40,%rdx
               :  141d35:	cmp    $0x20,%rsi
               :  141d39:	jbe    141fb0 <rxq_copy_mprq_mbuf_v+0x18d0>
               :  141d3f:	vmovdqu64 (%rcx),%ymm1
               :  141d45:	vmovdqu64 %ymm1,(%rdx)
               :  141d4b:	vmovdqu64 -0x20(%rcx,%rsi,1),%ymm7
               :  141d53:	vmovdqu64 %ymm7,-0x20(%rdx,%rsi,1)
               :  141d5b:	mov    %r12w,0x28(%rax)
               :  141d60:	incw   0x14(%rbx)
               :  141d64:	sub    %r12d,%r14d
               :  141d67:	jne    140ce2 <rxq_copy_mprq_mbuf_v+0x602>
               :  141d6d:	nopl   (%rax)
               :  141d70:	movzwl 0x10(%rsp),%r11d
               :  141d76:	mov    0x8(%rsp),%r15
               :  141d7b:	mov    0x28(%rsp),%r12
               :  141d80:	jmpq   14101a <rxq_copy_mprq_mbuf_v+0x93a>
               :  141d85:	nopl   (%rax)
               :  141d88:	xor    %ecx,%ecx
               :  141d8a:	movslq 0x58(%r13),%rax
               :  141d8e:	mov    %rcx,0x20(%rsp)
               :  141d93:	cmp    $0xf,%eax
               :  141d96:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  141d9c:	shl    $0x7,%rax
               :  141da0:	add    0x54169(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  141da7:	lea    0x90(%rsp),%rsi
               :  141daf:	mov    $0x1,%edx
               :  141db4:	mov    %r13,%rdi
               :  141db7:	callq  *0x78(%rax)
               :  141dba:	test   %eax,%eax
               :  141dbc:	jns    140ba7 <rxq_copy_mprq_mbuf_v+0x4c7>
               :  141dc2:	mov    0x20(%rsp),%rcx
               :  141dc7:	movzwl 0x10(%rsp),%r11d
               :  141dcd:	mov    0x8(%rsp),%r15
               :  141dd2:	mov    0x28(%rsp),%r12
               :  141dd7:	test   %rcx,%rcx
               :  141dda:	je     141420 <rxq_copy_mprq_mbuf_v+0xd40>
               :  141de0:	movl   $0x0,0x8(%rcx)
               :  141de7:	jmpq   141420 <rxq_copy_mprq_mbuf_v+0xd40>
               :  141dec:	nopl   0x0(%rax)
               :  141df0:	mov    %r15,%rsi
               :  141df3:	test   $0x8,%r12b
               :  141df7:	je     141e07 <rxq_copy_mprq_mbuf_v+0x1727>
               :  141df9:	mov    (%rcx),%rcx
               :  141dfc:	lea    0x8(%r15),%rsi
               :  141e00:	mov    %rcx,(%rdx)
               :  141e03:	add    $0x8,%rdx
               :  141e07:	test   $0x4,%r12b
               :  141e0b:	je     141e1a <rxq_copy_mprq_mbuf_v+0x173a>
               :  141e0d:	mov    (%rsi),%ecx
               :  141e0f:	add    $0x4,%rdx
               :  141e13:	mov    %ecx,-0x4(%rdx)
               :  141e16:	add    $0x4,%rsi
               :  141e1a:	test   $0x2,%r12b
               :  141e1e:	je     141e2f <rxq_copy_mprq_mbuf_v+0x174f>
               :  141e20:	movzwl (%rsi),%ecx
               :  141e23:	add    $0x2,%rdx
               :  141e27:	mov    %cx,-0x2(%rdx)
               :  141e2b:	add    $0x2,%rsi
               :  141e2f:	test   $0x1,%r12b
               :  141e33:	je     140cd0 <rxq_copy_mprq_mbuf_v+0x5f0>
               :  141e39:	movzbl (%rsi),%ecx
               :  141e3c:	mov    %cl,(%rdx)
               :  141e3e:	jmpq   140cd0 <rxq_copy_mprq_mbuf_v+0x5f0>
               :  141e43:	nopl   0x0(%rax,%rax,1)
               :  141e48:	vmovdqu64 (%rcx),%xmm6
               :  141e4e:	vmovups %xmm6,(%rdx)
               :  141e52:	vmovdqu64 -0x10(%rdi,%rcx,1),%xmm0
               :  141e5a:	vmovups %xmm0,-0x10(%rdx,%rdi,1)
               :  141e60:	jmpq   140cd0 <rxq_copy_mprq_mbuf_v+0x5f0>
               :  141e65:	nopl   (%rax)
               :  141e68:	vmovdqu64 (%rcx),%xmm2
               :  141e6e:	vmovups %xmm2,(%rdx)
               :  141e72:	vmovdqu64 -0x10(%rdi,%rcx,1),%xmm6
               :  141e7a:	vmovups %xmm6,-0x10(%rdx,%rdi,1)
               :  141e80:	jmpq   140cd0 <rxq_copy_mprq_mbuf_v+0x5f0>
               :  141e85:	nopl   (%rax)
               :  141e88:	vmovdqu64 (%rcx),%ymm2
               :  141e8e:	vmovdqu64 %ymm2,(%rdx)
               :  141e94:	vmovdqu64 -0x20(%rdi,%rcx,1),%ymm6
               :  141e9c:	vmovdqu64 %ymm6,-0x20(%rdx,%rdi,1)
               :  141ea4:	jmpq   140cd0 <rxq_copy_mprq_mbuf_v+0x5f0>
               :  141ea9:	nopl   0x0(%rax)
               :  141eb0:	vmovdqu64 (%rcx),%xmm1
               :  141eb6:	vmovups %xmm1,(%rdx)
               :  141eba:	vmovdqu64 0x10(%rcx),%xmm5
               :  141ec1:	vmovups %xmm5,0x10(%rdx)
               :  141ec6:	vmovdqu64 -0x10(%rdi,%rcx,1),%xmm7
               :  141ece:	vmovups %xmm7,-0x10(%rdx,%rdi,1)
               :  141ed4:	jmpq   140cd0 <rxq_copy_mprq_mbuf_v+0x5f0>
               :  141ed9:	nopl   0x0(%rax)
               :  141ee0:	movslq 0x58(%r14),%rax
               :  141ee4:	cmp    $0xf,%eax
               :  141ee7:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  141eed:	shl    $0x7,%rax
               :  141ef1:	lea    0x70(%rsp),%rsi
               :  141ef6:	add    0x54013(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  141efd:	mov    $0x1,%edx
               :  141f02:	mov    %r14,%rdi
               :  141f05:	callq  *0x70(%rax)
               :  141f08:	jmpq   14153f <rxq_copy_mprq_mbuf_v+0xe5f>
               :  141f0d:	nopl   (%rax)
               :  141f10:	vmovdqu64 %ymm0,(%rdx)
               :  141f16:	vmovdqu64 -0x20(%rdi,%rcx,1),%ymm0
               :  141f1e:	vmovdqu64 %ymm0,-0x20(%rdx,%rdi,1)
               :  141f26:	jmpq   140cd0 <rxq_copy_mprq_mbuf_v+0x5f0>
               :  141f2b:	nopl   0x0(%rax,%rax,1)
               :  141f30:	add    %r11d,%esi
               :  141f33:	mov    %si,0x24(%r12)
               :  141f39:	movl   $0x2,0x30(%rsp)
               :  141f41:	lea    0x12(%rbx),%r14
               :  141f45:	movzwl 0x12(%rbx),%eax
               :  141f49:	cmp    $0x1,%ax
               :  141f4d:	je     141443 <rxq_copy_mprq_mbuf_v+0xd63>
               :  141f53:	lock decw (%r14)
               :  141f58:	jne    14153f <rxq_copy_mprq_mbuf_v+0xe5f>
               :  141f5e:	mov    0x18(%rbx),%rax
               :  141f62:	movabs $0x6000000000000000,%rsi
               :  141f6c:	test   %rsi,%rax
               :  141f6f:	jne    1424d6 <rxq_copy_mprq_mbuf_v+0x1df6>
               :  141f75:	vzeroupper 
               :  141f78:	cmpq   $0x0,0x40(%rbx)
               :  141f7d:	je     141f87 <rxq_copy_mprq_mbuf_v+0x18a7>
               :  141f7f:	movq   $0x0,0x40(%rbx)
               :  141f87:	cmpw   $0x1,0x14(%rbx)
               :  141f8c:	je     141f97 <rxq_copy_mprq_mbuf_v+0x18b7>
               :  141f8e:	mov    $0x1,%edx
               :  141f93:	mov    %dx,0x14(%rbx)
               :  141f97:	movw   $0x1,(%r14)
               :  141f9d:	mov    0x38(%rbx),%r14
               :  141fa1:	mov    0x44(%r14),%r13d
               :  141fa5:	jmpq   1414d9 <rxq_copy_mprq_mbuf_v+0xdf9>
               :  141faa:	nopw   0x0(%rax,%rax,1)
               :  141fb0:	test   %rsi,%rsi
               :  141fb3:	je     140cd0 <rxq_copy_mprq_mbuf_v+0x5f0>
               :  141fb9:	vmovdqu64 -0x20(%rcx,%rsi,1),%ymm1
               :  141fc1:	vmovdqu64 %ymm1,-0x20(%rdx,%rsi,1)
               :  141fc9:	jmpq   140cd0 <rxq_copy_mprq_mbuf_v+0x5f0>
               :  141fce:	xchg   %ax,%ax
               :  141fd0:	mov    (%rbx),%rax
               :  141fd3:	movzwl 0x58(%rbx),%edx
               :  141fd7:	add    $0xffffffffffffff80,%rax
               :  141fdb:	sub    %rdx,%rax
               :  141fde:	movzwl 0x12(%rax),%edx
               :  141fe2:	lea    0x12(%rax),%rcx
               :  141fe6:	cmp    $0x1,%dx
               :  141fea:	jne    142b44 <rxq_copy_mprq_mbuf_v+0x2464>
               :  141ff0:	movw   $0x0,0x12(%rax)
               :  141ff6:	mov    $0x1,%r11d
               :  141ffc:	movq   $0x0,0x40(%rax)
               :  142004:	mov    %r11w,0x14(%rax)
               :  142009:	movw   $0x1,0x12(%rax)
               :  14200f:	mov    %rax,0x88(%rsp)
               :  142017:	mov    0x38(%rax),%r14
               :  14201b:	vzeroupper 
               :  14201e:	data16 lea 0x53e22(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  142026:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  14202e:	mov    0x44(%r14),%edx
               :  142032:	mov    (%rax),%eax
               :  142034:	test   %edx,%edx
               :  142036:	je     14270c <rxq_copy_mprq_mbuf_v+0x202c>
               :  14203c:	cmp    $0x7f,%eax
               :  14203f:	ja     14270c <rxq_copy_mprq_mbuf_v+0x202c>
               :  142045:	mov    %eax,%ecx
               :  142047:	imul   $0x2040,%rcx,%rcx
               :  14204e:	add    0x60(%r14),%rcx
               :  142052:	je     14270c <rxq_copy_mprq_mbuf_v+0x202c>
               :  142058:	mov    0x4(%rcx),%esi
               :  14205b:	test   %esi,%esi
               :  14205d:	je     14270c <rxq_copy_mprq_mbuf_v+0x202c>
               :  142063:	mov    0x8(%rcx),%edx
               :  142066:	lea    0x1(%rdx),%eax
               :  142069:	cmp    %eax,%esi
               :  14206b:	jb     142b4f <rxq_copy_mprq_mbuf_v+0x246f>
               :  142071:	mov    %eax,0x8(%rcx)
               :  142074:	lea    0x40(%rcx,%rdx,8),%rsi
               :  142079:	mov    0x88(%rsp),%rax
               :  142081:	mov    %rax,(%rsi)
               :  142084:	jmp    1420b8 <rxq_copy_mprq_mbuf_v+0x19d8>
               :  142086:	nopw   %cs:0x0(%rax,%rax,1)
               :  142090:	movzwl 0x10(%rax),%edx
               :  142094:	lea    0x10(%rax),%rcx
               :  142098:	cmp    $0x1,%dx
               :  14209c:	jne    142b32 <rxq_copy_mprq_mbuf_v+0x2452>
               :  1420a2:	movw   $0x0,0x10(%rax)
               :  1420a8:	mov    0x50(%rbx),%rax
               :  1420ac:	mov    (%rbx),%rdi
               :  1420af:	mov    0x8(%rax),%rsi
               :  1420b3:	vzeroupper 
               :  1420b6:	callq  *(%rax)
               :  1420b8:	cmpl   $0x1,0x44(%r13)
               :  1420bd:	sbb    %rax,%rax
               :  1420c0:	and    $0xffffffffffefe000,%rax
               :  1420c6:	lea    0x1020c0(%r13,%rax,1),%rax
               :  1420ce:	movzwl 0x2(%rax),%edx
               :  1420d2:	movzwl (%rax),%eax
               :  1420d5:	mov    %dx,0x58(%rbx)
               :  1420d9:	sub    $0xffffffffffffff80,%rdx
               :  1420dd:	lea    (%rbx,%rdx,1),%rcx
               :  1420e1:	add    -0x8(%rbx),%rdx
               :  1420e5:	mov    %rdx,0x8(%rbx)
               :  1420e9:	cmp    $0x80,%ax
               :  1420ed:	mov    $0x80,%edx
               :  1420f2:	mov    %ax,0x36(%rbx)
               :  1420f6:	mov    0x38(%rbx),%r14
               :  1420fa:	cmova  %edx,%eax
               :  1420fd:	xor    %r10d,%r10d
               :  142100:	mov    %rcx,(%rbx)
               :  142103:	mov    %ax,0x10(%rbx)
               :  142107:	mov    %r10w,0x28(%rbx)
               :  14210c:	movq   $0x0,0x18(%rbx)
               :  142114:	mov    0x44(%r14),%r13d
               :  142118:	jmpq   1414b8 <rxq_copy_mprq_mbuf_v+0xdd8>
               :  14211d:	mov    $0x20,%eax
               :  142122:	sub    %rdi,%rax
               :  142125:	vmovdqu64 %ymm0,(%rdx)
               :  14212b:	lea    -0x20(%rsi,%rdi,1),%rsi
               :  142130:	lea    (%rcx,%rax,1),%r8
               :  142134:	add    %rax,%rdx
               :  142137:	jmpq   141b3c <rxq_copy_mprq_mbuf_v+0x145c>
               :  14213c:	movabs $0x2000000000000000,%rsi
               :  142146:	mov    0x38(%rbx),%r14
               :  14214a:	test   %rsi,%rax
               :  14214d:	je     142817 <rxq_copy_mprq_mbuf_v+0x2137>
               :  142153:	cmpl   $0x1,0x44(%r14)
               :  142158:	sbb    %rax,%rax
               :  14215b:	and    $0xffffffffffefe000,%rax
               :  142161:	testb  $0x1,0x1020c4(%r14,%rax,1)
               :  14216a:	mov    0x50(%rbx),%rax
               :  14216e:	je     1425aa <rxq_copy_mprq_mbuf_v+0x1eca>
               :  142174:	movabs $0x2000000000000000,%rsi
               :  14217e:	mov    %rsi,0x18(%rbx)
               :  142182:	lea    0x10(%rax),%rdx
               :  142186:	movzwl 0x10(%rax),%ecx
               :  14218a:	cmp    $0x1,%cx
               :  14218e:	je     141abb <rxq_copy_mprq_mbuf_v+0x13db>
               :  142194:	lock decw (%rdx)
               :  142198:	jne    140f2c <rxq_copy_mprq_mbuf_v+0x84c>
               :  14219e:	movw   $0x1,0x10(%rax)
               :  1421a4:	vzeroupper 
               :  1421a7:	jmpq   141abe <rxq_copy_mprq_mbuf_v+0x13de>
               :  1421ac:	nopl   0x0(%rax)
               :  1421b0:	vmovdqu64 0xc0(%rax),%xmm0
               :  1421b7:	vmovups %xmm0,(%rsi)
               :  1421bb:	vmovdqu64 0xb0(%rax,%r10,1),%xmm2
               :  1421c3:	vmovups %xmm2,-0x10(%rsi,%r10,1)
               :  1421ca:	jmpq   140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  1421cf:	test   %rbx,%rbx
               :  1421d2:	je     1410e0 <rxq_copy_mprq_mbuf_v+0xa00>
               :  1421d8:	movl   $0x0,0x8(%rbx)
               :  1421df:	xor    %ebx,%ebx
               :  1421e1:	jmpq   1410e0 <rxq_copy_mprq_mbuf_v+0xa00>
               :  1421e6:	vmovdqu64 0xc0(%rax),%xmm5
               :  1421ed:	vmovups %xmm5,(%rsi)
               :  1421f1:	vmovdqu64 0xb0(%rax,%r10,1),%xmm7
               :  1421f9:	vmovups %xmm7,-0x10(%rsi,%r10,1)
               :  142200:	jmpq   140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  142205:	vmovdqu64 (%rcx),%ymm5
               :  14220b:	vmovdqu64 %ymm5,(%rdx)
               :  142211:	vmovdqu64 -0x20(%rdi,%rcx,1),%ymm6
               :  142219:	vmovdqu64 %ymm6,-0x20(%rdx,%rdi,1)
               :  142221:	jmpq   1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  142226:	vmovdqu64 (%rcx),%xmm7
               :  14222c:	vmovups %xmm7,(%rdx)
               :  142230:	vmovdqu64 0x10(%rcx),%xmm0
               :  142237:	vmovups %xmm0,0x10(%rdx)
               :  14223c:	vmovdqu64 -0x10(%rdi,%rcx,1),%xmm1
               :  142244:	vmovups %xmm1,-0x10(%rdx,%rdi,1)
               :  14224a:	jmpq   1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  14224f:	nop
               :  142250:	mov    0x130(%r12),%r13
               :  142258:	vzeroupper 
               :  14225b:	data16 lea 0x53be5(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  142263:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  14226b:	mov    0x44(%r13),%r11d
               :  14226f:	mov    (%rax),%eax
               :  142271:	test   %r11d,%r11d
               :  142274:	je     142969 <rxq_copy_mprq_mbuf_v+0x2289>
               :  14227a:	cmp    $0x7f,%eax
               :  14227d:	ja     142969 <rxq_copy_mprq_mbuf_v+0x2289>
               :  142283:	imul   $0x2040,%rax,%rdx
               :  14228a:	mov    %rdx,%rbx
               :  14228d:	add    0x60(%r13),%rbx
               :  142291:	je     142969 <rxq_copy_mprq_mbuf_v+0x2289>
               :  142297:	mov    0x8(%rbx),%eax
               :  14229a:	mov    $0x1,%ecx
               :  14229f:	mov    %rax,%rdx
               :  1422a2:	test   %edx,%edx
               :  1422a4:	cmove  %edx,%ecx
               :  1422a7:	mov    %edx,%esi
               :  1422a9:	sub    %ecx,%esi
               :  1422ab:	mov    %esi,0x8(%rbx)
               :  1422ae:	lea    0x40(%rbx,%rax,8),%rax
               :  1422b3:	test   %edx,%edx
               :  1422b5:	je     1423f0 <rxq_copy_mprq_mbuf_v+0x1d10>
               :  1422bb:	mov    -0x8(%rax),%rax
               :  1422bf:	mov    %rax,0x90(%rsp)
               :  1422c7:	mov    0x90(%rsp),%rax
               :  1422cf:	mov    %rax,0x138(%r12)
               :  1422d7:	jmpq   140de5 <rxq_copy_mprq_mbuf_v+0x705>
               :  1422dc:	mov    %rdx,%rsi
               :  1422df:	mov    %rcx,%r9
               :  1422e2:	and    $0x1f,%esi
               :  1422e5:	je     142301 <rxq_copy_mprq_mbuf_v+0x1c21>
               :  1422e7:	mov    $0x20,%ecx
               :  1422ec:	sub    %rsi,%rcx
               :  1422ef:	vmovdqu64 %ymm0,(%rdx)
               :  1422f5:	lea    -0x20(%rdi,%rsi,1),%rdi
               :  1422fa:	lea    (%r15,%rcx,1),%r9
               :  1422fe:	add    %rcx,%rdx
               :  142301:	lea    -0x80(%rdi),%rcx
               :  142305:	and    $0xffffffffffffff80,%rcx
               :  142309:	lea    0x80(%r9,%rcx,1),%r10
               :  142311:	mov    %rdx,%rsi
               :  142314:	mov    %r9,%rcx
               :  142317:	nopw   0x0(%rax,%rax,1)
               :  142320:	vmovdqu64 (%rcx),%ymm2
               :  142326:	vmovdqu64 0x20(%rcx),%ymm1
               :  14232d:	vmovdqu64 0x40(%rcx),%ymm0
               :  142334:	vmovdqu64 0x60(%rcx),%ymm5
               :  14233b:	sub    $0xffffffffffffff80,%rcx
               :  14233f:	vmovdqu64 %ymm5,0x60(%rsi)
               :  142346:	vmovdqu64 %ymm2,(%rsi)
               :  14234c:	vmovdqu64 %ymm1,0x20(%rsi)
               :  142353:	vmovdqu64 %ymm0,0x40(%rsi)
               :  14235a:	sub    $0xffffffffffffff80,%rsi
               :  14235e:	cmp    %r10,%rcx
               :  142361:	jne    142320 <rxq_copy_mprq_mbuf_v+0x1c40>
               :  142363:	mov    %rdi,%rsi
               :  142366:	and    $0xffffffffffffff80,%rdi
               :  14236a:	and    $0x7f,%esi
               :  14236d:	lea    (%r9,%rdi,1),%rcx
               :  142371:	add    %rdi,%rdx
               :  142374:	jmpq   141d06 <rxq_copy_mprq_mbuf_v+0x1626>
               :  142379:	movzwl 0x50(%r12),%eax
               :  14237f:	lea    0x54(%r12),%rcx
               :  142384:	lea    (%rax,%rax,4),%rax
               :  142388:	lea    (%rcx,%rax,4),%rax
               :  14238c:	cmp    (%rax),%rdx
               :  14238f:	jb     1429af <rxq_copy_mprq_mbuf_v+0x22cf>
               :  142395:	cmp    0x8(%rax),%rdx
               :  142399:	jae    1429af <rxq_copy_mprq_mbuf_v+0x22cf>
               :  14239f:	mov    0x10(%rax),%eax
               :  1423a2:	cmp    $0xffffffff,%eax
               :  1423a5:	je     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  1423ab:	vzeroupper 
               :  1423ae:	mov    %eax,0x14(%rbx)
               :  1423b1:	jmpq   14106c <rxq_copy_mprq_mbuf_v+0x98c>
               :  1423b6:	vmovdqu64 (%rcx),%xmm6
               :  1423bc:	vmovups %xmm6,(%rdx)
               :  1423c0:	vmovdqu64 -0x10(%rdi,%rcx,1),%xmm5
               :  1423c8:	vmovups %xmm5,-0x10(%rdx,%rdi,1)
               :  1423ce:	jmpq   1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  1423d3:	vmovdqu64 (%rcx),%xmm7
               :  1423d9:	vmovups %xmm7,(%rdx)
               :  1423dd:	vmovdqu64 -0x10(%rdi,%rcx,1),%xmm0
               :  1423e5:	vmovups %xmm0,-0x10(%rdx,%rdi,1)
               :  1423eb:	jmpq   1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  1423f0:	mov    (%rbx),%eax
               :  1423f2:	lea    0x40(%rbx),%rsi
               :  1423f6:	lea    0x1(%rax),%edx
               :  1423f9:	movslq 0x58(%r13),%rax
               :  1423fd:	cmp    $0xf,%eax
               :  142400:	ja     142dd7 <rxq_copy_mprq_mbuf_v+0x26f7>
               :  142406:	shl    $0x7,%rax
               :  14240a:	add    0x53aff(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  142411:	mov    %r13,%rdi
               :  142414:	callq  *0x78(%rax)
               :  142417:	test   %eax,%eax
               :  142419:	js     142969 <rxq_copy_mprq_mbuf_v+0x2289>
               :  14241f:	mov    (%rbx),%eax
               :  142421:	mov    0x120(%r12),%r14
               :  142429:	lea    0x1(%rax),%edx
               :  14242c:	mov    0x38(%rbx,%rdx,8),%rdx
               :  142431:	mov    %rdx,0x90(%rsp)
               :  142439:	mov    %eax,0x8(%rbx)
               :  14243c:	jmpq   1422c7 <rxq_copy_mprq_mbuf_v+0x1be7>
               :  142441:	movzwl 0x5e(%rsp),%edx
               :  142446:	mov    0x28(%r12),%ecx
               :  14244b:	incq   0x168(%r12)
               :  142453:	mov    0x20(%r12),%eax
               :  142458:	mov    %r12,%r11
               :  14245b:	add    %edx,%ecx
               :  14245d:	jmpq   1409c3 <rxq_copy_mprq_mbuf_v+0x2e3>
               :  142462:	vmovdqu64 0xc0(%rax),%ymm5
               :  142469:	vmovdqu64 %ymm5,(%rsi)
               :  14246f:	vmovdqu64 0xa0(%rax,%r10,1),%ymm6
               :  142477:	vmovdqu64 %ymm6,-0x20(%rsi,%r10,1)
               :  14247f:	jmpq   140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  142484:	vmovdqu64 0xc0(%rax),%xmm7
               :  14248b:	vmovups %xmm7,(%rsi)
               :  14248f:	vmovdqu64 0x10(%rcx),%xmm0
               :  142496:	vmovups %xmm0,0x10(%rsi)
               :  14249b:	vmovdqu64 0xb0(%rax,%r10,1),%xmm1
               :  1424a3:	vmovups %xmm1,-0x10(%rsi,%r10,1)
               :  1424aa:	jmpq   140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  1424af:	xor    %eax,%eax
               :  1424b1:	mov    %ax,0x5c(%rsp)
               :  1424b6:	jmpq   1409ea <rxq_copy_mprq_mbuf_v+0x30a>
               :  1424bb:	vmovdqu64 %ymm0,(%rdx)
               :  1424c1:	vmovdqu64 -0x20(%rdi,%rcx,1),%ymm2
               :  1424c9:	vmovdqu64 %ymm2,-0x20(%rdx,%rdi,1)
               :  1424d1:	jmpq   1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  1424d6:	movabs $0x2000000000000000,%rsi
               :  1424e0:	mov    0x38(%rbx),%r13
               :  1424e4:	test   %rsi,%rax
               :  1424e7:	je     142bd0 <rxq_copy_mprq_mbuf_v+0x24f0>
               :  1424ed:	cmpl   $0x1,0x44(%r13)
               :  1424f2:	sbb    %rax,%rax
               :  1424f5:	and    $0xffffffffffefe000,%rax
               :  1424fb:	testb  $0x1,0x1020c4(%r13,%rax,1)
               :  142504:	jne    142b91 <rxq_copy_mprq_mbuf_v+0x24b1>
               :  14250a:	mov    0x50(%rbx),%rdx
               :  14250e:	movzwl 0x10(%rdx),%esi
               :  142512:	lea    0x10(%rdx),%rax
               :  142516:	cmp    $0x1,%si
               :  14251a:	jne    142dc7 <rxq_copy_mprq_mbuf_v+0x26e7>
               :  142520:	movw   $0x0,0x10(%rdx)
               :  142526:	mov    0x50(%rbx),%rax
               :  14252a:	mov    (%rbx),%rdi
               :  14252d:	mov    0x8(%rax),%rsi
               :  142531:	vzeroupper 
               :  142534:	callq  *(%rax)
               :  142536:	cmpl   $0x1,0x44(%r13)
               :  14253b:	sbb    %rax,%rax
               :  14253e:	and    $0xffffffffffefe000,%rax
               :  142544:	lea    0x1020c0(%r13,%rax,1),%rax
               :  14254c:	movzwl 0x2(%rax),%edx
               :  142550:	movzwl (%rax),%eax
               :  142553:	mov    %dx,0x58(%rbx)
               :  142557:	sub    $0xffffffffffffff80,%rdx
               :  14255b:	lea    (%rbx,%rdx,1),%rsi
               :  14255f:	add    -0x8(%rbx),%rdx
               :  142563:	mov    %rdx,0x8(%rbx)
               :  142567:	cmp    $0x80,%ax
               :  14256b:	mov    $0x80,%edx
               :  142570:	mov    %ax,0x36(%rbx)
               :  142574:	cmova  %edx,%eax
               :  142577:	xor    %ecx,%ecx
               :  142579:	mov    %rsi,(%rbx)
               :  14257c:	mov    %ax,0x10(%rbx)
               :  142580:	mov    %cx,0x28(%rbx)
               :  142584:	movq   $0x0,0x18(%rbx)
               :  14258c:	jmpq   141f78 <rxq_copy_mprq_mbuf_v+0x1898>
               :  142591:	lock decw (%rcx)
               :  142595:	jne    140f2c <rxq_copy_mprq_mbuf_v+0x84c>
               :  14259b:	movw   $0x1,0x10(%rax)
               :  1425a1:	mov    0x38(%rbx),%r14
               :  1425a5:	jmpq   140ea2 <rxq_copy_mprq_mbuf_v+0x7c2>
               :  1425aa:	movzwl 0x10(%rax),%ecx
               :  1425ae:	lea    0x10(%rax),%rdx
               :  1425b2:	cmp    $0x1,%cx
               :  1425b6:	jne    142cbf <rxq_copy_mprq_mbuf_v+0x25df>
               :  1425bc:	movw   $0x0,0x10(%rax)
               :  1425c2:	mov    0x50(%rbx),%rax
               :  1425c6:	mov    (%rbx),%rdi
               :  1425c9:	mov    0x8(%rax),%rsi
               :  1425cd:	vzeroupper 
               :  1425d0:	callq  *(%rax)
               :  1425d2:	cmpl   $0x1,0x44(%r14)
               :  1425d7:	sbb    %rax,%rax
               :  1425da:	and    $0xffffffffffefe000,%rax
               :  1425e0:	lea    0x1020c0(%r14,%rax,1),%rax
               :  1425e8:	movzwl 0x2(%rax),%edx
               :  1425ec:	movzwl (%rax),%eax
               :  1425ef:	mov    %dx,0x58(%rbx)
               :  1425f3:	sub    $0xffffffffffffff80,%rdx
               :  1425f7:	lea    (%rbx,%rdx,1),%rcx
               :  1425fb:	add    -0x8(%rbx),%rdx
               :  1425ff:	mov    %rdx,0x8(%rbx)
               :  142603:	cmp    $0x80,%ax
               :  142607:	mov    $0x80,%edx
               :  14260c:	mov    %ax,0x36(%rbx)
               :  142610:	cmova  %edx,%eax
               :  142613:	mov    %rcx,(%rbx)
               :  142616:	mov    %ax,0x10(%rbx)
               :  14261a:	xor    %eax,%eax
               :  14261c:	mov    %ax,0x28(%rbx)
               :  142620:	movq   $0x0,0x18(%rbx)
               :  142628:	jmpq   141abe <rxq_copy_mprq_mbuf_v+0x13de>
               :  14262d:	mov    %rcx,%r9
               :  142630:	mov    %rsi,%rcx
               :  142633:	and    $0x1f,%ecx
               :  142636:	je     142651 <rxq_copy_mprq_mbuf_v+0x1f71>
               :  142638:	mov    $0x20,%eax
               :  14263d:	sub    %rcx,%rax
               :  142640:	vmovdqu64 %ymm0,(%rsi)
               :  142646:	lea    -0x20(%r10,%rcx,1),%r10
               :  14264b:	add    %rax,%r9
               :  14264e:	add    %rax,%rsi
               :  142651:	lea    -0x80(%r10),%rax
               :  142655:	and    $0xffffffffffffff80,%rax
               :  142659:	lea    0x80(%r9,%rax,1),%rdi
               :  142661:	mov    %rsi,%rcx
               :  142664:	mov    %r9,%rax
               :  142667:	nopw   0x0(%rax,%rax,1)
               :  142670:	vmovdqu64 (%rax),%ymm2
               :  142676:	vmovdqu64 0x20(%rax),%ymm1
               :  14267d:	vmovdqu64 0x40(%rax),%ymm0
               :  142684:	vmovdqu64 0x60(%rax),%ymm7
               :  14268b:	sub    $0xffffffffffffff80,%rax
               :  14268f:	vmovdqu64 %ymm7,0x60(%rcx)
               :  142696:	vmovdqu64 %ymm2,(%rcx)
               :  14269c:	vmovdqu64 %ymm1,0x20(%rcx)
               :  1426a3:	vmovdqu64 %ymm0,0x40(%rcx)
               :  1426aa:	sub    $0xffffffffffffff80,%rcx
               :  1426ae:	cmp    %rdi,%rax
               :  1426b1:	jne    142670 <rxq_copy_mprq_mbuf_v+0x1f90>
               :  1426b3:	mov    %r10,%rax
               :  1426b6:	and    $0xffffffffffffff80,%r10
               :  1426ba:	and    $0x7f,%eax
               :  1426bd:	lea    (%r9,%r10,1),%rcx
               :  1426c1:	add    %r10,%rsi
               :  1426c4:	jmpq   1417e8 <rxq_copy_mprq_mbuf_v+0x1108>
               :  1426c9:	movslq 0x58(%rdi),%rax
               :  1426cd:	cmp    $0xf,%eax
               :  1426d0:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  1426d6:	shl    $0x7,%rax
               :  1426da:	lea    0x78(%rsp),%rsi
               :  1426df:	add    0x5382a(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  1426e6:	mov    $0x1,%edx
               :  1426eb:	callq  *0x70(%rax)
               :  1426ee:	jmpq   141700 <rxq_copy_mprq_mbuf_v+0x1020>
               :  1426f3:	lock decw (%rcx)
               :  1426f7:	jne    14153f <rxq_copy_mprq_mbuf_v+0xe5f>
               :  1426fd:	movw   $0x1,0x10(%rax)
               :  142703:	mov    0x38(%rbx),%r14
               :  142707:	jmpq   1414b1 <rxq_copy_mprq_mbuf_v+0xdd1>
               :  14270c:	movslq 0x58(%r14),%rax
               :  142710:	cmp    $0xf,%eax
               :  142713:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142719:	shl    $0x7,%rax
               :  14271d:	lea    0x88(%rsp),%rsi
               :  142725:	add    0x537e4(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  14272c:	mov    $0x1,%edx
               :  142731:	mov    %r14,%rdi
               :  142734:	callq  *0x70(%rax)
               :  142737:	jmpq   1420b8 <rxq_copy_mprq_mbuf_v+0x19d8>
               :  14273c:	test   %r8,%r8
               :  14273f:	je     1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  142745:	vmovdqu64 -0x20(%rsi,%r8,1),%ymm0
               :  14274d:	vmovdqu64 %ymm0,-0x20(%rdx,%r8,1)
               :  142755:	jmpq   1412b0 <rxq_copy_mprq_mbuf_v+0xbd0>
               :  14275a:	lock decw (%rcx)
               :  14275e:	je     1416f0 <rxq_copy_mprq_mbuf_v+0x1010>
               :  142764:	vzeroupper 
               :  142767:	jmpq   141700 <rxq_copy_mprq_mbuf_v+0x1020>
               :  14276c:	lock decw (%rcx)
               :  142770:	jne    142764 <rxq_copy_mprq_mbuf_v+0x2084>
               :  142772:	jmpq   1418f6 <rxq_copy_mprq_mbuf_v+0x1216>
               :  142777:	movslq 0x58(%rdi),%rax
               :  14277b:	lea    0x40(%r14),%rcx
               :  14277f:	cmp    $0xf,%eax
               :  142782:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142788:	shl    $0x7,%rax
               :  14278c:	mov    %rcx,%rsi
               :  14278f:	add    0x5377a(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  142796:	mov    %rcx,0x30(%rsp)
               :  14279b:	callq  *0x70(%rax)
               :  14279e:	movl   $0x1,0x8(%r14)
               :  1427a6:	mov    0x30(%rsp),%rcx
               :  1427ab:	jmpq   141985 <rxq_copy_mprq_mbuf_v+0x12a5>
               :  1427b0:	vmovdqu64 %ymm0,(%rsi)
               :  1427b6:	vmovdqu64 0xa0(%rax,%r10,1),%ymm0
               :  1427be:	vmovdqu64 %ymm0,-0x20(%rsi,%r10,1)
               :  1427c6:	jmpq   140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  1427cb:	test   %rax,%rax
               :  1427ce:	je     140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  1427d4:	vmovdqu64 -0x20(%rcx,%rax,1),%ymm7
               :  1427dc:	vmovdqu64 %ymm7,-0x20(%rsi,%rax,1)
               :  1427e4:	jmpq   140b00 <rxq_copy_mprq_mbuf_v+0x420>
               :  1427e9:	vmovdqu64 (%rcx),%ymm0
               :  1427ef:	mov    %rax,%r10
               :  1427f2:	vmovdqu64 %ymm0,(%rsi)
               :  1427f8:	vmovdqu64 0x20(%rcx),%ymm1
               :  1427ff:	lea    -0x40(%r10),%rax
               :  142803:	vmovdqu64 %ymm1,0x20(%rsi)
               :  14280a:	add    $0x40,%rcx
               :  14280e:	add    $0x40,%rsi
               :  142812:	jmpq   1417f2 <rxq_copy_mprq_mbuf_v+0x1112>
               :  142817:	mov    (%rbx),%rax
               :  14281a:	movzwl 0x58(%rbx),%edx
               :  14281e:	add    $0xffffffffffffff80,%rax
               :  142822:	sub    %rdx,%rax
               :  142825:	movzwl 0x12(%rax),%ecx
               :  142829:	lea    0x12(%rax),%rdx
               :  14282d:	cmp    $0x1,%cx
               :  142831:	jne    142d10 <rxq_copy_mprq_mbuf_v+0x2630>
               :  142837:	movw   $0x0,0x12(%rax)
               :  14283d:	mov    $0x1,%edx
               :  142842:	movq   $0x0,0x40(%rax)
               :  14284a:	mov    %dx,0x14(%rax)
               :  14284e:	movw   $0x1,0x12(%rax)
               :  142854:	mov    %rax,0x80(%rsp)
               :  14285c:	mov    0x38(%rax),%rdi
               :  142860:	mov    %rdi,0x30(%rsp)
               :  142865:	vzeroupper 
               :  142868:	data16 lea 0x535d8(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  142870:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  142878:	mov    0x30(%rsp),%rdi
               :  14287d:	mov    0x44(%rdi),%ecx
               :  142880:	mov    (%rax),%eax
               :  142882:	test   %ecx,%ecx
               :  142884:	je     142d9a <rxq_copy_mprq_mbuf_v+0x26ba>
               :  14288a:	cmp    $0x7f,%eax
               :  14288d:	ja     142d9a <rxq_copy_mprq_mbuf_v+0x26ba>
               :  142893:	mov    %eax,%ecx
               :  142895:	imul   $0x2040,%rcx,%rcx
               :  14289c:	add    0x60(%rdi),%rcx
               :  1428a0:	je     142d9a <rxq_copy_mprq_mbuf_v+0x26ba>
               :  1428a6:	mov    0x4(%rcx),%esi
               :  1428a9:	test   %esi,%esi
               :  1428ab:	je     142d9a <rxq_copy_mprq_mbuf_v+0x26ba>
               :  1428b1:	mov    0x8(%rcx),%edx
               :  1428b4:	lea    0x1(%rdx),%eax
               :  1428b7:	cmp    %eax,%esi
               :  1428b9:	jb     142cd1 <rxq_copy_mprq_mbuf_v+0x25f1>
               :  1428bf:	mov    %eax,0x8(%rcx)
               :  1428c2:	lea    0x40(%rcx,%rdx,8),%rsi
               :  1428c7:	mov    0x80(%rsp),%rax
               :  1428cf:	mov    %rax,(%rsi)
               :  1428d2:	jmpq   1425d2 <rxq_copy_mprq_mbuf_v+0x1ef2>
               :  1428d7:	mov    %rdx,%r8
               :  1428da:	and    $0x1f,%r8d
               :  1428de:	je     1428f9 <rxq_copy_mprq_mbuf_v+0x2219>
               :  1428e0:	mov    $0x20,%ecx
               :  1428e5:	sub    %r8,%rcx
               :  1428e8:	vmovdqu64 %ymm0,(%rdx)
               :  1428ee:	lea    -0x20(%rdi,%r8,1),%rdi
               :  1428f3:	add    %rcx,%rsi
               :  1428f6:	add    %rcx,%rdx
               :  1428f9:	lea    -0x80(%rdi),%rcx
               :  1428fd:	and    $0xffffffffffffff80,%rcx
               :  142901:	lea    0x80(%rsi,%rcx,1),%r9
               :  142909:	mov    %rdx,%r8
               :  14290c:	mov    %rsi,%rcx
               :  14290f:	nop
               :  142910:	vmovdqu64 (%rcx),%ymm2
               :  142916:	vmovdqu64 0x20(%rcx),%ymm1
               :  14291d:	vmovdqu64 0x40(%rcx),%ymm0
               :  142924:	vmovdqu64 0x60(%rcx),%ymm5
               :  14292b:	sub    $0xffffffffffffff80,%rcx
               :  14292f:	vmovdqu64 %ymm5,0x60(%r8)
               :  142936:	vmovdqu64 %ymm2,(%r8)
               :  14293c:	vmovdqu64 %ymm1,0x20(%r8)
               :  142943:	vmovdqu64 %ymm0,0x40(%r8)
               :  14294a:	sub    $0xffffffffffffff80,%r8
               :  14294e:	cmp    %r9,%rcx
               :  142951:	jne    142910 <rxq_copy_mprq_mbuf_v+0x2230>
               :  142953:	mov    %rdi,%r8
               :  142956:	and    $0xffffffffffffff80,%rdi
               :  14295a:	and    $0x7f,%r8d
               :  14295e:	add    %rdi,%rsi
               :  142961:	add    %rdi,%rdx
               :  142964:	jmpq   14167b <rxq_copy_mprq_mbuf_v+0xf9b>
               :  142969:	movslq 0x58(%r13),%rax
               :  14296d:	cmp    $0xf,%eax
               :  142970:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142976:	shl    $0x7,%rax
               :  14297a:	add    0x5358f(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  142981:	lea    0x90(%rsp),%rsi
               :  142989:	mov    $0x1,%edx
               :  14298e:	mov    %r13,%rdi
               :  142991:	callq  *0x78(%rax)
               :  142994:	test   %eax,%eax
               :  142996:	js     142c96 <rxq_copy_mprq_mbuf_v+0x25b6>
               :  14299c:	mov    0x120(%r12),%r14
               :  1429a4:	je     1422c7 <rxq_copy_mprq_mbuf_v+0x1be7>
               :  1429aa:	jmpq   140de5 <rxq_copy_mprq_mbuf_v+0x705>
               :  1429af:	mov    0x54(%r12),%rax
               :  1429b4:	test   %rax,%rax
               :  1429b7:	je     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  1429bd:	cmp    %rax,%rdx
               :  1429c0:	jb     1429cd <rxq_copy_mprq_mbuf_v+0x22ed>
               :  1429c2:	cmp    0x5c(%r12),%rdx
               :  1429c7:	jb     142caf <rxq_copy_mprq_mbuf_v+0x25cf>
               :  1429cd:	mov    0x68(%r12),%rax
               :  1429d2:	test   %rax,%rax
               :  1429d5:	je     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  1429db:	cmp    %rax,%rdx
               :  1429de:	jb     1429f5 <rxq_copy_mprq_mbuf_v+0x2315>
               :  1429e0:	lea    0x68(%r12),%rcx
               :  1429e5:	mov    $0x1,%eax
               :  1429ea:	cmp    0x70(%r12),%rdx
               :  1429ef:	jb     142cb1 <rxq_copy_mprq_mbuf_v+0x25d1>
               :  1429f5:	mov    0x7c(%r12),%rax
               :  1429fa:	test   %rax,%rax
               :  1429fd:	je     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  142a03:	cmp    %rax,%rdx
               :  142a06:	jb     142a20 <rxq_copy_mprq_mbuf_v+0x2340>
               :  142a08:	lea    0x7c(%r12),%rcx
               :  142a0d:	mov    $0x2,%eax
               :  142a12:	cmp    0x84(%r12),%rdx
               :  142a1a:	jb     142cb1 <rxq_copy_mprq_mbuf_v+0x25d1>
               :  142a20:	mov    0x90(%r12),%rax
               :  142a28:	test   %rax,%rax
               :  142a2b:	je     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  142a31:	cmp    %rax,%rdx
               :  142a34:	jb     142a51 <rxq_copy_mprq_mbuf_v+0x2371>
               :  142a36:	lea    0x90(%r12),%rcx
               :  142a3e:	mov    $0x3,%eax
               :  142a43:	cmp    0x98(%r12),%rdx
               :  142a4b:	jb     142cb1 <rxq_copy_mprq_mbuf_v+0x25d1>
               :  142a51:	mov    0xa4(%r12),%rax
               :  142a59:	test   %rax,%rax
               :  142a5c:	je     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  142a62:	cmp    %rax,%rdx
               :  142a65:	jb     142a82 <rxq_copy_mprq_mbuf_v+0x23a2>
               :  142a67:	lea    0xa4(%r12),%rcx
               :  142a6f:	mov    $0x4,%eax
               :  142a74:	cmp    0xac(%r12),%rdx
               :  142a7c:	jb     142cb1 <rxq_copy_mprq_mbuf_v+0x25d1>
               :  142a82:	mov    0xb8(%r12),%rax
               :  142a8a:	test   %rax,%rax
               :  142a8d:	je     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  142a8f:	cmp    %rax,%rdx
               :  142a92:	jb     142aaf <rxq_copy_mprq_mbuf_v+0x23cf>
               :  142a94:	lea    0xb8(%r12),%rcx
               :  142a9c:	mov    $0x5,%eax
               :  142aa1:	cmp    0xc0(%r12),%rdx
               :  142aa9:	jb     142cb1 <rxq_copy_mprq_mbuf_v+0x25d1>
               :  142aaf:	mov    0xcc(%r12),%rax
               :  142ab7:	test   %rax,%rax
               :  142aba:	je     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  142abc:	cmp    %rax,%rdx
               :  142abf:	jb     142adc <rxq_copy_mprq_mbuf_v+0x23fc>
               :  142ac1:	lea    0xcc(%r12),%rcx
               :  142ac9:	mov    $0x6,%eax
               :  142ace:	cmp    0xd4(%r12),%rdx
               :  142ad6:	jb     142cb1 <rxq_copy_mprq_mbuf_v+0x25d1>
               :  142adc:	mov    0xe0(%r12),%rax
               :  142ae4:	cmp    %rax,%rdx
               :  142ae7:	jb     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  142ae9:	test   %rax,%rax
               :  142aec:	je     142b09 <rxq_copy_mprq_mbuf_v+0x2429>
               :  142aee:	lea    0xe0(%r12),%rcx
               :  142af6:	mov    $0x7,%eax
               :  142afb:	cmp    0xe8(%r12),%rdx
               :  142b03:	jb     142cb1 <rxq_copy_mprq_mbuf_v+0x25d1>
               :  142b09:	mov    0x130(%r12),%rsi
               :  142b11:	testb  $0x7c,0x2(%r12)
               :  142b17:	cmove  0x128(%r12),%rsi
               :  142b20:	lea    0x44(%r12),%rdi
               :  142b25:	vzeroupper 
               :  142b28:	callq  a250 <mlx5_mr_mempool2mr_bh@plt>
               :  142b2d:	jmpq   1423ae <rxq_copy_mprq_mbuf_v+0x1cce>
               :  142b32:	lock decw (%rcx)
               :  142b36:	je     1420a8 <rxq_copy_mprq_mbuf_v+0x19c8>
               :  142b3c:	vzeroupper 
               :  142b3f:	jmpq   1420b8 <rxq_copy_mprq_mbuf_v+0x19d8>
               :  142b44:	lock decw (%rcx)
               :  142b48:	jne    142b3c <rxq_copy_mprq_mbuf_v+0x245c>
               :  142b4a:	jmpq   141ff6 <rxq_copy_mprq_mbuf_v+0x1916>
               :  142b4f:	movslq 0x58(%r14),%rax
               :  142b53:	mov    %rcx,0x20(%rsp)
               :  142b58:	lea    0x40(%rcx),%rsi
               :  142b5c:	cmp    $0xf,%eax
               :  142b5f:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142b65:	shl    $0x7,%rax
               :  142b69:	add    0x533a0(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  142b70:	mov    %r14,%rdi
               :  142b73:	mov    %rsi,0x28(%rsp)
               :  142b78:	callq  *0x70(%rax)
               :  142b7b:	mov    0x20(%rsp),%rcx
               :  142b80:	mov    0x28(%rsp),%rsi
               :  142b85:	movl   $0x1,0x8(%rcx)
               :  142b8c:	jmpq   142079 <rxq_copy_mprq_mbuf_v+0x1999>
               :  142b91:	movabs $0x2000000000000000,%rsi
               :  142b9b:	mov    %rsi,0x18(%rbx)
               :  142b9f:	mov    0x50(%rbx),%rax
               :  142ba3:	movzwl 0x10(%rax),%esi
               :  142ba7:	lea    0x10(%rax),%rdx
               :  142bab:	cmp    $0x1,%si
               :  142baf:	je     141f75 <rxq_copy_mprq_mbuf_v+0x1895>
               :  142bb5:	lock decw (%rdx)
               :  142bb9:	jne    14153f <rxq_copy_mprq_mbuf_v+0xe5f>
               :  142bbf:	movw   $0x1,0x10(%rax)
               :  142bc5:	vzeroupper 
               :  142bc8:	jmpq   141f78 <rxq_copy_mprq_mbuf_v+0x1898>
               :  142bcd:	nopl   (%rax)
               :  142bd0:	mov    (%rbx),%rax
               :  142bd3:	movzwl 0x58(%rbx),%edx
               :  142bd7:	add    $0xffffffffffffff80,%rax
               :  142bdb:	sub    %rdx,%rax
               :  142bde:	movzwl 0x12(%rax),%esi
               :  142be2:	lea    0x12(%rax),%rdx
               :  142be6:	cmp    $0x1,%si
               :  142bea:	jne    142d88 <rxq_copy_mprq_mbuf_v+0x26a8>
               :  142bf0:	movw   $0x0,0x12(%rax)
               :  142bf6:	mov    $0x1,%esi
               :  142bfb:	movq   $0x0,0x40(%rax)
               :  142c03:	mov    %si,0x14(%rax)
               :  142c07:	movw   $0x1,0x12(%rax)
               :  142c0d:	mov    0x38(%rax),%rdi
               :  142c11:	mov    %rax,0x90(%rsp)
               :  142c19:	mov    %rdi,0x28(%rsp)
               :  142c1e:	vzeroupper 
               :  142c21:	data16 lea 0x5321f(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :  142c29:	data16 data16 callq a700 <__tls_get_addr@plt>
               :  142c31:	mov    0x28(%rsp),%rdi
               :  142c36:	mov    0x44(%rdi),%r8d
               :  142c3a:	mov    (%rax),%eax
               :  142c3c:	test   %r8d,%r8d
               :  142c3f:	je     142d5b <rxq_copy_mprq_mbuf_v+0x267b>
               :  142c45:	cmp    $0x7f,%eax
               :  142c48:	ja     142d5b <rxq_copy_mprq_mbuf_v+0x267b>
               :  142c4e:	mov    %eax,%r8d
               :  142c51:	imul   $0x2040,%r8,%r8
               :  142c58:	add    0x60(%rdi),%r8
               :  142c5c:	je     142d5b <rxq_copy_mprq_mbuf_v+0x267b>
               :  142c62:	mov    0x4(%r8),%esi
               :  142c66:	test   %esi,%esi
               :  142c68:	je     142d5b <rxq_copy_mprq_mbuf_v+0x267b>
               :  142c6e:	mov    0x8(%r8),%edx
               :  142c72:	lea    0x1(%rdx),%eax
               :  142c75:	cmp    %eax,%esi
               :  142c77:	jb     142d1b <rxq_copy_mprq_mbuf_v+0x263b>
               :  142c7d:	mov    %eax,0x8(%r8)
               :  142c81:	lea    0x40(%r8,%rdx,8),%rsi
               :  142c86:	mov    0x90(%rsp),%rax
               :  142c8e:	mov    %rax,(%rsi)
               :  142c91:	jmpq   142536 <rxq_copy_mprq_mbuf_v+0x1e56>
               :  142c96:	test   %rbx,%rbx
               :  142c99:	je     142ca2 <rxq_copy_mprq_mbuf_v+0x25c2>
               :  142c9b:	movl   $0x0,0x8(%rbx)
               :  142ca2:	mov    0x120(%r12),%r14
               :  142caa:	jmpq   140de5 <rxq_copy_mprq_mbuf_v+0x705>
               :  142caf:	xor    %eax,%eax
               :  142cb1:	mov    %ax,0x50(%r12)
               :  142cb7:	mov    0x10(%rcx),%eax
               :  142cba:	jmpq   1423a2 <rxq_copy_mprq_mbuf_v+0x1cc2>
               :  142cbf:	lock decw (%rdx)
               :  142cc3:	je     1425c2 <rxq_copy_mprq_mbuf_v+0x1ee2>
               :  142cc9:	vzeroupper 
               :  142ccc:	jmpq   1425d2 <rxq_copy_mprq_mbuf_v+0x1ef2>
               :  142cd1:	movslq 0x58(%rdi),%rax
               :  142cd5:	mov    %rcx,0x28(%rsp)
               :  142cda:	lea    0x40(%rcx),%rsi
               :  142cde:	cmp    $0xf,%eax
               :  142ce1:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142ce7:	shl    $0x7,%rax
               :  142ceb:	add    0x5321e(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  142cf2:	mov    %rsi,0x30(%rsp)
               :  142cf7:	callq  *0x70(%rax)
               :  142cfa:	mov    0x28(%rsp),%rcx
               :  142cff:	mov    0x30(%rsp),%rsi
               :  142d04:	movl   $0x1,0x8(%rcx)
               :  142d0b:	jmpq   1428c7 <rxq_copy_mprq_mbuf_v+0x21e7>
               :  142d10:	lock decw (%rdx)
               :  142d14:	jne    142cc9 <rxq_copy_mprq_mbuf_v+0x25e9>
               :  142d16:	jmpq   14283d <rxq_copy_mprq_mbuf_v+0x215d>
               :  142d1b:	movslq 0x58(%rdi),%rax
               :  142d1f:	mov    %r8,0x20(%rsp)
               :  142d24:	lea    0x40(%r8),%rsi
               :  142d28:	cmp    $0xf,%eax
               :  142d2b:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142d31:	shl    $0x7,%rax
               :  142d35:	add    0x531d4(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  142d3c:	mov    %rsi,0x28(%rsp)
               :  142d41:	callq  *0x70(%rax)
               :  142d44:	mov    0x20(%rsp),%r8
               :  142d49:	mov    0x28(%rsp),%rsi
               :  142d4e:	movl   $0x1,0x8(%r8)
               :  142d56:	jmpq   142c86 <rxq_copy_mprq_mbuf_v+0x25a6>
               :  142d5b:	movslq 0x58(%rdi),%rax
               :  142d5f:	cmp    $0xf,%eax
               :  142d62:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142d68:	shl    $0x7,%rax
               :  142d6c:	lea    0x90(%rsp),%rsi
               :  142d74:	add    0x53195(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  142d7b:	mov    $0x1,%edx
               :  142d80:	callq  *0x70(%rax)
               :  142d83:	jmpq   142536 <rxq_copy_mprq_mbuf_v+0x1e56>
               :  142d88:	lock decw (%rdx)
               :  142d8c:	je     142bf6 <rxq_copy_mprq_mbuf_v+0x2516>
               :  142d92:	vzeroupper 
               :  142d95:	jmpq   142536 <rxq_copy_mprq_mbuf_v+0x1e56>
               :  142d9a:	movslq 0x58(%rdi),%rax
               :  142d9e:	cmp    $0xf,%eax
               :  142da1:	ja     18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142da7:	shl    $0x7,%rax
               :  142dab:	lea    0x80(%rsp),%rsi
               :  142db3:	add    0x53156(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :  142dba:	mov    $0x1,%edx
               :  142dbf:	callq  *0x70(%rax)
               :  142dc2:	jmpq   1425d2 <rxq_copy_mprq_mbuf_v+0x1ef2>
               :  142dc7:	lock decw (%rax)
               :  142dcb:	jne    142d92 <rxq_copy_mprq_mbuf_v+0x26b2>
               :  142dcd:	jmpq   142526 <rxq_copy_mprq_mbuf_v+0x1e46>
               :  142dd2:	callq  aaf0 <__stack_chk_fail@plt>
               :  142dd7:	jmpq   18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142ddc:	jmpq   18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142de1:	jmpq   18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142de6:	jmpq   18983 <rxq_copy_mprq_mbuf_v.cold>
               :  142deb:	nopl   0x0(%rax,%rax,1)
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000004ecd0 <__flow_dv_create_domain_policy_acts>: /* __flow_dv_create_domain_policy_acts total:      1 3.0e-05 */
               :   4ecd0:	push   %r15
               :   4ecd2:	mov    %rsi,%r15
               :   4ecd5:	push   %r14
               :   4ecd7:	push   %r13
               :   4ecd9:	push   %r12
               :   4ecdb:	mov    %rdi,%r12
               :   4ecde:	push   %rbp
               :   4ecdf:	push   %rbx
               :   4ece0:	sub    $0x568,%rsp
               :   4ece7:	mov    %rcx,0x58(%rsp)
               :   4ecec:	mov    %rdx,0x48(%rsp)
               :   4ecf1:	mov    %r8d,0xc(%rsp)
               :   4ecf6:	mov    %r9,0x40(%rsp)
               :   4ecfb:	lea    0x130(%rsp),%rbp
               :   4ed03:	mov    %fs:0x28,%rax
               :   4ed0c:	mov    %rax,0x558(%rsp)
               :   4ed14:	xor    %eax,%eax
               :   4ed16:	mov    0x30(%rdi),%rax
               :   4ed1a:	cmp    $0x1,%r8d
               :   4ed1e:	mov    0x60(%rax),%rax
               :   4ed22:	sete   0x33(%rsp)
               :   4ed27:	cmp    $0x2,%r8d
               :   4ed2b:	sete   0x53(%rsp)
               :   4ed30:	mov    %rax,0x38(%rsp)
               :   4ed35:	xor    %ecx,%ecx
               :   4ed37:	xor    %eax,%eax
               :   4ed39:	mov    %eax,%edx
               :   4ed3b:	add    $0x20,%eax
               :   4ed3e:	mov    %rcx,0x0(%rbp,%rdx,1)
               :   4ed43:	mov    %rcx,0x8(%rbp,%rdx,1)
               :   4ed48:	mov    %rcx,0x10(%rbp,%rdx,1)
               :   4ed4d:	mov    %rcx,0x18(%rbp,%rdx,1)
               :   4ed52:	cmp    $0x40,%eax
               :   4ed55:	jb     4ed39 <__flow_dv_create_domain_policy_acts+0x69>
               :   4ed57:	add    %rbp,%rax
               :   4ed5a:	movl   $0x0,(%rax)
               :   4ed60:	movb   $0x0,0x4(%rax)
               :   4ed64:	lea    0x2c0(%rsp),%rdi
               :   4ed6c:	mov    $0x298,%edx
               :   4ed71:	xor    %esi,%esi
               :   4ed73:	callq  a0e0 <memset@plt>
               :   4ed78:	vpxor  %xmm0,%xmm0,%xmm0
               :   4ed7c:	vmovaps %xmm0,0xd0(%rsp)
               :   4ed85:	vmovaps %xmm0,0xe0(%rsp)
               :   4ed8e:	vmovaps %xmm0,0xf0(%rsp)
               :   4ed97:	lea    0x180(%rsp),%rbx
               :   4ed9f:	xor    %ecx,%ecx
               :   4eda1:	xor    %eax,%eax
               :   4eda3:	mov    %eax,%edx
               :   4eda5:	mov    %rcx,(%rbx,%rdx,1)
               :   4eda9:	mov    %rcx,0x8(%rbx,%rdx,1)
               :   4edae:	mov    %rcx,0x10(%rbx,%rdx,1)
               :   4edb3:	mov    %rcx,0x18(%rbx,%rdx,1)
               :   4edb8:	add    $0x20,%eax
               :   4edbb:	jb     4eda3 <__flow_dv_create_domain_policy_acts+0xd3>
               :   4edbd:	add    %rbx,%rax
               :   4edc0:	xor    %esi,%esi
               :   4edc2:	mov    %si,0xc(%rax)
               :   4edc6:	movzbl 0x33(%rsp),%esi
               :   4edcb:	movq   $0x0,(%rax)
               :   4edd2:	movl   $0x0,0x8(%rax)
               :   4edd9:	cmpl   $0x2,0xc(%rsp)
               :   4edde:	movb   $0x0,0xe(%rax)
               :   4ede2:	mov    $0x2,%eax
               :   4ede7:	cmovne %esi,%eax
               :   4edea:	xor    %r13d,%r13d
               :   4eded:	mov    %al,0x1ac(%rsp)
               :   4edf4:	lea    0xd0(%rsp),%rax
               :   4edfc:	mov    %rax,0x350(%rsp)
               :   4ee04:	lea    0x90(%r15),%rax
               :   4ee0b:	mov    %rbp,0x538(%rsp)
               :   4ee13:	movb   $0x1,0x2e0(%rsp)
               :   4ee1b:	mov    %rax,0x18(%rsp)
               :   4ee20:	movq   $0x0,0x10(%rsp)
               :   4ee29:	mov    %rbx,(%rsp)
               :   4ee2d:	mov    %r13d,0x34(%rsp)
               :   4ee32:	mov    %r13d,0x54(%rsp)
               :   4ee37:	lea    0x11ba82(%rip),%r14        # 16a8c0 <srtcm.62771+0x4b10>
               :   4ee3e:	cmp    $0x2,%r13
               :   4ee42:	je     4ee80 <__flow_dv_create_domain_policy_acts+0x1b0>
               :   4ee44:	mov    0x18(%rsp),%rax
               :   4ee49:	mov    %rax,0x10(%rsp)
               :   4ee4e:	cmp    $0x1,%r13d
               :   4ee52:	je     4f4b8 <__flow_dv_create_domain_policy_acts+0x7e8>
               :   4ee58:	mov    0x34(%rsp),%ecx
               :   4ee5c:	test   %ecx,%ecx
               :   4ee5e:	jne    4ee80 <__flow_dv_create_domain_policy_acts+0x1b0>
               :   4ee60:	testb  $0x4,0x1(%r15)
               :   4ee65:	je     4eea0 <__flow_dv_create_domain_policy_acts+0x1d0>
               :   4ee67:	inc    %r13
               :   4ee6a:	addq   $0x30,0x18(%rsp)
               :   4ee70:	mov    %r13d,0x34(%rsp)
               :   4ee75:	mov    %r13d,0x54(%rsp)
               :   4ee7a:	cmp    $0x2,%r13
               :   4ee7e:	jne    4ee44 <__flow_dv_create_domain_policy_acts+0x174>
               :   4ee80:	mov    0x48(%rsp),%rax
               :   4ee85:	mov    (%rax,%r13,8),%rbx
               :   4ee89:	test   %rbx,%rbx
               :   4ee8c:	jne    4eeae <__flow_dv_create_domain_policy_acts+0x1de>
               :   4ee8e:	xchg   %ax,%ax
               :   4ee90:	cmpl   $0x2,0x34(%rsp)
               :   4ee95:	jne    4ee67 <__flow_dv_create_domain_policy_acts+0x197>
               :   4ee97:	xor    %eax,%eax
               :   4ee99:	jmpq   4f48a <__flow_dv_create_domain_policy_acts+0x7ba>
               :   4ee9e:	xchg   %ax,%ax
               :   4eea0:	mov    0x48(%rsp),%rax
               :   4eea5:	mov    (%rax,%r13,8),%rbx
               :   4eea9:	test   %rbx,%rbx
               :   4eeac:	je     4ee67 <__flow_dv_create_domain_policy_acts+0x197>
               :   4eeae:	mov    %r13,0x20(%rsp)
               :   4eeb3:	mov    0x10(%rsp),%r13
               :   4eeb8:	mov    %r15,0x28(%rsp)
               :   4eebd:	xor    %ebp,%ebp
               :   4eebf:	mov    %rbx,%r15
               :   4eec2:	nopw   0x0(%rax,%rax,1)
               :   4eec8:	mov    (%r15),%eax
               :   4eecb:	test   %eax,%eax
               :   4eecd:	je     4f680 <__flow_dv_create_domain_policy_acts+0x9b0>
               :   4eed3:	sub    $0x3,%eax
               :   4eed6:	cmp    $0x34,%eax
               :   4eed9:	ja     4f44c <__flow_dv_create_domain_policy_acts+0x77c>
               :   4eedf:	movslq (%r14,%rax,4),%rax
               :   4eee3:	add    %r14,%rax
               :   4eee6:	notrack jmpq *%rax
               :   4eee9:	cmpq   $0x2,0x20(%rsp)
               :   4eeef:	je     4f9a2 <__flow_dv_create_domain_policy_acts+0xcd2>
               :   4eef5:	mov    0x8(%r15),%rdx
               :   4eef9:	mov    0x58(%rsp),%rcx
               :   4eefe:	mov    (%rsp),%rsi
               :   4ef02:	lea    0x90(%rsp),%r8
               :   4ef0a:	mov    %r12,%rdi
               :   4ef0d:	callq  49ec0 <flow_dv_convert_action_modify_field.isra.0>
               :   4ef12:	test   %eax,%eax
               :   4ef14:	jne    4f9ce <__flow_dv_create_domain_policy_acts+0xcfe>
               :   4ef1a:	cmpb   $0x0,0x1ad(%rsp)
               :   4ef22:	je     4fad6 <__flow_dv_create_domain_policy_acts+0xe06>
               :   4ef28:	movabs $0x8000000000,%rax
               :   4ef32:	or     %rax,%rbp
               :   4ef35:	nopl   (%rax)
               :   4ef38:	movabs $0x8010000000,%rax
               :   4ef42:	test   %rax,%rbp
               :   4ef45:	jne    4efa0 <__flow_dv_create_domain_policy_acts+0x2d0>
               :   4ef47:	add    $0x10,%r15
               :   4ef4b:	jmpq   4eec8 <__flow_dv_create_domain_policy_acts+0x1f8>
               :   4ef50:	cmpq   $0x2,0x20(%rsp)
               :   4ef56:	je     4f94a <__flow_dv_create_domain_policy_acts+0xc7a>
               :   4ef5c:	mov    0x8(%r15),%rdx
               :   4ef60:	mov    (%rsp),%rsi
               :   4ef64:	lea    0x90(%rsp),%rcx
               :   4ef6c:	mov    %r12,%rdi
               :   4ef6f:	callq  42f30 <flow_dv_convert_action_set_tag>
               :   4ef74:	test   %eax,%eax
               :   4ef76:	jne    4f976 <__flow_dv_create_domain_policy_acts+0xca6>
               :   4ef7c:	cmpb   $0x0,0x1ad(%rsp)
               :   4ef84:	je     4fa26 <__flow_dv_create_domain_policy_acts+0xd56>
               :   4ef8a:	or     $0x10000000,%rbp
               :   4ef91:	movabs $0x8010000000,%rax
               :   4ef9b:	test   %rax,%rbp
               :   4ef9e:	je     4ef47 <__flow_dv_create_domain_policy_acts+0x277>
               :   4efa0:	mov    0x30(%r12),%rdi
               :   4efa5:	mov    (%rsp),%rsi
               :   4efa9:	lea    0x538(%rsp),%rcx
               :   4efb1:	lea    0x2e8(%rsp),%rdx
               :   4efb9:	lea    0x90(%rsp),%r8
               :   4efc1:	movl   $0x1,0x2e8(%rsp)
               :   4efcc:	callq  3e700 <flow_dv_modify_hdr_resource_register.isra.0>
               :   4efd1:	test   %eax,%eax
               :   4efd3:	jne    4f73a <__flow_dv_create_domain_policy_acts+0xa6a>
               :   4efd9:	mov    0x538(%rsp),%rax
               :   4efe1:	mov    0x28(%rax),%rax
               :   4efe5:	mov    %rax,0x8(%r13)
               :   4efe9:	jmpq   4ef47 <__flow_dv_create_domain_policy_acts+0x277>
               :   4efee:	movl   $0x0,0x8c(%rsp)
               :   4eff9:	mov    0x8(%r15),%rax
               :   4effd:	mov    0x38(%rsp),%rdi
               :   4f002:	mov    (%rax),%esi
               :   4f004:	lea    0x8c(%rsp),%rdx
               :   4f00c:	callq  357d0 <mlx5_flow_meter_find>
               :   4f011:	mov    %rax,%rbx
               :   4f014:	test   %rax,%rax
               :   4f017:	je     4f8f2 <__flow_dv_create_domain_policy_acts+0xc22>
               :   4f01d:	testb  $0x1,0x15(%rax)
               :   4f021:	jne    4f91e <__flow_dv_create_domain_policy_acts+0xc4e>
               :   4f027:	mov    0x4(%rax),%esi
               :   4f02a:	xor    %edx,%edx
               :   4f02c:	mov    %r12,%rdi
               :   4f02f:	callq  34b50 <mlx5_flow_meter_policy_find>
               :   4f034:	mov    %rax,%r9
               :   4f037:	mov    0x30(%rbx),%eax
               :   4f03a:	test   %eax,%eax
               :   4f03c:	jne    4f4e0 <__flow_dv_create_domain_policy_acts+0x810>
               :   4f042:	cmpq   $0x1,0x20(%rsp)
               :   4f048:	je     4f588 <__flow_dv_create_domain_policy_acts+0x8b8>
               :   4f04e:	movb   $0x7,0x10(%r13)
               :   4f053:	mov    (%rbx),%eax
               :   4f055:	movq   $0x0,0x20(%r13)
               :   4f05d:	mov    %eax,0x18(%r13)
               :   4f061:	mov    0x28(%rsp),%rax
               :   4f066:	orb    $0x20,(%rax)
               :   4f069:	testb  $0x8,0x1(%r9)
               :   4f06e:	je     4f074 <__flow_dv_create_domain_policy_acts+0x3a4>
               :   4f070:	orb    $0x8,0x1(%rax)
               :   4f074:	movzbl (%r9),%eax
               :   4f078:	mov    0x28(%rsp),%rdi
               :   4f07d:	and    $0xffffff80,%eax
               :   4f080:	mov    %eax,%edx
               :   4f082:	movzbl (%rdi),%eax
               :   4f085:	mov    %al,0x60(%rsp)
               :   4f089:	and    $0x7f,%eax
               :   4f08c:	or     %edx,%eax
               :   4f08e:	mov    %al,(%rdi)
               :   4f090:	movabs $0x10000000000,%rax
               :   4f09a:	or     %rax,%rbp
               :   4f09d:	jmpq   4ef38 <__flow_dv_create_domain_policy_acts+0x268>
               :   4f0a2:	cmpq   $0x2,0x20(%rsp)
               :   4f0a8:	movl   $0x0,0x8c(%rsp)
               :   4f0b3:	je     4f7be <__flow_dv_create_domain_policy_acts+0xaee>
               :   4f0b9:	lea    0x90(%rsp),%rbx
               :   4f0c1:	vpxor  %xmm0,%xmm0,%xmm0
               :   4f0c5:	lea    0x100(%rsp),%rax
               :   4f0cd:	lea    0x8c(%rsp),%rdx
               :   4f0d5:	lea    0x30(%r12),%rdi
               :   4f0da:	mov    %rbx,%rcx
               :   4f0dd:	mov    %r15,%rsi
               :   4f0e0:	vmovaps %xmm0,0x100(%rsp)
               :   4f0e9:	vmovaps %xmm0,0x110(%rsp)
               :   4f0f2:	vmovaps %xmm0,0x120(%rsp)
               :   4f0fb:	mov    %rax,0x60(%rsp)
               :   4f100:	callq  3d370 <flow_dv_translate_action_port_id.isra.0>
               :   4f105:	test   %eax,%eax
               :   4f107:	vpxor  %xmm0,%xmm0,%xmm0
               :   4f10b:	jne    4f7ea <__flow_dv_create_domain_policy_acts+0xb1a>
               :   4f111:	mov    0x8c(%rsp),%eax
               :   4f118:	mov    0x60(%rsp),%rdi
               :   4f11d:	mov    %eax,0x128(%rsp)
               :   4f124:	mov    0x30(%r12),%rax
               :   4f129:	lea    0xb0(%rsp),%rsi
               :   4f131:	mov    0x60(%rax),%rax
               :   4f135:	vmovaps %xmm0,0xc0(%rsp)
               :   4f13e:	mov    0x8(%rax),%rax
               :   4f142:	mov    %rdi,0xc0(%rsp)
               :   4f14a:	mov    0x420(%rax),%rdi
               :   4f151:	vmovaps %xmm0,0xb0(%rsp)
               :   4f15a:	mov    %rbx,0xb8(%rsp)
               :   4f162:	callq  a380 <mlx5_list_register@plt>
               :   4f167:	test   %rax,%rax
               :   4f16a:	je     4f710 <__flow_dv_create_domain_policy_acts+0xa40>
               :   4f170:	mov    %rax,0x350(%rsp)
               :   4f178:	mov    0x538(%rsp),%rdx
               :   4f180:	mov    0x2c(%rax),%eax
               :   4f183:	mov    %eax,0x1c(%rdx)
               :   4f186:	mov    %eax,0x18(%r13)
               :   4f18a:	movb   $0x3,0x10(%r13)
               :   4f18f:	or     $0x40,%rbp
               :   4f193:	jmpq   4ef38 <__flow_dv_create_domain_policy_acts+0x268>
               :   4f198:	cmpq   $0x2,0x20(%rsp)
               :   4f19e:	je     4f816 <__flow_dv_create_domain_policy_acts+0xb46>
               :   4f1a4:	lea    0x90(%rsp),%r8
               :   4f1ac:	xor    %edx,%edx
               :   4f1ae:	xor    %esi,%esi
               :   4f1b0:	mov    %r15,%rcx
               :   4f1b3:	mov    $0x3,%edi
               :   4f1b8:	mov    %r8,0x60(%rsp)
               :   4f1bd:	callq  a410 <rte_flow_conv@plt>
               :   4f1c2:	test   %eax,%eax
               :   4f1c4:	mov    0x60(%rsp),%r8
               :   4f1c9:	jle    4f792 <__flow_dv_create_domain_policy_acts+0xac2>
               :   4f1cf:	movslq %eax,%rbx
               :   4f1d2:	xor    %edx,%edx
               :   4f1d4:	mov    %rbx,%rsi
               :   4f1d7:	mov    $0xffffffff,%ecx
               :   4f1dc:	mov    $0x4,%edi
               :   4f1e1:	mov    %r8,0x60(%rsp)
               :   4f1e6:	callq  9ff0 <mlx5_malloc@plt>
               :   4f1eb:	test   %rax,%rax
               :   4f1ee:	mov    %rax,0x18(%r13)
               :   4f1f2:	mov    0x60(%rsp),%r8
               :   4f1f7:	mov    %rax,%rsi
               :   4f1fa:	je     4fa7e <__flow_dv_create_domain_policy_acts+0xdae>
               :   4f200:	mov    %r15,%rcx
               :   4f203:	mov    %rbx,%rdx
               :   4f206:	mov    $0x3,%edi
               :   4f20b:	callq  a410 <rte_flow_conv@plt>
               :   4f210:	test   %eax,%eax
               :   4f212:	js     4faaa <__flow_dv_create_domain_policy_acts+0xdda>
               :   4f218:	movb   $0x6,0x10(%r13)
               :   4f21d:	or     $0x4,%rbp
               :   4f221:	jmpq   4ef38 <__flow_dv_create_domain_policy_acts+0x268>
               :   4f226:	mov    0x38(%rsp),%rax
               :   4f22b:	mov    0xc(%rsp),%ebx
               :   4f22f:	mov    0x8(%rax),%rax
               :   4f233:	mov    0x7a8(%rax),%rax
               :   4f23a:	lea    (%rax,%rbx,8),%r11
               :   4f23e:	mov    0x40e0(%r11),%rax
               :   4f245:	test   %rax,%rax
               :   4f248:	je     4f690 <__flow_dv_create_domain_policy_acts+0x9c0>
               :   4f24e:	sub    $0x20,%rax
               :   4f252:	cmpq   $0x2,0x20(%rsp)
               :   4f258:	mov    0x30(%rax),%rax
               :   4f25c:	je     4f570 <__flow_dv_create_domain_policy_acts+0x8a0>
               :   4f262:	mov    %rax,0x18(%r13,%rbx,8)
               :   4f267:	movb   $0x4,0x10(%r13)
               :   4f26c:	or     $0x1,%rbp
               :   4f270:	jmpq   4ef38 <__flow_dv_create_domain_policy_acts+0x268>
               :   4f275:	cmpq   $0x2,0x20(%rsp)
               :   4f27b:	je     4f766 <__flow_dv_create_domain_policy_acts+0xa96>
               :   4f281:	mov    0x8(%r15),%rax
               :   4f285:	mov    0x538(%rsp),%rdx
               :   4f28d:	movzwl (%rax),%eax
               :   4f290:	movb   $0x1,0x10(%r13)
               :   4f295:	mov    %ax,0x18(%r13)
               :   4f29a:	or     $0x2,%rbp
               :   4f29e:	movzbl 0x1b(%rdx),%eax
               :   4f2a2:	and    $0xf,%eax
               :   4f2a5:	or     $0x10,%eax
               :   4f2a8:	mov    %al,0x1b(%rdx)
               :   4f2ab:	mov    0x28(%rsp),%rax
               :   4f2b0:	orb    $0x10,(%rax)
               :   4f2b3:	jmpq   4ef38 <__flow_dv_create_domain_policy_acts+0x268>
               :   4f2b8:	mov    0x8(%r15),%rax
               :   4f2bc:	mov    (%rax),%esi
               :   4f2be:	xor    %eax,%eax
               :   4f2c0:	cmp    $0xffffff,%esi
               :   4f2c6:	setne  %al
               :   4f2c9:	add    %eax,%esi
               :   4f2cb:	bswap  %esi
               :   4f2cd:	shr    $0x8,%esi
               :   4f2d0:	cmpq   $0x2,0x20(%rsp)
               :   4f2d6:	je     4f89a <__flow_dv_create_domain_policy_acts+0xbca>
               :   4f2dc:	mov    0x30(%r12),%rdi
               :   4f2e1:	lea    0x538(%rsp),%rcx
               :   4f2e9:	lea    0x348(%rsp),%rdx
               :   4f2f1:	lea    0x90(%rsp),%r8
               :   4f2f9:	callq  3e580 <flow_dv_tag_resource_register.isra.0>
               :   4f2fe:	test   %eax,%eax
               :   4f300:	jne    4f8c6 <__flow_dv_create_domain_policy_acts+0xbf6>
               :   4f306:	mov    0x538(%rsp),%rax
               :   4f30e:	or     $0x10,%rbp
               :   4f312:	mov    0x38(%rax),%eax
               :   4f315:	mov    %eax,0x0(%r13)
               :   4f319:	mov    0x28(%rsp),%rax
               :   4f31e:	orb    $0x8,0x1(%rax)
               :   4f322:	jmpq   4ef38 <__flow_dv_create_domain_policy_acts+0x268>
               :   4f327:	movl   $0x0,0xb0(%rsp)
               :   4f332:	mov    0x38(%rsp),%rax
               :   4f337:	movzbl 0x53(%rsp),%edi
               :   4f33c:	cmpb   $0x0,0x3169(%rax)
               :   4f343:	setne  %al
               :   4f346:	lea    (%rdi,%rdi,1),%edx
               :   4f349:	movzbl 0x2e1(%rsp),%edi
               :   4f351:	or     0x2e0(%rsp),%dl
               :   4f358:	shl    $0x2,%eax
               :   4f35b:	or     %edx,%eax
               :   4f35d:	lea    0x0(,%rdi,8),%edx
               :   4f364:	and    $0x10,%edx
               :   4f367:	or     %edx,%eax
               :   4f369:	movzbl 0x100(%rsp),%edx
               :   4f371:	and    $0x3f,%eax
               :   4f374:	and    $0xffffffc0,%edx
               :   4f377:	or     %edx,%eax
               :   4f379:	mov    %al,0x100(%rsp)
               :   4f380:	mov    0xc(%rsp),%ebx
               :   4f384:	mov    0x28(%rsp),%rax
               :   4f389:	cmpq   $0x2,0x20(%rsp)
               :   4f38f:	mov    0x110(%rax,%rbx,8),%rax
               :   4f397:	mov    (%rax),%rax
               :   4f39a:	mov    %rax,0x60(%rsp)
               :   4f39f:	je     4f842 <__flow_dv_create_domain_policy_acts+0xb72>
               :   4f3a5:	mov    0x8(%r15),%rax
               :   4f3a9:	lea    0x90(%rsp),%r9
               :   4f3b1:	mov    (%rax),%edx
               :   4f3b3:	xor    %esi,%esi
               :   4f3b5:	lea    0xb0(%rsp),%rcx
               :   4f3bd:	lea    0x100(%rsp),%r8
               :   4f3c5:	mov    %r12,%rdi
               :   4f3c8:	mov    %r9,0x70(%rsp)
               :   4f3cd:	mov    %edx,0x68(%rsp)
               :   4f3d1:	callq  d983 <mlx5_flow_group_to_table>
               :   4f3d6:	test   %eax,%eax
               :   4f3d8:	mov    0x68(%rsp),%edx
               :   4f3dc:	mov    0x70(%rsp),%r9
               :   4f3e1:	jne    4f86e <__flow_dv_create_domain_policy_acts+0xb9e>
               :   4f3e7:	push   %r9
               :   4f3e9:	mov    %r12,%rdi
               :   4f3ec:	xor    %r9d,%r9d
     1 3.0e-05 :   4f3ef:	pushq  $0x0
               :   4f3f1:	pushq  $0x0
               :   4f3f3:	push   %rdx
               :   4f3f4:	movzbl 0x53(%rsp),%edx
               :   4f3f9:	mov    0xd0(%rsp),%esi
               :   4f400:	movzbl 0x300(%rsp),%r8d
               :   4f409:	movzbl 0x73(%rsp),%ecx
               :   4f40e:	callq  4e250 <flow_dv_tbl_resource_get>
               :   4f413:	movslq 0x74(%rsp),%rdx
               :   4f418:	mov    0x80(%rsp),%rsi
               :   4f420:	add    $0x20,%rsp
               :   4f424:	mov    %rax,0x20(%rsi,%rdx,8)
               :   4f429:	test   %rax,%rax
               :   4f42c:	je     4fa52 <__flow_dv_create_domain_policy_acts+0xd82>
               :   4f432:	mov    0x10(%rax),%rax
               :   4f436:	or     $0x20000,%rbp
               :   4f43d:	mov    %rax,0x18(%r13,%rbx,8)
               :   4f442:	movb   $0x2,0x10(%r13)
               :   4f447:	jmpq   4ef38 <__flow_dv_create_domain_policy_acts+0x268>
               :   4f44c:	mov    0x40(%rsp),%rax
               :   4f451:	test   %rax,%rax
               :   4f454:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f456:	lea    0x116db2(%rip),%rdi        # 16620f <srtcm.62771+0x45f>
               :   4f45d:	movl   $0xe,(%rax)
               :   4f463:	movq   $0x0,0x8(%rax)
               :   4f46b:	mov    %rdi,0x10(%rax)
               :   4f46f:	data16 lea 0x146a59(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   4f477:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   4f47f:	movl   $0x5f,(%rax)
               :   4f485:	mov    $0xffffffa1,%eax
               :   4f48a:	mov    0x558(%rsp),%rdi
               :   4f492:	xor    %fs:0x28,%rdi
               :   4f49b:	jne    4fb1b <__flow_dv_create_domain_policy_acts+0xe4b>
               :   4f4a1:	add    $0x568,%rsp
               :   4f4a8:	pop    %rbx
               :   4f4a9:	pop    %rbp
               :   4f4aa:	pop    %r12
               :   4f4ac:	pop    %r13
               :   4f4ae:	pop    %r14
               :   4f4b0:	pop    %r15
               :   4f4b2:	retq   
               :   4f4b3:	nopl   0x0(%rax,%rax,1)
               :   4f4b8:	testb  $0x2,0x1(%r15)
               :   4f4bd:	jne    4ee67 <__flow_dv_create_domain_policy_acts+0x197>
               :   4f4c3:	mov    0x48(%rsp),%rax
               :   4f4c8:	mov    (%rax,%r13,8),%rbx
               :   4f4cc:	test   %rbx,%rbx
               :   4f4cf:	jne    4eeae <__flow_dv_create_domain_policy_acts+0x1de>
               :   4f4d5:	jmpq   4ee90 <__flow_dv_create_domain_policy_acts+0x1c0>
               :   4f4da:	nopw   0x0(%rax,%rax,1)
               :   4f4e0:	mov    0x40(%rsp),%rcx
               :   4f4e5:	xor    %edx,%edx
               :   4f4e7:	mov    $0x9,%esi
               :   4f4ec:	mov    %r12,%rdi
               :   4f4ef:	mov    %r9,0x60(%rsp)
               :   4f4f4:	callq  28400 <mlx5_flow_get_reg_id>
               :   4f4f9:	mov    %eax,0xb0(%rsp)
               :   4f500:	mov    0x38(%rsp),%rax
               :   4f505:	mov    (%rsp),%rdi
               :   4f509:	movzbl 0x746(%rax),%eax
               :   4f510:	mov    %eax,%esi
               :   4f512:	shr    $0x3,%sil
               :   4f516:	mov    %esi,%edx
               :   4f518:	and    $0x40,%eax
               :   4f51b:	and    $0x8,%edx
               :   4f51e:	cmp    $0x1,%al
               :   4f520:	sbb    %eax,%eax
               :   4f522:	and    $0x8,%eax
               :   4f525:	add    $0x18,%eax
               :   4f528:	mov    %dl,0xb4(%rsp)
               :   4f52f:	mov    %al,0xb5(%rsp)
               :   4f536:	mov    0x40(%rsp),%rdx
               :   4f53b:	mov    0x8c(%rsp),%eax
               :   4f542:	lea    0xb0(%rsp),%rsi
               :   4f54a:	mov    %eax,0xb8(%rsp)
               :   4f551:	callq  3cd30 <flow_dv_convert_action_set_reg.isra.0>
               :   4f556:	test   %eax,%eax
               :   4f558:	mov    0x60(%rsp),%r9
               :   4f55d:	jne    4fb02 <__flow_dv_create_domain_policy_acts+0xe32>
               :   4f563:	or     $0x10000000,%rbp
               :   4f56a:	jmpq   4f042 <__flow_dv_create_domain_policy_acts+0x372>
               :   4f56f:	nop
               :   4f570:	mov    0x28(%rsp),%rsi
               :   4f575:	mov    %rax,0xf0(%rsi,%rbx,8)
               :   4f57d:	jmpq   4f26c <__flow_dv_create_domain_policy_acts+0x59c>
               :   4f582:	nopw   0x0(%rax,%rax,1)
               :   4f588:	testb  $0x4,0x15(%rbx)
               :   4f58c:	je     4f04e <__flow_dv_create_domain_policy_acts+0x37e>
               :   4f592:	cmpq   $0x0,0x48(%rbx)
               :   4f597:	jne    4f04e <__flow_dv_create_domain_policy_acts+0x37e>
               :   4f59d:	mov    0x30(%r12),%rax
               :   4f5a2:	lea    -0x18(%rbx),%r11
               :   4f5a6:	mov    0x60(%rax),%rax
               :   4f5aa:	mov    %r11,%rdi
               :   4f5ad:	mov    %rax,0x60(%rsp)
               :   4f5b2:	mov    0x5c(%rbx),%eax
               :   4f5b5:	xor    %edx,%edx
               :   4f5b7:	shl    $0x7,%rax
               :   4f5bb:	sub    %rax,%rdi
               :   4f5be:	mov    %rdi,0x68(%rsp)
               :   4f5c3:	lea    0x100(%rsp),%rcx
               :   4f5cb:	mov    $0x8,%esi
               :   4f5d0:	mov    %r12,%rdi
               :   4f5d3:	mov    %r9,0x78(%rsp)
               :   4f5d8:	mov    %r11,0x70(%rsp)
               :   4f5dd:	callq  28400 <mlx5_flow_get_reg_id>
               :   4f5e2:	lea    -0x3(%rax),%r8d
               :   4f5e6:	mov    0x60(%rsp),%rax
               :   4f5eb:	mov    0x68(%rsp),%rdi
               :   4f5f0:	mov    0x8(%rax),%rax
               :   4f5f4:	mov    0x4000(%rdi),%rsi
               :   4f5fb:	mov    0x70(%rsp),%r11
               :   4f600:	mov    0x3c8(%rax),%rdi
               :   4f607:	mov    0x146972(%rip),%rax        # 195f80 <mlx5_glue@INTERNAL>
               :   4f60e:	mov    0x74(%r11),%edx
               :   4f612:	mov    (%rax),%rax
               :   4f615:	mov    (%rsi),%rsi
               :   4f618:	movzbl %r8b,%r8d
               :   4f61c:	mov    $0x2,%ecx
               :   4f621:	callq  *0x3a8(%rax)
               :   4f627:	test   %rax,%rax
               :   4f62a:	mov    %rax,0x48(%rbx)
               :   4f62e:	mov    0x78(%rsp),%r9
               :   4f633:	jne    4f04e <__flow_dv_create_domain_policy_acts+0x37e>
               :   4f639:	mov    0x40(%rsp),%rax
               :   4f63e:	test   %rax,%rax
               :   4f641:	je     4f65c <__flow_dv_create_domain_policy_acts+0x98c>
               :   4f643:	lea    0x11a2ae(%rip),%rdi        # 1698f8 <srtcm.62771+0x3b48>
               :   4f64a:	movl   $0x5,(%rax)
               :   4f650:	movq   $0x0,0x8(%rax)
               :   4f658:	mov    %rdi,0x10(%rax)
               :   4f65c:	data16 lea 0x14686c(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   4f664:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   4f66c:	movl   $0x16,(%rax)
               :   4f672:	mov    $0xffffffea,%eax
               :   4f677:	jmpq   4f48a <__flow_dv_create_domain_policy_acts+0x7ba>
               :   4f67c:	nopl   0x0(%rax)
               :   4f680:	mov    0x20(%rsp),%r13
               :   4f685:	mov    0x28(%rsp),%r15
               :   4f68a:	jmpq   4ee90 <__flow_dv_create_domain_policy_acts+0x1c0>
               :   4f68f:	nop
               :   4f690:	lea    0x90(%rsp),%rax
               :   4f698:	mov    %r11,0x60(%rsp)
               :   4f69d:	push   %rax
               :   4f69e:	xor    %r9d,%r9d
               :   4f6a1:	xor    %r8d,%r8d
               :   4f6a4:	pushq  $0x2
               :   4f6a6:	mov    $0xfffc,%esi
               :   4f6ab:	mov    %r12,%rdi
               :   4f6ae:	pushq  $0x0
               :   4f6b0:	pushq  $0x0
               :   4f6b2:	movzbl 0x73(%rsp),%ecx
               :   4f6b7:	movzbl 0x53(%rsp),%edx
               :   4f6bc:	callq  4e250 <flow_dv_tbl_resource_get>
               :   4f6c1:	mov    0x80(%rsp),%r11
               :   4f6c9:	add    $0x20,%rsp
               :   4f6cd:	mov    %rax,0x40e0(%r11)
               :   4f6d4:	test   %rax,%rax
               :   4f6d7:	jne    4f24e <__flow_dv_create_domain_policy_acts+0x57e>
               :   4f6dd:	mov    0x40(%rsp),%rax
               :   4f6e2:	test   %rax,%rax
               :   4f6e5:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f6eb:	lea    0x119f7e(%rip),%rsi        # 169670 <srtcm.62771+0x38c0>
               :   4f6f2:	movl   $0xe,(%rax)
               :   4f6f8:	movq   $0x0,0x8(%rax)
               :   4f700:	mov    %rsi,0x10(%rax)
               :   4f704:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f709:	nopl   0x0(%rax)
               :   4f710:	data16 lea 0x1467b8(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   4f718:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   4f720:	mov    (%rax),%edx
               :   4f722:	test   %edx,%edx
               :   4f724:	jne    4f9fa <__flow_dv_create_domain_policy_acts+0xd2a>
               :   4f72a:	mov    0x538(%rsp),%rax
               :   4f732:	mov    0x1c(%rax),%eax
               :   4f735:	jmpq   4f186 <__flow_dv_create_domain_policy_acts+0x4b6>
               :   4f73a:	mov    0x40(%rsp),%rax
               :   4f73f:	test   %rax,%rax
               :   4f742:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f748:	lea    0x11a1d1(%rip),%rsi        # 169920 <srtcm.62771+0x3b70>
               :   4f74f:	movl   $0xe,(%rax)
               :   4f755:	movq   $0x0,0x8(%rax)
               :   4f75d:	mov    %rsi,0x10(%rax)
               :   4f761:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f766:	mov    0x40(%rsp),%rax
               :   4f76b:	test   %rax,%rax
               :   4f76e:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f774:	lea    0x119f1d(%rip),%rdi        # 169698 <srtcm.62771+0x38e8>
               :   4f77b:	movl   $0xe,(%rax)
               :   4f781:	movq   $0x0,0x8(%rax)
               :   4f789:	mov    %rdi,0x10(%rax)
               :   4f78d:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f792:	mov    0x40(%rsp),%rax
               :   4f797:	test   %rax,%rax
               :   4f79a:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f7a0:	lea    0x119f51(%rip),%rdi        # 1696f8 <srtcm.62771+0x3948>
               :   4f7a7:	movl   $0xe,(%rax)
               :   4f7ad:	movq   $0x0,0x8(%rax)
               :   4f7b5:	mov    %rdi,0x10(%rax)
               :   4f7b9:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f7be:	mov    0x40(%rsp),%rax
               :   4f7c3:	test   %rax,%rax
               :   4f7c6:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f7cc:	lea    0x119fa5(%rip),%rsi        # 169778 <srtcm.62771+0x39c8>
               :   4f7d3:	movl   $0xe,(%rax)
               :   4f7d9:	movq   $0x0,0x8(%rax)
               :   4f7e1:	mov    %rsi,0x10(%rax)
               :   4f7e5:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f7ea:	mov    0x40(%rsp),%rax
               :   4f7ef:	test   %rax,%rax
               :   4f7f2:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f7f8:	lea    0x119fa9(%rip),%rdi        # 1697a8 <srtcm.62771+0x39f8>
               :   4f7ff:	movl   $0xe,(%rax)
               :   4f805:	movq   $0x0,0x8(%rax)
               :   4f80d:	mov    %rdi,0x10(%rax)
               :   4f811:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f816:	mov    0x40(%rsp),%rax
               :   4f81b:	test   %rax,%rax
               :   4f81e:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f824:	lea    0x119e9d(%rip),%rsi        # 1696c8 <srtcm.62771+0x3918>
               :   4f82b:	movl   $0xe,(%rax)
               :   4f831:	movq   $0x0,0x8(%rax)
               :   4f839:	mov    %rsi,0x10(%rax)
               :   4f83d:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f842:	mov    0x40(%rsp),%rax
               :   4f847:	test   %rax,%rax
               :   4f84a:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f850:	lea    0x119f99(%rip),%rdi        # 1697f0 <srtcm.62771+0x3a40>
               :   4f857:	movl   $0xe,(%rax)
               :   4f85d:	movq   $0x0,0x8(%rax)
               :   4f865:	mov    %rdi,0x10(%rax)
               :   4f869:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f86e:	mov    0x40(%rsp),%rax
               :   4f873:	test   %rax,%rax
               :   4f876:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f87c:	lea    0x119f9d(%rip),%rsi        # 169820 <srtcm.62771+0x3a70>
               :   4f883:	movl   $0xe,(%rax)
               :   4f889:	movq   $0x0,0x8(%rax)
               :   4f891:	mov    %rsi,0x10(%rax)
               :   4f895:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f89a:	mov    0x40(%rsp),%rax
               :   4f89f:	test   %rax,%rax
               :   4f8a2:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f8a8:	lea    0x119ce9(%rip),%rdi        # 169598 <srtcm.62771+0x37e8>
               :   4f8af:	movl   $0xe,(%rax)
               :   4f8b5:	movq   $0x0,0x8(%rax)
               :   4f8bd:	mov    %rdi,0x10(%rax)
               :   4f8c1:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f8c6:	mov    0x40(%rsp),%rax
               :   4f8cb:	test   %rax,%rax
               :   4f8ce:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f8d4:	lea    0x119ced(%rip),%rsi        # 1695c8 <srtcm.62771+0x3818>
               :   4f8db:	movl   $0xe,(%rax)
               :   4f8e1:	movq   $0x0,0x8(%rax)
               :   4f8e9:	mov    %rsi,0x10(%rax)
               :   4f8ed:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f8f2:	mov    0x40(%rsp),%rax
               :   4f8f7:	test   %rax,%rax
               :   4f8fa:	je     4f65c <__flow_dv_create_domain_policy_acts+0x98c>
               :   4f900:	lea    0x116e0d(%rip),%rdi        # 166714 <srtcm.62771+0x964>
               :   4f907:	movl   $0x5,(%rax)
               :   4f90d:	movq   $0x0,0x8(%rax)
               :   4f915:	mov    %rdi,0x10(%rax)
               :   4f919:	jmpq   4f65c <__flow_dv_create_domain_policy_acts+0x98c>
               :   4f91e:	mov    0x40(%rsp),%rax
               :   4f923:	test   %rax,%rax
               :   4f926:	je     4f65c <__flow_dv_create_domain_policy_acts+0x98c>
               :   4f92c:	lea    0x119f95(%rip),%rsi        # 1698c8 <srtcm.62771+0x3b18>
               :   4f933:	movl   $0x5,(%rax)
               :   4f939:	movq   $0x0,0x8(%rax)
               :   4f941:	mov    %rsi,0x10(%rax)
               :   4f945:	jmpq   4f65c <__flow_dv_create_domain_policy_acts+0x98c>
               :   4f94a:	mov    0x40(%rsp),%rax
               :   4f94f:	test   %rax,%rax
               :   4f952:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f958:	lea    0x119c89(%rip),%rdi        # 1695e8 <srtcm.62771+0x3838>
               :   4f95f:	movl   $0xe,(%rax)
               :   4f965:	movq   $0x0,0x8(%rax)
               :   4f96d:	mov    %rdi,0x10(%rax)
               :   4f971:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f976:	mov    0x40(%rsp),%rax
               :   4f97b:	test   %rax,%rax
               :   4f97e:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f984:	lea    0x119c95(%rip),%rsi        # 169620 <srtcm.62771+0x3870>
               :   4f98b:	movl   $0xe,(%rax)
               :   4f991:	movq   $0x0,0x8(%rax)
               :   4f999:	mov    %rsi,0x10(%rax)
               :   4f99d:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f9a2:	mov    0x40(%rsp),%rax
               :   4f9a7:	test   %rax,%rax
               :   4f9aa:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f9b0:	lea    0x119e89(%rip),%rsi        # 169840 <srtcm.62771+0x3a90>
               :   4f9b7:	movl   $0xe,(%rax)
               :   4f9bd:	movq   $0x0,0x8(%rax)
               :   4f9c5:	mov    %rsi,0x10(%rax)
               :   4f9c9:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f9ce:	mov    0x40(%rsp),%rax
               :   4f9d3:	test   %rax,%rax
               :   4f9d6:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f9dc:	lea    0x119e95(%rip),%rdi        # 169878 <srtcm.62771+0x3ac8>
               :   4f9e3:	movl   $0xe,(%rax)
               :   4f9e9:	movq   $0x0,0x8(%rax)
               :   4f9f1:	mov    %rdi,0x10(%rax)
               :   4f9f5:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4f9fa:	mov    0x40(%rsp),%rax
               :   4f9ff:	test   %rax,%rax
               :   4fa02:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fa08:	lea    0x119dc1(%rip),%rsi        # 1697d0 <srtcm.62771+0x3a20>
               :   4fa0f:	movl   $0xe,(%rax)
               :   4fa15:	movq   $0x0,0x8(%rax)
               :   4fa1d:	mov    %rsi,0x10(%rax)
               :   4fa21:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fa26:	mov    0x40(%rsp),%rax
               :   4fa2b:	test   %rax,%rax
               :   4fa2e:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fa34:	lea    0x119c0d(%rip),%rdi        # 169648 <srtcm.62771+0x3898>
               :   4fa3b:	movl   $0xe,(%rax)
               :   4fa41:	movq   $0x0,0x8(%rax)
               :   4fa49:	mov    %rdi,0x10(%rax)
               :   4fa4d:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fa52:	mov    0x40(%rsp),%rax
               :   4fa57:	test   %rax,%rax
               :   4fa5a:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fa60:	lea    0x116c92(%rip),%rdi        # 1666f9 <srtcm.62771+0x949>
               :   4fa67:	movl   $0xe,(%rax)
               :   4fa6d:	movq   $0x0,0x8(%rax)
               :   4fa75:	mov    %rdi,0x10(%rax)
               :   4fa79:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fa7e:	mov    0x40(%rsp),%rax
               :   4fa83:	test   %rax,%rax
               :   4fa86:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fa8c:	lea    0x119c8d(%rip),%rsi        # 169720 <srtcm.62771+0x3970>
               :   4fa93:	movl   $0xe,(%rax)
               :   4fa99:	movq   $0x0,0x8(%rax)
               :   4faa1:	mov    %rsi,0x10(%rax)
               :   4faa5:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4faaa:	mov    0x40(%rsp),%rax
               :   4faaf:	test   %rax,%rax
               :   4fab2:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fab8:	lea    0x119c89(%rip),%rdi        # 169748 <srtcm.62771+0x3998>
               :   4fabf:	movl   $0xe,(%rax)
               :   4fac5:	movq   $0x0,0x8(%rax)
               :   4facd:	mov    %rdi,0x10(%rax)
               :   4fad1:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fad6:	mov    0x40(%rsp),%rax
               :   4fadb:	test   %rax,%rax
               :   4fade:	je     4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fae4:	lea    0x119db5(%rip),%rsi        # 1698a0 <srtcm.62771+0x3af0>
               :   4faeb:	movl   $0xe,(%rax)
               :   4faf1:	movq   $0x0,0x8(%rax)
               :   4faf9:	mov    %rsi,0x10(%rax)
               :   4fafd:	jmpq   4f46f <__flow_dv_create_domain_policy_acts+0x79f>
               :   4fb02:	data16 lea 0x1463c6(%rip),%rdi        # 195ed0 <per_lcore__rte_errno@DPDK_23>
               :   4fb0a:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   4fb12:	mov    (%rax),%eax
               :   4fb14:	neg    %eax
               :   4fb16:	jmpq   4f48a <__flow_dv_create_domain_policy_acts+0x7ba>
               :   4fb1b:	callq  aaf0 <__stack_chk_fail@plt>
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000012060 <mlx5_dump_debug_information.cold>: /* mlx5_dump_debug_information.cold total:      1 3.0e-05 */
               :   12060:	sub    $0x1000,%rsp
               :   12067:	orq    $0x0,0xff8(%rsp)
               :   12070:	cmp    %rdx,%rsp
               :   12073:	jne    12060 <mlx5_dump_debug_information.cold>
               :   12075:	and    $0xfff,%eax
               :   1207a:	sub    %rax,%rsp
               :   1207d:	test   %rax,%rax
               :   12080:	jne    12190 <mlx5_dump_debug_information.cold+0x130>
               :   12086:	xor    %esi,%esi
               :   12088:	mov    %r15,%rdx
               :   1208b:	mov    %rsp,%rdi
               :   1208e:	callq  a0e0 <memset@plt>
               :   12093:	or     $0xffffffffffffffff,%rcx
               :   12097:	mov    %r15,%rsi
               :   1209a:	mov    %rsp,%rdi
               :   1209d:	xor    %eax,%eax
               :   1209f:	mov    %rbx,%r9
               :   120a2:	lea    0x15bedd(%rip),%r8        # 16df86 <__func__.37347+0x26>
               :   120a9:	mov    $0x1,%edx
               :   120ae:	callq  acf0 <__snprintf_chk@plt>
               :   120b3:	lea    0x15bec9(%rip),%rsi        # 16df83 <__func__.37347+0x23>
               :   120ba:	mov    %rsp,%rdi
               :   120bd:	callq  ad20 <fopen64@plt>
               :   120c2:	test   %rax,%rax
               :   120c5:	jne    121be <mlx5_dump_debug_information.cold+0x15e>
               :   120cb:	lea    0x1852ce(%rip),%rax        # 1973a0 <mlx5_logtype>
               :   120d2:	mov    %rsp,%rcx
               :   120d5:	mov    (%rax),%esi
               :   120d7:	lea    0x15beb0(%rip),%r8        # 16df8e <__func__.37347+0x2e>
               :   120de:	lea    0x15beab(%rip),%rdx        # 16df90 <__func__.37347+0x30>
               :   120e5:	mov    $0x4,%edi
               :   120ea:	xor    %eax,%eax
               :   120ec:	callq  a0d0 <rte_log@plt>
               :   120f1:	mov    %r14,%rsp
               :   120f4:	mov    -0x38(%rbp),%rax
               :   120f8:	xor    %fs:0x28,%rax
               :   12101:	jne    121f5 <mlx5_dump_debug_information.cold+0x195>
               :   12107:	lea    -0x28(%rbp),%rsp
               :   1210b:	pop    %rbx
               :   1210c:	pop    %r12
               :   1210e:	pop    %r13
               :   12110:	pop    %r14
               :   12112:	pop    %r15
               :   12114:	pop    %rbp
               :   12115:	retq   
               :   12116:	lea    0x185283(%rip),%rax        # 1973a0 <mlx5_logtype>
               :   1211d:	lea    0x15be6a(%rip),%r8        # 16df8e <__func__.37347+0x2e>
               :   12124:	mov    (%rax),%esi
               :   12126:	mov    %r15,%rcx
               :   12129:	lea    0x15be90(%rip),%rdx        # 16dfc0 <__func__.37347+0x60>
               :   12130:	mov    $0x7,%edi
               :   12135:	xor    %eax,%eax
               :   12137:	mov    %r9,-0x50(%rbp)
               :   1213b:	callq  a0d0 <rte_log@plt>
               :   12140:	mov    -0x50(%rbp),%r9
               :   12144:	test   %r13,%r13
               :   12147:	je     1219b <mlx5_dump_debug_information.cold+0x13b>
               :   12149:	mov    -0x48(%rbp),%ecx
               :   1214c:	mov    %r9,%rdi
               :   1214f:	mov    %r12,%rdx
               :   12152:	mov    %r13,%rsi
               :   12155:	mov    %r9,-0x48(%rbp)
     1 3.0e-05 :   12159:	callq  aa00 <rte_hexdump@plt>
               :   1215e:	mov    -0x48(%rbp),%r9
               :   12162:	mov    %r9,%rdi
               :   12165:	lea    0x15be1f(%rip),%rdx        # 16df8b <__func__.37347+0x2b>
               :   1216c:	mov    $0x1,%esi
               :   12171:	xor    %eax,%eax
               :   12173:	mov    %r9,-0x48(%rbp)
               :   12177:	callq  a240 <__fprintf_chk@plt>
               :   1217c:	mov    -0x48(%rbp),%r9
               :   12180:	mov    %r9,%rdi
               :   12183:	callq  abf0 <fclose@plt>
               :   12188:	mov    %r14,%rsp
               :   1218b:	jmpq   120f4 <mlx5_dump_debug_information.cold+0x94>
               :   12190:	orq    $0x0,-0x8(%rsp,%rax,1)
               :   12196:	jmpq   12086 <mlx5_dump_debug_information.cold+0x26>
               :   1219b:	mov    %r9,%rdi
               :   1219e:	mov    %r12,%rcx
               :   121a1:	lea    0x16b7ad(%rip),%rdx        # 17d955 <__func__.60959+0x575>
               :   121a8:	mov    $0x1,%esi
               :   121ad:	xor    %eax,%eax
               :   121af:	mov    %r9,-0x48(%rbp)
               :   121b3:	callq  a240 <__fprintf_chk@plt>
               :   121b8:	mov    -0x48(%rbp),%r9
               :   121bc:	jmp    12162 <mlx5_dump_debug_information.cold+0x102>
               :   121be:	mov    %rax,-0x58(%rbp)
               :   121c2:	lea    0x1851d7(%rip),%rax        # 1973a0 <mlx5_logtype>
               :   121c9:	mov    %rsp,%rcx
               :   121cc:	mov    (%rax),%esi
               :   121ce:	lea    0x15bdb9(%rip),%r8        # 16df8e <__func__.37347+0x2e>
               :   121d5:	lea    0x15bde4(%rip),%rdx        # 16dfc0 <__func__.37347+0x60>
               :   121dc:	mov    $0x7,%edi
               :   121e1:	xor    %eax,%eax
               :   121e3:	callq  a0d0 <rte_log@plt>
               :   121e8:	mov    -0x50(%rbp),%rsp
               :   121ec:	mov    -0x58(%rbp),%r9
               :   121f0:	jmpq   12144 <mlx5_dump_debug_information.cold+0xe4>
               :   121f5:	callq  aaf0 <__stack_chk_fail@plt>
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000025910 <mlx5_flow_async_action_handle_query>: /* mlx5_flow_async_action_handle_query total:      1 3.0e-05 */
               :   25910:	endbr64 
               :   25914:	lea    0x170f45(%rip),%rax        # 196860 <flow_drv_ops>
               :   2591b:	mov    0x18(%rax),%rax
     1 3.0e-05 :   2591f:	jmpq   *0x1a8(%rax)
               :   25925:	data16 nopw %cs:0x0(%rax,%rax,1)
               :
               :/usr/local/lib/x86_64-linux-gnu/dpdk/pmds-23.0/librte_net_mlx5.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000915d0 <mlx5_tx_burst_mtiv_empw>: /* mlx5_tx_burst_mtiv_empw total:      1 3.0e-05 */
               :   915d0:	endbr64 
               :   915d4:	push   %rbp
               :   915d5:	mov    %rsp,%rbp
               :   915d8:	push   %r15
               :   915da:	push   %r14
               :   915dc:	push   %r13
               :   915de:	push   %r12
               :   915e0:	push   %rbx
               :   915e1:	and    $0xffffffffffffffe0,%rsp
               :   915e5:	sub    $0x1a0,%rsp
               :   915ec:	mov    %rsi,0xa0(%rsp)
               :   915f4:	mov    %dx,0xca(%rsp)
               :   915fc:	mov    %fs:0x28,%rax
               :   91605:	mov    %rax,0x198(%rsp)
               :   9160d:	xor    %eax,%eax
               :   9160f:	test   %dx,%dx
               :   91612:	je     93790 <mlx5_tx_burst_mtiv_empw+0x21c0>
               :   91618:	xor    %r8d,%r8d
               :   9161b:	xor    %r9d,%r9d
               :   9161e:	mov    %r8w,0x92(%rsp)
               :   91627:	mov    %r9w,0xcc(%rsp)
               :   91630:	movq   $0x0,0xb8(%rsp)
               :   9163c:	mov    %rdi,%r14
               :   9163f:	mov    0xa0(%rsp),%rax
               :   91647:	movzwl 0xcc(%rsp),%ebx
               :   9164f:	lea    (%rax,%rbx,8),%r12
               :   91653:	mov    (%r12),%rax
               :   91657:	prefetcht0 (%rax)
               :   9165a:	mov    $0x173,%esi
               :   9165f:	mov    %r14,%rdi
               :   91662:	callq  6dc90 <mlx5_tx_handle_completion>
               :   91667:	movzwl 0x2(%r14),%eax
               :   9166c:	add    0x6(%r14),%ax
               :   91671:	sub    (%r14),%ax
               :   91675:	mov    %eax,%r13d
               :   91678:	movzwl 0xc(%r14),%eax
               :   9167d:	add    0xe(%r14),%ax
               :   91682:	sub    0xa(%r14),%ax
               :   91687:	mov    %ax,0xce(%rsp)
               :   9168f:	je     91e88 <mlx5_tx_burst_mtiv_empw+0x8b8>
               :   91695:	test   %r13w,%r13w
               :   91699:	je     91e88 <mlx5_tx_burst_mtiv_empw+0x8b8>
               :   9169f:	mov    (%r12),%r9
               :   916a3:	movzwl 0xca(%rsp),%eax
               :   916ab:	movzwl 0x14(%r9),%r12d
               :   916b0:	mov    %eax,0x94(%rsp)
               :   916b7:	cmp    $0x1,%r12w
               :   916bc:	ja     92c50 <mlx5_tx_burst_mtiv_empw+0x1680>
               :   916c2:	mov    0x18(%r9),%rcx
               :   916c6:	movabs $0x200000000000000,%rax
               :   916d0:	and    %rcx,%rax
               :   916d3:	bt     $0x32,%rcx
               :   916d8:	movzwl 0xcc(%rsp),%r15d
               :   916e1:	jb     920a0 <mlx5_tx_burst_mtiv_empw+0xad0>
               :   916e7:	test   %rax,%rax
               :   916ea:	jne    92fa0 <mlx5_tx_burst_mtiv_empw+0x19d0>
               :   916f0:	mov    0xa0(%rsp),%rax
               :   916f8:	mov    %r13w,0xa8(%rsp)
               :   91701:	lea    0x8(%rax,%rbx,8),%r10
               :   91706:	mov    0x94(%rsp),%ebx
               :   9170d:	movzwl %r15w,%eax
               :   91711:	sub    %eax,%ebx
               :   91713:	mov    %r15d,%r11d
               :   91716:	mov    %ebx,%r12d
               :   91719:	mov    %r10,%r13
               :   9171c:	cmp    $0x20,%r12d
               :   91720:	mov    $0x20,%eax
               :   91725:	cmovbe %r12d,%eax
               :   91729:	cmpw   $0x3,0xce(%rsp)
               :   91732:	mov    %eax,0x60(%rsp)
               :   91736:	jbe    924d0 <mlx5_tx_burst_mtiv_empw+0xf00>
               :   9173c:	cmp    $0x1,%r12d
               :   91740:	jbe    91749 <mlx5_tx_burst_mtiv_empw+0x179>
               :   91742:	mov    0x0(%r13),%rax
               :   91746:	prefetcht0 (%rax)
               :   91749:	movzwl 0xa(%r14),%eax
               :   9174e:	movzwl 0x10(%r14),%edx
               :   91753:	and    %eax,%edx
               :   91755:	movzwl %dx,%edx
               :   91758:	shl    $0x6,%rdx
               :   9175c:	add    0xf8(%r14),%rdx
               :   91763:	shl    $0x8,%eax
               :   91766:	mov    %rdx,%r15
               :   91769:	or     $0x29,%eax
               :   9176c:	bswap  %eax
               :   9176e:	mov    %eax,(%rdx)
               :   91770:	mov    0x28(%r14),%eax
               :   91774:	bswap  %eax
               :   91776:	mov    0x10485b(%rip),%rdi        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :   9177d:	mov    0x18(%r9),%rcx
               :   91781:	mov    %eax,0x4(%rdx)
               :   91784:	movq   $0x4000000,0x8(%rdx)
               :   9178c:	movq   $0x0,0x10(%rdx)
               :   91794:	xor    %eax,%eax
               :   91796:	test   %rcx,(%rdi)
               :   91799:	je     917ab <mlx5_tx_burst_mtiv_empw+0x1db>
               :   9179b:	mov    0x1047ae(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :   917a2:	movslq (%rax),%rax
               :   917a5:	mov    (%r9,%rax,1),%eax
               :   917a9:	bswap  %eax
               :   917ab:	mov    %eax,0x18(%r15)
               :   917af:	movzwl 0xce(%rsp),%eax
               :   917b7:	mov    $0xf,%edx
               :   917bc:	cmp    $0xf,%ax
               :   917c0:	cmova  %rdx,%rax
               :   917c4:	movzwl 0x28(%r9),%edi
               :   917c9:	shl    $0x6,%eax
               :   917cc:	movzwl 0x10(%r9),%r8d
               :   917d1:	mov    (%r9),%r10
               :   917d4:	lea    -0x20(%rax),%esi
               :   917d7:	movl   $0x0,0x1c(%r15)
               :   917df:	mov    %esi,0x98(%rsp)
               :   917e6:	lea    0x20(%r15),%rbx
               :   917ea:	mov    %edi,%eax
               :   917ec:	add    %r8,%r10
               :   917ef:	cmp    $0x12,%di
               :   917f3:	jbe    925f8 <mlx5_tx_burst_mtiv_empw+0x1028>
               :   917f9:	mov    %esi,0xc0(%rsp)
               :   91800:	movl   $0x0,0xb0(%rsp)
               :   9180b:	mov    %r12d,0x88(%rsp)
               :   91813:	mov    %edi,%r8d
               :   91816:	cmp    %ax,0x24(%r14)
               :   9181b:	jb     919a0 <mlx5_tx_burst_mtiv_empw+0x3d0>
               :   91821:	lea    0x105d58(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :   91828:	test   %rcx,(%rax)
               :   9182b:	jne    919a0 <mlx5_tx_burst_mtiv_empw+0x3d0>
               :   91831:	movabs $0x200000000000000,%rax
               :   9183b:	lea    0x4(%r8),%edi
               :   9183f:	test   %rax,%rcx
               :   91842:	je     91c10 <mlx5_tx_burst_mtiv_empw+0x640>
               :   91848:	lea    0x8(%r8),%esi
               :   9184c:	cmp    %esi,0xc0(%rsp)
               :   91853:	jb     91b90 <mlx5_tx_burst_mtiv_empw+0x5c0>
               :   91859:	mov    %edi,%eax
               :   9185b:	or     $0x80000000,%eax
               :   91860:	bswap  %eax
               :   91862:	mov    %eax,(%rbx)
               :   91864:	add    $0x10,%rbx
               :   91868:	add    $0xc,%r10
               :   9186c:	mov    -0xc(%r10),%rax
               :   91870:	lea    -0xc(%r8),%edi
               :   91874:	mov    %rax,-0xc(%rbx)
               :   91878:	mov    -0x4(%r10),%eax
               :   9187c:	mov    %eax,-0x4(%rbx)
               :   9187f:	mov    0x100(%r14),%rdx
               :   91886:	cmp    %rdx,%rbx
               :   91889:	jae    93ea8 <mlx5_tx_burst_mtiv_empw+0x28d8>
               :   9188f:	movzwl 0x2a(%r9),%eax
               :   91894:	or     $0x81000000,%eax
               :   91899:	bswap  %eax
               :   9189b:	mov    %eax,(%rbx)
               :   9189d:	add    $0x4,%rbx
               :   918a1:	sub    %rbx,%rdx
               :   918a4:	cmp    %edx,%edi
               :   918a6:	mov    %edx,%eax
               :   918a8:	cmovb  %edi,%eax
               :   918ab:	mov    %r14,0x58(%rsp)
               :   918b0:	mov    %eax,0x80(%rsp)
               :   918b7:	mov    %r13,%rax
               :   918ba:	mov    %r9,%r13
               :   918bd:	mov    %rax,%r9
               :   918c0:	mov    %r10,%rdx
               :   918c3:	or     %rbx,%rdx
               :   918c6:	and    $0x1f,%edx
               :   918c9:	mov    0x80(%rsp),%eax
               :   918d0:	jne    91fc0 <mlx5_tx_burst_mtiv_empw+0x9f0>
               :   918d6:	cmp    $0xf,%rax
               :   918da:	jbe    92600 <mlx5_tx_burst_mtiv_empw+0x1030>
               :   918e0:	cmp    $0x20,%rax
               :   918e4:	jbe    92da0 <mlx5_tx_burst_mtiv_empw+0x17d0>
               :   918ea:	cmp    $0x40,%rax
               :   918ee:	jbe    94d48 <mlx5_tx_burst_mtiv_empw+0x3778>
               :   918f4:	lea    -0x40(%rax),%rdx
               :   918f8:	shr    $0x6,%rdx
               :   918fc:	mov    %rdx,0x20(%rsp)
               :   91901:	inc    %rdx
               :   91904:	shl    $0x6,%rdx
               :   91908:	lea    (%r10,%rdx,1),%rcx
               :   9190c:	mov    %rcx,%r14
               :   9190f:	mov    %r13,0x48(%rsp)
               :   91914:	mov    %r14,%r13
               :   91917:	mov    0x58(%rsp),%r14
               :   9191c:	mov    %rdx,0x50(%rsp)
               :   91921:	mov    %rbx,%rcx
               :   91924:	mov    %r10,%rdx
               :   91927:	nopw   0x0(%rax,%rax,1)
               :   91930:	vmovdqu64 (%rdx),%ymm5
               :   91936:	add    $0x40,%rdx
               :   9193a:	vmovdqu64 %ymm5,(%rcx)
               :   91940:	vmovdqu64 -0x20(%rdx),%ymm6
               :   91947:	add    $0x40,%rcx
               :   9194b:	vmovdqu64 %ymm6,-0x20(%rcx)
               :   91952:	cmp    %r13,%rdx
               :   91955:	jne    91930 <mlx5_tx_burst_mtiv_empw+0x360>
               :   91957:	mov    0x20(%rsp),%rcx
               :   9195c:	mov    %r14,0x58(%rsp)
               :   91961:	neg    %rcx
               :   91964:	shl    $0x6,%rcx
               :   91968:	lea    -0x80(%rax,%rcx,1),%rcx
               :   9196d:	add    %rcx,%rdx
               :   91970:	vmovdqu64 (%rdx),%ymm2
               :   91976:	add    0x50(%rsp),%rcx
               :   9197b:	add    %rbx,%rcx
               :   9197e:	vmovdqu64 %ymm2,(%rcx)
               :   91984:	vmovdqu64 0x20(%rdx),%ymm0
               :   9198b:	mov    0x48(%rsp),%r13
               :   91990:	vmovdqu64 %ymm0,0x20(%rcx)
               :   91997:	jmpq   92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   9199c:	nopl   0x0(%rax)
               :   919a0:	mov    %r8d,%eax
               :   919a3:	bswap  %eax
               :   919a5:	mov    %eax,(%rbx)
               :   919a7:	mov    0x40(%r14),%ecx
               :   919ab:	mov    0x38(%r14),%rax
               :   919af:	lea    0x38(%r14),%rdi
               :   919b3:	cmp    %ecx,(%rax)
               :   919b5:	jne    932a0 <mlx5_tx_burst_mtiv_empw+0x1cd0>
               :   919bb:	movzwl 0x44(%r14),%edx
               :   919c0:	lea    0x48(%r14),%rcx
               :   919c4:	lea    (%rdx,%rdx,4),%rdx
               :   919c8:	mov    (%r9),%rax
               :   919cb:	lea    (%rcx,%rdx,4),%rdx
               :   919cf:	cmp    (%rdx),%rax
               :   919d2:	jb     924e0 <mlx5_tx_burst_mtiv_empw+0xf10>
               :   919d8:	cmp    0x8(%rdx),%rax
               :   919dc:	jae    924e0 <mlx5_tx_burst_mtiv_empw+0xf10>
               :   919e2:	mov    0x10(%rdx),%eax
               :   919e5:	cmp    $0xffffffff,%eax
               :   919e8:	je     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   919ee:	mov    %eax,0x4(%rbx)
               :   919f1:	bswap  %r10
               :   919f4:	movzwl (%r14),%eax
               :   919f8:	decw   0xa8(%rsp)
               :   91a00:	lea    0x1(%rax),%edx
               :   91a03:	and    0x8(%r14),%ax
               :   91a08:	movzwl %ax,%eax
               :   91a0b:	subl   $0x10,0xc0(%rsp)
               :   91a13:	mov    %r10,0x8(%rbx)
               :   91a17:	mov    %dx,(%r14)
               :   91a1b:	mov    %r9,0x188(%r14,%rax,8)
               :   91a23:	add    $0x10,%rbx
               :   91a27:	add    %r8d,0xb0(%rsp)
               :   91a2f:	inc    %r11d
               :   91a32:	dec    %r12d
               :   91a35:	je     91d30 <mlx5_tx_burst_mtiv_empw+0x760>
               :   91a3b:	cmpw   $0x0,0xa8(%rsp)
               :   91a44:	je     91d30 <mlx5_tx_burst_mtiv_empw+0x760>
               :   91a4a:	add    $0x8,%r13
               :   91a4e:	mov    -0x8(%r13),%r9
               :   91a52:	cmp    $0x1,%r12d
               :   91a56:	je     91a5f <mlx5_tx_burst_mtiv_empw+0x48f>
               :   91a58:	mov    0x0(%r13),%rax
               :   91a5c:	prefetcht0 (%rax)
               :   91a5f:	movzwl 0x14(%r9),%eax
               :   91a64:	cmp    $0x1,%ax
               :   91a68:	ja     92738 <mlx5_tx_burst_mtiv_empw+0x1168>
               :   91a6e:	mov    0x18(%r9),%rcx
               :   91a72:	movabs $0x4000000000000,%rax
               :   91a7c:	test   %rax,%rcx
               :   91a7f:	jne    92f38 <mlx5_tx_burst_mtiv_empw+0x1968>
               :   91a85:	movabs $0x200000000000000,%rax
               :   91a8f:	test   %rax,%rcx
               :   91a92:	jne    92fc0 <mlx5_tx_burst_mtiv_empw+0x19f0>
               :   91a98:	mov    0x60(%rsp),%eax
               :   91a9c:	sub    0x88(%rsp),%eax
               :   91aa3:	add    %r12d,%eax
               :   91aa6:	je     91b90 <mlx5_tx_burst_mtiv_empw+0x5c0>
               :   91aac:	cmpl   $0xf,0xc0(%rsp)
               :   91ab4:	jbe    91b90 <mlx5_tx_burst_mtiv_empw+0x5c0>
               :   91aba:	mov    0x104517(%rip),%rdi        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :   91ac1:	mov    0x18(%r15),%edx
               :   91ac5:	xor    %eax,%eax
               :   91ac7:	test   %rcx,(%rdi)
               :   91aca:	je     91adc <mlx5_tx_burst_mtiv_empw+0x50c>
               :   91acc:	mov    0x10447d(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :   91ad3:	movslq (%rax),%rax
               :   91ad6:	mov    (%r9,%rax,1),%eax
               :   91ada:	bswap  %eax
               :   91adc:	cmp    %eax,%edx
               :   91ade:	jne    91b90 <mlx5_tx_burst_mtiv_empw+0x5c0>
               :   91ae4:	cmp    %rbx,0x100(%r14)
               :   91aeb:	ja     91af4 <mlx5_tx_burst_mtiv_empw+0x524>
               :   91aed:	mov    0xf8(%r14),%rbx
               :   91af4:	movzwl 0x28(%r9),%r8d
               :   91af9:	movzwl 0x10(%r9),%r10d
               :   91afe:	mov    %r8d,%eax
               :   91b01:	add    (%r9),%r10
               :   91b04:	cmp    $0x12,%r8w
               :   91b09:	ja     91816 <mlx5_tx_burst_mtiv_empw+0x246>
               :   91b0f:	mov    %r15,%rax
               :   91b12:	mov    %r11d,%r15d
               :   91b15:	mov    %rax,%r11
               :   91b18:	mov    0x98(%rsp),%eax
               :   91b1f:	sub    0xc0(%rsp),%eax
               :   91b26:	je     91b59 <mlx5_tx_burst_mtiv_empw+0x589>
               :   91b28:	mov    0xb0(%rsp),%edx
               :   91b2f:	shr    $0x4,%eax
               :   91b32:	add    %rdx,0x158(%r14)
               :   91b39:	lea    0x2(%rax),%edx
               :   91b3c:	or     0x28(%r14),%edx
               :   91b40:	bswap  %edx
               :   91b42:	add    $0x5,%eax
               :   91b45:	shr    $0x2,%eax
               :   91b48:	add    %ax,0xa(%r14)
               :   91b4d:	mov    %edx,0x4(%r11)
               :   91b51:	mov    %r11,0xb8(%rsp)
               :   91b59:	incq   0x160(%r14)
               :   91b60:	movzwl %r15w,%ebx
               :   91b64:	cmp    %r15w,0xcc(%rsp)
               :   91b6d:	jne    91d8b <mlx5_tx_burst_mtiv_empw+0x7bb>
               :   91b73:	nopl   0x0(%rax,%rax,1)
               :   91b78:	mov    %rbx,%rdx
               :   91b7b:	mov    %r14,%r11
               :   91b7e:	vzeroupper 
               :   91b81:	jmpq   91e8e <mlx5_tx_burst_mtiv_empw+0x8be>
               :   91b86:	nopw   %cs:0x0(%rax,%rax,1)
               :   91b90:	mov    0x98(%rsp),%eax
               :   91b97:	mov    %r12d,%ecx
               :   91b9a:	sub    0xc0(%rsp),%eax
               :   91ba1:	je     924d0 <mlx5_tx_burst_mtiv_empw+0xf00>
               :   91ba7:	mov    0xb0(%rsp),%edx
               :   91bae:	shr    $0x4,%eax
               :   91bb1:	add    %rdx,0x158(%r14)
               :   91bb8:	lea    0x2(%rax),%edx
               :   91bbb:	or     0x28(%r14),%edx
               :   91bbf:	bswap  %edx
               :   91bc1:	add    $0x5,%eax
               :   91bc4:	shr    $0x2,%eax
               :   91bc7:	sub    %ax,0xce(%rsp)
               :   91bcf:	add    %ax,0xa(%r14)
               :   91bd4:	cmpw   $0x0,0xa8(%rsp)
               :   91bdd:	mov    %edx,0x4(%r15)
               :   91be1:	movzwl 0xce(%rsp),%esi
               :   91be9:	je     93288 <mlx5_tx_burst_mtiv_empw+0x1cb8>
               :   91bef:	test   %si,%si
               :   91bf2:	je     93288 <mlx5_tx_burst_mtiv_empw+0x1cb8>
               :   91bf8:	mov    %r15,0xb8(%rsp)
               :   91c00:	mov    %ecx,%r12d
               :   91c03:	jmpq   9171c <mlx5_tx_burst_mtiv_empw+0x14c>
               :   91c08:	nopl   0x0(%rax,%rax,1)
               :   91c10:	cmp    %edi,0xc0(%rsp)
               :   91c17:	jb     91b90 <mlx5_tx_burst_mtiv_empw+0x5c0>
               :   91c1d:	mov    %r8d,%eax
               :   91c20:	or     $0x80000000,%eax
               :   91c25:	bswap  %eax
               :   91c27:	mov    %eax,(%rbx)
               :   91c29:	mov    0x100(%r14),%rax
               :   91c30:	add    $0x4,%rbx
               :   91c34:	sub    %rbx,%rax
               :   91c37:	cmp    %eax,%r8d
               :   91c3a:	mov    %eax,%esi
               :   91c3c:	mov    %r8d,0x58(%rsp)
               :   91c41:	mov    %r14,0x80(%rsp)
               :   91c49:	mov    %r15,%rax
               :   91c4c:	cmovb  %r8d,%esi
               :   91c50:	mov    %r9,%r15
               :   91c53:	mov    %rax,%r9
               :   91c56:	mov    %r10,%rdx
               :   91c59:	or     %rbx,%rdx
               :   91c5c:	and    $0x1f,%edx
               :   91c5f:	mov    %esi,%eax
               :   91c61:	jne    91ef0 <mlx5_tx_burst_mtiv_empw+0x920>
               :   91c67:	cmp    $0xf,%rax
               :   91c6b:	jbe    92690 <mlx5_tx_burst_mtiv_empw+0x10c0>
               :   91c71:	cmp    $0x20,%rax
               :   91c75:	jbe    92e00 <mlx5_tx_burst_mtiv_empw+0x1830>
               :   91c7b:	cmp    $0x40,%rax
               :   91c7f:	jbe    94d70 <mlx5_tx_burst_mtiv_empw+0x37a0>
               :   91c85:	lea    -0x40(%rax),%rdx
               :   91c89:	shr    $0x6,%rdx
               :   91c8d:	mov    %rdx,0x20(%rsp)
               :   91c92:	inc    %rdx
               :   91c95:	shl    $0x6,%rdx
               :   91c99:	lea    (%r10,%rdx,1),%rcx
               :   91c9d:	mov    %rcx,%r14
               :   91ca0:	mov    %r15,0x48(%rsp)
               :   91ca5:	mov    %r14,%r15
               :   91ca8:	mov    0x80(%rsp),%r14
               :   91cb0:	mov    %rdx,0x50(%rsp)
               :   91cb5:	mov    %rbx,%rcx
               :   91cb8:	mov    %r10,%rdx
               :   91cbb:	nopl   0x0(%rax,%rax,1)
               :   91cc0:	vmovdqu64 (%rdx),%ymm7
               :   91cc6:	add    $0x40,%rdx
               :   91cca:	vmovdqu64 %ymm7,(%rcx)
               :   91cd0:	vmovdqu64 -0x20(%rdx),%ymm1
               :   91cd7:	add    $0x40,%rcx
               :   91cdb:	vmovdqu64 %ymm1,-0x20(%rcx)
               :   91ce2:	cmp    %r15,%rdx
               :   91ce5:	jne    91cc0 <mlx5_tx_burst_mtiv_empw+0x6f0>
               :   91ce7:	mov    0x20(%rsp),%rcx
               :   91cec:	mov    %r14,0x80(%rsp)
               :   91cf4:	neg    %rcx
               :   91cf7:	shl    $0x6,%rcx
               :   91cfb:	lea    -0x80(%rax,%rcx,1),%rcx
               :   91d00:	add    %rcx,%rdx
               :   91d03:	vmovdqu64 (%rdx),%ymm4
               :   91d09:	add    0x50(%rsp),%rcx
               :   91d0e:	add    %rbx,%rcx
               :   91d11:	vmovdqu64 %ymm4,(%rcx)
               :   91d17:	vmovdqu64 0x20(%rdx),%ymm3
               :   91d1e:	mov    0x48(%rsp),%r15
               :   91d23:	vmovdqu64 %ymm3,0x20(%rcx)
               :   91d2a:	jmpq   926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   91d2f:	nop
               :   91d30:	mov    %r15,%rax
               :   91d33:	movzwl %r11w,%ebx
               :   91d37:	mov    %rax,%r11
               :   91d3a:	mov    0xb0(%rsp),%eax
               :   91d41:	mov    %rbx,%r15
               :   91d44:	add    %rax,0x158(%r14)
               :   91d4b:	mov    0x98(%rsp),%eax
               :   91d52:	sub    0xc0(%rsp),%eax
               :   91d59:	shr    $0x4,%eax
               :   91d5c:	lea    0x2(%rax),%edx
               :   91d5f:	or     0x28(%r14),%edx
               :   91d63:	bswap  %edx
               :   91d65:	add    $0x5,%eax
               :   91d68:	shr    $0x2,%eax
               :   91d6b:	add    %ax,0xa(%r14)
               :   91d70:	mov    %edx,0x4(%r11)
               :   91d74:	mov    %r11,0xb8(%rsp)
               :   91d7c:	cmp    %r15w,0xcc(%rsp)
               :   91d85:	je     91b78 <mlx5_tx_burst_mtiv_empw+0x5a8>
               :   91d8b:	movzwl (%r14),%edx
               :   91d8f:	movzwl 0xa(%r14),%eax
               :   91d94:	mov    %edx,%ecx
               :   91d96:	sub    0x4(%r14),%cx
               :   91d9b:	cmp    $0x1f,%cx
               :   91d9f:	ja     91e40 <mlx5_tx_burst_mtiv_empw+0x870>
               :   91da5:	mov    %eax,%ecx
               :   91da7:	sub    0x12(%r14),%cx
               :   91dac:	cmp    0x14(%r14),%cx
               :   91db1:	jae    91e40 <mlx5_tx_burst_mtiv_empw+0x870>
               :   91db7:	movzbl 0x20(%r14),%edx
               :   91dbc:	xor    %ecx,%ecx
               :   91dbe:	test   $0x1,%dl
               :   91dc1:	jne    91dd1 <mlx5_tx_burst_mtiv_empw+0x801>
               :   91dc3:	and    $0x2,%edx
               :   91dc6:	mov    $0x1,%ecx
               :   91dcb:	jne    91ed8 <mlx5_tx_burst_mtiv_empw+0x908>
               :   91dd1:	movzwl 0x128(%r14),%edx
               :   91dd9:	mov    0xb8(%rsp),%rsi
               :   91de1:	imul   $0x4080,%rdx,%rdx
               :   91de8:	mov    0x118(%r14),%r8
               :   91def:	mov    (%rsi),%rsi
               :   91df2:	add    0x10419f(%rip),%rdx        # 195f98 <rte_eth_devices@INTERNAL>
               :   91df9:	mov    0x38(%rdx),%rdi
               :   91dfd:	movzwl 0x12a(%r14),%edx
               :   91e05:	bswap  %eax
               :   91e07:	mov    %eax,(%r8)
               :   91e0a:	sfence 
               :   91e0d:	mov    0x10(%rdi,%rdx,8),%rax
               :   91e12:	mov    %rsi,(%rax)
               :   91e15:	test   %ecx,%ecx
               :   91e17:	je     91e1c <mlx5_tx_burst_mtiv_empw+0x84c>
               :   91e19:	sfence 
               :   91e1c:	cmp    %r15w,0xca(%rsp)
               :   91e25:	jbe    94cb0 <mlx5_tx_burst_mtiv_empw+0x36e0>
               :   91e2b:	mov    %r15w,0xcc(%rsp)
               :   91e34:	vzeroupper 
               :   91e37:	jmpq   9163f <mlx5_tx_burst_mtiv_empw+0x6f>
               :   91e3c:	nopl   0x0(%rax)
               :   91e40:	mov    %ax,0x12(%r14)
               :   91e45:	mov    0xb8(%rsp),%rax
               :   91e4d:	mov    0x108(%r14),%rcx
               :   91e54:	movl   $0x8000000,0x8(%rax)
               :   91e5b:	movzwl 0x18(%r14),%eax
               :   91e60:	mov    %dx,0x4(%r14)
               :   91e65:	lea    0x1(%rax),%esi
               :   91e68:	and    0x1c(%r14),%ax
               :   91e6d:	movzwl %ax,%eax
               :   91e70:	mov    %dx,(%rcx,%rax,2)
               :   91e74:	mov    %si,0x18(%r14)
               :   91e79:	movzwl 0xa(%r14),%eax
               :   91e7e:	jmpq   91db7 <mlx5_tx_burst_mtiv_empw+0x7e7>
               :   91e83:	nopl   0x0(%rax,%rax,1)
               :   91e88:	mov    %rbx,%rdx
               :   91e8b:	mov    %r14,%r11
               :   91e8e:	add    %rdx,0x150(%r11)
               :   91e95:	cmpw   $0x0,0x92(%rsp)
               :   91e9e:	jne    925d0 <mlx5_tx_burst_mtiv_empw+0x1000>
               :   91ea4:	mov    0x198(%rsp),%rax
               :   91eac:	xor    %fs:0x28,%rax
               :   91eb5:	jne    9a073 <mlx5_tx_burst_mtiv_empw+0x8aa3>
               :   91ebb:	movzwl 0xcc(%rsp),%eax
               :   91ec3:	lea    -0x28(%rbp),%rsp
               :   91ec7:	pop    %rbx
               :   91ec8:	pop    %r12
               :   91eca:	pop    %r13
               :   91ecc:	pop    %r14
               :   91ece:	pop    %r15
               :   91ed0:	pop    %rbp
               :   91ed1:	retq   
               :   91ed2:	nopw   0x0(%rax,%rax,1)
               :   91ed8:	xor    %ecx,%ecx
               :   91eda:	testb  $0x3f,0xca(%rsp)
               :   91ee2:	setne  %cl
               :   91ee5:	jmpq   91dd1 <mlx5_tx_burst_mtiv_empw+0x801>
               :   91eea:	nopw   0x0(%rax,%rax,1)
               :   91ef0:	cmp    $0xf,%rax
               :   91ef4:	jbe    92690 <mlx5_tx_burst_mtiv_empw+0x10c0>
               :   91efa:	cmp    $0x20,%rax
               :   91efe:	jbe    92de0 <mlx5_tx_burst_mtiv_empw+0x1810>
               :   91f04:	cmp    $0x30,%rax
               :   91f08:	jbe    94ce8 <mlx5_tx_burst_mtiv_empw+0x3718>
               :   91f0e:	vmovdqu64 (%r10),%ymm0
               :   91f14:	cmp    $0x40,%rax
               :   91f18:	jbe    959ae <mlx5_tx_burst_mtiv_empw+0x43de>
               :   91f1e:	cmp    $0x100,%rax
               :   91f24:	ja     946e1 <mlx5_tx_burst_mtiv_empw+0x3111>
               :   91f2a:	cmp    $0x7f,%rax
               :   91f2e:	jbe    95c39 <mlx5_tx_burst_mtiv_empw+0x4669>
               :   91f34:	vmovdqu64 %ymm0,(%rbx)
               :   91f3a:	vmovdqu64 0x20(%r10),%ymm0
               :   91f41:	lea    -0x80(%rax),%rcx
               :   91f45:	vmovdqu64 %ymm0,0x20(%rbx)
               :   91f4c:	vmovdqu64 0x40(%r10),%ymm2
               :   91f53:	mov    %rcx,0x20(%rsp)
               :   91f58:	vmovdqu64 %ymm2,0x40(%rbx)
               :   91f5f:	vmovdqu64 0x60(%r10),%ymm1
               :   91f66:	lea    0x80(%r10),%rcx
               :   91f6d:	vmovdqu64 %ymm1,0x60(%rbx)
               :   91f74:	lea    0x80(%rbx),%rdx
               :   91f7b:	cmpq   $0x3f,0x20(%rsp)
               :   91f81:	ja     969b7 <mlx5_tx_burst_mtiv_empw+0x53e7>
               :   91f87:	mov    0x20(%rsp),%r14
               :   91f8c:	cmp    $0x20,%r14
               :   91f90:	jbe    959c9 <mlx5_tx_burst_mtiv_empw+0x43f9>
               :   91f96:	vmovdqu64 (%rcx),%ymm6
               :   91f9c:	vmovdqu64 %ymm6,(%rdx)
               :   91fa2:	vmovdqu64 -0x20(%rcx,%r14,1),%ymm0
               :   91faa:	vmovdqa64 %ymm0,0x20(%rsp)
               :   91fb2:	vmovdqu64 %ymm0,-0x20(%rdx,%r14,1)
               :   91fba:	jmpq   926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   91fbf:	nop
               :   91fc0:	cmp    $0xf,%rax
               :   91fc4:	jbe    92600 <mlx5_tx_burst_mtiv_empw+0x1030>
               :   91fca:	cmp    $0x20,%rax
               :   91fce:	jbe    92dc0 <mlx5_tx_burst_mtiv_empw+0x17f0>
               :   91fd4:	cmp    $0x30,%rax
               :   91fd8:	jbe    94d18 <mlx5_tx_burst_mtiv_empw+0x3748>
               :   91fde:	vmovdqu64 (%r10),%ymm0
               :   91fe4:	cmp    $0x40,%rax
               :   91fe8:	jbe    95993 <mlx5_tx_burst_mtiv_empw+0x43c3>
               :   91fee:	cmp    $0x100,%rax
               :   91ff4:	ja     947cf <mlx5_tx_burst_mtiv_empw+0x31ff>
               :   91ffa:	cmp    $0x7f,%rax
               :   91ffe:	jbe    95c6b <mlx5_tx_burst_mtiv_empw+0x469b>
               :   92004:	vmovdqu64 %ymm0,(%rbx)
               :   9200a:	vmovdqu64 0x20(%r10),%ymm4
               :   92011:	lea    0x80(%r10),%rcx
               :   92018:	vmovdqu64 %ymm4,0x20(%rbx)
               :   9201f:	vmovdqu64 0x40(%r10),%ymm5
               :   92026:	mov    %rcx,0x20(%rsp)
               :   9202b:	vmovdqu64 %ymm5,0x40(%rbx)
               :   92032:	vmovdqu64 0x60(%r10),%ymm6
               :   92039:	lea    -0x80(%rax),%rdx
               :   9203d:	vmovdqu64 %ymm6,0x60(%rbx)
               :   92044:	lea    0x80(%rbx),%rcx
               :   9204b:	cmp    $0x3f,%rdx
               :   9204f:	ja     969a7 <mlx5_tx_burst_mtiv_empw+0x53d7>
               :   92055:	cmp    $0x20,%rdx
               :   92059:	jbe    959ef <mlx5_tx_burst_mtiv_empw+0x441f>
               :   9205f:	mov    %rcx,%r14
               :   92062:	mov    0x20(%rsp),%rcx
               :   92067:	vmovdqu64 (%rcx),%ymm1
               :   9206d:	vmovdqu64 %ymm1,(%r14)
               :   92073:	vmovdqu64 -0x20(%rcx,%rdx,1),%ymm7
               :   9207b:	vmovdqa64 %ymm7,0x20(%rsp)
               :   92083:	vmovdqu64 %ymm7,-0x20(%r14,%rdx,1)
               :   9208b:	jmpq   92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   92090:	mov    %r12,0xb8(%rsp)
               :   92098:	mov    %rbx,%r9
               :   9209b:	movzwl %r15w,%ebx
               :   9209f:	nop
               :   920a0:	mov    0xa0(%rsp),%rax
               :   920a8:	mov    0x94(%rsp),%edi
               :   920af:	lea    0x8(%rax,%rbx,8),%r8
               :   920b4:	movzwl %r15w,%eax
               :   920b8:	sub    %eax,%edi
               :   920ba:	mov    %edi,0xb0(%rsp)
               :   920c1:	mov    %r8,0xc0(%rsp)
               :   920c9:	mov    0xb8(%rsp),%rbx
               :   920d1:	movzbl 0x48(%r9),%eax
               :   920d6:	movabs $0x200000000000000,%rdi
               :   920e0:	mov    %eax,%esi
               :   920e2:	movzwl 0x48(%r9),%eax
               :   920e7:	and    $0x7f,%esi
               :   920ea:	shr    $0x7,%ax
               :   920ee:	and    %rcx,%rdi
               :   920f1:	mov    %rdi,0xb8(%rsp)
               :   920f9:	movzbl 0x4a(%r9),%edx
               :   920fe:	movzwl %ax,%eax
               :   92101:	jne    92cb0 <mlx5_tx_burst_mtiv_empw+0x16e0>
               :   92107:	add    %esi,%eax
               :   92109:	add    %edx,%eax
               :   9210b:	mov    %eax,%esi
               :   9210d:	je     94dd0 <mlx5_tx_burst_mtiv_empw+0x3800>
               :   92113:	xor    %r11d,%r11d
               :   92116:	movabs $0xffff000000,%rax
               :   92120:	test   %rax,0x48(%r9)
               :   92124:	je     94dd0 <mlx5_tx_burst_mtiv_empw+0x3800>
               :   9212a:	movabs $0x1e00000000000,%rax
               :   92134:	test   %rax,%rcx
               :   92137:	je     92158 <mlx5_tx_burst_mtiv_empw+0xb88>
               :   92139:	movzbl 0x4e(%r9),%eax
               :   9213e:	mov    $0x8,%edi
               :   92143:	shr    %al
               :   92145:	movzbl %al,%eax
               :   92148:	shrx   %edi,0x4c(%r9),%edx
               :   9214e:	and    $0x1ff,%edx
               :   92154:	add    %edx,%eax
               :   92156:	add    %eax,%esi
               :   92158:	lea    -0x13(%rsi),%eax
               :   9215b:	cmp    $0xad,%eax
               :   92160:	ja     94dd0 <mlx5_tx_burst_mtiv_empw+0x3800>
               :   92166:	movzwl 0x28(%r9),%edi
               :   9216b:	add    %r11d,%edi
               :   9216e:	cmp    %edi,%esi
               :   92170:	ja     94dd0 <mlx5_tx_burst_mtiv_empw+0x3800>
     1 3.0e-05 :   92176:	lea    -0x3(%rsi),%eax
               :   92179:	shr    $0x4,%eax
               :   9217c:	lea    0x4(%rax),%r10d
               :   92180:	add    $0x7,%eax
               :   92183:	shr    $0x2,%eax
               :   92186:	mov    %eax,0xa8(%rsp)
               :   9218d:	mov    %eax,%edx
               :   9218f:	movzwl 0xce(%rsp),%eax
               :   92197:	cmp    %edx,%eax
               :   92199:	jb     94cd0 <mlx5_tx_burst_mtiv_empw+0x3700>
               :   9219f:	movzwl 0x4b(%r9),%r8d
               :   921a4:	xor    %edx,%edx
               :   921a6:	lea    -0x1(%rdi,%r8,1),%eax
               :   921ab:	sub    %esi,%eax
               :   921ad:	div    %r8d
               :   921b0:	movzwl 0x10(%r14),%ebx
               :   921b5:	lea    -0x1(%rax),%edx
               :   921b8:	mov    %rdx,%rax
               :   921bb:	imul   %esi,%eax
               :   921be:	add    %rdx,0x150(%r14)
               :   921c5:	add    %edi,%eax
               :   921c7:	add    %rax,0x158(%r14)
               :   921ce:	movzwl 0xa(%r14),%eax
               :   921d3:	and    %eax,%ebx
               :   921d5:	movzwl %bx,%ebx
               :   921d8:	shl    $0x6,%rbx
               :   921dc:	shl    $0x8,%eax
               :   921df:	add    0xf8(%r14),%rbx
               :   921e6:	or     $0xe,%eax
               :   921e9:	bswap  %eax
               :   921eb:	mov    %eax,(%rbx)
               :   921ed:	or     0x28(%r14),%r10d
               :   921f1:	bswap  %r10d
               :   921f4:	mov    %r10d,0x4(%rbx)
               :   921f8:	bswap  %r8d
               :   921fb:	mov    0x103dd6(%rip),%rdx        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :   92202:	mov    %r8d,0x14(%rbx)
               :   92206:	movq   $0x4000000,0x8(%rbx)
               :   9220e:	movl   $0x0,0x10(%rbx)
               :   92215:	xor    %eax,%eax
               :   92217:	test   %rcx,(%rdx)
               :   9221a:	je     9222c <mlx5_tx_burst_mtiv_empw+0xc5c>
               :   9221c:	mov    0x103d2d(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :   92223:	movslq (%rax),%rax
               :   92226:	mov    (%r9,%rax,1),%eax
               :   9222a:	bswap  %eax
               :   9222c:	mov    %eax,0x18(%rbx)
               :   9222f:	movzwl 0x10(%r9),%eax
               :   92234:	mov    %esi,%edx
               :   92236:	add    (%r9),%rax
               :   92239:	xchg   %dl,%dh
               :   9223b:	mov    %dx,0x1c(%rbx)
               :   9223f:	movzwl (%rax),%edx
               :   92242:	mov    %dx,0x1e(%rbx)
               :   92246:	test   %r11d,%r11d
               :   92249:	jne    93ef8 <mlx5_tx_burst_mtiv_empw+0x2928>
               :   9224f:	vmovdqu64 0x2(%rax),%xmm4
               :   92259:	lea    0x12(%rax),%r10
               :   9225d:	vmovups %xmm4,0x20(%rbx)
               :   92262:	mov    0x100(%r14),%rax
               :   92269:	lea    0x30(%rbx),%r8
               :   9226d:	lea    -0x12(%rsi),%r11d
               :   92271:	sub    %r8,%rax
               :   92274:	mov    %r14,0x98(%rsp)
               :   9227c:	cmp    %eax,%r11d
               :   9227f:	mov    %eax,%r12d
               :   92282:	mov    %r11d,%eax
               :   92285:	cmovb  %r11d,%r12d
               :   92289:	mov    %r9,%r11
               :   9228c:	mov    %esi,%r9d
               :   9228f:	mov    %eax,%esi
               :   92291:	mov    %r10,%rdx
               :   92294:	or     %r8,%rdx
               :   92297:	and    $0x1f,%edx
               :   9229a:	mov    %r12d,%eax
               :   9229d:	je     94200 <mlx5_tx_burst_mtiv_empw+0x2c30>
               :   922a3:	cmp    $0xf,%rax
               :   922a7:	jbe    9593b <mlx5_tx_burst_mtiv_empw+0x436b>
               :   922ad:	cmp    $0x20,%rax
               :   922b1:	jbe    969c2 <mlx5_tx_burst_mtiv_empw+0x53f2>
               :   922b7:	cmp    $0x30,%rax
               :   922bb:	jbe    971f5 <mlx5_tx_burst_mtiv_empw+0x5c25>
               :   922c1:	vmovdqu64 (%r10),%ymm0
               :   922c7:	cmp    $0x40,%rax
               :   922cb:	jbe    97599 <mlx5_tx_burst_mtiv_empw+0x5fc9>
               :   922d1:	cmp    $0x100,%rax
               :   922d7:	ja     9819d <mlx5_tx_burst_mtiv_empw+0x6bcd>
               :   922dd:	cmp    $0x7f,%rax
               :   922e1:	jbe    98165 <mlx5_tx_burst_mtiv_empw+0x6b95>
               :   922e7:	vmovdqu64 %ymm0,(%r8)
               :   922ed:	vmovdqu64 0x20(%r10),%ymm5
               :   922f4:	lea    0x80(%r10),%rdx
               :   922fb:	vmovdqu64 %ymm5,0x20(%r8)
               :   92302:	vmovdqu64 0x40(%r10),%ymm6
               :   92309:	mov    %rdx,0x60(%rsp)
               :   9230e:	vmovdqu64 %ymm6,0x40(%r8)
               :   92315:	vmovdqu64 0x60(%r10),%ymm7
               :   9231c:	lea    -0x80(%rax),%rcx
               :   92320:	vmovdqu64 %ymm7,0x60(%r8)
               :   92327:	lea    0x80(%r8),%rdx
               :   9232e:	cmp    $0x3f,%rcx
               :   92332:	ja     98cab <mlx5_tx_burst_mtiv_empw+0x76db>
               :   92338:	cmp    $0x20,%rcx
               :   9233c:	jbe    9756e <mlx5_tx_burst_mtiv_empw+0x5f9e>
               :   92342:	mov    0x60(%rsp),%r14
               :   92347:	vmovdqu64 (%r14),%ymm1
               :   9234d:	vmovdqu64 %ymm1,(%rdx)
               :   92353:	vmovdqu64 -0x20(%r14,%rcx,1),%ymm2
               :   9235b:	vmovdqa64 %ymm2,0x60(%rsp)
               :   92363:	vmovdqu64 %ymm2,-0x20(%rdx,%rcx,1)
               :   9236b:	nopl   0x0(%rax,%rax,1)
               :   92370:	sub    %r12d,%esi
               :   92373:	jne    96c4c <mlx5_tx_burst_mtiv_empw+0x567c>
               :   92379:	lea    0xf(%r8,%rax,1),%r12
               :   9237e:	mov    0x98(%rsp),%r14
               :   92386:	and    $0xfffffffffffffff0,%r12
               :   9238a:	mov    %r9d,%esi
               :   9238d:	mov    %r11,%r9
               :   92390:	cmp    0x100(%r14),%r12
               :   92397:	jae    9701d <mlx5_tx_burst_mtiv_empw+0x5a4d>
               :   9239d:	movzwl 0x10(%r9),%edx
               :   923a2:	mov    (%r9),%rax
               :   923a5:	sub    0xb8(%rsp),%rdx
               :   923ad:	mov    %esi,%ecx
               :   923af:	add    %rcx,%rdx
               :   923b2:	add    %rax,%rdx
               :   923b5:	sub    %esi,%edi
               :   923b7:	bswap  %edi
               :   923b9:	mov    %edi,(%r12)
               :   923bd:	mov    0x38(%r14),%rcx
               :   923c1:	mov    0x40(%r14),%esi
               :   923c5:	lea    0x38(%r14),%rdi
               :   923c9:	cmp    %esi,(%rcx)
               :   923cb:	jne    95ea2 <mlx5_tx_burst_mtiv_empw+0x48d2>
               :   923d1:	movzwl 0x44(%r14),%ecx
               :   923d6:	lea    0x48(%r14),%rsi
               :   923da:	lea    (%rcx,%rcx,4),%rcx
               :   923de:	lea    (%rsi,%rcx,4),%rcx
               :   923e2:	cmp    (%rcx),%rax
               :   923e5:	jb     9581d <mlx5_tx_burst_mtiv_empw+0x424d>
               :   923eb:	cmp    0x8(%rcx),%rax
               :   923ef:	jae    9581d <mlx5_tx_burst_mtiv_empw+0x424d>
               :   923f5:	mov    0x10(%rcx),%eax
               :   923f8:	cmp    $0xffffffff,%eax
               :   923fb:	je     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   92401:	mov    %eax,0x4(%r12)
               :   92406:	bswap  %rdx
               :   92409:	mov    0xa8(%rsp),%eax
               :   92410:	mov    %rdx,0x8(%r12)
               :   92415:	sub    %ax,0xce(%rsp)
               :   9241d:	add    %ax,0xa(%r14)
               :   92422:	movzwl (%r14),%eax
               :   92426:	inc    %r15d
               :   92429:	lea    0x1(%rax),%edx
               :   9242c:	and    0x8(%r14),%ax
               :   92431:	dec    %r13w
               :   92435:	mov    %dx,(%r14)
               :   92439:	sete   %dl
               :   9243c:	decl   0xb0(%rsp)
               :   92443:	movzwl %ax,%eax
               :   92446:	mov    %r9,0x188(%r14,%rax,8)
               :   9244e:	movzwl 0xce(%rsp),%edi
               :   92456:	sete   %al
               :   92459:	or     %al,%dl
               :   9245b:	jne    94cd0 <mlx5_tx_burst_mtiv_empw+0x3700>
               :   92461:	test   %di,%di
               :   92464:	je     94cd0 <mlx5_tx_burst_mtiv_empw+0x3700>
               :   9246a:	addq   $0x8,0xc0(%rsp)
               :   92473:	cmpl   $0x1,0xb0(%rsp)
               :   9247b:	mov    0xc0(%rsp),%rax
               :   92483:	mov    -0x8(%rax),%r9
               :   92487:	je     9248f <mlx5_tx_burst_mtiv_empw+0xebf>
               :   92489:	mov    (%rax),%rax
               :   9248c:	prefetcht0 (%rax)
               :   9248f:	movzwl 0x14(%r9),%r12d
               :   92494:	cmp    $0x1,%r12w
               :   92499:	ja     96884 <mlx5_tx_burst_mtiv_empw+0x52b4>
               :   9249f:	mov    0x18(%r9),%rcx
               :   924a3:	bt     $0x32,%rcx
               :   924a8:	jb     920d1 <mlx5_tx_burst_mtiv_empw+0xb01>
               :   924ae:	movabs $0x200000000000000,%rax
               :   924b8:	mov    %rbx,0xb8(%rsp)
               :   924c0:	and    %rcx,%rax
               :   924c3:	movzwl %r15w,%ebx
               :   924c7:	jmpq   916e7 <mlx5_tx_burst_mtiv_empw+0x117>
               :   924cc:	nopl   0x0(%rax)
               :   924d0:	movzwl %r11w,%ebx
               :   924d4:	mov    %rbx,%r15
               :   924d7:	jmpq   91d7c <mlx5_tx_burst_mtiv_empw+0x7ac>
               :   924dc:	nopl   0x0(%rax)
               :   924e0:	mov    0x48(%r14),%rdx
               :   924e4:	test   %rdx,%rdx
               :   924e7:	je     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   924ed:	cmp    %rdx,%rax
               :   924f0:	jae    92c78 <mlx5_tx_burst_mtiv_empw+0x16a8>
               :   924f6:	mov    0x5c(%r14),%rdx
               :   924fa:	test   %rdx,%rdx
               :   924fd:	je     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   92503:	cmp    %rdx,%rax
               :   92506:	jae    92c98 <mlx5_tx_burst_mtiv_empw+0x16c8>
               :   9250c:	mov    0x70(%r14),%rdx
               :   92510:	test   %rdx,%rdx
               :   92513:	je     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   92515:	cmp    %rdx,%rax
               :   92518:	jae    92cd0 <mlx5_tx_burst_mtiv_empw+0x1700>
               :   9251e:	mov    0x84(%r14),%rdx
               :   92525:	test   %rdx,%rdx
               :   92528:	je     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   9252a:	cmp    %rdx,%rax
               :   9252d:	jae    92ce8 <mlx5_tx_burst_mtiv_empw+0x1718>
               :   92533:	mov    0x98(%r14),%rdx
               :   9253a:	test   %rdx,%rdx
               :   9253d:	je     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   9253f:	cmp    %rdx,%rax
               :   92542:	jae    92d08 <mlx5_tx_burst_mtiv_empw+0x1738>
               :   92548:	mov    0xac(%r14),%rdx
               :   9254f:	test   %rdx,%rdx
               :   92552:	je     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   92554:	cmp    %rdx,%rax
               :   92557:	jae    92d60 <mlx5_tx_burst_mtiv_empw+0x1790>
               :   9255d:	mov    0xc0(%r14),%rdx
               :   92564:	test   %rdx,%rdx
               :   92567:	je     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   92569:	cmp    %rdx,%rax
               :   9256c:	jae    92d80 <mlx5_tx_burst_mtiv_empw+0x17b0>
               :   92572:	mov    0xd4(%r14),%rdx
               :   92579:	test   %rdx,%rdx
               :   9257c:	je     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   9257e:	cmp    %rdx,%rax
               :   92581:	jb     92590 <mlx5_tx_burst_mtiv_empw+0xfc0>
               :   92583:	cmp    %rax,0xdc(%r14)
               :   9258a:	ja     94c95 <mlx5_tx_burst_mtiv_empw+0x36c5>
               :   92590:	mov    %r9,%rsi
               :   92593:	mov    %r8d,0x50(%rsp)
               :   92598:	mov    %r10,0x20(%rsp)
               :   9259d:	mov    %r11d,0x58(%rsp)
               :   925a2:	mov    %r9,0x80(%rsp)
               :   925aa:	vzeroupper 
               :   925ad:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :   925b2:	mov    0x80(%rsp),%r9
               :   925ba:	mov    0x58(%rsp),%r11d
               :   925bf:	mov    0x20(%rsp),%r10
               :   925c4:	mov    0x50(%rsp),%r8d
               :   925c9:	jmpq   919ee <mlx5_tx_burst_mtiv_empw+0x41e>
               :   925ce:	xchg   %ax,%ax
               :   925d0:	movzwl 0x92(%rsp),%edx
               :   925d8:	mov    0xa0(%rsp),%rsi
               :   925e0:	mov    $0x173,%ecx
               :   925e5:	mov    %r11,%rdi
               :   925e8:	callq  6f820 <__mlx5_tx_free_mbuf>
               :   925ed:	jmpq   91ea4 <mlx5_tx_burst_mtiv_empw+0x8d4>
               :   925f2:	nopw   0x0(%rax,%rax,1)
               :   925f8:	mov    %r11d,%r15d
               :   925fb:	jmpq   91b59 <mlx5_tx_burst_mtiv_empw+0x589>
               :   92600:	testb  $0x8,0x80(%rsp)
               :   92608:	jne    92d48 <mlx5_tx_burst_mtiv_empw+0x1778>
               :   9260e:	mov    %r10,%rcx
               :   92611:	mov    %rbx,%rdx
               :   92614:	testb  $0x4,0x80(%rsp)
               :   9261c:	je     9262d <mlx5_tx_burst_mtiv_empw+0x105d>
               :   9261e:	mov    (%rcx),%r14d
               :   92621:	add    $0x4,%rdx
               :   92625:	mov    %r14d,-0x4(%rdx)
               :   92629:	add    $0x4,%rcx
               :   9262d:	testb  $0x2,0x80(%rsp)
               :   92635:	je     92648 <mlx5_tx_burst_mtiv_empw+0x1078>
               :   92637:	movzwl (%rcx),%r14d
               :   9263b:	add    $0x2,%rdx
               :   9263f:	mov    %r14w,-0x2(%rdx)
               :   92644:	add    $0x2,%rcx
               :   92648:	testb  $0x1,0x80(%rsp)
               :   92650:	je     92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   92652:	movzbl (%rcx),%ecx
               :   92655:	mov    %cl,(%rdx)
               :   92657:	nopw   0x0(%rax,%rax,1)
               :   92660:	sub    0x80(%rsp),%edi
               :   92667:	jne    93e28 <mlx5_tx_burst_mtiv_empw+0x2858>
               :   9266d:	mov    %r9,%rdi
               :   92670:	lea    0xf(%rbx,%rax,1),%rbx
               :   92675:	mov    %r13,%r9
               :   92678:	addl   $0x4,0xb0(%rsp)
               :   92680:	mov    0x58(%rsp),%r14
               :   92685:	mov    %rdi,%r13
               :   92688:	and    $0xfffffffffffffff0,%rbx
               :   9268c:	jmp    92706 <mlx5_tx_burst_mtiv_empw+0x1136>
               :   9268e:	xchg   %ax,%ax
               :   92690:	test   $0x8,%sil
               :   92694:	jne    92d30 <mlx5_tx_burst_mtiv_empw+0x1760>
               :   9269a:	mov    %r10,%rcx
               :   9269d:	mov    %rbx,%rdx
               :   926a0:	test   $0x4,%sil
               :   926a4:	je     926b5 <mlx5_tx_burst_mtiv_empw+0x10e5>
               :   926a6:	mov    (%rcx),%r14d
               :   926a9:	add    $0x4,%rdx
               :   926ad:	mov    %r14d,-0x4(%rdx)
               :   926b1:	add    $0x4,%rcx
               :   926b5:	test   $0x2,%sil
               :   926b9:	je     926cc <mlx5_tx_burst_mtiv_empw+0x10fc>
               :   926bb:	movzwl (%rcx),%r14d
               :   926bf:	add    $0x2,%rdx
               :   926c3:	mov    %r14w,-0x2(%rdx)
               :   926c8:	add    $0x2,%rcx
               :   926cc:	test   $0x1,%sil
               :   926d0:	je     926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   926d2:	movzbl (%rcx),%ecx
               :   926d5:	mov    %cl,(%rdx)
               :   926d7:	nopw   0x0(%rax,%rax,1)
               :   926e0:	sub    %esi,0x58(%rsp)
               :   926e4:	jne    93e48 <mlx5_tx_burst_mtiv_empw+0x2878>
               :   926ea:	mov    %r9,%rsi
               :   926ed:	lea    0xf(%rbx,%rax,1),%rbx
               :   926f2:	mov    0x80(%rsp),%r14
               :   926fa:	mov    %r15,%r9
               :   926fd:	and    $0xfffffffffffffff0,%rbx
               :   92701:	mov    %rsi,%r15
               :   92704:	mov    %edi,%esi
               :   92706:	lea    0xf(%rsi),%eax
               :   92709:	and    $0xfffffff0,%eax
               :   9270c:	sub    %eax,0xc0(%rsp)
               :   92713:	cmp    0x92(%rsp),%r11w
               :   9271c:	jne    93730 <mlx5_tx_burst_mtiv_empw+0x2160>
               :   92722:	lea    0x1(%r11),%eax
               :   92726:	mov    %ax,0x92(%rsp)
               :   9272e:	jmpq   91a27 <mlx5_tx_burst_mtiv_empw+0x457>
               :   92733:	nopl   0x0(%rax,%rax,1)
               :   92738:	mov    %eax,%r12d
               :   9273b:	mov    %r15,%rax
               :   9273e:	movzwl %r11w,%ebx
               :   92742:	mov    %rax,%r11
               :   92745:	mov    0xb0(%rsp),%eax
               :   9274c:	movzwl 0xa8(%rsp),%r13d
               :   92755:	add    %rax,0x158(%r14)
               :   9275c:	mov    0x98(%rsp),%eax
               :   92763:	mov    %rbx,%r15
               :   92766:	sub    0xc0(%rsp),%eax
               :   9276d:	shr    $0x4,%eax
               :   92770:	lea    0x2(%rax),%edx
               :   92773:	or     0x28(%r14),%edx
               :   92777:	bswap  %edx
               :   92779:	add    $0x5,%eax
               :   9277c:	shr    $0x2,%eax
               :   9277f:	add    %ax,0xa(%r14)
               :   92784:	sub    %ax,0xce(%rsp)
               :   9278c:	mov    %edx,0x4(%r11)
               :   92790:	mov    %r11,0xb8(%rsp)
               :   92798:	je     91d7c <mlx5_tx_burst_mtiv_empw+0x7ac>
               :   9279e:	mov    0xa0(%rsp),%rax
               :   927a6:	mov    %r12w,0xc0(%rsp)
               :   927af:	lea    0x8(%rax,%rbx,8),%rax
               :   927b4:	mov    0x94(%rsp),%ebx
               :   927bb:	mov    %rax,0x80(%rsp)
               :   927c3:	movzwl %r15w,%eax
               :   927c7:	sub    %eax,%ebx
               :   927c9:	mov    %ebx,0x98(%rsp)
               :   927d0:	mov    %r15w,0x20(%rsp)
               :   927d6:	mov    %r13w,0xa8(%rsp)
               :   927df:	mov    %r14,%r11
               :   927e2:	mov    %r9,%r13
               :   927e5:	movzwl 0xc0(%rsp),%edi
               :   927ed:	cmp    %di,0xa8(%rsp)
               :   927f5:	jb     93970 <mlx5_tx_burst_mtiv_empw+0x23a0>
               :   927fb:	mov    0x18(%r13),%rcx
               :   927ff:	movabs $0x200000000000000,%r8
               :   92809:	and    %rcx,%r8
               :   9280c:	bt     $0x32,%rcx
               :   92811:	mov    0x24(%r13),%edi
               :   92815:	jb     9528e <mlx5_tx_burst_mtiv_empw+0x3cbe>
               :   9281b:	test   %r8,%r8
               :   9281e:	jne    92c60 <mlx5_tx_burst_mtiv_empw+0x1690>
               :   92824:	movl   $0x0,0xb0(%rsp)
               :   9282f:	mov    %edi,%edx
               :   92831:	cmp    $0x12,%edx
               :   92834:	jbe    93770 <mlx5_tx_burst_mtiv_empw+0x21a0>
               :   9283a:	lea    0x104d3f(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :   92841:	movzwl 0x22(%r11),%ebx
               :   92846:	mov    (%rax),%r12
               :   92849:	mov    %rcx,%r15
               :   9284c:	movzwl 0xc0(%rsp),%esi
               :   92854:	movzwl 0xce(%rsp),%r14d
               :   9285d:	mov    %ebx,%r10d
               :   92860:	and    %r12,%r15
               :   92863:	cmp    %edx,%ebx
               :   92865:	jb     92870 <mlx5_tx_burst_mtiv_empw+0x12a0>
               :   92867:	test   %r15,%r15
               :   9286a:	je     941f0 <mlx5_tx_burst_mtiv_empw+0x2c20>
               :   92870:	movzwl 0x28(%r13),%r9d
               :   92875:	mov    %r9d,0x88(%rsp)
               :   9287d:	mov    %r9d,%eax
               :   92880:	movzwl 0x26(%r11),%r9d
               :   92885:	test   %r9w,%r9w
               :   92889:	je     93d68 <mlx5_tx_burst_mtiv_empw+0x2798>
               :   9288f:	cmp    %edx,%r9d
               :   92892:	cmova  %edx,%r9d
               :   92896:	mov    %r9d,0x60(%rsp)
               :   9289b:	test   %r15,%r15
               :   9289e:	jne    928c0 <mlx5_tx_burst_mtiv_empw+0x12f0>
               :   928a0:	cmp    %ax,%r10w
               :   928a4:	jae    93db0 <mlx5_tx_burst_mtiv_empw+0x27e0>
               :   928aa:	mov    %r13,%rax
               :   928ad:	movzwl 0x10(%rax),%edi
               :   928b1:	add    (%rax),%rdi
               :   928b4:	neg    %rdi
               :   928b7:	and    $0x3f,%edi
               :   928ba:	jne    97049 <mlx5_tx_burst_mtiv_empw+0x5a79>
               :   928c0:	mov    0x60(%rsp),%eax
               :   928c4:	add    $0xd,%eax
               :   928c7:	shr    $0x4,%eax
               :   928ca:	add    %esi,%eax
               :   928cc:	lea    0x2(%rax),%edi
               :   928cf:	add    $0x5,%eax
               :   928d2:	shr    $0x2,%eax
               :   928d5:	cmp    %r14d,%eax
               :   928d8:	ja     93970 <mlx5_tx_burst_mtiv_empw+0x23a0>
               :   928de:	cmp    $0x3c,%edi
               :   928e1:	ja     96242 <mlx5_tx_burst_mtiv_empw+0x4c72>
               :   928e7:	mov    %edx,%edx
               :   928e9:	movzwl 0xa(%r11),%eax
               :   928ee:	add    %rdx,0x158(%r11)
               :   928f5:	movzwl 0x10(%r11),%edx
               :   928fa:	mov    0xf8(%r11),%rbx
               :   92901:	and    %eax,%edx
               :   92903:	movzwl %dx,%edx
               :   92906:	shl    $0x6,%rdx
               :   9290a:	add    %rdx,%rbx
               :   9290d:	shl    $0x8,%eax
               :   92910:	mov    %rbx,0xb8(%rsp)
               :   92918:	or     $0xa,%eax
               :   9291b:	bswap  %eax
               :   9291d:	mov    %eax,(%rbx)
               :   9291f:	mov    0x28(%r11),%eax
               :   92923:	bswap  %eax
               :   92925:	mov    0x1036ac(%rip),%rdx        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :   9292c:	mov    %eax,0x4(%rbx)
               :   9292f:	movq   $0x4000000,0x8(%rbx)
               :   92937:	movq   $0x0,0x10(%rbx)
               :   9293f:	xor    %eax,%eax
               :   92941:	test   %rcx,(%rdx)
               :   92944:	je     92957 <mlx5_tx_burst_mtiv_empw+0x1387>
               :   92946:	mov    0x103603(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :   9294d:	movslq (%rax),%rax
               :   92950:	mov    0x0(%r13,%rax,1),%eax
               :   92955:	bswap  %eax
               :   92957:	mov    0xb8(%rsp),%rdi
               :   9295f:	mov    0xb0(%rsp),%esi
               :   92966:	mov    %eax,0x18(%rdi)
               :   92969:	movzwl 0x28(%r13),%edx
               :   9296e:	lea    0x1e(%rdi),%r14
               :   92972:	test   %esi,%esi
               :   92974:	jne    93980 <mlx5_tx_burst_mtiv_empw+0x23b0>
               :   9297a:	mov    0x60(%rsp),%esi
               :   9297e:	xor    %ecx,%ecx
               :   92980:	mov    0x100(%r11),%rax
               :   92987:	mov    %r14,0x48(%rsp)
               :   9298c:	sub    %r14,%rax
               :   9298f:	cmp    %eax,%esi
               :   92991:	cmovb  %esi,%eax
               :   92994:	mov    %r11,0x40(%rsp)
               :   92999:	mov    %eax,0x50(%rsp)
               :   9299d:	mov    %r11,%rax
               :   929a0:	movzwl 0x26(%rax),%eax
               :   929a4:	mov    0xb0(%rsp),%ebx
               :   929ab:	mov    %eax,%esi
               :   929ad:	sub    %ebx,%esi
               :   929af:	cmp    %ebx,%eax
               :   929b1:	mov    $0x0,%eax
               :   929b6:	cmovbe %eax,%esi
               :   929b9:	lea    0xf8(%rsp),%rax
               :   929c1:	mov    %esi,0x18(%rsp)
               :   929c5:	mov    %rax,0x10(%rsp)
               :   929ca:	mov    0x50(%rsp),%r15d
               :   929cf:	mov    0x48(%rsp),%rbx
               :   929d4:	xor    %r12d,%r12d
               :   929d7:	cmp    %dx,%cx
               :   929da:	jae    92abf <mlx5_tx_burst_mtiv_empw+0x14ef>
               :   929e0:	movzwl 0x10(%r13),%eax
               :   929e5:	movzwl %cx,%esi
               :   929e8:	add    %rsi,%rax
               :   929eb:	movzwl %cx,%esi
               :   929ee:	sub    %esi,%edx
               :   929f0:	add    0x0(%r13),%rax
               :   929f4:	mov    %edx,%esi
               :   929f6:	cmp    %r15d,%edx
               :   929f9:	mov    %rax,%rdx
               :   929fc:	cmova  %r15d,%esi
               :   92a00:	or     %rbx,%rdx
               :   92a03:	and    $0x1f,%edx
               :   92a06:	mov    %esi,%r8d
               :   92a09:	jne    92e20 <mlx5_tx_burst_mtiv_empw+0x1850>
               :   92a0f:	cmp    $0xf,%esi
               :   92a12:	jbe    92ee0 <mlx5_tx_burst_mtiv_empw+0x1910>
               :   92a18:	cmp    $0x20,%esi
               :   92a1b:	jbe    93950 <mlx5_tx_burst_mtiv_empw+0x2380>
               :   92a21:	cmp    $0x40,%r8
               :   92a25:	jbe    93f60 <mlx5_tx_burst_mtiv_empw+0x2990>
               :   92a2b:	lea    -0x40(%r8),%r11
               :   92a2f:	shr    $0x6,%r11
               :   92a33:	lea    0x1(%r11),%r9
               :   92a37:	shl    $0x6,%r9
               :   92a3b:	lea    (%rbx,%r9,1),%r10
               :   92a3f:	mov    %rbx,%rdx
               :   92a42:	mov    %rax,%rdi
               :   92a45:	nopl   (%rax)
               :   92a48:	vmovdqu64 (%rdi),%ymm3
               :   92a4e:	add    $0x40,%rdx
               :   92a52:	vmovdqu64 %ymm3,-0x40(%rdx)
               :   92a59:	vmovdqu64 0x20(%rdi),%ymm4
               :   92a60:	add    $0x40,%rdi
               :   92a64:	vmovdqu64 %ymm4,-0x20(%rdx)
               :   92a6b:	cmp    %r10,%rdx
               :   92a6e:	jne    92a48 <mlx5_tx_burst_mtiv_empw+0x1478>
               :   92a70:	neg    %r11
               :   92a73:	shl    $0x6,%r11
               :   92a77:	lea    -0x80(%r8,%r11,1),%rdi
               :   92a7c:	add    %rdi,%r9
               :   92a7f:	add    %r9,%rax
               :   92a82:	vmovdqu64 (%rax),%ymm4
               :   92a88:	add    %rdi,%rdx
               :   92a8b:	vmovdqu64 %ymm4,(%rdx)
               :   92a91:	vmovdqu64 0x20(%rax),%ymm3
               :   92a98:	vmovdqu64 %ymm3,0x20(%rdx)
               :   92a9f:	nop
               :   92aa0:	movzwl 0x28(%r13),%edx
               :   92aa5:	add    %esi,%r12d
               :   92aa8:	add    %esi,%ecx
               :   92aaa:	sub    %esi,%r15d
               :   92aad:	je     94de0 <mlx5_tx_burst_mtiv_empw+0x3810>
               :   92ab3:	add    %r8,%rbx
               :   92ab6:	cmp    %dx,%cx
               :   92ab9:	jb     929e0 <mlx5_tx_burst_mtiv_empw+0x1410>
               :   92abf:	mov    0x40(%r13),%r14
               :   92ac3:	movzwl 0x12(%r13),%eax
               :   92ac8:	lea    0x12(%r13),%rcx
               :   92acc:	cmp    $0x1,%ax
               :   92ad0:	jne    95130 <mlx5_tx_burst_mtiv_empw+0x3b60>
               :   92ad6:	mov    0x18(%r13),%rax
               :   92ada:	movabs $0x6000000000000000,%rdi
               :   92ae4:	mov    0x38(%r13),%r8
               :   92ae8:	test   %rdi,%rax
               :   92aeb:	je     92b53 <mlx5_tx_burst_mtiv_empw+0x1583>
               :   92aed:	movabs $0x2000000000000000,%rdi
               :   92af7:	test   %rdi,%rax
               :   92afa:	je     93fe0 <mlx5_tx_burst_mtiv_empw+0x2a10>
               :   92b00:	mov    0x44(%r8),%edx
               :   92b04:	test   %edx,%edx
               :   92b06:	jne    93f90 <mlx5_tx_burst_mtiv_empw+0x29c0>
               :   92b0c:	testb  $0x1,0xc4(%r8)
               :   92b14:	je     93f9e <mlx5_tx_burst_mtiv_empw+0x29ce>
               :   92b1a:	mov    $0xc0,%eax
               :   92b1f:	testb  $0x1,0x4(%r8,%rax,1)
               :   92b25:	je     93f88 <mlx5_tx_burst_mtiv_empw+0x29b8>
               :   92b2b:	movabs $0x2000000000000000,%rdi
               :   92b35:	mov    %rdi,0x18(%r13)
               :   92b39:	mov    0x50(%r13),%rax
               :   92b3d:	movzwl 0x10(%rax),%edx
               :   92b41:	lea    0x10(%rax),%rcx
               :   92b45:	cmp    $0x1,%dx
               :   92b49:	jne    94c5d <mlx5_tx_burst_mtiv_empw+0x368d>
               :   92b4f:	mov    0x38(%r13),%r8
               :   92b53:	mov    0x44(%r8),%edx
               :   92b57:	vzeroupper 
               :   92b5a:	cmpq   $0x0,0x40(%r13)
               :   92b5f:	je     92b69 <mlx5_tx_burst_mtiv_empw+0x1599>
               :   92b61:	movq   $0x0,0x40(%r13)
               :   92b69:	cmpw   $0x1,0x14(%r13)
               :   92b6f:	je     92b7b <mlx5_tx_burst_mtiv_empw+0x15ab>
               :   92b71:	mov    $0x1,%edi
               :   92b76:	mov    %di,0x14(%r13)
               :   92b7b:	mov    %r8,0x88(%rsp)
               :   92b83:	mov    %r13,0xf8(%rsp)
               :   92b8b:	mov    %edx,0x58(%rsp)
               :   92b8f:	data16 lea 0x1032b1(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   92b97:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   92b9f:	mov    0x88(%rsp),%r8
               :   92ba7:	mov    (%rax),%r13d
               :   92baa:	cmp    $0x7f,%r13d
               :   92bae:	ja     93e68 <mlx5_tx_burst_mtiv_empw+0x2898>
               :   92bb4:	mov    0x58(%rsp),%edx
               :   92bb8:	test   %edx,%edx
               :   92bba:	je     93e68 <mlx5_tx_burst_mtiv_empw+0x2898>
               :   92bc0:	imul   $0x2040,%r13,%r13
               :   92bc7:	add    0x60(%r8),%r13
               :   92bcb:	je     93e68 <mlx5_tx_burst_mtiv_empw+0x2898>
               :   92bd1:	mov    0x4(%r13),%eax
               :   92bd5:	test   %eax,%eax
               :   92bd7:	je     93e68 <mlx5_tx_burst_mtiv_empw+0x2898>
               :   92bdd:	mov    0x8(%r13),%edx
               :   92be1:	lea    0x1(%rdx),%esi
               :   92be4:	cmp    %esi,%eax
               :   92be6:	jb     937a0 <mlx5_tx_burst_mtiv_empw+0x21d0>
               :   92bec:	mov    %esi,0x8(%r13)
               :   92bf0:	lea    0x40(%r13,%rdx,8),%rcx
               :   92bf5:	mov    0xf8(%rsp),%rax
               :   92bfd:	mov    %rax,(%rcx)
               :   92c00:	mov    0x18(%r14),%rax
               :   92c04:	lea    0x104975(%rip),%rdi        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :   92c0b:	decw   0xc0(%rsp)
               :   92c13:	test   %rax,(%rdi)
               :   92c16:	je     93720 <mlx5_tx_burst_mtiv_empw+0x2150>
               :   92c1c:	mov    0x18(%rsp),%eax
               :   92c20:	cmp    %r12d,%eax
               :   92c23:	jbe    932e8 <mlx5_tx_burst_mtiv_empw+0x1d18>
               :   92c29:	movzwl 0x28(%r14),%ecx
               :   92c2e:	sub    %r12d,%eax
               :   92c31:	mov    %ecx,%edx
               :   92c33:	cmp    %ecx,%eax
               :   92c35:	ja     93e98 <mlx5_tx_burst_mtiv_empw+0x28c8>
               :   92c3b:	cmp    %eax,%r15d
               :   92c3e:	cmova  %eax,%r15d
               :   92c42:	mov    %r14,%r13
               :   92c45:	xor    %ecx,%ecx
               :   92c47:	jmpq   929d7 <mlx5_tx_burst_mtiv_empw+0x1407>
               :   92c4c:	nopl   0x0(%rax)
               :   92c50:	movzwl 0xcc(%rsp),%r15d
               :   92c59:	jmpq   9279e <mlx5_tx_burst_mtiv_empw+0x11ce>
               :   92c5e:	xchg   %ax,%ax
               :   92c60:	movl   $0x4,0xb0(%rsp)
               :   92c6b:	lea    0x4(%rdi),%edx
               :   92c6e:	jmpq   92831 <mlx5_tx_burst_mtiv_empw+0x1261>
               :   92c73:	nopl   0x0(%rax,%rax,1)
               :   92c78:	cmp    0x50(%r14),%rax
               :   92c7c:	jae    924f6 <mlx5_tx_burst_mtiv_empw+0xf26>
               :   92c82:	xor    %eax,%eax
               :   92c84:	nopl   0x0(%rax)
               :   92c88:	mov    %ax,0x44(%r14)
               :   92c8d:	mov    0x10(%rcx),%eax
               :   92c90:	jmpq   919e5 <mlx5_tx_burst_mtiv_empw+0x415>
               :   92c95:	nopl   (%rax)
               :   92c98:	cmp    0x64(%r14),%rax
               :   92c9c:	jae    9250c <mlx5_tx_burst_mtiv_empw+0xf3c>
               :   92ca2:	lea    0x5c(%r14),%rcx
               :   92ca6:	mov    $0x1,%eax
               :   92cab:	jmp    92c88 <mlx5_tx_burst_mtiv_empw+0x16b8>
               :   92cad:	nopl   (%rax)
               :   92cb0:	lea    0x4(%rax,%rsi,1),%esi
               :   92cb4:	movq   $0x4,0xb8(%rsp)
               :   92cc0:	add    %edx,%esi
               :   92cc2:	mov    $0x4,%r11d
               :   92cc8:	jmpq   92116 <mlx5_tx_burst_mtiv_empw+0xb46>
               :   92ccd:	nopl   (%rax)
               :   92cd0:	cmp    0x78(%r14),%rax
               :   92cd4:	jae    9251e <mlx5_tx_burst_mtiv_empw+0xf4e>
               :   92cda:	lea    0x70(%r14),%rcx
               :   92cde:	mov    $0x2,%eax
               :   92ce3:	jmp    92c88 <mlx5_tx_burst_mtiv_empw+0x16b8>
               :   92ce5:	nopl   (%rax)
               :   92ce8:	cmp    0x8c(%r14),%rax
               :   92cef:	jae    92533 <mlx5_tx_burst_mtiv_empw+0xf63>
               :   92cf5:	lea    0x84(%r14),%rcx
               :   92cfc:	mov    $0x3,%eax
               :   92d01:	jmp    92c88 <mlx5_tx_burst_mtiv_empw+0x16b8>
               :   92d03:	nopl   0x0(%rax,%rax,1)
               :   92d08:	cmp    0xa0(%r14),%rax
               :   92d0f:	jae    92548 <mlx5_tx_burst_mtiv_empw+0xf78>
               :   92d15:	lea    0x98(%r14),%rcx
               :   92d1c:	mov    $0x4,%eax
               :   92d21:	jmpq   92c88 <mlx5_tx_burst_mtiv_empw+0x16b8>
               :   92d26:	nopw   %cs:0x0(%rax,%rax,1)
               :   92d30:	mov    (%r10),%rdx
               :   92d33:	lea    0x8(%r10),%rcx
               :   92d37:	mov    %rdx,(%rbx)
               :   92d3a:	lea    0x8(%rbx),%rdx
               :   92d3e:	jmpq   926a0 <mlx5_tx_burst_mtiv_empw+0x10d0>
               :   92d43:	nopl   0x0(%rax,%rax,1)
               :   92d48:	mov    (%r10),%rdx
               :   92d4b:	lea    0x8(%r10),%rcx
               :   92d4f:	mov    %rdx,(%rbx)
               :   92d52:	lea    0x8(%rbx),%rdx
               :   92d56:	jmpq   92614 <mlx5_tx_burst_mtiv_empw+0x1044>
               :   92d5b:	nopl   0x0(%rax,%rax,1)
               :   92d60:	cmp    0xb4(%r14),%rax
               :   92d67:	jae    9255d <mlx5_tx_burst_mtiv_empw+0xf8d>
               :   92d6d:	lea    0xac(%r14),%rcx
               :   92d74:	mov    $0x5,%eax
               :   92d79:	jmpq   92c88 <mlx5_tx_burst_mtiv_empw+0x16b8>
               :   92d7e:	xchg   %ax,%ax
               :   92d80:	cmp    0xc8(%r14),%rax
               :   92d87:	jae    92572 <mlx5_tx_burst_mtiv_empw+0xfa2>
               :   92d8d:	lea    0xc0(%r14),%rcx
               :   92d94:	mov    $0x6,%eax
               :   92d99:	jmpq   92c88 <mlx5_tx_burst_mtiv_empw+0x16b8>
               :   92d9e:	xchg   %ax,%ax
               :   92da0:	vmovdqu64 (%r10),%xmm4
               :   92da6:	vmovups %xmm4,(%rbx)
               :   92daa:	vmovdqu64 -0x10(%r10,%rax,1),%xmm7
               :   92db2:	vmovups %xmm7,-0x10(%rbx,%rax,1)
               :   92db8:	jmpq   92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   92dbd:	nopl   (%rax)
               :   92dc0:	vmovdqu64 (%r10),%xmm3
               :   92dc6:	vmovups %xmm3,(%rbx)
               :   92dca:	vmovdqu64 -0x10(%r10,%rax,1),%xmm5
               :   92dd2:	vmovups %xmm5,-0x10(%rbx,%rax,1)
               :   92dd8:	jmpq   92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   92ddd:	nopl   (%rax)
               :   92de0:	vmovdqu64 (%r10),%xmm6
               :   92de6:	vmovups %xmm6,(%rbx)
               :   92dea:	vmovdqu64 -0x10(%r10,%rax,1),%xmm4
               :   92df2:	vmovups %xmm4,-0x10(%rbx,%rax,1)
               :   92df8:	jmpq   926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   92dfd:	nopl   (%rax)
               :   92e00:	vmovdqu64 (%r10),%xmm2
               :   92e06:	vmovups %xmm2,(%rbx)
               :   92e0a:	vmovdqu64 -0x10(%r10,%rax,1),%xmm0
               :   92e12:	vmovups %xmm0,-0x10(%rbx,%rax,1)
               :   92e18:	jmpq   926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   92e1d:	nopl   (%rax)
               :   92e20:	cmp    $0xf,%esi
               :   92e23:	jbe    92ee0 <mlx5_tx_burst_mtiv_empw+0x1910>
               :   92e29:	cmp    $0x20,%esi
               :   92e2c:	jbe    93930 <mlx5_tx_burst_mtiv_empw+0x2360>
               :   92e32:	cmp    $0x30,%r8
               :   92e36:	jbe    93f30 <mlx5_tx_burst_mtiv_empw+0x2960>
               :   92e3c:	vmovdqu64 (%rax),%ymm0
               :   92e42:	cmp    $0x40,%r8
               :   92e46:	jbe    951f0 <mlx5_tx_burst_mtiv_empw+0x3c20>
               :   92e4c:	cmp    $0x100,%r8
               :   92e53:	ja     94509 <mlx5_tx_burst_mtiv_empw+0x2f39>
               :   92e59:	cmp    $0x7f,%r8
               :   92e5d:	jbe    95ba9 <mlx5_tx_burst_mtiv_empw+0x45d9>
               :   92e63:	vmovdqu64 %ymm0,(%rbx)
               :   92e69:	vmovdqu64 0x20(%rax),%ymm6
               :   92e70:	lea    -0x80(%r8),%rdx
               :   92e74:	vmovdqu64 %ymm6,0x20(%rbx)
               :   92e7b:	vmovdqu64 0x40(%rax),%ymm0
               :   92e82:	lea    0x80(%rbx),%rdi
               :   92e89:	vmovdqu64 %ymm0,0x40(%rbx)
               :   92e90:	vmovdqu64 0x60(%rax),%ymm2
               :   92e97:	sub    $0xffffffffffffff80,%rax
               :   92e9b:	vmovdqu64 %ymm2,0x60(%rbx)
               :   92ea2:	cmp    $0x3f,%rdx
               :   92ea6:	ja     96895 <mlx5_tx_burst_mtiv_empw+0x52c5>
               :   92eac:	cmp    $0x20,%rdx
               :   92eb0:	jbe    95270 <mlx5_tx_burst_mtiv_empw+0x3ca0>
               :   92eb6:	vmovdqu64 (%rax),%ymm5
               :   92ebc:	vmovdqu64 %ymm5,(%rdi)
               :   92ec2:	vmovdqu64 -0x20(%rax,%rdx,1),%ymm0
               :   92eca:	vmovdqu64 %ymm0,-0x20(%rdi,%rdx,1)
               :   92ed2:	jmpq   92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   92ed7:	nopw   0x0(%rax,%rax,1)
               :   92ee0:	mov    %rbx,%rdx
               :   92ee3:	test   $0x8,%sil
               :   92ee7:	je     92ef7 <mlx5_tx_burst_mtiv_empw+0x1927>
               :   92ee9:	mov    (%rax),%rdx
               :   92eec:	add    $0x8,%rax
               :   92ef0:	mov    %rdx,(%rbx)
               :   92ef3:	lea    0x8(%rbx),%rdx
               :   92ef7:	test   $0x4,%sil
               :   92efb:	je     92f0a <mlx5_tx_burst_mtiv_empw+0x193a>
               :   92efd:	mov    (%rax),%edi
               :   92eff:	add    $0x4,%rdx
               :   92f03:	mov    %edi,-0x4(%rdx)
               :   92f06:	add    $0x4,%rax
               :   92f0a:	test   $0x2,%sil
               :   92f0e:	je     92f1f <mlx5_tx_burst_mtiv_empw+0x194f>
               :   92f10:	movzwl (%rax),%edi
               :   92f13:	add    $0x2,%rdx
               :   92f17:	mov    %di,-0x2(%rdx)
               :   92f1b:	add    $0x2,%rax
               :   92f1f:	test   $0x1,%sil
               :   92f23:	je     92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   92f29:	movzbl (%rax),%eax
               :   92f2c:	mov    %al,(%rdx)
               :   92f2e:	jmpq   92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   92f33:	nopl   0x0(%rax,%rax,1)
               :   92f38:	mov    %r15,%rax
               :   92f3b:	movzwl %r11w,%ebx
               :   92f3f:	mov    %rax,%r11
               :   92f42:	mov    0xb0(%rsp),%eax
               :   92f49:	movzwl 0xa8(%rsp),%r13d
               :   92f52:	add    %rax,0x158(%r14)
               :   92f59:	mov    0x98(%rsp),%eax
               :   92f60:	mov    %rbx,%r15
               :   92f63:	sub    0xc0(%rsp),%eax
               :   92f6a:	shr    $0x4,%eax
               :   92f6d:	lea    0x2(%rax),%edx
               :   92f70:	or     0x28(%r14),%edx
               :   92f74:	bswap  %edx
               :   92f76:	add    $0x5,%eax
               :   92f79:	shr    $0x2,%eax
               :   92f7c:	add    %ax,0xa(%r14)
               :   92f81:	sub    %ax,0xce(%rsp)
               :   92f89:	mov    %edx,0x4(%r11)
               :   92f8d:	mov    %r11,0xb8(%rsp)
               :   92f95:	jne    920a0 <mlx5_tx_burst_mtiv_empw+0xad0>
               :   92f9b:	jmpq   91d7c <mlx5_tx_burst_mtiv_empw+0x7ac>
               :   92fa0:	movzwl 0x28(%r9),%edx
               :   92fa5:	movzwl 0x24(%r14),%esi
               :   92faa:	mov    %rdx,%rax
               :   92fad:	add    $0x4,%rdx
               :   92fb1:	cmp    %rsi,%rdx
               :   92fb4:	jbe    916f0 <mlx5_tx_burst_mtiv_empw+0x120>
               :   92fba:	jmpq   9303c <mlx5_tx_burst_mtiv_empw+0x1a6c>
               :   92fbf:	nop
               :   92fc0:	movzwl 0x28(%r9),%edx
               :   92fc5:	movzwl 0x24(%r14),%esi
               :   92fca:	mov    %rdx,%rax
               :   92fcd:	add    $0x4,%rdx
               :   92fd1:	cmp    %rsi,%rdx
               :   92fd4:	jbe    91a98 <mlx5_tx_burst_mtiv_empw+0x4c8>
               :   92fda:	mov    0xb0(%rsp),%edx
               :   92fe1:	mov    %r15,%rbx
               :   92fe4:	add    %rdx,0x158(%r14)
               :   92feb:	mov    0x98(%rsp),%edx
               :   92ff2:	mov    %r11d,%r15d
               :   92ff5:	sub    0xc0(%rsp),%edx
               :   92ffc:	shr    $0x4,%edx
               :   92fff:	lea    0x2(%rdx),%esi
               :   93002:	movzwl 0xa8(%rsp),%r13d
               :   9300b:	mov    %rbx,%r11
               :   9300e:	or     0x28(%r14),%esi
               :   93012:	bswap  %esi
               :   93014:	add    $0x5,%edx
               :   93017:	shr    $0x2,%edx
               :   9301a:	add    %dx,0xa(%r14)
               :   9301f:	sub    %dx,0xce(%rsp)
               :   93027:	mov    %esi,0x4(%rbx)
               :   9302a:	mov    %r11,0xb8(%rsp)
               :   93032:	movzwl %r15w,%ebx
               :   93036:	je     91d7c <mlx5_tx_burst_mtiv_empw+0x7ac>
               :   9303c:	mov    0x94(%rsp),%esi
               :   93043:	movzwl %r15w,%edx
               :   93047:	mov    0xa0(%rsp),%rdi
               :   9304f:	sub    %edx,%esi
               :   93051:	mov    %esi,0xc0(%rsp)
               :   93058:	lea    0x8(%rdi,%rbx,8),%rbx
               :   9305d:	mov    0xb8(%rsp),%r12
               :   93065:	mov    %rbx,0xb0(%rsp)
               :   9306d:	mov    %r9,%rbx
               :   93070:	movabs $0x200000000000000,%r11
               :   9307a:	movzwl %ax,%r9d
               :   9307e:	and    %rcx,%r11
               :   93081:	je     95a9d <mlx5_tx_burst_mtiv_empw+0x44cd>
               :   93087:	lea    0x4(%r9),%esi
               :   9308b:	mov    $0x4,%r10d
               :   93091:	mov    $0x4,%r8d
               :   93097:	movzwl 0x10(%rbx),%eax
               :   9309b:	mov    (%rbx),%rdi
               :   9309e:	lea    (%rdi,%rax,1),%rdx
               :   930a2:	movzwl 0x22(%r14),%eax
               :   930a7:	cmp    %esi,%eax
               :   930a9:	jae    95f35 <mlx5_tx_burst_mtiv_empw+0x4965>
               :   930af:	movzwl 0xa(%r14),%eax
               :   930b4:	movzwl 0x10(%r14),%r12d
               :   930b9:	and    %eax,%r12d
               :   930bc:	movzwl %r12w,%r12d
               :   930c0:	shl    $0x6,%r12
               :   930c4:	shl    $0x8,%eax
               :   930c7:	add    0xf8(%r14),%r12
               :   930ce:	or     $0xa,%eax
               :   930d1:	bswap  %eax
               :   930d3:	mov    %eax,(%r12)
               :   930d7:	mov    0x28(%r14),%eax
               :   930db:	or     $0x4,%eax
               :   930de:	bswap  %eax
               :   930e0:	mov    0x102ef1(%rip),%rdi        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :   930e7:	mov    %eax,0x4(%r12)
               :   930ec:	movq   $0x4000000,0x8(%r12)
               :   930f5:	movq   $0x0,0x10(%r12)
               :   930fe:	xor    %eax,%eax
               :   93100:	test   %rcx,(%rdi)
               :   93103:	je     93114 <mlx5_tx_burst_mtiv_empw+0x1b44>
               :   93105:	mov    0x102e44(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :   9310c:	movslq (%rax),%rax
               :   9310f:	mov    (%rbx,%rax,1),%eax
               :   93112:	bswap  %eax
               :   93114:	mov    %eax,0x18(%r12)
               :   93119:	movzwl (%rdx),%eax
               :   9311c:	mov    $0x1200,%r9d
               :   93122:	mov    %r9w,0x1c(%r12)
               :   93128:	mov    %ax,0x1e(%r12)
               :   9312e:	test   %r8d,%r8d
               :   93131:	jne    96828 <mlx5_tx_burst_mtiv_empw+0x5258>
               :   93137:	vmovdqu64 0x2(%rdx),%xmm1
               :   93141:	vmovups %xmm1,0x20(%r12)
               :   93148:	mov    (%rbx),%rax
               :   9314b:	movzwl 0x10(%rbx),%edx
               :   9314f:	mov    %rax,%rcx
               :   93152:	sub    %r10,%rcx
               :   93155:	lea    0x12(%rcx,%rdx,1),%rdx
               :   9315a:	sub    $0x12,%esi
               :   9315d:	bswap  %esi
               :   9315f:	mov    %esi,0x30(%r12)
               :   93164:	mov    0x38(%r14),%rcx
               :   93168:	mov    0x40(%r14),%esi
               :   9316c:	lea    0x38(%r14),%rdi
               :   93170:	cmp    %esi,(%rcx)
               :   93172:	jne    97c62 <mlx5_tx_burst_mtiv_empw+0x6692>
               :   93178:	movzwl 0x44(%r14),%ecx
               :   9317d:	lea    0x48(%r14),%rsi
               :   93181:	lea    (%rcx,%rcx,4),%rcx
               :   93185:	lea    (%rsi,%rcx,4),%rcx
               :   93189:	cmp    (%rcx),%rax
               :   9318c:	jb     97066 <mlx5_tx_burst_mtiv_empw+0x5a96>
               :   93192:	cmp    0x8(%rcx),%rax
               :   93196:	jae    97066 <mlx5_tx_burst_mtiv_empw+0x5a96>
               :   9319c:	mov    0x10(%rcx),%eax
               :   9319f:	cmp    $0xffffffff,%eax
               :   931a2:	je     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   931a8:	mov    %eax,0x34(%r12)
               :   931ad:	bswap  %rdx
               :   931b0:	movzwl (%r14),%eax
               :   931b4:	mov    %rdx,0x38(%r12)
               :   931b9:	lea    0x1(%rax),%edx
               :   931bc:	and    0x8(%r14),%ax
               :   931c1:	movzwl %ax,%eax
               :   931c4:	decw   0xce(%rsp)
               :   931cc:	incw   0xa(%r14)
               :   931d1:	mov    %dx,(%r14)
               :   931d5:	mov    %rbx,0x188(%r14,%rax,8)
               :   931dd:	dec    %r13d
               :   931e0:	movzwl 0x28(%rbx),%eax
               :   931e4:	add    %r8d,%eax
               :   931e7:	add    %rax,0x158(%r14)
               :   931ee:	inc    %r15d
               :   931f1:	decl   0xc0(%rsp)
               :   931f8:	mov    0xc0(%rsp),%eax
               :   931ff:	je     9aa4a <mlx5_tx_burst_mtiv_empw+0x947a>
               :   93205:	test   %r13w,%r13w
               :   93209:	je     9aa4a <mlx5_tx_burst_mtiv_empw+0x947a>
               :   9320f:	cmpw   $0x0,0xce(%rsp)
               :   93218:	je     9aa4a <mlx5_tx_burst_mtiv_empw+0x947a>
               :   9321e:	addq   $0x8,0xb0(%rsp)
               :   93227:	mov    0xb0(%rsp),%rsi
               :   9322f:	mov    -0x8(%rsi),%rbx
               :   93233:	cmp    $0x1,%eax
               :   93236:	je     9323e <mlx5_tx_burst_mtiv_empw+0x1c6e>
               :   93238:	mov    (%rsi),%rax
               :   9323b:	prefetcht0 (%rax)
               :   9323e:	movzwl 0x14(%rbx),%eax
               :   93242:	cmp    $0x1,%ax
               :   93246:	ja     97cc8 <mlx5_tx_burst_mtiv_empw+0x66f8>
               :   9324c:	mov    0x18(%rbx),%rcx
               :   93250:	movabs $0x200000000000000,%rax
               :   9325a:	and    %rcx,%rax
               :   9325d:	bt     $0x32,%rcx
               :   93262:	jb     92090 <mlx5_tx_burst_mtiv_empw+0xac0>
               :   93268:	test   %rax,%rax
               :   9326b:	jne    9800f <mlx5_tx_burst_mtiv_empw+0x6a3f>
               :   93271:	mov    %rbx,%r9
               :   93274:	mov    %r12,0xb8(%rsp)
               :   9327c:	movzwl %r15w,%ebx
               :   93280:	jmpq   916f0 <mlx5_tx_burst_mtiv_empw+0x120>
               :   93285:	nopl   (%rax)
               :   93288:	mov    %r15,%rax
               :   9328b:	movzwl %r11w,%ebx
               :   9328f:	mov    %rax,0xb8(%rsp)
               :   93297:	mov    %rbx,%r15
               :   9329a:	jmpq   91d7c <mlx5_tx_burst_mtiv_empw+0x7ac>
               :   9329f:	nop
               :   932a0:	mov    %r8d,0x48(%rsp)
               :   932a5:	mov    %r10,0x50(%rsp)
               :   932aa:	mov    %r11d,0x20(%rsp)
               :   932af:	mov    %r9,0x58(%rsp)
               :   932b4:	mov    %rdi,0x80(%rsp)
               :   932bc:	vzeroupper 
               :   932bf:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :   932c4:	mov    0x48(%rsp),%r8d
               :   932c9:	mov    0x50(%rsp),%r10
               :   932ce:	mov    0x20(%rsp),%r11d
               :   932d3:	mov    0x58(%rsp),%r9
               :   932d8:	mov    0x80(%rsp),%rdi
               :   932e0:	jmpq   919bb <mlx5_tx_burst_mtiv_empw+0x3eb>
               :   932e5:	nopl   (%rax)
               :   932e8:	xor    %ecx,%ecx
               :   932ea:	add    %r12d,0xb0(%rsp)
               :   932f2:	mov    0xb0(%rsp),%eax
               :   932f9:	cmp    0x50(%rsp),%r12d
               :   932fe:	jb     9330a <mlx5_tx_burst_mtiv_empw+0x1d3a>
               :   93300:	cmp    %eax,0x60(%rsp)
               :   93304:	ja     96210 <mlx5_tx_burst_mtiv_empw+0x4c40>
               :   9330a:	mov    %r14,%rbx
               :   9330d:	mov    0x40(%rsp),%r11
               :   93312:	mov    0x48(%rsp),%r14
               :   93317:	movzwl 0xb0(%rsp),%eax
               :   9331f:	xchg   %al,%ah
               :   93321:	mov    0xb8(%rsp),%rsi
               :   93329:	mov    %ax,0x1c(%rsi)
               :   9332d:	mov    %r12d,%eax
               :   93330:	lea    0xf(%r14,%rax,1),%rax
               :   93335:	and    $0xfffffffffffffff0,%rax
               :   93339:	cmpw   $0x0,0xc0(%rsp)
               :   93342:	mov    %rax,%rsi
               :   93345:	mov    %rax,%r14
               :   93348:	je     934be <mlx5_tx_burst_mtiv_empw+0x1eee>
               :   9334e:	movzwl 0x28(%rbx),%edx
               :   93352:	test   %cx,%cx
               :   93355:	jne    94120 <mlx5_tx_burst_mtiv_empw+0x2b50>
               :   9335b:	movzwl 0xc0(%rsp),%r15d
               :   93364:	lea    0x38(%r11),%rax
               :   93368:	mov    %rax,0x88(%rsp)
               :   93370:	movzwl 0xa8(%rsp),%ecx
               :   93378:	dec    %r15d
               :   9337b:	lea    0x48(%r11),%r9
               :   9337f:	mov    %r11,%r12
               :   93382:	jmpq   9341c <mlx5_tx_burst_mtiv_empw+0x1e4c>
               :   93387:	nopw   0x0(%rax,%rax,1)
               :   93390:	or     $0x80000000,%eax
               :   93395:	bswap  %eax
               :   93397:	mov    %eax,(%r14)
               :   9339a:	lea    0x4(%r14),%rax
               :   9339e:	test   $0x8,%dl
               :   933a1:	je     933b3 <mlx5_tx_burst_mtiv_empw+0x1de3>
               :   933a3:	mov    0x0(%r13),%rax
               :   933a7:	add    $0x8,%rsi
               :   933ab:	mov    %rax,0x4(%r14)
               :   933af:	lea    0xc(%r14),%rax
               :   933b3:	test   $0x4,%dl
               :   933b6:	je     933c5 <mlx5_tx_burst_mtiv_empw+0x1df5>
               :   933b8:	mov    (%rsi),%edi
               :   933ba:	add    $0x4,%rax
               :   933be:	mov    %edi,-0x4(%rax)
               :   933c1:	add    $0x4,%rsi
               :   933c5:	test   $0x2,%dl
               :   933c8:	je     933d9 <mlx5_tx_burst_mtiv_empw+0x1e09>
               :   933ca:	movzwl (%rsi),%edi
               :   933cd:	add    $0x2,%rax
               :   933d1:	mov    %di,-0x2(%rax)
               :   933d5:	add    $0x2,%rsi
               :   933d9:	and    $0x1,%edx
               :   933dc:	je     933e3 <mlx5_tx_burst_mtiv_empw+0x1e13>
               :   933de:	movzbl (%rsi),%edx
               :   933e1:	mov    %dl,(%rax)
               :   933e3:	movzwl (%r12),%eax
               :   933e8:	dec    %ecx
               :   933ea:	lea    0x1(%rax),%edx
               :   933ed:	and    0x8(%r12),%ax
               :   933f3:	movzwl %ax,%eax
               :   933f6:	mov    %dx,(%r12)
               :   933fb:	add    $0x10,%r14
               :   933ff:	mov    %rbx,0x188(%r12,%rax,8)
               :   93407:	test   %r15w,%r15w
               :   9340b:	je     934b0 <mlx5_tx_burst_mtiv_empw+0x1ee0>
               :   93411:	mov    0x40(%rbx),%rbx
               :   93415:	movzwl 0x28(%rbx),%edx
               :   93419:	dec    %r15d
               :   9341c:	test   %dx,%dx
               :   9341f:	je     935b0 <mlx5_tx_burst_mtiv_empw+0x1fe0>
               :   93425:	cmp    %r14,0x100(%r12)
               :   9342d:	ja     93437 <mlx5_tx_burst_mtiv_empw+0x1e67>
               :   9342f:	mov    0xf8(%r12),%r14
               :   93437:	mov    (%rbx),%rdi
               :   9343a:	movzwl 0x10(%rbx),%r13d
               :   9343f:	movzwl %dx,%eax
               :   93442:	add    %rdi,%r13
               :   93445:	mov    %r13,%rsi
               :   93448:	cmp    $0xc,%dx
               :   9344c:	jbe    93390 <mlx5_tx_burst_mtiv_empw+0x1dc0>
               :   93452:	bswap  %eax
               :   93454:	mov    %eax,(%r14)
               :   93457:	mov    0x40(%r12),%esi
               :   9345c:	mov    0x38(%r12),%rax
               :   93461:	cmp    %esi,(%rax)
               :   93463:	jne    94d98 <mlx5_tx_burst_mtiv_empw+0x37c8>
               :   93469:	movzwl 0x44(%r12),%eax
               :   9346f:	mov    %r9,%rdx
               :   93472:	lea    (%rax,%rax,4),%rax
               :   93476:	lea    (%r9,%rax,4),%rax
               :   9347a:	cmp    (%rax),%rdi
               :   9347d:	jb     937e8 <mlx5_tx_burst_mtiv_empw+0x2218>
               :   93483:	cmp    0x8(%rax),%rdi
               :   93487:	jae    937e8 <mlx5_tx_burst_mtiv_empw+0x2218>
               :   9348d:	mov    0x10(%rax),%eax
               :   93490:	cmp    $0xffffffff,%eax
               :   93493:	je     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   93499:	mov    %eax,0x4(%r14)
               :   9349d:	bswap  %r13
               :   934a0:	mov    %r13,0x8(%r14)
               :   934a4:	jmpq   933e3 <mlx5_tx_burst_mtiv_empw+0x1e13>
               :   934a9:	nopl   0x0(%rax)
               :   934b0:	mov    %cx,0xa8(%rsp)
               :   934b8:	mov    %r12,%r11
               :   934bb:	mov    %r14,%rsi
               :   934be:	mov    0xb8(%rsp),%rdi
               :   934c6:	cmp    %rsi,%rdi
               :   934c9:	jae    93d40 <mlx5_tx_burst_mtiv_empw+0x2770>
               :   934cf:	mov    %rsi,%rax
               :   934d2:	sub    %rdi,%rax
               :   934d5:	shr    $0x4,%rax
               :   934d9:	mov    %rdi,%rbx
               :   934dc:	mov    0x28(%r11),%edx
               :   934e0:	or     %eax,%edx
               :   934e2:	bswap  %edx
               :   934e4:	add    $0x3,%eax
               :   934e7:	shr    $0x2,%eax
               :   934ea:	mov    %edx,0x4(%rbx)
               :   934ed:	add    %ax,0xa(%r11)
               :   934f2:	sub    %ax,0xce(%rsp)
               :   934fa:	decl   0x98(%rsp)
               :   93501:	incw   0x20(%rsp)
               :   93506:	cmpw   $0x0,0xce(%rsp)
               :   9350f:	sete   %dl
               :   93512:	cmpw   $0x0,0xa8(%rsp)
               :   9351b:	sete   %al
               :   9351e:	or     %al,%dl
               :   93520:	mov    0x98(%rsp),%ebx
               :   93527:	jne    93970 <mlx5_tx_burst_mtiv_empw+0x23a0>
               :   9352d:	test   %ebx,%ebx
               :   9352f:	je     93970 <mlx5_tx_burst_mtiv_empw+0x23a0>
               :   93535:	addq   $0x8,0x80(%rsp)
               :   9353e:	cmpl   $0x1,0x98(%rsp)
               :   93546:	mov    0x80(%rsp),%rax
               :   9354e:	mov    -0x8(%rax),%r13
               :   93552:	je     9355a <mlx5_tx_burst_mtiv_empw+0x1f8a>
               :   93554:	mov    (%rax),%rax
               :   93557:	prefetcht0 (%rax)
               :   9355a:	movzwl 0x14(%r13),%eax
               :   9355f:	mov    %ax,0xc0(%rsp)
               :   93567:	cmp    $0x1,%ax
               :   9356b:	ja     927e5 <mlx5_tx_burst_mtiv_empw+0x1215>
               :   93571:	mov    %r13,%r9
               :   93574:	mov    0x18(%r9),%rcx
               :   93578:	movzwl 0x20(%rsp),%ebx
               :   9357d:	movabs $0x200000000000000,%rax
               :   93587:	and    %rcx,%rax
               :   9358a:	bt     $0x32,%rcx
               :   9358f:	movzwl 0xa8(%rsp),%r13d
               :   93598:	mov    %rbx,%r15
               :   9359b:	mov    %r11,%r14
               :   9359e:	jae    916e7 <mlx5_tx_burst_mtiv_empw+0x117>
               :   935a4:	jmpq   920a0 <mlx5_tx_burst_mtiv_empw+0xad0>
               :   935a9:	nopl   0x0(%rax)
               :   935b0:	mov    0x40(%rbx),%rax
               :   935b4:	lea    0x12(%rbx),%r8
               :   935b8:	mov    %rax,0xc0(%rsp)
               :   935c0:	movzwl 0x12(%rbx),%eax
               :   935c4:	cmp    $0x1,%ax
               :   935c8:	jne    9626f <mlx5_tx_burst_mtiv_empw+0x4c9f>
               :   935ce:	mov    0x18(%rbx),%rax
               :   935d2:	movabs $0x6000000000000000,%rsi
               :   935dc:	mov    0x38(%rbx),%r13
               :   935e0:	test   %rsi,%rax
               :   935e3:	je     9364b <mlx5_tx_burst_mtiv_empw+0x207b>
               :   935e5:	movabs $0x2000000000000000,%rsi
               :   935ef:	test   %rsi,%rax
               :   935f2:	je     945a1 <mlx5_tx_burst_mtiv_empw+0x2fd1>
               :   935f8:	mov    0x44(%r13),%edx
               :   935fc:	test   %edx,%edx
               :   935fe:	jne    95bdc <mlx5_tx_burst_mtiv_empw+0x460c>
               :   93604:	testb  $0x1,0xc4(%r13)
               :   9360c:	je     95bea <mlx5_tx_burst_mtiv_empw+0x461a>
               :   93612:	mov    $0xc0,%eax
               :   93617:	testb  $0x1,0x4(%r13,%rax,1)
               :   9361d:	je     95bd4 <mlx5_tx_burst_mtiv_empw+0x4604>
               :   93623:	movabs $0x2000000000000000,%rdi
               :   9362d:	mov    %rdi,0x18(%rbx)
               :   93631:	mov    0x50(%rbx),%rax
               :   93635:	movzwl 0x10(%rax),%edx
               :   93639:	lea    0x10(%rax),%rsi
               :   9363d:	cmp    $0x1,%dx
               :   93641:	jne    98af0 <mlx5_tx_burst_mtiv_empw+0x7520>
               :   93647:	mov    0x38(%rbx),%r13
               :   9364b:	mov    0x44(%r13),%edx
               :   9364f:	vzeroupper 
               :   93652:	cmpq   $0x0,0x40(%rbx)
               :   93657:	je     93661 <mlx5_tx_burst_mtiv_empw+0x2091>
               :   93659:	movq   $0x0,0x40(%rbx)
               :   93661:	cmpw   $0x1,0x14(%rbx)
               :   93666:	je     93671 <mlx5_tx_burst_mtiv_empw+0x20a1>
               :   93668:	mov    $0x1,%eax
               :   9366d:	mov    %ax,0x14(%rbx)
               :   93671:	mov    %r9,0xa8(%rsp)
               :   93679:	mov    %ecx,0xb0(%rsp)
               :   93680:	mov    %edx,0x60(%rsp)
               :   93684:	mov    %rbx,0x100(%rsp)
               :   9368c:	data16 lea 0x1027b4(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   93694:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   9369c:	mov    0xb0(%rsp),%ecx
               :   936a3:	mov    0xa8(%rsp),%r9
               :   936ab:	mov    (%rax),%eax
               :   936ad:	cmp    $0x7f,%eax
               :   936b0:	ja     95ab0 <mlx5_tx_burst_mtiv_empw+0x44e0>
               :   936b6:	mov    0x60(%rsp),%edx
               :   936ba:	test   %edx,%edx
               :   936bc:	je     95ab0 <mlx5_tx_burst_mtiv_empw+0x44e0>
               :   936c2:	mov    %eax,%ebx
               :   936c4:	imul   $0x2040,%rbx,%rbx
               :   936cb:	add    0x60(%r13),%rbx
               :   936cf:	je     95ab0 <mlx5_tx_burst_mtiv_empw+0x44e0>
               :   936d5:	mov    0x4(%rbx),%eax
               :   936d8:	test   %eax,%eax
               :   936da:	je     95ab0 <mlx5_tx_burst_mtiv_empw+0x44e0>
               :   936e0:	mov    0x8(%rbx),%edx
               :   936e3:	lea    0x1(%rdx),%edi
               :   936e6:	cmp    %edi,%eax
               :   936e8:	jb     95210 <mlx5_tx_burst_mtiv_empw+0x3c40>
               :   936ee:	mov    %edi,0x8(%rbx)
               :   936f1:	lea    0x40(%rbx,%rdx,8),%rsi
               :   936f6:	mov    0x100(%rsp),%rax
               :   936fe:	mov    %rax,(%rsi)
               :   93701:	test   %r15w,%r15w
               :   93705:	je     934b0 <mlx5_tx_burst_mtiv_empw+0x1ee0>
               :   9370b:	mov    0xc0(%rsp),%rbx
               :   93713:	jmpq   93415 <mlx5_tx_burst_mtiv_empw+0x1e45>
               :   93718:	nopl   0x0(%rax,%rax,1)
               :   93720:	movzwl 0x28(%r14),%edx
               :   93725:	mov    %r14,%r13
               :   93728:	xor    %ecx,%ecx
               :   9372a:	jmpq   929d7 <mlx5_tx_burst_mtiv_empw+0x1407>
               :   9372f:	nop
               :   93730:	movzwl (%r14),%eax
               :   93734:	decw   0xa8(%rsp)
               :   9373c:	lea    0x1(%rax),%edx
               :   9373f:	and    0x8(%r14),%ax
               :   93744:	movzwl %ax,%eax
               :   93747:	mov    %dx,(%r14)
               :   9374b:	mov    %r9,0x188(%r14,%rax,8)
               :   93753:	jmpq   91a27 <mlx5_tx_burst_mtiv_empw+0x457>
               :   93758:	add    $0xd,%eax
               :   9375b:	shr    $0x4,%eax
               :   9375e:	lea    0x2(%rsi,%rax,1),%eax
               :   93762:	cmp    $0x3c,%eax
               :   93765:	jbe    96250 <mlx5_tx_burst_mtiv_empw+0x4c80>
               :   9376b:	nopl   0x0(%rax,%rax,1)
               :   93770:	movzwl 0x20(%rsp),%ebx
               :   93775:	incq   0x160(%r11)
               :   9377c:	mov    %rbx,%r15
               :   9377f:	mov    %r11,%r14
               :   93782:	jmpq   91d7c <mlx5_tx_burst_mtiv_empw+0x7ac>
               :   93787:	nopw   0x0(%rax,%rax,1)
               :   93790:	xor    %edi,%edi
               :   93792:	mov    %di,0xcc(%rsp)
               :   9379a:	jmpq   91ea4 <mlx5_tx_burst_mtiv_empw+0x8d4>
               :   9379f:	nop
               :   937a0:	movslq 0x58(%r8),%rax
               :   937a4:	lea    0x40(%r13),%rcx
               :   937a8:	cmp    $0xf,%eax
               :   937ab:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   937b1:	shl    $0x7,%rax
               :   937b5:	mov    %rcx,%rsi
               :   937b8:	add    0x102751(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   937bf:	mov    %r8,%rdi
               :   937c2:	mov    %rcx,0x88(%rsp)
               :   937ca:	callq  *0x70(%rax)
               :   937cd:	movl   $0x1,0x8(%r13)
               :   937d5:	mov    0x88(%rsp),%rcx
               :   937dd:	jmpq   92bf5 <mlx5_tx_burst_mtiv_empw+0x1625>
               :   937e2:	nopw   0x0(%rax,%rax,1)
               :   937e8:	mov    0x48(%r12),%rax
               :   937ed:	test   %rax,%rax
               :   937f0:	je     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   937f6:	cmp    %rax,%rdi
               :   937f9:	jb     93810 <mlx5_tx_burst_mtiv_empw+0x2240>
               :   937fb:	cmp    0x50(%r12),%rdi
               :   93800:	jae    93810 <mlx5_tx_burst_mtiv_empw+0x2240>
               :   93802:	xor    %eax,%eax
               :   93804:	jmpq   938da <mlx5_tx_burst_mtiv_empw+0x230a>
               :   93809:	nopl   0x0(%rax)
               :   93810:	mov    0x5c(%r12),%rax
               :   93815:	test   %rax,%rax
               :   93818:	je     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   9381e:	cmp    %rax,%rdi
               :   93821:	jae    942d8 <mlx5_tx_burst_mtiv_empw+0x2d08>
               :   93827:	mov    0x70(%r12),%rax
               :   9382c:	test   %rax,%rax
               :   9382f:	je     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   93835:	cmp    %rdi,%rax
               :   93838:	jbe    942f8 <mlx5_tx_burst_mtiv_empw+0x2d28>
               :   9383e:	mov    0x84(%r12),%rax
               :   93846:	test   %rax,%rax
               :   93849:	je     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   9384f:	cmp    %rax,%rdi
               :   93852:	jae    94318 <mlx5_tx_burst_mtiv_empw+0x2d48>
               :   93858:	mov    0x98(%r12),%rax
               :   93860:	test   %rax,%rax
               :   93863:	je     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   93869:	cmp    %rdi,%rax
               :   9386c:	jbe    94340 <mlx5_tx_burst_mtiv_empw+0x2d70>
               :   93872:	mov    0xac(%r12),%rax
               :   9387a:	test   %rax,%rax
               :   9387d:	je     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   9387f:	cmp    %rax,%rdi
               :   93882:	jae    94360 <mlx5_tx_burst_mtiv_empw+0x2d90>
               :   93888:	mov    0xc0(%r12),%rax
               :   93890:	test   %rax,%rax
               :   93893:	je     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   93895:	cmp    %rax,%rdi
               :   93898:	jb     938b1 <mlx5_tx_burst_mtiv_empw+0x22e1>
               :   9389a:	lea    0xc0(%r12),%rdx
               :   938a2:	mov    $0x6,%eax
               :   938a7:	cmp    0xc8(%r12),%rdi
               :   938af:	jb     938da <mlx5_tx_burst_mtiv_empw+0x230a>
               :   938b1:	mov    0xd4(%r12),%rax
               :   938b9:	cmp    %rax,%rdi
               :   938bc:	jb     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   938be:	test   %rax,%rax
               :   938c1:	je     938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   938c3:	lea    0xd4(%r12),%rdx
               :   938cb:	mov    $0x7,%eax
               :   938d0:	cmp    0xdc(%r12),%rdi
               :   938d8:	jae    938f0 <mlx5_tx_burst_mtiv_empw+0x2320>
               :   938da:	mov    %ax,0x44(%r12)
               :   938e0:	mov    0x10(%rdx),%eax
               :   938e3:	jmpq   93490 <mlx5_tx_burst_mtiv_empw+0x1ec0>
               :   938e8:	nopl   0x0(%rax,%rax,1)
               :   938f0:	mov    0x88(%rsp),%rdi
               :   938f8:	mov    %rbx,%rsi
               :   938fb:	mov    %r9,0xb0(%rsp)
               :   93903:	mov    %ecx,0xc0(%rsp)
               :   9390a:	vzeroupper 
               :   9390d:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :   93912:	mov    0xc0(%rsp),%ecx
               :   93919:	mov    0xb0(%rsp),%r9
               :   93921:	jmpq   93499 <mlx5_tx_burst_mtiv_empw+0x1ec9>
               :   93926:	nopw   %cs:0x0(%rax,%rax,1)
               :   93930:	vmovdqu64 (%rax),%xmm0
               :   93936:	vmovups %xmm0,(%rbx)
               :   9393a:	vmovdqu64 -0x10(%rax,%r8,1),%xmm6
               :   93942:	vmovups %xmm6,-0x10(%rbx,%r8,1)
               :   93949:	jmpq   92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   9394e:	xchg   %ax,%ax
               :   93950:	vmovdqu64 (%rax),%xmm5
               :   93956:	vmovups %xmm5,(%rbx)
               :   9395a:	vmovdqu64 -0x10(%rax,%r8,1),%xmm2
               :   93962:	vmovups %xmm2,-0x10(%rbx,%r8,1)
               :   93969:	jmpq   92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   9396e:	xchg   %ax,%ax
               :   93970:	movzwl 0x20(%rsp),%ebx
               :   93975:	mov    %r11,%r14
               :   93978:	mov    %rbx,%r15
               :   9397b:	jmpq   91d7c <mlx5_tx_burst_mtiv_empw+0x7ac>
               :   93980:	lea    0xe8(%rsp),%rax
               :   93988:	movl   $0x0,0xb0(%rsp)
               :   93993:	mov    %rax,0x50(%rsp)
               :   93998:	mov    $0xc,%r10d
               :   9399e:	xor    %ecx,%ecx
               :   939a0:	mov    %r10d,%r12d
               :   939a3:	mov    %r11,%r15
               :   939a6:	nopw   %cs:0x0(%rax,%rax,1)
               :   939b0:	cmp    %dx,%cx
               :   939b3:	jae    93b40 <mlx5_tx_burst_mtiv_empw+0x2570>
               :   939b9:	movzwl 0x10(%r13),%eax
               :   939be:	movzwl %cx,%esi
               :   939c1:	add    %rsi,%rax
               :   939c4:	movzwl %cx,%esi
               :   939c7:	sub    %esi,%edx
               :   939c9:	add    0x0(%r13),%rax
               :   939cd:	mov    %edx,%esi
               :   939cf:	cmp    %r12d,%edx
               :   939d2:	mov    %rax,%rdx
               :   939d5:	cmova  %r12d,%esi
               :   939d9:	or     %r14,%rdx
               :   939dc:	and    $0x1f,%edx
               :   939df:	mov    %esi,%edi
               :   939e1:	jne    93a80 <mlx5_tx_burst_mtiv_empw+0x24b0>
               :   939e7:	cmp    $0xf,%esi
               :   939ea:	jbe    93cd0 <mlx5_tx_burst_mtiv_empw+0x2700>
               :   939f0:	cmp    $0x20,%esi
               :   939f3:	jbe    950e8 <mlx5_tx_burst_mtiv_empw+0x3b18>
               :   939f9:	cmp    $0x40,%rdi
               :   939fd:	jbe    94380 <mlx5_tx_burst_mtiv_empw+0x2db0>
               :   93a03:	lea    -0x40(%rdi),%r9
               :   93a07:	shr    $0x6,%r9
               :   93a0b:	lea    0x1(%r9),%r10
               :   93a0f:	shl    $0x6,%r10
               :   93a13:	lea    (%rax,%r10,1),%r8
               :   93a17:	mov    %r14,%rdx
               :   93a1a:	nopw   0x0(%rax,%rax,1)
               :   93a20:	vmovdqu64 (%rax),%ymm2
               :   93a26:	add    $0x40,%rax
               :   93a2a:	vmovdqu64 %ymm2,(%rdx)
               :   93a30:	vmovdqu64 -0x20(%rax),%ymm5
               :   93a37:	add    $0x40,%rdx
               :   93a3b:	vmovdqu64 %ymm5,-0x20(%rdx)
               :   93a42:	cmp    %r8,%rax
               :   93a45:	jne    93a20 <mlx5_tx_burst_mtiv_empw+0x2450>
               :   93a47:	neg    %r9
               :   93a4a:	mov    %r9,%rdx
               :   93a4d:	shl    $0x6,%rdx
               :   93a51:	lea    -0x80(%rdi,%rdx,1),%rdx
               :   93a56:	add    %rdx,%rax
               :   93a59:	vmovdqu64 (%rax),%ymm6
               :   93a5f:	add    %r10,%rdx
               :   93a62:	add    %r14,%rdx
               :   93a65:	vmovdqu64 %ymm6,(%rdx)
               :   93a6b:	vmovdqu64 0x20(%rax),%ymm4
               :   93a72:	vmovdqu64 %ymm4,0x20(%rdx)
               :   93a79:	jmpq   93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   93a7e:	xchg   %ax,%ax
               :   93a80:	cmp    $0xf,%esi
               :   93a83:	jbe    93cd0 <mlx5_tx_burst_mtiv_empw+0x2700>
               :   93a89:	cmp    $0x20,%esi
               :   93a8c:	jbe    95110 <mlx5_tx_burst_mtiv_empw+0x3b40>
               :   93a92:	cmp    $0x30,%rdi
               :   93a96:	jbe    943a1 <mlx5_tx_burst_mtiv_empw+0x2dd1>
               :   93a9c:	vmovdqu64 (%rax),%ymm0
               :   93aa2:	cmp    $0x40,%rdi
               :   93aa6:	jbe    961cc <mlx5_tx_burst_mtiv_empw+0x4bfc>
               :   93aac:	cmp    $0x100,%rdi
               :   93ab3:	ja     968ab <mlx5_tx_burst_mtiv_empw+0x52db>
               :   93ab9:	cmp    $0x7f,%rdi
               :   93abd:	jbe    9697c <mlx5_tx_burst_mtiv_empw+0x53ac>
               :   93ac3:	vmovdqu64 %ymm0,(%r14)
               :   93ac9:	vmovdqu64 0x20(%rax),%ymm3
               :   93ad0:	lea    -0x80(%rdi),%rdx
               :   93ad4:	vmovdqu64 %ymm3,0x20(%r14)
               :   93adb:	vmovdqu64 0x40(%rax),%ymm1
               :   93ae2:	lea    0x80(%r14),%r8
               :   93ae9:	vmovdqu64 %ymm1,0x40(%r14)
               :   93af0:	vmovdqu64 0x60(%rax),%ymm7
               :   93af7:	sub    $0xffffffffffffff80,%rax
               :   93afb:	vmovdqu64 %ymm7,0x60(%r14)
               :   93b02:	cmp    $0x3f,%rdx
               :   93b06:	ja     9739c <mlx5_tx_burst_mtiv_empw+0x5dcc>
               :   93b0c:	cmp    $0x20,%rdx
               :   93b10:	jbe    961e7 <mlx5_tx_burst_mtiv_empw+0x4c17>
               :   93b16:	vmovdqu64 (%rax),%ymm6
               :   93b1c:	vmovdqu64 %ymm6,(%r8)
               :   93b22:	vmovdqu64 -0x20(%rax,%rdx,1),%ymm7
               :   93b2a:	vmovdqu64 %ymm7,-0x20(%r8,%rdx,1)
               :   93b32:	jmpq   93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   93b37:	nopw   0x0(%rax,%rax,1)
               :   93b40:	mov    0x40(%r13),%rbx
               :   93b44:	movzwl 0x12(%r13),%eax
               :   93b49:	lea    0x12(%r13),%r8
               :   93b4d:	cmp    $0x1,%ax
               :   93b51:	jne    960a5 <mlx5_tx_burst_mtiv_empw+0x4ad5>
               :   93b57:	mov    0x18(%r13),%rax
               :   93b5b:	movabs $0x6000000000000000,%rcx
               :   93b65:	mov    0x38(%r13),%r8
               :   93b69:	test   %rcx,%rax
               :   93b6c:	je     93bd4 <mlx5_tx_burst_mtiv_empw+0x2604>
               :   93b6e:	movabs $0x2000000000000000,%rdi
               :   93b78:	test   %rdi,%rax
               :   93b7b:	je     943cd <mlx5_tx_burst_mtiv_empw+0x2dfd>
               :   93b81:	mov    0x44(%r8),%edx
               :   93b85:	test   %edx,%edx
               :   93b87:	jne    95b59 <mlx5_tx_burst_mtiv_empw+0x4589>
               :   93b8d:	testb  $0x1,0xc4(%r8)
               :   93b95:	je     95b67 <mlx5_tx_burst_mtiv_empw+0x4597>
               :   93b9b:	mov    $0xc0,%eax
               :   93ba0:	testb  $0x1,0x4(%r8,%rax,1)
               :   93ba6:	je     95b51 <mlx5_tx_burst_mtiv_empw+0x4581>
               :   93bac:	movabs $0x2000000000000000,%rsi
               :   93bb6:	mov    %rsi,0x18(%r13)
               :   93bba:	mov    0x50(%r13),%rax
               :   93bbe:	movzwl 0x10(%rax),%edx
               :   93bc2:	lea    0x10(%rax),%rsi
               :   93bc6:	cmp    $0x1,%dx
               :   93bca:	jne    98744 <mlx5_tx_burst_mtiv_empw+0x7174>
               :   93bd0:	mov    0x38(%r13),%r8
               :   93bd4:	mov    0x44(%r8),%edx
               :   93bd8:	vzeroupper 
               :   93bdb:	cmpq   $0x0,0x40(%r13)
               :   93be0:	je     93bea <mlx5_tx_burst_mtiv_empw+0x261a>
               :   93be2:	movq   $0x0,0x40(%r13)
               :   93bea:	cmpw   $0x1,0x14(%r13)
               :   93bf0:	je     93bfc <mlx5_tx_burst_mtiv_empw+0x262c>
               :   93bf2:	mov    $0x1,%eax
               :   93bf7:	mov    %ax,0x14(%r13)
               :   93bfc:	mov    %r8,0x88(%rsp)
               :   93c04:	mov    %edx,0x58(%rsp)
               :   93c08:	mov    %r13,0xe8(%rsp)
               :   93c10:	data16 lea 0x102230(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   93c18:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   93c20:	mov    0x88(%rsp),%r8
               :   93c28:	mov    (%rax),%eax
               :   93c2a:	cmp    $0x7f,%eax
               :   93c2d:	ja     95a70 <mlx5_tx_burst_mtiv_empw+0x44a0>
               :   93c33:	mov    0x58(%rsp),%edx
               :   93c37:	test   %edx,%edx
               :   93c39:	je     95a70 <mlx5_tx_burst_mtiv_empw+0x44a0>
               :   93c3f:	mov    %eax,%r13d
               :   93c42:	imul   $0x2040,%r13,%r13
               :   93c49:	add    0x60(%r8),%r13
               :   93c4d:	je     95a70 <mlx5_tx_burst_mtiv_empw+0x44a0>
               :   93c53:	mov    0x4(%r13),%eax
               :   93c57:	test   %eax,%eax
               :   93c59:	je     95a70 <mlx5_tx_burst_mtiv_empw+0x44a0>
               :   93c5f:	mov    0x8(%r13),%edx
               :   93c63:	lea    0x1(%rdx),%edi
               :   93c66:	cmp    %edi,%eax
               :   93c68:	jb     94f28 <mlx5_tx_burst_mtiv_empw+0x3958>
               :   93c6e:	mov    %edi,0x8(%r13)
               :   93c72:	lea    0x40(%r13,%rdx,8),%rsi
               :   93c77:	mov    0xe8(%rsp),%rax
               :   93c7f:	mov    %rax,(%rsi)
               :   93c82:	mov    0x18(%rbx),%rax
               :   93c86:	lea    0x1038f3(%rip),%rcx        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :   93c8d:	decw   0xc0(%rsp)
               :   93c95:	movzwl 0x28(%rbx),%edx
               :   93c99:	test   %rax,(%rcx)
               :   93c9c:	je     93cc3 <mlx5_tx_burst_mtiv_empw+0x26f3>
               :   93c9e:	mov    0xb0(%rsp),%edi
               :   93ca5:	cmp    $0xb,%edi
               :   93ca8:	ja     93eb8 <mlx5_tx_burst_mtiv_empw+0x28e8>
               :   93cae:	mov    $0xc,%eax
               :   93cb3:	sub    %edi,%eax
               :   93cb5:	movzwl %dx,%esi
               :   93cb8:	cmp    %esi,%eax
               :   93cba:	ja     93cc3 <mlx5_tx_burst_mtiv_empw+0x26f3>
               :   93cbc:	cmp    %eax,%r12d
               :   93cbf:	cmova  %eax,%r12d
               :   93cc3:	mov    %rbx,%r13
               :   93cc6:	xor    %ecx,%ecx
               :   93cc8:	jmpq   939b0 <mlx5_tx_burst_mtiv_empw+0x23e0>
               :   93ccd:	nopl   (%rax)
               :   93cd0:	mov    %r14,%rdx
               :   93cd3:	test   $0x8,%sil
               :   93cd7:	je     93ce7 <mlx5_tx_burst_mtiv_empw+0x2717>
               :   93cd9:	mov    (%rax),%rdx
               :   93cdc:	add    $0x8,%rax
               :   93ce0:	mov    %rdx,(%r14)
               :   93ce3:	lea    0x8(%r14),%rdx
               :   93ce7:	test   $0x4,%sil
               :   93ceb:	je     93cfc <mlx5_tx_burst_mtiv_empw+0x272c>
               :   93ced:	mov    (%rax),%r8d
               :   93cf0:	add    $0x4,%rdx
               :   93cf4:	mov    %r8d,-0x4(%rdx)
               :   93cf8:	add    $0x4,%rax
               :   93cfc:	test   $0x2,%sil
               :   93d00:	je     93d13 <mlx5_tx_burst_mtiv_empw+0x2743>
               :   93d02:	movzwl (%rax),%r8d
               :   93d06:	add    $0x2,%rdx
               :   93d0a:	mov    %r8w,-0x2(%rdx)
               :   93d0f:	add    $0x2,%rax
               :   93d13:	test   $0x1,%sil
               :   93d17:	je     93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   93d19:	movzbl (%rax),%eax
               :   93d1c:	mov    %al,(%rdx)
               :   93d1e:	xchg   %ax,%ax
               :   93d20:	add    %esi,0xb0(%rsp)
               :   93d27:	movzwl 0x28(%r13),%edx
               :   93d2c:	add    %esi,%ecx
               :   93d2e:	sub    %esi,%r12d
               :   93d31:	je     95ce1 <mlx5_tx_burst_mtiv_empw+0x4711>
               :   93d37:	add    %rdi,%r14
               :   93d3a:	jmpq   939b0 <mlx5_tx_burst_mtiv_empw+0x23e0>
               :   93d3f:	nop
               :   93d40:	movzwl 0xe(%r11),%edx
               :   93d45:	mov    %rdi,%rbx
               :   93d48:	mov    %rdx,%rax
               :   93d4b:	shl    $0x6,%rax
               :   93d4f:	sub    0xb8(%rsp),%rax
               :   93d57:	add    %rsi,%rax
               :   93d5a:	shr    $0x4,%rax
               :   93d5e:	jmpq   934dc <mlx5_tx_burst_mtiv_empw+0x1f0c>
               :   93d63:	nopl   0x0(%rax,%rax,1)
               :   93d68:	mov    0xb0(%rsp),%r9d
               :   93d70:	test   %r9d,%r9d
               :   93d73:	je     93d88 <mlx5_tx_burst_mtiv_empw+0x27b8>
               :   93d75:	cmpb   $0x0,0x1f(%r11)
               :   93d7a:	movl   $0x12,0x60(%rsp)
               :   93d82:	jns    9289b <mlx5_tx_burst_mtiv_empw+0x12cb>
               :   93d88:	cmp    %ax,%r10w
               :   93d8c:	jb     948b6 <mlx5_tx_burst_mtiv_empw+0x32e6>
               :   93d92:	test   %r15,%r15
               :   93d95:	jne    948b6 <mlx5_tx_burst_mtiv_empw+0x32e6>
               :   93d9b:	cmpl   $0x12,0x88(%rsp)
               :   93da3:	movl   $0x12,0x60(%rsp)
               :   93dab:	mov    %r13,%rax
               :   93dae:	ja     93de6 <mlx5_tx_burst_mtiv_empw+0x2816>
               :   93db0:	mov    0x60(%rsp),%eax
               :   93db4:	mov    0x88(%rsp),%edi
               :   93dbb:	cmp    %eax,%edi
               :   93dbd:	mov    %r13,%rax
               :   93dc0:	jae    93de6 <mlx5_tx_burst_mtiv_empw+0x2816>
               :   93dc2:	mov    0x40(%rax),%rax
               :   93dc6:	mov    %edi,%r8d
               :   93dc9:	movzwl 0x28(%rax),%r9d
               :   93dce:	add    %r9d,%edi
               :   93dd1:	cmp    0x60(%rsp),%edi
               :   93dd5:	jb     93dc2 <mlx5_tx_burst_mtiv_empw+0x27f2>
               :   93dd7:	mov    %edi,0x88(%rsp)
               :   93dde:	cmp    %edi,%ebx
               :   93de0:	jb     99e0d <mlx5_tx_burst_mtiv_empw+0x883d>
               :   93de6:	mov    0x88(%rsp),%edi
               :   93ded:	mov    0x40(%rax),%rax
               :   93df1:	mov    %edi,0x60(%rsp)
               :   93df5:	test   %r12,0x18(%rax)
               :   93df9:	jne    928ad <mlx5_tx_burst_mtiv_empw+0x12dd>
               :   93dff:	movzwl 0x28(%rax),%edi
               :   93e03:	add    0x60(%rsp),%edi
               :   93e07:	cmp    %edi,%ebx
               :   93e09:	jbe    928ad <mlx5_tx_burst_mtiv_empw+0x12dd>
               :   93e0f:	mov    0x40(%rax),%rax
               :   93e13:	mov    %edi,0x60(%rsp)
               :   93e17:	test   %r12,0x18(%rax)
               :   93e1b:	je     93dff <mlx5_tx_burst_mtiv_empw+0x282f>
               :   93e1d:	jmpq   928ad <mlx5_tx_burst_mtiv_empw+0x12dd>
               :   93e22:	nopw   0x0(%rax,%rax,1)
               :   93e28:	mov    0x58(%rsp),%rbx
               :   93e2d:	mov    %edi,0x80(%rsp)
               :   93e34:	mov    0xf8(%rbx),%rbx
               :   93e3b:	add    %rax,%r10
               :   93e3e:	jmpq   918c0 <mlx5_tx_burst_mtiv_empw+0x2f0>
               :   93e43:	nopl   0x0(%rax,%rax,1)
               :   93e48:	mov    0x80(%rsp),%rbx
               :   93e50:	mov    0x58(%rsp),%esi
               :   93e54:	mov    0xf8(%rbx),%rbx
               :   93e5b:	add    %rax,%r10
               :   93e5e:	jmpq   91c56 <mlx5_tx_burst_mtiv_empw+0x686>
               :   93e63:	nopl   0x0(%rax,%rax,1)
               :   93e68:	movslq 0x58(%r8),%rax
               :   93e6c:	cmp    $0xf,%eax
               :   93e6f:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   93e75:	shl    $0x7,%rax
               :   93e79:	mov    0x10(%rsp),%rsi
               :   93e7e:	add    0x10208b(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   93e85:	mov    $0x1,%edx
               :   93e8a:	mov    %r8,%rdi
               :   93e8d:	callq  *0x70(%rax)
               :   93e90:	jmpq   92c00 <mlx5_tx_burst_mtiv_empw+0x1630>
               :   93e95:	nopl   (%rax)
               :   93e98:	mov    %r14,%r13
               :   93e9b:	xor    %ecx,%ecx
               :   93e9d:	jmpq   929d7 <mlx5_tx_burst_mtiv_empw+0x1407>
               :   93ea2:	nopw   0x0(%rax,%rax,1)
               :   93ea8:	mov    0xf8(%r14),%rbx
               :   93eaf:	jmpq   9188f <mlx5_tx_burst_mtiv_empw+0x2bf>
               :   93eb4:	nopl   0x0(%rax)
               :   93eb8:	mov    %r15,%r11
               :   93ebb:	xor    %ecx,%ecx
               :   93ebd:	mov    %rbx,%r15
               :   93ec0:	movzwl 0x2a(%r15),%eax
               :   93ec5:	or     $0x81000000,%eax
               :   93eca:	bswap  %eax
               :   93ecc:	mov    0xb8(%rsp),%rbx
               :   93ed4:	movl   $0x10,0xb0(%rsp)
               :   93edf:	mov    %eax,0x2a(%rbx)
               :   93ee2:	mov    0x60(%rsp),%eax
               :   93ee6:	lea    0x2e(%rbx),%r14
               :   93eea:	lea    -0x10(%rax),%esi
               :   93eed:	mov    %r15,%r13
               :   93ef0:	jmpq   92980 <mlx5_tx_burst_mtiv_empw+0x13b0>
               :   93ef5:	nopl   (%rax)
               :   93ef8:	mov    0x2(%rax),%rdx
               :   93efc:	mov    %rdx,0x20(%rbx)
               :   93f00:	movzwl 0xa(%rax),%edx
               :   93f04:	mov    %dx,0x28(%rbx)
               :   93f08:	movzwl 0x2a(%r9),%edx
               :   93f0d:	or     $0x81000000,%edx
               :   93f13:	bswap  %edx
               :   93f15:	mov    %edx,0x2a(%rbx)
               :   93f18:	movzwl 0xc(%rax),%edx
               :   93f1c:	lea    0xe(%rax),%r10
               :   93f20:	mov    %dx,0x2e(%rbx)
               :   93f24:	jmpq   92262 <mlx5_tx_burst_mtiv_empw+0xc92>
               :   93f29:	nopl   0x0(%rax)
               :   93f30:	vmovdqu64 (%rax),%xmm5
               :   93f36:	vmovups %xmm5,(%rbx)
               :   93f3a:	vmovdqu64 0x10(%rax),%xmm2
               :   93f41:	vmovups %xmm2,0x10(%rbx)
               :   93f46:	vmovdqu64 -0x10(%rax,%r8,1),%xmm0
               :   93f4e:	vmovups %xmm0,-0x10(%rbx,%r8,1)
               :   93f55:	jmpq   92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   93f5a:	nopw   0x0(%rax,%rax,1)
               :   93f60:	vmovdqu64 (%rax),%ymm7
               :   93f66:	vmovdqu64 %ymm7,(%rbx)
               :   93f6c:	vmovdqu64 -0x20(%rax,%r8,1),%ymm3
               :   93f74:	vmovdqu64 %ymm3,-0x20(%rbx,%r8,1)
               :   93f7c:	jmpq   92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   93f81:	nopl   0x0(%rax)
               :   93f88:	vzeroupper 
               :   93f8b:	jmpq   92b5a <mlx5_tx_burst_mtiv_empw+0x158a>
               :   93f90:	testb  $0x1,0x1020c4(%r8)
               :   93f98:	jne    987d9 <mlx5_tx_burst_mtiv_empw+0x7209>
               :   93f9e:	mov    0x50(%r13),%rax
               :   93fa2:	movzwl 0x10(%rax),%edx
               :   93fa6:	lea    0x10(%rax),%rcx
               :   93faa:	cmp    $0x1,%dx
               :   93fae:	jne    94c8a <mlx5_tx_burst_mtiv_empw+0x36ba>
               :   93fb4:	movw   $0x0,0x10(%rax)
               :   93fba:	mov    0x50(%r13),%rax
               :   93fbe:	mov    0x0(%r13),%rdi
               :   93fc2:	mov    0x8(%rax),%rsi
               :   93fc6:	mov    %r8,0x88(%rsp)
               :   93fce:	vzeroupper 
               :   93fd1:	callq  *(%rax)
               :   93fd3:	mov    0x88(%rsp),%r8
               :   93fdb:	jmpq   940b1 <mlx5_tx_burst_mtiv_empw+0x2ae1>
               :   93fe0:	mov    0x0(%r13),%rax
               :   93fe4:	movzwl 0x58(%r13),%edx
               :   93fe9:	add    $0xffffffffffffff80,%rax
               :   93fed:	sub    %rdx,%rax
               :   93ff0:	movzwl 0x12(%rax),%edx
               :   93ff4:	lea    0x12(%rax),%rcx
               :   93ff8:	cmp    $0x1,%dx
               :   93ffc:	jne    94c78 <mlx5_tx_burst_mtiv_empw+0x36a8>
               :   94002:	movw   $0x0,0x12(%rax)
               :   94008:	mov    $0x1,%r9d
               :   9400e:	mov    %r8,0x58(%rsp)
               :   94013:	movq   $0x0,0x40(%rax)
               :   9401b:	mov    %r9w,0x14(%rax)
               :   94020:	movw   $0x1,0x12(%rax)
               :   94026:	mov    %rax,0x168(%rsp)
               :   9402e:	mov    0x38(%rax),%rdi
               :   94032:	mov    %rdi,0x88(%rsp)
               :   9403a:	vzeroupper 
               :   9403d:	data16 lea 0x101e03(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   94045:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   9404d:	mov    0x88(%rsp),%rdi
               :   94055:	mov    0x58(%rsp),%r8
               :   9405a:	mov    0x44(%rdi),%r10d
               :   9405e:	test   %r10d,%r10d
               :   94061:	mov    (%rax),%eax
               :   94063:	je     97e66 <mlx5_tx_burst_mtiv_empw+0x6896>
               :   94069:	cmp    $0x7f,%eax
               :   9406c:	ja     97e66 <mlx5_tx_burst_mtiv_empw+0x6896>
               :   94072:	mov    %eax,%ecx
               :   94074:	imul   $0x2040,%rcx,%rcx
               :   9407b:	add    0x60(%rdi),%rcx
               :   9407f:	je     97e66 <mlx5_tx_burst_mtiv_empw+0x6896>
               :   94085:	mov    0x4(%rcx),%eax
               :   94088:	test   %eax,%eax
               :   9408a:	je     97e66 <mlx5_tx_burst_mtiv_empw+0x6896>
               :   94090:	mov    0x8(%rcx),%edx
               :   94093:	lea    0x1(%rdx),%esi
               :   94096:	cmp    %esi,%eax
               :   94098:	jb     9751c <mlx5_tx_burst_mtiv_empw+0x5f4c>
               :   9409e:	mov    %esi,0x8(%rcx)
               :   940a1:	lea    0x40(%rcx,%rdx,8),%r9
               :   940a6:	mov    0x168(%rsp),%rax
               :   940ae:	mov    %rax,(%r9)
               :   940b1:	cmpl   $0x1,0x44(%r8)
               :   940b6:	sbb    %rax,%rax
               :   940b9:	and    $0xffffffffffefe000,%rax
               :   940bf:	lea    0x1020c0(%r8,%rax,1),%rax
               :   940c7:	movzwl 0x2(%rax),%edx
               :   940cb:	movzwl (%rax),%eax
               :   940ce:	mov    %dx,0x58(%r13)
               :   940d3:	sub    $0xffffffffffffff80,%rdx
               :   940d7:	lea    0x0(%r13,%rdx,1),%rcx
               :   940dc:	add    -0x8(%r13),%rdx
               :   940e0:	mov    %rdx,0x8(%r13)
               :   940e4:	cmp    $0x80,%ax
               :   940e8:	mov    $0x80,%edx
               :   940ed:	mov    %ax,0x36(%r13)
               :   940f2:	cmova  %edx,%eax
               :   940f5:	xor    %r8d,%r8d
               :   940f8:	mov    %r8w,0x28(%r13)
               :   940fd:	mov    0x38(%r13),%r8
               :   94101:	mov    %rcx,0x0(%r13)
               :   94105:	mov    %ax,0x10(%r13)
               :   9410a:	movq   $0x0,0x18(%r13)
               :   94112:	mov    0x44(%r8),%edx
               :   94116:	jmpq   92b5a <mlx5_tx_burst_mtiv_empw+0x158a>
               :   9411b:	nopl   0x0(%rax,%rax,1)
               :   94120:	movzwl 0x10(%rbx),%r12d
               :   94125:	movzwl %cx,%esi
               :   94128:	mov    (%rbx),%rax
               :   9412b:	add    %rsi,%r12
               :   9412e:	movzwl %cx,%ecx
               :   94131:	add    %rax,%r12
               :   94134:	sub    %ecx,%edx
               :   94136:	cmp    %r14,0x100(%r11)
               :   9413d:	ja     94146 <mlx5_tx_burst_mtiv_empw+0x2b76>
               :   9413f:	mov    0xf8(%r11),%r14
               :   94146:	mov    %r12,%rcx
               :   94149:	cmp    $0xc,%edx
               :   9414c:	ja     95edc <mlx5_tx_burst_mtiv_empw+0x490c>
               :   94152:	mov    %edx,%eax
               :   94154:	or     $0x80000000,%eax
               :   94159:	bswap  %eax
               :   9415b:	mov    %eax,(%r14)
               :   9415e:	lea    0x4(%r14),%rax
               :   94162:	test   $0x8,%dl
               :   94165:	je     94177 <mlx5_tx_burst_mtiv_empw+0x2ba7>
               :   94167:	mov    (%r12),%rax
               :   9416b:	add    $0x8,%rcx
               :   9416f:	mov    %rax,0x4(%r14)
               :   94173:	lea    0xc(%r14),%rax
               :   94177:	test   $0x4,%dl
               :   9417a:	je     94189 <mlx5_tx_burst_mtiv_empw+0x2bb9>
               :   9417c:	mov    (%rcx),%esi
               :   9417e:	add    $0x4,%rax
               :   94182:	mov    %esi,-0x4(%rax)
               :   94185:	add    $0x4,%rcx
               :   94189:	test   $0x2,%dl
               :   9418c:	je     9419d <mlx5_tx_burst_mtiv_empw+0x2bcd>
               :   9418e:	movzwl (%rcx),%esi
               :   94191:	add    $0x2,%rax
               :   94195:	mov    %si,-0x2(%rax)
               :   94199:	add    $0x2,%rcx
               :   9419d:	and    $0x1,%edx
               :   941a0:	je     941a7 <mlx5_tx_burst_mtiv_empw+0x2bd7>
               :   941a2:	movzbl (%rcx),%edx
               :   941a5:	mov    %dl,(%rax)
               :   941a7:	movzwl (%r11),%eax
               :   941ab:	decw   0xa8(%rsp)
               :   941b3:	lea    0x1(%rax),%edx
               :   941b6:	add    $0x10,%r14
               :   941ba:	and    0x8(%r11),%ax
               :   941bf:	decw   0xc0(%rsp)
               :   941c7:	movzwl %ax,%eax
               :   941ca:	mov    %dx,(%r11)
               :   941ce:	mov    %rbx,0x188(%r11,%rax,8)
               :   941d6:	je     934bb <mlx5_tx_burst_mtiv_empw+0x1eeb>
               :   941dc:	mov    0x40(%rbx),%rbx
               :   941e0:	movzwl 0x28(%rbx),%edx
               :   941e4:	jmpq   9335b <mlx5_tx_burst_mtiv_empw+0x1d8b>
               :   941e9:	nopl   0x0(%rax)
               :   941f0:	mov    %edx,0x60(%rsp)
               :   941f4:	jmpq   928c0 <mlx5_tx_burst_mtiv_empw+0x12f0>
               :   941f9:	nopl   0x0(%rax)
               :   94200:	cmp    $0xf,%rax
               :   94204:	jbe    9593b <mlx5_tx_burst_mtiv_empw+0x436b>
               :   9420a:	cmp    $0x20,%rax
               :   9420e:	jbe    96949 <mlx5_tx_burst_mtiv_empw+0x5379>
               :   94214:	cmp    $0x40,%rax
               :   94218:	jbe    971c9 <mlx5_tx_burst_mtiv_empw+0x5bf9>
               :   9421e:	lea    -0x40(%rax),%rdx
               :   94222:	shr    $0x6,%rdx
               :   94226:	mov    %rdx,0x88(%rsp)
               :   9422e:	inc    %rdx
               :   94231:	shl    $0x6,%rdx
               :   94235:	lea    (%r10,%rdx,1),%rcx
               :   94239:	mov    %rcx,%r14
               :   9423c:	mov    %r11,0x80(%rsp)
               :   94244:	mov    %r14,%r11
               :   94247:	mov    0x98(%rsp),%r14
               :   9424f:	mov    %rdx,0x60(%rsp)
               :   94254:	mov    %r8,%rcx
               :   94257:	mov    %r10,%rdx
               :   9425a:	nopw   0x0(%rax,%rax,1)
               :   94260:	vmovdqu64 (%rdx),%ymm7
               :   94266:	add    $0x40,%rdx
               :   9426a:	vmovdqu64 %ymm7,(%rcx)
               :   94270:	vmovdqu64 -0x20(%rdx),%ymm6
               :   94277:	add    $0x40,%rcx
               :   9427b:	vmovdqu64 %ymm6,-0x20(%rcx)
               :   94282:	cmp    %r11,%rdx
               :   94285:	jne    94260 <mlx5_tx_burst_mtiv_empw+0x2c90>
               :   94287:	mov    0x88(%rsp),%rcx
               :   9428f:	mov    %r14,0x98(%rsp)
               :   94297:	neg    %rcx
               :   9429a:	shl    $0x6,%rcx
               :   9429e:	lea    -0x80(%rax,%rcx,1),%rcx
               :   942a3:	add    %rcx,%rdx
               :   942a6:	vmovdqu64 (%rdx),%ymm0
               :   942ac:	add    0x60(%rsp),%rcx
               :   942b1:	add    %r8,%rcx
               :   942b4:	vmovdqu64 %ymm0,(%rcx)
               :   942ba:	vmovdqu64 0x20(%rdx),%ymm2
               :   942c1:	mov    0x80(%rsp),%r11
               :   942c9:	vmovdqu64 %ymm2,0x20(%rcx)
               :   942d0:	jmpq   92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   942d5:	nopl   (%rax)
               :   942d8:	lea    0x5c(%r12),%rdx
               :   942dd:	mov    $0x1,%eax
               :   942e2:	cmp    %rdi,0x64(%r12)
               :   942e7:	jbe    93827 <mlx5_tx_burst_mtiv_empw+0x2257>
               :   942ed:	jmpq   938da <mlx5_tx_burst_mtiv_empw+0x230a>
               :   942f2:	nopw   0x0(%rax,%rax,1)
               :   942f8:	lea    0x70(%r12),%rdx
               :   942fd:	mov    $0x2,%eax
               :   94302:	cmp    %rdi,0x78(%r12)
               :   94307:	jbe    9383e <mlx5_tx_burst_mtiv_empw+0x226e>
               :   9430d:	jmpq   938da <mlx5_tx_burst_mtiv_empw+0x230a>
               :   94312:	nopw   0x0(%rax,%rax,1)
               :   94318:	lea    0x84(%r12),%rdx
               :   94320:	mov    $0x3,%eax
               :   94325:	cmp    %rdi,0x8c(%r12)
               :   9432d:	jbe    93858 <mlx5_tx_burst_mtiv_empw+0x2288>
               :   94333:	jmpq   938da <mlx5_tx_burst_mtiv_empw+0x230a>
               :   94338:	nopl   0x0(%rax,%rax,1)
               :   94340:	lea    0x98(%r12),%rdx
               :   94348:	mov    $0x4,%eax
               :   9434d:	cmp    0xa0(%r12),%rdi
               :   94355:	jae    93872 <mlx5_tx_burst_mtiv_empw+0x22a2>
               :   9435b:	jmpq   938da <mlx5_tx_burst_mtiv_empw+0x230a>
               :   94360:	lea    0xac(%r12),%rdx
               :   94368:	mov    $0x5,%eax
               :   9436d:	cmp    0xb4(%r12),%rdi
               :   94375:	jae    93888 <mlx5_tx_burst_mtiv_empw+0x22b8>
               :   9437b:	jmpq   938da <mlx5_tx_burst_mtiv_empw+0x230a>
               :   94380:	vmovdqu64 (%rax),%ymm1
               :   94386:	vmovdqu64 %ymm1,(%r14)
               :   9438c:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm7
               :   94394:	vmovdqu64 %ymm7,-0x20(%r14,%rdi,1)
               :   9439c:	jmpq   93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   943a1:	vmovdqu64 (%rax),%xmm3
               :   943a7:	vmovups %xmm3,(%r14)
               :   943ac:	vmovdqu64 0x10(%rax),%xmm4
               :   943b3:	vmovups %xmm4,0x10(%r14)
               :   943b9:	vmovdqu64 -0x10(%rax,%rdi,1),%xmm5
               :   943c1:	vmovups %xmm5,-0x10(%r14,%rdi,1)
               :   943c8:	jmpq   93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   943cd:	mov    0x0(%r13),%rax
               :   943d1:	movzwl 0x58(%r13),%edx
               :   943d6:	add    $0xffffffffffffff80,%rax
               :   943da:	sub    %rdx,%rax
               :   943dd:	movzwl 0x12(%rax),%edx
               :   943e1:	lea    0x12(%rax),%rsi
               :   943e5:	cmp    $0x1,%dx
               :   943e9:	jne    985e4 <mlx5_tx_burst_mtiv_empw+0x7014>
               :   943ef:	movw   $0x0,0x12(%rax)
               :   943f5:	mov    $0x1,%edx
               :   943fa:	mov    %r8,0x58(%rsp)
               :   943ff:	movq   $0x0,0x40(%rax)
               :   94407:	mov    %dx,0x14(%rax)
               :   9440b:	movw   $0x1,0x12(%rax)
               :   94411:	mov    %rax,0x150(%rsp)
               :   94419:	mov    0x38(%rax),%rdi
               :   9441d:	mov    %rdi,0x88(%rsp)
               :   94425:	vzeroupper 
               :   94428:	data16 lea 0x101a18(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   94430:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   94438:	mov    0x88(%rsp),%rdi
               :   94440:	mov    0x58(%rsp),%r8
               :   94445:	mov    0x44(%rdi),%ecx
               :   94448:	test   %ecx,%ecx
               :   9444a:	mov    (%rax),%eax
               :   9444c:	je     98c4b <mlx5_tx_burst_mtiv_empw+0x767b>
               :   94452:	cmp    $0x7f,%eax
               :   94455:	ja     98c4b <mlx5_tx_burst_mtiv_empw+0x767b>
               :   9445b:	mov    %eax,%r9d
               :   9445e:	imul   $0x2040,%r9,%r9
               :   94465:	add    0x60(%rdi),%r9
               :   94469:	je     98c4b <mlx5_tx_burst_mtiv_empw+0x767b>
               :   9446f:	mov    0x4(%r9),%eax
               :   94473:	test   %eax,%eax
               :   94475:	je     98c4b <mlx5_tx_burst_mtiv_empw+0x767b>
               :   9447b:	mov    0x8(%r9),%edx
               :   9447f:	lea    0x1(%rdx),%r10d
               :   94483:	cmp    %r10d,%eax
               :   94486:	jb     98789 <mlx5_tx_burst_mtiv_empw+0x71b9>
               :   9448c:	mov    %r10d,0x8(%r9)
               :   94490:	lea    0x40(%r9,%rdx,8),%rsi
               :   94495:	mov    0x150(%rsp),%rax
               :   9449d:	mov    %rax,(%rsi)
               :   944a0:	cmpl   $0x1,0x44(%r8)
               :   944a5:	sbb    %rax,%rax
               :   944a8:	and    $0xffffffffffefe000,%rax
               :   944ae:	lea    0x1020c0(%r8,%rax,1),%rax
               :   944b6:	movzwl 0x2(%rax),%edx
               :   944ba:	movzwl (%rax),%eax
               :   944bd:	mov    %dx,0x58(%r13)
               :   944c2:	sub    $0xffffffffffffff80,%rdx
               :   944c6:	lea    0x0(%r13,%rdx,1),%rsi
               :   944cb:	add    -0x8(%r13),%rdx
               :   944cf:	mov    %rdx,0x8(%r13)
               :   944d3:	cmp    $0x80,%ax
               :   944d7:	mov    $0x80,%edx
               :   944dc:	mov    %ax,0x36(%r13)
               :   944e1:	cmova  %edx,%eax
               :   944e4:	mov    0x38(%r13),%r8
               :   944e8:	mov    %ax,0x10(%r13)
               :   944ed:	xor    %eax,%eax
               :   944ef:	mov    %rsi,0x0(%r13)
               :   944f3:	mov    %ax,0x28(%r13)
               :   944f8:	movq   $0x0,0x18(%r13)
               :   94500:	mov    0x44(%r8),%edx
               :   94504:	jmpq   93bdb <mlx5_tx_burst_mtiv_empw+0x260b>
               :   94509:	mov    %rbx,%rdx
               :   9450c:	and    $0x1f,%edx
               :   9450f:	je     968a0 <mlx5_tx_burst_mtiv_empw+0x52d0>
               :   94515:	mov    $0x20,%edi
               :   9451a:	sub    %rdx,%rdi
               :   9451d:	lea    -0x20(%r8,%rdx,1),%r11
               :   94522:	vmovdqu64 %ymm0,(%rbx)
               :   94528:	add    %rdi,%rax
               :   9452b:	lea    (%rbx,%rdi,1),%r9
               :   9452f:	lea    -0x80(%r11),%rdx
               :   94533:	and    $0xffffffffffffff80,%rdx
               :   94537:	lea    0x80(%rax,%rdx,1),%r10
               :   9453f:	mov    %r9,%rdi
               :   94542:	mov    %rax,%rdx
               :   94545:	nopl   (%rax)
               :   94548:	vmovdqu64 (%rdx),%ymm2
               :   9454e:	vmovdqu64 0x20(%rdx),%ymm1
               :   94555:	vmovdqu64 0x40(%rdx),%ymm0
               :   9455c:	vmovdqu64 0x60(%rdx),%ymm6
               :   94563:	sub    $0xffffffffffffff80,%rdx
               :   94567:	vmovdqu64 %ymm6,0x60(%rdi)
               :   9456e:	vmovdqu64 %ymm2,(%rdi)
               :   94574:	vmovdqu64 %ymm1,0x20(%rdi)
               :   9457b:	vmovdqu64 %ymm0,0x40(%rdi)
               :   94582:	sub    $0xffffffffffffff80,%rdi
               :   94586:	cmp    %r10,%rdx
               :   94589:	jne    94548 <mlx5_tx_burst_mtiv_empw+0x2f78>
               :   9458b:	mov    %r11,%rdx
               :   9458e:	and    $0xffffffffffffff80,%r11
               :   94592:	and    $0x7f,%edx
               :   94595:	add    %r11,%rax
               :   94598:	lea    (%r9,%r11,1),%rdi
               :   9459c:	jmpq   92ea2 <mlx5_tx_burst_mtiv_empw+0x18d2>
               :   945a1:	mov    (%rbx),%rax
               :   945a4:	movzwl 0x58(%rbx),%edx
               :   945a8:	add    $0xffffffffffffff80,%rax
               :   945ac:	sub    %rdx,%rax
               :   945af:	movzwl 0x12(%rax),%edx
               :   945b3:	lea    0x12(%rax),%rsi
               :   945b7:	cmp    $0x1,%dx
               :   945bb:	jne    985d2 <mlx5_tx_burst_mtiv_empw+0x7002>
               :   945c1:	movw   $0x0,0x12(%rax)
               :   945c7:	mov    %ecx,0xa8(%rsp)
               :   945ce:	mov    $0x1,%ecx
               :   945d3:	mov    %r9,0x60(%rsp)
               :   945d8:	movq   $0x0,0x40(%rax)
               :   945e0:	mov    %cx,0x14(%rax)
               :   945e4:	movw   $0x1,0x12(%rax)
               :   945ea:	mov    %rax,0x180(%rsp)
               :   945f2:	mov    0x38(%rax),%rdi
               :   945f6:	mov    %rdi,0xb0(%rsp)
               :   945fe:	vzeroupper 
               :   94601:	data16 lea 0x10183f(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   94609:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   94611:	mov    0xb0(%rsp),%rdi
               :   94619:	mov    0xa8(%rsp),%ecx
               :   94620:	mov    0x44(%rdi),%esi
               :   94623:	mov    0x60(%rsp),%r9
               :   94628:	test   %esi,%esi
               :   9462a:	mov    (%rax),%eax
               :   9462c:	je     98f27 <mlx5_tx_burst_mtiv_empw+0x7957>
               :   94632:	cmp    $0x7f,%eax
               :   94635:	ja     98f27 <mlx5_tx_burst_mtiv_empw+0x7957>
               :   9463b:	mov    %eax,%r10d
               :   9463e:	imul   $0x2040,%r10,%r10
               :   94645:	add    0x60(%rdi),%r10
               :   94649:	je     98f27 <mlx5_tx_burst_mtiv_empw+0x7957>
               :   9464f:	mov    0x4(%r10),%esi
               :   94653:	test   %esi,%esi
               :   94655:	je     98f27 <mlx5_tx_burst_mtiv_empw+0x7957>
               :   9465b:	mov    0x8(%r10),%edx
               :   9465f:	lea    0x1(%rdx),%eax
               :   94662:	cmp    %eax,%esi
               :   94664:	jb     98834 <mlx5_tx_burst_mtiv_empw+0x7264>
               :   9466a:	mov    %eax,0x8(%r10)
               :   9466e:	lea    0x40(%r10,%rdx,8),%rsi
               :   94673:	mov    0x180(%rsp),%rax
               :   9467b:	mov    %rax,(%rsi)
               :   9467e:	cmpl   $0x1,0x44(%r13)
               :   94683:	sbb    %rax,%rax
               :   94686:	and    $0xffffffffffefe000,%rax
               :   9468c:	lea    0x1020c0(%r13,%rax,1),%rax
               :   94694:	movzwl 0x2(%rax),%edx
               :   94698:	movzwl (%rax),%eax
               :   9469b:	mov    %dx,0x58(%rbx)
               :   9469f:	sub    $0xffffffffffffff80,%rdx
               :   946a3:	lea    (%rbx,%rdx,1),%rsi
               :   946a7:	add    -0x8(%rbx),%rdx
               :   946ab:	mov    %rdx,0x8(%rbx)
               :   946af:	cmp    $0x80,%ax
               :   946b3:	mov    $0x80,%edx
               :   946b8:	mov    %ax,0x36(%rbx)
               :   946bc:	mov    0x38(%rbx),%r13
               :   946c0:	cmova  %edx,%eax
               :   946c3:	xor    %edx,%edx
               :   946c5:	mov    %dx,0x28(%rbx)
               :   946c9:	mov    %rsi,(%rbx)
               :   946cc:	mov    %ax,0x10(%rbx)
               :   946d0:	movq   $0x0,0x18(%rbx)
               :   946d8:	mov    0x44(%r13),%edx
               :   946dc:	jmpq   93652 <mlx5_tx_burst_mtiv_empw+0x2082>
               :   946e1:	mov    %rbx,%rcx
               :   946e4:	and    $0x1f,%ecx
               :   946e7:	je     96968 <mlx5_tx_burst_mtiv_empw+0x5398>
               :   946ed:	mov    $0x20,%edx
               :   946f2:	sub    %rcx,%rdx
               :   946f5:	lea    -0x20(%rax,%rcx,1),%rcx
               :   946fa:	mov    %rcx,0x20(%rsp)
               :   946ff:	lea    (%r10,%rdx,1),%rcx
               :   94703:	mov    %rcx,0x50(%rsp)
               :   94708:	lea    (%rbx,%rdx,1),%rcx
               :   9470c:	mov    %rcx,0x48(%rsp)
               :   94711:	vmovdqu64 %ymm0,(%rbx)
               :   94717:	mov    0x20(%rsp),%rcx
               :   9471c:	mov    0x50(%rsp),%r14
               :   94721:	lea    -0x80(%rcx),%rdx
               :   94725:	and    $0xffffffffffffff80,%rdx
               :   94729:	lea    0x80(%r14,%rdx,1),%rcx
               :   94731:	mov    %rcx,0x40(%rsp)
               :   94736:	mov    %r15,0x18(%rsp)
               :   9473b:	mov    %r14,%rdx
               :   9473e:	mov    0x48(%rsp),%rcx
               :   94743:	mov    0x40(%rsp),%r15
               :   94748:	mov    0x80(%rsp),%r14
               :   94750:	vmovdqu64 (%rdx),%ymm2
               :   94756:	vmovdqu64 0x20(%rdx),%ymm1
               :   9475d:	vmovdqu64 0x40(%rdx),%ymm0
               :   94764:	vmovdqu64 0x60(%rdx),%ymm3
               :   9476b:	sub    $0xffffffffffffff80,%rdx
               :   9476f:	vmovdqu64 %ymm3,0x60(%rcx)
               :   94776:	vmovdqu64 %ymm2,(%rcx)
               :   9477c:	vmovdqu64 %ymm1,0x20(%rcx)
               :   94783:	vmovdqu64 %ymm0,0x40(%rcx)
               :   9478a:	sub    $0xffffffffffffff80,%rcx
               :   9478e:	cmp    %r15,%rdx
               :   94791:	jne    94750 <mlx5_tx_burst_mtiv_empw+0x3180>
               :   94793:	mov    0x20(%rsp),%rcx
               :   94798:	mov    %r14,0x80(%rsp)
               :   947a0:	mov    %rcx,%rdx
               :   947a3:	and    $0x7f,%edx
               :   947a6:	mov    %rdx,0x20(%rsp)
               :   947ab:	mov    0x48(%rsp),%r14
               :   947b0:	mov    %rcx,%rdx
               :   947b3:	and    $0xffffffffffffff80,%rdx
               :   947b7:	mov    0x50(%rsp),%rcx
               :   947bc:	add    %rdx,%r14
               :   947bf:	add    %rdx,%rcx
               :   947c2:	mov    0x18(%rsp),%r15
               :   947c7:	mov    %r14,%rdx
               :   947ca:	jmpq   91f7b <mlx5_tx_burst_mtiv_empw+0x9ab>
               :   947cf:	mov    %rbx,%rdx
               :   947d2:	and    $0x1f,%edx
               :   947d5:	je     969e1 <mlx5_tx_burst_mtiv_empw+0x5411>
               :   947db:	mov    $0x20,%ecx
               :   947e0:	sub    %rdx,%rcx
               :   947e3:	lea    -0x20(%rax,%rdx,1),%rdx
               :   947e8:	mov    %rdx,0x20(%rsp)
               :   947ed:	lea    (%r10,%rcx,1),%rdx
               :   947f1:	add    %rbx,%rcx
               :   947f4:	mov    %rdx,0x50(%rsp)
               :   947f9:	mov    %rcx,0x48(%rsp)
               :   947fe:	vmovdqu64 %ymm0,(%rbx)
               :   94804:	mov    %rdx,%r14
               :   94807:	mov    0x20(%rsp),%rcx
               :   9480c:	mov    %r13,0x18(%rsp)
               :   94811:	lea    -0x80(%rcx),%rdx
               :   94815:	and    $0xffffffffffffff80,%rdx
               :   94819:	lea    0x80(%r14,%rdx,1),%rcx
               :   94821:	mov    %rcx,0x40(%rsp)
               :   94826:	mov    %r14,%rdx
               :   94829:	mov    0x48(%rsp),%rcx
               :   9482e:	mov    0x40(%rsp),%r13
               :   94833:	mov    0x58(%rsp),%r14
               :   94838:	nopl   0x0(%rax,%rax,1)
               :   94840:	vmovdqu64 (%rdx),%ymm2
               :   94846:	vmovdqu64 0x20(%rdx),%ymm1
               :   9484d:	vmovdqu64 0x40(%rdx),%ymm0
               :   94854:	vmovdqu64 0x60(%rdx),%ymm7
               :   9485b:	sub    $0xffffffffffffff80,%rdx
               :   9485f:	vmovdqu64 %ymm7,0x60(%rcx)
               :   94866:	vmovdqu64 %ymm2,(%rcx)
               :   9486c:	vmovdqu64 %ymm1,0x20(%rcx)
               :   94873:	vmovdqu64 %ymm0,0x40(%rcx)
               :   9487a:	sub    $0xffffffffffffff80,%rcx
               :   9487e:	cmp    %r13,%rdx
               :   94881:	jne    94840 <mlx5_tx_burst_mtiv_empw+0x3270>
               :   94883:	mov    %r14,0x58(%rsp)
               :   94888:	mov    0x20(%rsp),%r14
               :   9488d:	mov    0x50(%rsp),%rcx
               :   94892:	mov    %r14,%rdx
               :   94895:	and    $0xffffffffffffff80,%r14
               :   94899:	add    %r14,%rcx
               :   9489c:	mov    %rcx,0x20(%rsp)
               :   948a1:	mov    0x48(%rsp),%rcx
               :   948a6:	mov    0x18(%rsp),%r13
               :   948ab:	and    $0x7f,%edx
               :   948ae:	add    %r14,%rcx
               :   948b1:	jmpq   9204b <mlx5_tx_burst_mtiv_empw+0xa7b>
               :   948b6:	lea    0x5(%rsi),%edx
               :   948b9:	lea    0x2(%rsi),%ebx
               :   948bc:	shr    $0x2,%edx
               :   948bf:	mov    %ebx,0x88(%rsp)
               :   948c6:	cmp    %r14d,%edx
               :   948c9:	ja     93970 <mlx5_tx_burst_mtiv_empw+0x23a0>
               :   948cf:	lea    0x2(%rsi),%ebx
               :   948d2:	cmp    $0x3c,%ebx
               :   948d5:	ja     93770 <mlx5_tx_burst_mtiv_empw+0x21a0>
               :   948db:	cmp    $0x12,%edi
               :   948de:	jbe    93770 <mlx5_tx_burst_mtiv_empw+0x21a0>
               :   948e4:	mov    %edi,%edx
               :   948e6:	add    0x158(%r11),%rdx
               :   948ed:	lea    0x4(%rdx),%rdi
               :   948f1:	test   %r8,%r8
               :   948f4:	cmovne %rdi,%rdx
               :   948f8:	movzwl 0x10(%r11),%edi
               :   948fd:	mov    %rdx,0x158(%r11)
               :   94904:	movzwl 0xa(%r11),%edx
               :   94909:	and    %edx,%edi
               :   9490b:	movzwl %di,%edi
               :   9490e:	shl    $0x6,%rdi
               :   94912:	add    0xf8(%r11),%rdi
               :   94919:	shl    $0x8,%edx
               :   9491c:	mov    %rdi,0xb8(%rsp)
               :   94924:	or     $0xa,%edx
               :   94927:	bswap  %edx
               :   94929:	or     0x28(%r11),%ebx
               :   9492d:	mov    %edx,(%rdi)
               :   9492f:	mov    %ebx,%edx
               :   94931:	bswap  %edx
               :   94933:	mov    %edx,0x4(%rdi)
               :   94936:	movq   $0x4000000,0x8(%rdi)
               :   9493e:	movq   $0x0,0x10(%rdi)
               :   94946:	mov    0x10168b(%rip),%rdi        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :   9494d:	xor    %edx,%edx
               :   9494f:	test   %rcx,(%rdi)
               :   94952:	je     94965 <mlx5_tx_burst_mtiv_empw+0x3395>
               :   94954:	mov    0x1015f5(%rip),%rdx        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :   9495b:	movslq (%rdx),%rdx
               :   9495e:	mov    0x0(%r13,%rdx,1),%edx
               :   94963:	bswap  %edx
               :   94965:	mov    0xb8(%rsp),%rbx
               :   9496d:	mov    %edx,0x18(%rbx)
               :   94970:	test   %r8,%r8
               :   94973:	je     9738d <mlx5_tx_burst_mtiv_empw+0x5dbd>
               :   94979:	movzwl 0x2a(%r13),%edx
               :   9497e:	or     $0x80000000,%edx
               :   94984:	bswap  %edx
               :   94986:	mov    %edx,0x1c(%rbx)
               :   94989:	mov    %rbx,%rcx
               :   9498c:	lea    -0x1(%rsi),%r8d
               :   94990:	lea    0x48(%r11),%r15
               :   94994:	lea    0x38(%r11),%rsi
               :   94998:	mov    %rsi,0x60(%rsp)
               :   9499d:	movzwl 0xa8(%rsp),%r14d
               :   949a6:	lea    0x20(%rcx),%r12
               :   949aa:	mov    %r11,%rbx
               :   949ad:	mov    %r15,%r9
               :   949b0:	jmpq   94a58 <mlx5_tx_burst_mtiv_empw+0x3488>
               :   949b5:	nopl   (%rax)
               :   949b8:	mov    0x0(%r13),%rdx
               :   949bc:	movzwl 0x10(%r13),%r15d
               :   949c1:	add    %rdx,%r15
               :   949c4:	bswap  %eax
               :   949c6:	mov    %eax,(%r12)
               :   949ca:	mov    0x40(%rbx),%ecx
               :   949cd:	mov    0x38(%rbx),%rax
               :   949d1:	cmp    %ecx,(%rax)
               :   949d3:	jne    95cab <mlx5_tx_burst_mtiv_empw+0x46db>
               :   949d9:	movzwl 0x44(%rbx),%eax
               :   949dd:	mov    %r9,%rsi
               :   949e0:	lea    (%rax,%rax,4),%rax
               :   949e4:	lea    (%r9,%rax,4),%rax
               :   949e8:	cmp    (%rax),%rdx
               :   949eb:	jb     94f70 <mlx5_tx_burst_mtiv_empw+0x39a0>
               :   949f1:	cmp    0x8(%rax),%rdx
               :   949f5:	jae    94f70 <mlx5_tx_burst_mtiv_empw+0x39a0>
               :   949fb:	mov    0x10(%rax),%eax
               :   949fe:	cmp    $0xffffffff,%eax
               :   94a01:	je     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   94a07:	mov    %eax,0x4(%r12)
               :   94a0c:	bswap  %r15
               :   94a0f:	movzwl (%rbx),%eax
               :   94a12:	mov    %r15,0x8(%r12)
               :   94a17:	lea    0x1(%rax),%edx
               :   94a1a:	and    0x8(%rbx),%ax
               :   94a1e:	movzwl %ax,%eax
               :   94a21:	mov    %dx,(%rbx)
               :   94a24:	dec    %r14d
               :   94a27:	mov    %r13,0x188(%rbx,%rax,8)
               :   94a2f:	test   %r8d,%r8d
               :   94a32:	je     9685a <mlx5_tx_burst_mtiv_empw+0x528a>
               :   94a38:	add    $0x10,%r12
               :   94a3c:	cmp    %r12,0x100(%rbx)
               :   94a43:	ja     94a4c <mlx5_tx_burst_mtiv_empw+0x347c>
               :   94a45:	mov    0xf8(%rbx),%r12
               :   94a4c:	mov    0x40(%r13),%r13
               :   94a50:	movzwl 0x28(%r13),%eax
               :   94a55:	dec    %r8d
               :   94a58:	test   %ax,%ax
               :   94a5b:	jne    949b8 <mlx5_tx_burst_mtiv_empw+0x33e8>
               :   94a61:	mov    0xb8(%rsp),%rax
               :   94a69:	decl   0x88(%rsp)
               :   94a70:	subl   $0x1000000,0x4(%rax)
               :   94a77:	mov    0x40(%r13),%rax
               :   94a7b:	lea    0x12(%r13),%r15
               :   94a7f:	mov    %rax,0xc0(%rsp)
               :   94a87:	movzwl 0x12(%r13),%eax
               :   94a8c:	cmp    $0x1,%ax
               :   94a90:	jne    985f6 <mlx5_tx_burst_mtiv_empw+0x7026>
               :   94a96:	mov    0x18(%r13),%rax
               :   94a9a:	movabs $0x6000000000000000,%rsi
               :   94aa4:	mov    0x38(%r13),%r15
               :   94aa8:	test   %rsi,%rax
               :   94aab:	je     9681c <mlx5_tx_burst_mtiv_empw+0x524c>
               :   94ab1:	movabs $0x2000000000000000,%rdi
               :   94abb:	test   %rdi,%rax
               :   94abe:	je     97d51 <mlx5_tx_burst_mtiv_empw+0x6781>
               :   94ac4:	mov    0x44(%r15),%edx
               :   94ac8:	test   %edx,%edx
               :   94aca:	jne    967d5 <mlx5_tx_burst_mtiv_empw+0x5205>
               :   94ad0:	testb  $0x1,0xc4(%r15)
               :   94ad8:	jne    9a4c9 <mlx5_tx_burst_mtiv_empw+0x8ef9>
               :   94ade:	mov    0x50(%r13),%rdx
               :   94ae2:	movzwl 0x10(%rdx),%esi
               :   94ae6:	lea    0x10(%rdx),%rax
               :   94aea:	cmp    $0x1,%si
               :   94aee:	jne    9a43a <mlx5_tx_burst_mtiv_empw+0x8e6a>
               :   94af4:	movw   $0x0,0x10(%rdx)
               :   94afa:	mov    0x50(%r13),%rax
               :   94afe:	mov    0x0(%r13),%rdi
               :   94b02:	mov    0x8(%rax),%rsi
               :   94b06:	mov    %r9,0xa8(%rsp)
               :   94b0e:	mov    %r8d,0xb0(%rsp)
               :   94b16:	vzeroupper 
               :   94b19:	callq  *(%rax)
               :   94b1b:	mov    0xb0(%rsp),%r8d
               :   94b23:	mov    0xa8(%rsp),%r9
               :   94b2b:	cmpl   $0x1,0x44(%r15)
               :   94b30:	sbb    %rax,%rax
               :   94b33:	and    $0xffffffffffefe000,%rax
               :   94b39:	lea    0x1020c0(%r15,%rax,1),%rax
               :   94b41:	movzwl 0x2(%rax),%edx
               :   94b45:	movzwl (%rax),%eax
               :   94b48:	mov    %dx,0x58(%r13)
               :   94b4d:	sub    $0xffffffffffffff80,%rdx
               :   94b51:	lea    0x0(%r13,%rdx,1),%rsi
               :   94b56:	add    -0x8(%r13),%rdx
               :   94b5a:	mov    %rdx,0x8(%r13)
               :   94b5e:	cmp    $0x80,%ax
               :   94b62:	mov    $0x80,%edx
               :   94b67:	mov    %ax,0x36(%r13)
               :   94b6c:	cmova  %edx,%eax
               :   94b6f:	mov    0x38(%r13),%r15
               :   94b73:	xor    %r10d,%r10d
               :   94b76:	mov    %rsi,0x0(%r13)
               :   94b7a:	mov    %ax,0x10(%r13)
               :   94b7f:	mov    %r10w,0x28(%r13)
               :   94b84:	movq   $0x0,0x18(%r13)
               :   94b8c:	mov    0x44(%r15),%edx
               :   94b90:	cmpq   $0x0,0x40(%r13)
               :   94b95:	je     94b9f <mlx5_tx_burst_mtiv_empw+0x35cf>
               :   94b97:	movq   $0x0,0x40(%r13)
               :   94b9f:	cmpw   $0x1,0x14(%r13)
               :   94ba5:	je     94bb1 <mlx5_tx_burst_mtiv_empw+0x35e1>
               :   94ba7:	mov    $0x1,%edi
               :   94bac:	mov    %di,0x14(%r13)
               :   94bb1:	mov    %r9,0xa8(%rsp)
               :   94bb9:	mov    %r8d,0xb0(%rsp)
               :   94bc1:	mov    %edx,0x58(%rsp)
               :   94bc5:	mov    %r13,0x108(%rsp)
               :   94bcd:	data16 lea 0x101273(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   94bd5:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   94bdd:	mov    0xb0(%rsp),%r8d
               :   94be5:	mov    0xa8(%rsp),%r9
               :   94bed:	mov    (%rax),%eax
               :   94bef:	cmp    $0x7f,%eax
               :   94bf2:	ja     97d01 <mlx5_tx_burst_mtiv_empw+0x6731>
               :   94bf8:	mov    0x58(%rsp),%edx
               :   94bfc:	test   %edx,%edx
               :   94bfe:	je     97d01 <mlx5_tx_burst_mtiv_empw+0x6731>
               :   94c04:	mov    %eax,%r13d
               :   94c07:	imul   $0x2040,%r13,%r13
               :   94c0e:	add    0x60(%r15),%r13
               :   94c12:	je     97d01 <mlx5_tx_burst_mtiv_empw+0x6731>
               :   94c18:	mov    0x4(%r13),%eax
               :   94c1c:	test   %eax,%eax
               :   94c1e:	je     97d01 <mlx5_tx_burst_mtiv_empw+0x6731>
               :   94c24:	mov    0x8(%r13),%edx
               :   94c28:	lea    0x1(%rdx),%edi
               :   94c2b:	cmp    %edi,%eax
               :   94c2d:	jb     973a7 <mlx5_tx_burst_mtiv_empw+0x5dd7>
               :   94c33:	mov    %edi,0x8(%r13)
               :   94c37:	lea    0x40(%r13,%rdx,8),%rsi
               :   94c3c:	mov    0x108(%rsp),%rax
               :   94c44:	mov    %rax,(%rsi)
               :   94c47:	test   %r8d,%r8d
               :   94c4a:	je     9685a <mlx5_tx_burst_mtiv_empw+0x528a>
               :   94c50:	mov    0xc0(%rsp),%r13
               :   94c58:	jmpq   94a50 <mlx5_tx_burst_mtiv_empw+0x3480>
               :   94c5d:	lock decw (%rcx)
               :   94c61:	jne    92c00 <mlx5_tx_burst_mtiv_empw+0x1630>
               :   94c67:	movw   $0x1,0x10(%rax)
               :   94c6d:	jmpq   92b4f <mlx5_tx_burst_mtiv_empw+0x157f>
               :   94c72:	nopw   0x0(%rax,%rax,1)
               :   94c78:	lock decw (%rcx)
               :   94c7c:	je     94008 <mlx5_tx_burst_mtiv_empw+0x2a38>
               :   94c82:	vzeroupper 
               :   94c85:	jmpq   940b1 <mlx5_tx_burst_mtiv_empw+0x2ae1>
               :   94c8a:	lock decw (%rcx)
               :   94c8e:	jne    94c82 <mlx5_tx_burst_mtiv_empw+0x36b2>
               :   94c90:	jmpq   93fba <mlx5_tx_burst_mtiv_empw+0x29ea>
               :   94c95:	lea    0xd4(%r14),%rcx
               :   94c9c:	mov    $0x7,%eax
               :   94ca1:	jmpq   92c88 <mlx5_tx_burst_mtiv_empw+0x16b8>
               :   94ca6:	nopw   %cs:0x0(%rax,%rax,1)
               :   94cb0:	mov    %rbx,%rdx
               :   94cb3:	mov    %r14,%r11
               :   94cb6:	mov    %r15w,0xcc(%rsp)
               :   94cbf:	vzeroupper 
               :   94cc2:	jmpq   91e8e <mlx5_tx_burst_mtiv_empw+0x8be>
               :   94cc7:	nopw   0x0(%rax,%rax,1)
               :   94cd0:	mov    %rbx,0xb8(%rsp)
               :   94cd8:	movzwl %r15w,%ebx
               :   94cdc:	jmpq   91d7c <mlx5_tx_burst_mtiv_empw+0x7ac>
               :   94ce1:	nopl   0x0(%rax)
               :   94ce8:	vmovdqu64 (%r10),%xmm7
               :   94cee:	vmovups %xmm7,(%rbx)
               :   94cf2:	vmovdqu64 0x10(%r10),%xmm3
               :   94cf9:	vmovups %xmm3,0x10(%rbx)
               :   94cfe:	vmovdqu64 -0x10(%r10,%rax,1),%xmm5
               :   94d06:	vmovups %xmm5,-0x10(%rbx,%rax,1)
               :   94d0c:	jmpq   926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   94d11:	nopl   0x0(%rax)
               :   94d18:	vmovdqu64 (%r10),%xmm5
               :   94d1e:	vmovups %xmm5,(%rbx)
               :   94d22:	vmovdqu64 0x10(%r10),%xmm6
               :   94d29:	vmovups %xmm6,0x10(%rbx)
               :   94d2e:	vmovdqu64 -0x10(%r10,%rax,1),%xmm2
               :   94d36:	vmovups %xmm2,-0x10(%rbx,%rax,1)
               :   94d3c:	jmpq   92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   94d41:	nopl   0x0(%rax)
               :   94d48:	vmovdqu64 (%r10),%ymm7
               :   94d4e:	vmovdqu64 %ymm7,(%rbx)
               :   94d54:	vmovdqu64 -0x20(%r10,%rax,1),%ymm3
               :   94d5c:	vmovdqu64 %ymm3,-0x20(%rbx,%rax,1)
               :   94d64:	jmpq   92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   94d69:	nopl   0x0(%rax)
               :   94d70:	vmovdqu64 (%r10),%ymm4
               :   94d76:	vmovdqu64 %ymm4,(%rbx)
               :   94d7c:	vmovdqu64 -0x20(%r10,%rax,1),%ymm0
               :   94d84:	vmovdqu64 %ymm0,-0x20(%rbx,%rax,1)
               :   94d8c:	jmpq   926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   94d91:	nopl   0x0(%rax)
               :   94d98:	mov    0x88(%rsp),%rdi
               :   94da0:	mov    %r9,0xb0(%rsp)
               :   94da8:	mov    %ecx,0xc0(%rsp)
               :   94daf:	vzeroupper 
               :   94db2:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :   94db7:	mov    (%rbx),%rdi
               :   94dba:	mov    0xb0(%rsp),%r9
               :   94dc2:	mov    0xc0(%rsp),%ecx
               :   94dc9:	jmpq   93469 <mlx5_tx_burst_mtiv_empw+0x1e99>
               :   94dce:	xchg   %ax,%ax
               :   94dd0:	mov    %rbx,0xb8(%rsp)
               :   94dd8:	jmpq   91b59 <mlx5_tx_burst_mtiv_empw+0x589>
               :   94ddd:	nopl   (%rax)
               :   94de0:	mov    %r13,%r14
               :   94de3:	cmp    %dx,%cx
               :   94de6:	jb     932ea <mlx5_tx_burst_mtiv_empw+0x1d1a>
               :   94dec:	mov    0x40(%r13),%r14
               :   94df0:	movzwl 0x12(%r13),%eax
               :   94df5:	lea    0x12(%r13),%rdx
               :   94df9:	cmp    $0x1,%ax
               :   94dfd:	jne    99098 <mlx5_tx_burst_mtiv_empw+0x7ac8>
               :   94e03:	mov    0x18(%r13),%rax
               :   94e07:	movabs $0x6000000000000000,%rcx
               :   94e11:	mov    0x38(%r13),%r15
               :   94e15:	test   %rcx,%rax
               :   94e18:	je     94e80 <mlx5_tx_burst_mtiv_empw+0x38b0>
               :   94e1a:	movabs $0x2000000000000000,%rbx
               :   94e24:	test   %rbx,%rax
               :   94e27:	je     989c0 <mlx5_tx_burst_mtiv_empw+0x73f0>
               :   94e2d:	mov    0x44(%r15),%ebx
               :   94e31:	test   %ebx,%ebx
               :   94e33:	jne    989a1 <mlx5_tx_burst_mtiv_empw+0x73d1>
               :   94e39:	testb  $0x1,0xc4(%r15)
               :   94e41:	je     9890a <mlx5_tx_burst_mtiv_empw+0x733a>
               :   94e47:	mov    $0xc0,%eax
               :   94e4c:	testb  $0x1,0x4(%r15,%rax,1)
               :   94e52:	je     98902 <mlx5_tx_burst_mtiv_empw+0x7332>
               :   94e58:	movabs $0x2000000000000000,%rbx
               :   94e62:	mov    %rbx,0x18(%r13)
               :   94e66:	mov    0x50(%r13),%rax
               :   94e6a:	movzwl 0x10(%rax),%ecx
               :   94e6e:	lea    0x10(%rax),%rdx
               :   94e72:	cmp    $0x1,%cx
               :   94e76:	jne    99aa5 <mlx5_tx_burst_mtiv_empw+0x84d5>
               :   94e7c:	mov    0x38(%r13),%r15
               :   94e80:	mov    0x44(%r15),%ebx
               :   94e84:	vzeroupper 
               :   94e87:	cmpq   $0x0,0x40(%r13)
               :   94e8c:	je     94e96 <mlx5_tx_burst_mtiv_empw+0x38c6>
               :   94e8e:	movq   $0x0,0x40(%r13)
               :   94e96:	cmpw   $0x1,0x14(%r13)
               :   94e9c:	je     94ea8 <mlx5_tx_burst_mtiv_empw+0x38d8>
               :   94e9e:	mov    $0x1,%edi
               :   94ea3:	mov    %di,0x14(%r13)
               :   94ea8:	mov    %r13,0xf0(%rsp)
               :   94eb0:	data16 lea 0x100f90(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   94eb8:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   94ec0:	mov    (%rax),%eax
               :   94ec2:	test   %ebx,%ebx
               :   94ec4:	je     98759 <mlx5_tx_burst_mtiv_empw+0x7189>
               :   94eca:	cmp    $0x7f,%eax
               :   94ecd:	ja     98759 <mlx5_tx_burst_mtiv_empw+0x7189>
               :   94ed3:	mov    %eax,%ebx
               :   94ed5:	imul   $0x2040,%rbx,%rbx
               :   94edc:	add    0x60(%r15),%rbx
               :   94ee0:	je     98759 <mlx5_tx_burst_mtiv_empw+0x7189>
               :   94ee6:	mov    0x4(%rbx),%eax
               :   94ee9:	test   %eax,%eax
               :   94eeb:	je     98759 <mlx5_tx_burst_mtiv_empw+0x7189>
               :   94ef1:	mov    0x8(%rbx),%edx
               :   94ef4:	lea    0x1(%rdx),%ecx
               :   94ef7:	cmp    %ecx,%eax
               :   94ef9:	jb     97fbc <mlx5_tx_burst_mtiv_empw+0x69ec>
               :   94eff:	mov    %ecx,0x8(%rbx)
               :   94f02:	lea    0x40(%rbx,%rdx,8),%r13
               :   94f07:	mov    0xf0(%rsp),%rax
               :   94f0f:	mov    %rax,0x0(%r13)
               :   94f13:	decw   0xc0(%rsp)
               :   94f1b:	xor    %ecx,%ecx
               :   94f1d:	jmpq   932ea <mlx5_tx_burst_mtiv_empw+0x1d1a>
               :   94f22:	nopw   0x0(%rax,%rax,1)
               :   94f28:	movslq 0x58(%r8),%rax
               :   94f2c:	lea    0x40(%r13),%rsi
               :   94f30:	cmp    $0xf,%eax
               :   94f33:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   94f39:	shl    $0x7,%rax
               :   94f3d:	add    0x100fcc(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   94f44:	mov    %r8,%rdi
               :   94f47:	mov    %rsi,0x88(%rsp)
               :   94f4f:	callq  *0x70(%rax)
               :   94f52:	movl   $0x1,0x8(%r13)
               :   94f5a:	mov    0x88(%rsp),%rsi
               :   94f62:	jmpq   93c77 <mlx5_tx_burst_mtiv_empw+0x26a7>
               :   94f67:	nopw   0x0(%rax,%rax,1)
               :   94f70:	mov    0x48(%rbx),%rax
               :   94f74:	test   %rax,%rax
               :   94f77:	je     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   94f7d:	cmp    %rax,%rdx
               :   94f80:	jb     94f8c <mlx5_tx_burst_mtiv_empw+0x39bc>
               :   94f82:	cmp    0x50(%rbx),%rdx
               :   94f86:	jb     971bb <mlx5_tx_burst_mtiv_empw+0x5beb>
               :   94f8c:	mov    0x5c(%rbx),%rax
               :   94f90:	test   %rax,%rax
               :   94f93:	je     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   94f99:	cmp    %rax,%rdx
               :   94f9c:	jb     94fb1 <mlx5_tx_burst_mtiv_empw+0x39e1>
               :   94f9e:	lea    0x5c(%rbx),%rsi
               :   94fa2:	mov    $0x1,%eax
               :   94fa7:	cmp    0x64(%rbx),%rdx
               :   94fab:	jb     971bd <mlx5_tx_burst_mtiv_empw+0x5bed>
               :   94fb1:	mov    0x70(%rbx),%rax
               :   94fb5:	test   %rax,%rax
               :   94fb8:	je     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   94fbe:	cmp    %rax,%rdx
               :   94fc1:	jb     94fd6 <mlx5_tx_burst_mtiv_empw+0x3a06>
               :   94fc3:	lea    0x70(%rbx),%rsi
               :   94fc7:	mov    $0x2,%eax
               :   94fcc:	cmp    0x78(%rbx),%rdx
               :   94fd0:	jb     971bd <mlx5_tx_burst_mtiv_empw+0x5bed>
               :   94fd6:	mov    0x84(%rbx),%rax
               :   94fdd:	test   %rax,%rax
               :   94fe0:	je     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   94fe6:	cmp    %rax,%rdx
               :   94fe9:	jb     95004 <mlx5_tx_burst_mtiv_empw+0x3a34>
               :   94feb:	lea    0x84(%rbx),%rsi
               :   94ff2:	mov    $0x3,%eax
               :   94ff7:	cmp    0x8c(%rbx),%rdx
               :   94ffe:	jb     971bd <mlx5_tx_burst_mtiv_empw+0x5bed>
               :   95004:	mov    0x98(%rbx),%rax
               :   9500b:	test   %rax,%rax
               :   9500e:	je     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   95014:	cmp    %rax,%rdx
               :   95017:	jb     95032 <mlx5_tx_burst_mtiv_empw+0x3a62>
               :   95019:	lea    0x98(%rbx),%rsi
               :   95020:	mov    $0x4,%eax
               :   95025:	cmp    0xa0(%rbx),%rdx
               :   9502c:	jb     971bd <mlx5_tx_burst_mtiv_empw+0x5bed>
               :   95032:	mov    0xac(%rbx),%rax
               :   95039:	test   %rax,%rax
               :   9503c:	je     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   9503e:	cmp    %rax,%rdx
               :   95041:	jb     9505c <mlx5_tx_burst_mtiv_empw+0x3a8c>
               :   95043:	lea    0xac(%rbx),%rsi
               :   9504a:	mov    $0x5,%eax
               :   9504f:	cmp    0xb4(%rbx),%rdx
               :   95056:	jb     971bd <mlx5_tx_burst_mtiv_empw+0x5bed>
               :   9505c:	mov    0xc0(%rbx),%rax
               :   95063:	test   %rax,%rax
               :   95066:	je     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   95068:	cmp    %rax,%rdx
               :   9506b:	jb     95086 <mlx5_tx_burst_mtiv_empw+0x3ab6>
               :   9506d:	lea    0xc0(%rbx),%rsi
               :   95074:	mov    $0x6,%eax
               :   95079:	cmp    0xc8(%rbx),%rdx
               :   95080:	jb     971bd <mlx5_tx_burst_mtiv_empw+0x5bed>
               :   95086:	mov    0xd4(%rbx),%rax
               :   9508d:	cmp    %rax,%rdx
               :   95090:	jb     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   95092:	test   %rax,%rax
               :   95095:	je     950b0 <mlx5_tx_burst_mtiv_empw+0x3ae0>
               :   95097:	lea    0xd4(%rbx),%rsi
               :   9509e:	mov    $0x7,%eax
               :   950a3:	cmp    0xdc(%rbx),%rdx
               :   950aa:	jb     971bd <mlx5_tx_burst_mtiv_empw+0x5bed>
               :   950b0:	mov    0x60(%rsp),%rdi
               :   950b5:	mov    %r13,%rsi
               :   950b8:	mov    %r9,0xb0(%rsp)
               :   950c0:	mov    %r8d,0xc0(%rsp)
               :   950c8:	vzeroupper 
               :   950cb:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :   950d0:	mov    0xc0(%rsp),%r8d
               :   950d8:	mov    0xb0(%rsp),%r9
               :   950e0:	jmpq   94a07 <mlx5_tx_burst_mtiv_empw+0x3437>
               :   950e5:	nopl   (%rax)
               :   950e8:	vmovdqu64 (%rax),%xmm4
               :   950ee:	vmovups %xmm4,(%r14)
               :   950f3:	vmovdqu64 -0x10(%rax,%rdi,1),%xmm0
               :   950fb:	vmovups %xmm0,-0x10(%r14,%rdi,1)
               :   95102:	jmpq   93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   95107:	nopw   0x0(%rax,%rax,1)
               :   95110:	vmovdqu64 (%rax),%xmm1
               :   95116:	vmovups %xmm1,(%r14)
               :   9511b:	vmovdqu64 -0x10(%rax,%rdi,1),%xmm7
               :   95123:	vmovups %xmm7,-0x10(%r14,%rdi,1)
               :   9512a:	jmpq   93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   9512f:	nop
               :   95130:	lock decw (%rcx)
               :   95134:	jne    92c00 <mlx5_tx_burst_mtiv_empw+0x1630>
               :   9513a:	mov    0x18(%r13),%rax
               :   9513e:	movabs $0x6000000000000000,%rsi
               :   95148:	test   %rsi,%rax
               :   9514b:	je     951af <mlx5_tx_burst_mtiv_empw+0x3bdf>
               :   9514d:	movabs $0x2000000000000000,%rdi
               :   95157:	mov    0x38(%r13),%r9
               :   9515b:	test   %rdi,%rax
               :   9515e:	je     97b60 <mlx5_tx_burst_mtiv_empw+0x6590>
               :   95164:	mov    0x44(%r9),%esi
               :   95168:	test   %esi,%esi
               :   9516a:	jne    97b47 <mlx5_tx_burst_mtiv_empw+0x6577>
               :   95170:	testb  $0x1,0xc4(%r9)
               :   95178:	je     97a9e <mlx5_tx_burst_mtiv_empw+0x64ce>
               :   9517e:	mov    $0xc0,%eax
               :   95183:	testb  $0x1,0x4(%r9,%rax,1)
               :   95189:	je     951af <mlx5_tx_burst_mtiv_empw+0x3bdf>
               :   9518b:	movabs $0x2000000000000000,%rdi
               :   95195:	mov    %rdi,0x18(%r13)
               :   95199:	mov    0x50(%r13),%rax
               :   9519d:	movzwl 0x10(%rax),%esi
               :   951a1:	lea    0x10(%rax),%rdx
               :   951a5:	cmp    $0x1,%si
               :   951a9:	jne    99dee <mlx5_tx_burst_mtiv_empw+0x881e>
               :   951af:	vzeroupper 
               :   951b2:	cmpq   $0x0,0x40(%r13)
               :   951b7:	je     951c1 <mlx5_tx_burst_mtiv_empw+0x3bf1>
               :   951b9:	movq   $0x0,0x40(%r13)
               :   951c1:	cmpw   $0x1,0x14(%r13)
               :   951c7:	je     951d4 <mlx5_tx_burst_mtiv_empw+0x3c04>
               :   951c9:	mov    $0x1,%r9d
               :   951cf:	mov    %r9w,0x14(%r13)
               :   951d4:	movw   $0x1,(%rcx)
               :   951d9:	mov    0x38(%r13),%r8
               :   951dd:	mov    0x44(%r8),%edx
               :   951e1:	jmpq   92b7b <mlx5_tx_burst_mtiv_empw+0x15ab>
               :   951e6:	nopw   %cs:0x0(%rax,%rax,1)
               :   951f0:	vmovdqu64 %ymm0,(%rbx)
               :   951f6:	vmovdqu64 -0x20(%rax,%r8,1),%ymm3
               :   951fe:	vmovdqu64 %ymm3,-0x20(%rbx,%r8,1)
               :   95206:	jmpq   92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   9520b:	nopl   0x0(%rax,%rax,1)
               :   95210:	movslq 0x58(%r13),%rax
               :   95214:	mov    %r9,0x60(%rsp)
               :   95219:	mov    %ecx,0xa8(%rsp)
               :   95220:	lea    0x40(%rbx),%rsi
               :   95224:	cmp    $0xf,%eax
               :   95227:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9522d:	shl    $0x7,%rax
               :   95231:	add    0x100cd8(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   95238:	mov    %r13,%rdi
               :   9523b:	mov    %rsi,0xb0(%rsp)
               :   95243:	callq  *0x70(%rax)
               :   95246:	movl   $0x1,0x8(%rbx)
               :   9524d:	mov    0x60(%rsp),%r9
               :   95252:	mov    0xa8(%rsp),%ecx
               :   95259:	mov    0xb0(%rsp),%rsi
               :   95261:	jmpq   936f6 <mlx5_tx_burst_mtiv_empw+0x2126>
               :   95266:	nopw   %cs:0x0(%rax,%rax,1)
               :   95270:	test   %rdx,%rdx
               :   95273:	je     92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   95279:	vmovdqu64 -0x20(%rax,%rdx,1),%ymm3
               :   95281:	vmovdqu64 %ymm3,-0x20(%rdi,%rdx,1)
               :   95289:	jmpq   92aa0 <mlx5_tx_burst_mtiv_empw+0x14d0>
               :   9528e:	movzwl 0x48(%r13),%eax
               :   95293:	movzbl 0x48(%r13),%edx
               :   95298:	shr    $0x7,%ax
               :   9529c:	movzbl 0x4a(%r13),%esi
               :   952a1:	and    $0x7f,%edx
               :   952a4:	movzwl %ax,%eax
               :   952a7:	test   %r8,%r8
               :   952aa:	jne    9608d <mlx5_tx_burst_mtiv_empw+0x4abd>
               :   952b0:	add    %edx,%eax
               :   952b2:	add    %esi,%eax
               :   952b4:	mov    %eax,0xb0(%rsp)
               :   952bb:	je     93770 <mlx5_tx_burst_mtiv_empw+0x21a0>
               :   952c1:	xor    %r12d,%r12d
               :   952c4:	movabs $0xffff000000,%rax
               :   952ce:	test   %rax,0x48(%r13)
               :   952d2:	je     93770 <mlx5_tx_burst_mtiv_empw+0x21a0>
               :   952d8:	movabs $0x1e00000000000,%rax
               :   952e2:	test   %rax,%rcx
               :   952e5:	je     9530b <mlx5_tx_burst_mtiv_empw+0x3d3b>
               :   952e7:	movzbl 0x4e(%r13),%eax
               :   952ec:	mov    $0x8,%ebx
               :   952f1:	shr    %al
               :   952f3:	movzbl %al,%eax
               :   952f6:	shrx   %ebx,0x4c(%r13),%edx
               :   952fc:	and    $0x1ff,%edx
               :   95302:	add    %edx,%eax
               :   95304:	add    %eax,0xb0(%rsp)
               :   9530b:	mov    0xb0(%rsp),%ebx
               :   95312:	lea    -0x13(%rbx),%eax
               :   95315:	cmp    $0xad,%eax
               :   9531a:	ja     93770 <mlx5_tx_burst_mtiv_empw+0x21a0>
               :   95320:	lea    (%r12,%rdi,1),%r8d
               :   95324:	cmp    %r8d,%ebx
               :   95327:	ja     93770 <mlx5_tx_burst_mtiv_empw+0x21a0>
               :   9532d:	movzwl 0xc0(%rsp),%edx
               :   95335:	lea    0xd(%rbx),%eax
               :   95338:	shr    $0x4,%eax
               :   9533b:	add    %edx,%eax
               :   9533d:	lea    0x2(%rax),%esi
               :   95340:	movzwl 0xce(%rsp),%edx
               :   95348:	add    $0x5,%eax
               :   9534b:	shr    $0x2,%eax
               :   9534e:	cmp    %eax,%edx
               :   95350:	jb     93970 <mlx5_tx_burst_mtiv_empw+0x23a0>
               :   95356:	cmp    $0x3c,%esi
               :   95359:	ja     93770 <mlx5_tx_burst_mtiv_empw+0x21a0>
               :   9535f:	movzwl 0x4b(%r13),%esi
               :   95364:	xor    %edx,%edx
               :   95366:	lea    -0x1(%rsi,%rdi,1),%eax
               :   9536a:	mov    0xb0(%rsp),%edi
               :   95371:	add    %r12d,%eax
               :   95374:	sub    %edi,%eax
               :   95376:	div    %esi
               :   95378:	mov    0xf8(%r11),%rbx
               :   9537f:	lea    -0x1(%rax),%edx
               :   95382:	mov    %rdx,%rax
               :   95385:	imul   %edi,%eax
               :   95388:	add    %rdx,0x150(%r11)
               :   9538f:	movzwl 0x10(%r11),%edx
               :   95394:	add    %r8d,%eax
               :   95397:	add    %rax,0x158(%r11)
               :   9539e:	movzwl 0xa(%r11),%eax
               :   953a3:	and    %eax,%edx
               :   953a5:	movzwl %dx,%edx
               :   953a8:	shl    $0x6,%rdx
               :   953ac:	add    %rdx,%rbx
               :   953af:	shl    $0x8,%eax
               :   953b2:	mov    %rbx,0xb8(%rsp)
               :   953ba:	or     $0xe,%eax
               :   953bd:	bswap  %eax
               :   953bf:	mov    %eax,(%rbx)
               :   953c1:	mov    0x28(%r11),%eax
               :   953c5:	bswap  %eax
               :   953c7:	mov    %eax,0x4(%rbx)
               :   953ca:	bswap  %esi
               :   953cc:	mov    0x100c05(%rip),%rdx        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :   953d3:	mov    %esi,0x14(%rbx)
               :   953d6:	movq   $0x4000000,0x8(%rbx)
               :   953de:	movl   $0x0,0x10(%rbx)
               :   953e5:	xor    %eax,%eax
               :   953e7:	test   %rcx,(%rdx)
               :   953ea:	je     953fd <mlx5_tx_burst_mtiv_empw+0x3e2d>
               :   953ec:	mov    0x100b5d(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :   953f3:	movslq (%rax),%rax
               :   953f6:	mov    0x0(%r13,%rax,1),%eax
               :   953fb:	bswap  %eax
               :   953fd:	mov    0xb8(%rsp),%rsi
               :   95405:	movzwl 0x28(%r13),%edx
               :   9540a:	mov    %eax,0x18(%rsi)
               :   9540d:	lea    0x1e(%rsi),%rax
               :   95411:	mov    %rax,0x88(%rsp)
               :   95419:	test   %r12d,%r12d
               :   9541c:	jne    96c66 <mlx5_tx_burst_mtiv_empw+0x5696>
               :   95422:	mov    0xb0(%rsp),%ecx
               :   95429:	xor    %r14d,%r14d
               :   9542c:	mov    0x100(%r11),%rax
               :   95433:	mov    %r12d,0x60(%rsp)
               :   95438:	sub    0x88(%rsp),%rax
               :   95440:	cmp    %eax,%ecx
               :   95442:	cmovb  %ecx,%eax
               :   95445:	mov    %r11,0x18(%rsp)
               :   9544a:	mov    %eax,0x48(%rsp)
               :   9544e:	mov    %r12d,%edi
               :   95451:	mov    %eax,%ecx
               :   95453:	mov    0xb0(%rsp),%esi
               :   9545a:	mov    $0x0,%ebx
               :   9545f:	mov    %esi,%eax
               :   95461:	sub    %edi,%eax
               :   95463:	cmp    %edi,%esi
               :   95465:	cmovbe %ebx,%eax
               :   95468:	mov    0x88(%rsp),%r12
               :   95470:	mov    %eax,0x40(%rsp)
               :   95474:	lea    0x118(%rsp),%rax
               :   9547c:	mov    %rax,0x10(%rsp)
               :   95481:	mov    %ecx,%r15d
               :   95484:	nopl   0x0(%rax)
               :   95488:	cmp    %dx,%r14w
               :   9548c:	jae    95638 <mlx5_tx_burst_mtiv_empw+0x4068>
               :   95492:	movzwl 0x10(%r13),%eax
               :   95497:	movzwl %r14w,%ecx
               :   9549b:	add    %rcx,%rax
               :   9549e:	movzwl %r14w,%ecx
               :   954a2:	sub    %ecx,%edx
               :   954a4:	add    0x0(%r13),%rax
               :   954a8:	mov    %edx,%esi
               :   954aa:	cmp    %r15d,%edx
               :   954ad:	mov    %rax,%rdx
               :   954b0:	cmova  %r15d,%esi
               :   954b4:	or     %r12,%rdx
               :   954b7:	and    $0x1f,%edx
               :   954ba:	mov    %esi,%ecx
               :   954bc:	jne    95578 <mlx5_tx_burst_mtiv_empw+0x3fa8>
               :   954c2:	cmp    $0xf,%esi
               :   954c5:	jbe    95a1a <mlx5_tx_burst_mtiv_empw+0x444a>
               :   954cb:	cmp    $0x20,%esi
               :   954ce:	jbe    96c2c <mlx5_tx_burst_mtiv_empw+0x565c>
               :   954d4:	cmp    $0x40,%rcx
               :   954d8:	jbe    97265 <mlx5_tx_burst_mtiv_empw+0x5c95>
               :   954de:	lea    -0x40(%rcx),%r8
               :   954e2:	shr    $0x6,%r8
               :   954e6:	lea    0x1(%r8),%r9
               :   954ea:	shl    $0x6,%r9
               :   954ee:	lea    (%rax,%r9,1),%rdi
               :   954f2:	mov    %r12,%rdx
               :   954f5:	nopl   (%rax)
               :   954f8:	vmovdqu64 (%rax),%ymm7
               :   954fe:	add    $0x40,%rax
               :   95502:	vmovdqu64 %ymm7,(%rdx)
               :   95508:	vmovdqu64 -0x20(%rax),%ymm6
               :   9550f:	add    $0x40,%rdx
               :   95513:	vmovdqu64 %ymm6,-0x20(%rdx)
               :   9551a:	cmp    %rdi,%rax
               :   9551d:	jne    954f8 <mlx5_tx_burst_mtiv_empw+0x3f28>
               :   9551f:	neg    %r8
               :   95522:	mov    %r8,%rdx
               :   95525:	shl    $0x6,%rdx
               :   95529:	lea    -0x80(%rcx,%rdx,1),%rdx
               :   9552e:	add    %rdx,%rax
               :   95531:	vmovdqu64 (%rax),%ymm0
               :   95537:	add    %r9,%rdx
               :   9553a:	add    %r12,%rdx
               :   9553d:	vmovdqu64 %ymm0,(%rdx)
               :   95543:	vmovdqu64 0x20(%rax),%ymm2
               :   9554a:	vmovdqu64 %ymm2,0x20(%rdx)
               :   95551:	nopl   0x0(%rax)
               :   95558:	movzwl 0x28(%r13),%edx
               :   9555d:	add    %esi,%ebx
               :   9555f:	add    %esi,%r14d
               :   95562:	sub    %esi,%r15d
               :   95565:	je     97441 <mlx5_tx_burst_mtiv_empw+0x5e71>
               :   9556b:	add    %rcx,%r12
               :   9556e:	jmpq   95488 <mlx5_tx_burst_mtiv_empw+0x3eb8>
               :   95573:	nopl   0x0(%rax,%rax,1)
               :   95578:	cmp    $0xf,%esi
               :   9557b:	jbe    95a1a <mlx5_tx_burst_mtiv_empw+0x444a>
               :   95581:	cmp    $0x20,%esi
               :   95584:	jbe    96c04 <mlx5_tx_burst_mtiv_empw+0x5634>
               :   9558a:	cmp    $0x30,%rcx
               :   9558e:	jbe    9735f <mlx5_tx_burst_mtiv_empw+0x5d8f>
               :   95594:	vmovdqu64 (%rax),%ymm0
               :   9559a:	cmp    $0x40,%rcx
               :   9559e:	jbe    97909 <mlx5_tx_burst_mtiv_empw+0x6339>
               :   955a4:	cmp    $0x100,%rcx
               :   955ab:	ja     98393 <mlx5_tx_burst_mtiv_empw+0x6dc3>
               :   955b1:	cmp    $0x7f,%rcx
               :   955b5:	jbe    98368 <mlx5_tx_burst_mtiv_empw+0x6d98>
               :   955bb:	vmovdqu64 %ymm0,(%r12)
               :   955c2:	vmovdqu64 0x20(%rax),%ymm5
               :   955c9:	lea    -0x80(%rcx),%rdi
               :   955cd:	vmovdqu64 %ymm5,0x20(%r12)
               :   955d5:	vmovdqu64 0x40(%rax),%ymm6
               :   955dc:	lea    0x80(%r12),%rdx
               :   955e4:	vmovdqu64 %ymm6,0x40(%r12)
               :   955ec:	vmovdqu64 0x60(%rax),%ymm7
               :   955f3:	sub    $0xffffffffffffff80,%rax
               :   955f7:	vmovdqu64 %ymm7,0x60(%r12)
               :   955ff:	cmp    $0x3f,%rdi
               :   95603:	ja     99015 <mlx5_tx_burst_mtiv_empw+0x7a45>
               :   95609:	cmp    $0x20,%rdi
               :   9560d:	jbe    97ca2 <mlx5_tx_burst_mtiv_empw+0x66d2>
               :   95613:	vmovdqu64 (%rax),%ymm1
               :   95619:	vmovdqu64 %ymm1,(%rdx)
               :   9561f:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm2
               :   95627:	vmovdqu64 %ymm2,-0x20(%rdx,%rdi,1)
               :   9562f:	jmpq   95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   95634:	nopl   0x0(%rax)
               :   95638:	mov    0x40(%r13),%rcx
               :   9563c:	movzwl 0x12(%r13),%eax
               :   95641:	lea    0x12(%r13),%r14
               :   95645:	cmp    $0x1,%ax
               :   95649:	jne    97925 <mlx5_tx_burst_mtiv_empw+0x6355>
               :   9564f:	mov    0x18(%r13),%rax
               :   95653:	movabs $0x6000000000000000,%rdi
               :   9565d:	mov    0x38(%r13),%r14
               :   95661:	test   %rdi,%rax
               :   95664:	je     95b45 <mlx5_tx_burst_mtiv_empw+0x4575>
               :   9566a:	movabs $0x2000000000000000,%rsi
               :   95674:	test   %rsi,%rax
               :   95677:	je     97287 <mlx5_tx_burst_mtiv_empw+0x5cb7>
               :   9567d:	mov    0x44(%r14),%edx
               :   95681:	test   %edx,%edx
               :   95683:	jne    95afe <mlx5_tx_burst_mtiv_empw+0x452e>
               :   95689:	testb  $0x1,0xc4(%r14)
               :   95691:	jne    99eb6 <mlx5_tx_burst_mtiv_empw+0x88e6>
               :   95697:	mov    0x50(%r13),%rdx
               :   9569b:	movzwl 0x10(%rdx),%esi
               :   9569f:	lea    0x10(%rdx),%rax
               :   956a3:	cmp    $0x1,%si
               :   956a7:	jne    994f4 <mlx5_tx_burst_mtiv_empw+0x7f24>
               :   956ad:	movw   $0x0,0x10(%rdx)
               :   956b3:	mov    0x50(%r13),%rax
               :   956b7:	mov    0x0(%r13),%rdi
               :   956bb:	mov    0x8(%rax),%rsi
               :   956bf:	mov    %rcx,0x58(%rsp)
               :   956c4:	vzeroupper 
               :   956c7:	callq  *(%rax)
               :   956c9:	mov    0x58(%rsp),%rcx
               :   956ce:	cmpl   $0x1,0x44(%r14)
               :   956d3:	sbb    %rax,%rax
               :   956d6:	and    $0xffffffffffefe000,%rax
               :   956dc:	lea    0x1020c0(%r14,%rax,1),%rax
               :   956e4:	movzwl 0x2(%rax),%edx
               :   956e8:	movzwl (%rax),%eax
               :   956eb:	mov    %dx,0x58(%r13)
               :   956f0:	sub    $0xffffffffffffff80,%rdx
               :   956f4:	lea    0x0(%r13,%rdx,1),%rsi
               :   956f9:	add    -0x8(%r13),%rdx
               :   956fd:	mov    %rdx,0x8(%r13)
               :   95701:	cmp    $0x80,%ax
               :   95705:	mov    $0x80,%edx
               :   9570a:	mov    %ax,0x36(%r13)
               :   9570f:	cmova  %edx,%eax
               :   95712:	mov    0x38(%r13),%r14
               :   95716:	mov    %ax,0x10(%r13)
               :   9571b:	xor    %eax,%eax
               :   9571d:	mov    %rsi,0x0(%r13)
               :   95721:	mov    %ax,0x28(%r13)
               :   95726:	movq   $0x0,0x18(%r13)
               :   9572e:	mov    0x44(%r14),%edx
               :   95732:	cmpq   $0x0,0x40(%r13)
               :   95737:	je     95741 <mlx5_tx_burst_mtiv_empw+0x4171>
               :   95739:	movq   $0x0,0x40(%r13)
               :   95741:	cmpw   $0x1,0x14(%r13)
               :   95747:	je     95753 <mlx5_tx_burst_mtiv_empw+0x4183>
               :   95749:	mov    $0x1,%eax
               :   9574e:	mov    %ax,0x14(%r13)
               :   95753:	mov    %rcx,0x50(%rsp)
               :   95758:	mov    %edx,0x58(%rsp)
               :   9575c:	mov    %r13,0x118(%rsp)
               :   95764:	data16 lea 0x1006dc(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   9576c:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   95774:	mov    0x58(%rsp),%edx
               :   95778:	mov    0x50(%rsp),%rcx
               :   9577d:	test   %edx,%edx
               :   9577f:	mov    (%rax),%eax
               :   95781:	je     97184 <mlx5_tx_burst_mtiv_empw+0x5bb4>
               :   95787:	cmp    $0x7f,%eax
               :   9578a:	ja     97184 <mlx5_tx_burst_mtiv_empw+0x5bb4>
               :   95790:	mov    %eax,%r13d
               :   95793:	imul   $0x2040,%r13,%r13
               :   9579a:	add    0x60(%r14),%r13
               :   9579e:	je     97184 <mlx5_tx_burst_mtiv_empw+0x5bb4>
               :   957a4:	mov    0x4(%r13),%eax
               :   957a8:	test   %eax,%eax
               :   957aa:	je     97184 <mlx5_tx_burst_mtiv_empw+0x5bb4>
               :   957b0:	mov    0x8(%r13),%edx
               :   957b4:	lea    0x1(%rdx),%edi
               :   957b7:	cmp    %edi,%eax
               :   957b9:	jb     96a4b <mlx5_tx_burst_mtiv_empw+0x547b>
               :   957bf:	mov    %edi,0x8(%r13)
               :   957c3:	lea    0x40(%r13,%rdx,8),%rsi
               :   957c8:	mov    0x118(%rsp),%rax
               :   957d0:	mov    %rax,(%rsi)
               :   957d3:	mov    0x18(%rcx),%rdx
               :   957d7:	lea    0x101da2(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :   957de:	decw   0xc0(%rsp)
               :   957e6:	test   %rdx,(%rax)
               :   957e9:	je     967c6 <mlx5_tx_burst_mtiv_empw+0x51f6>
               :   957ef:	mov    0x40(%rsp),%eax
               :   957f3:	cmp    %ebx,%eax
               :   957f5:	jbe    96331 <mlx5_tx_burst_mtiv_empw+0x4d61>
               :   957fb:	movzwl 0x28(%rcx),%esi
               :   957ff:	sub    %ebx,%eax
               :   95801:	mov    %esi,%edx
               :   95803:	cmp    %esi,%eax
               :   95805:	ja     971ea <mlx5_tx_burst_mtiv_empw+0x5c1a>
               :   9580b:	cmp    %eax,%r15d
               :   9580e:	cmova  %eax,%r15d
               :   95812:	mov    %rcx,%r13
               :   95815:	xor    %r14d,%r14d
               :   95818:	jmpq   95488 <mlx5_tx_burst_mtiv_empw+0x3eb8>
               :   9581d:	mov    0x48(%r14),%rcx
               :   95821:	test   %rcx,%rcx
               :   95824:	je     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   9582a:	cmp    %rcx,%rax
               :   9582d:	jb     95839 <mlx5_tx_burst_mtiv_empw+0x4269>
               :   9582f:	cmp    0x50(%r14),%rax
               :   95833:	jb     9950d <mlx5_tx_burst_mtiv_empw+0x7f3d>
               :   95839:	mov    0x5c(%r14),%rcx
               :   9583d:	test   %rcx,%rcx
               :   95840:	je     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   95846:	cmp    %rcx,%rax
               :   95849:	jb     95855 <mlx5_tx_burst_mtiv_empw+0x4285>
               :   9584b:	cmp    0x64(%r14),%rax
               :   9584f:	jb     9951c <mlx5_tx_burst_mtiv_empw+0x7f4c>
               :   95855:	mov    0x70(%r14),%rcx
               :   95859:	test   %rcx,%rcx
               :   9585c:	je     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   95862:	cmp    %rcx,%rax
               :   95865:	jb     95871 <mlx5_tx_burst_mtiv_empw+0x42a1>
               :   95867:	cmp    0x78(%r14),%rax
               :   9586b:	jb     99527 <mlx5_tx_burst_mtiv_empw+0x7f57>
               :   95871:	mov    0x84(%r14),%rcx
               :   95878:	test   %rcx,%rcx
               :   9587b:	je     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   95881:	cmp    %rcx,%rax
               :   95884:	jb     95893 <mlx5_tx_burst_mtiv_empw+0x42c3>
               :   95886:	cmp    %rax,0x8c(%r14)
               :   9588d:	ja     9a0be <mlx5_tx_burst_mtiv_empw+0x8aee>
               :   95893:	mov    0x98(%r14),%rcx
               :   9589a:	test   %rcx,%rcx
               :   9589d:	je     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   9589f:	cmp    %rcx,%rax
               :   958a2:	jb     958b1 <mlx5_tx_burst_mtiv_empw+0x42e1>
               :   958a4:	cmp    0xa0(%r14),%rax
               :   958ab:	jb     9a0cf <mlx5_tx_burst_mtiv_empw+0x8aff>
               :   958b1:	mov    0xac(%r14),%rcx
               :   958b8:	test   %rcx,%rcx
               :   958bb:	je     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   958bd:	cmp    %rcx,%rax
               :   958c0:	jb     958cf <mlx5_tx_burst_mtiv_empw+0x42ff>
               :   958c2:	cmp    %rax,0xb4(%r14)
               :   958c9:	ja     9a0e0 <mlx5_tx_burst_mtiv_empw+0x8b10>
               :   958cf:	mov    0xc0(%r14),%rcx
               :   958d6:	test   %rcx,%rcx
               :   958d9:	je     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   958db:	cmp    %rcx,%rax
               :   958de:	jb     958ed <mlx5_tx_burst_mtiv_empw+0x431d>
               :   958e0:	cmp    0xc8(%r14),%rax
               :   958e7:	jb     9a0f1 <mlx5_tx_burst_mtiv_empw+0x8b21>
               :   958ed:	mov    0xd4(%r14),%rcx
               :   958f4:	cmp    %rcx,%rax
               :   958f7:	jb     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   958f9:	test   %rcx,%rcx
               :   958fc:	je     9590b <mlx5_tx_burst_mtiv_empw+0x433b>
               :   958fe:	cmp    0xdc(%r14),%rax
               :   95905:	jb     99ffd <mlx5_tx_burst_mtiv_empw+0x8a2d>
               :   9590b:	mov    %r9,%rsi
               :   9590e:	mov    %rdx,0x98(%rsp)
               :   95916:	mov    %r9,0xb8(%rsp)
               :   9591e:	vzeroupper 
               :   95921:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :   95926:	mov    0xb8(%rsp),%r9
               :   9592e:	mov    0x98(%rsp),%rdx
               :   95936:	jmpq   92401 <mlx5_tx_burst_mtiv_empw+0xe31>
               :   9593b:	test   $0x8,%r12b
               :   9593f:	je     96205 <mlx5_tx_burst_mtiv_empw+0x4c35>
               :   95945:	mov    (%r10),%rdx
               :   95948:	lea    0x8(%r10),%rcx
               :   9594c:	mov    %rdx,(%r8)
               :   9594f:	lea    0x8(%r8),%rdx
               :   95953:	test   $0x4,%r12b
               :   95957:	je     95968 <mlx5_tx_burst_mtiv_empw+0x4398>
               :   95959:	mov    (%rcx),%r14d
               :   9595c:	add    $0x4,%rdx
               :   95960:	mov    %r14d,-0x4(%rdx)
               :   95964:	add    $0x4,%rcx
               :   95968:	test   $0x2,%r12b
               :   9596c:	je     9597f <mlx5_tx_burst_mtiv_empw+0x43af>
               :   9596e:	movzwl (%rcx),%r14d
               :   95972:	add    $0x2,%rdx
               :   95976:	mov    %r14w,-0x2(%rdx)
               :   9597b:	add    $0x2,%rcx
               :   9597f:	test   $0x1,%r12b
               :   95983:	je     92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   95989:	movzbl (%rcx),%ecx
               :   9598c:	mov    %cl,(%rdx)
               :   9598e:	jmpq   92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   95993:	vmovdqu64 %ymm0,(%rbx)
               :   95999:	vmovdqu64 -0x20(%r10,%rax,1),%ymm6
               :   959a1:	vmovdqu64 %ymm6,-0x20(%rbx,%rax,1)
               :   959a9:	jmpq   92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   959ae:	vmovdqu64 %ymm0,(%rbx)
               :   959b4:	vmovdqu64 -0x20(%r10,%rax,1),%ymm4
               :   959bc:	vmovdqu64 %ymm4,-0x20(%rbx,%rax,1)
               :   959c4:	jmpq   926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   959c9:	test   %r14,%r14
               :   959cc:	je     926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   959d2:	vmovdqu64 -0x20(%rcx,%r14,1),%ymm5
               :   959da:	vmovdqa64 %ymm5,0x20(%rsp)
               :   959e2:	vmovdqu64 %ymm5,-0x20(%rdx,%r14,1)
               :   959ea:	jmpq   926e0 <mlx5_tx_burst_mtiv_empw+0x1110>
               :   959ef:	test   %rdx,%rdx
               :   959f2:	je     92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   959f8:	mov    0x20(%rsp),%r14
               :   959fd:	vmovdqu64 -0x20(%r14,%rdx,1),%ymm1
               :   95a05:	vmovdqa64 %ymm1,0x20(%rsp)
               :   95a0d:	vmovdqu64 %ymm1,-0x20(%rcx,%rdx,1)
               :   95a15:	jmpq   92660 <mlx5_tx_burst_mtiv_empw+0x1090>
               :   95a1a:	mov    %r12,%rdx
               :   95a1d:	test   $0x8,%sil
               :   95a21:	je     95a33 <mlx5_tx_burst_mtiv_empw+0x4463>
               :   95a23:	mov    (%rax),%rdx
               :   95a26:	add    $0x8,%rax
               :   95a2a:	mov    %rdx,(%r12)
               :   95a2e:	lea    0x8(%r12),%rdx
               :   95a33:	test   $0x4,%sil
               :   95a37:	je     95a46 <mlx5_tx_burst_mtiv_empw+0x4476>
               :   95a39:	mov    (%rax),%edi
               :   95a3b:	add    $0x4,%rdx
               :   95a3f:	mov    %edi,-0x4(%rdx)
               :   95a42:	add    $0x4,%rax
               :   95a46:	test   $0x2,%sil
               :   95a4a:	je     95a5b <mlx5_tx_burst_mtiv_empw+0x448b>
               :   95a4c:	movzwl (%rax),%edi
               :   95a4f:	add    $0x2,%rdx
               :   95a53:	mov    %di,-0x2(%rdx)
               :   95a57:	add    $0x2,%rax
               :   95a5b:	test   $0x1,%sil
               :   95a5f:	je     95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   95a65:	movzbl (%rax),%eax
               :   95a68:	mov    %al,(%rdx)
               :   95a6a:	jmpq   95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   95a6f:	nop
               :   95a70:	movslq 0x58(%r8),%rax
               :   95a74:	cmp    $0xf,%eax
               :   95a77:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   95a7d:	shl    $0x7,%rax
               :   95a81:	mov    0x50(%rsp),%rsi
               :   95a86:	add    0x100483(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   95a8d:	mov    $0x1,%edx
               :   95a92:	mov    %r8,%rdi
               :   95a95:	callq  *0x70(%rax)
               :   95a98:	jmpq   93c82 <mlx5_tx_burst_mtiv_empw+0x26b2>
               :   95a9d:	xor    %r10d,%r10d
               :   95aa0:	movzwl %ax,%esi
               :   95aa3:	xor    %r8d,%r8d
               :   95aa6:	jmpq   93097 <mlx5_tx_burst_mtiv_empw+0x1ac7>
               :   95aab:	nopl   0x0(%rax,%rax,1)
               :   95ab0:	movslq 0x58(%r13),%rax
               :   95ab4:	mov    %r9,0xa8(%rsp)
               :   95abc:	mov    %ecx,0xb0(%rsp)
               :   95ac3:	cmp    $0xf,%eax
               :   95ac6:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   95acc:	shl    $0x7,%rax
               :   95ad0:	lea    0x100(%rsp),%rsi
               :   95ad8:	add    0x100431(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   95adf:	mov    $0x1,%edx
               :   95ae4:	mov    %r13,%rdi
               :   95ae7:	callq  *0x70(%rax)
               :   95aea:	mov    0xa8(%rsp),%r9
               :   95af2:	mov    0xb0(%rsp),%ecx
               :   95af9:	jmpq   93701 <mlx5_tx_burst_mtiv_empw+0x2131>
               :   95afe:	testb  $0x1,0x1020c4(%r14)
               :   95b06:	je     95697 <mlx5_tx_burst_mtiv_empw+0x40c7>
               :   95b0c:	mov    $0x1020c0,%eax
               :   95b11:	testb  $0x1,0x4(%r14,%rax,1)
               :   95b17:	je     97357 <mlx5_tx_burst_mtiv_empw+0x5d87>
               :   95b1d:	movabs $0x2000000000000000,%rdi
               :   95b27:	mov    %rdi,0x18(%r13)
               :   95b2b:	mov    0x50(%r13),%rax
               :   95b2f:	movzwl 0x10(%rax),%esi
               :   95b33:	lea    0x10(%rax),%rdx
               :   95b37:	cmp    $0x1,%si
               :   95b3b:	jne    99656 <mlx5_tx_burst_mtiv_empw+0x8086>
               :   95b41:	mov    0x38(%r13),%r14
               :   95b45:	mov    0x44(%r14),%edx
               :   95b49:	vzeroupper 
               :   95b4c:	jmpq   95732 <mlx5_tx_burst_mtiv_empw+0x4162>
               :   95b51:	vzeroupper 
               :   95b54:	jmpq   93bdb <mlx5_tx_burst_mtiv_empw+0x260b>
               :   95b59:	testb  $0x1,0x1020c4(%r8)
               :   95b61:	jne    99296 <mlx5_tx_burst_mtiv_empw+0x7cc6>
               :   95b67:	mov    0x50(%r13),%rax
               :   95b6b:	movzwl 0x10(%rax),%edx
               :   95b6f:	lea    0x10(%rax),%rsi
               :   95b73:	cmp    $0x1,%dx
               :   95b77:	jne    98735 <mlx5_tx_burst_mtiv_empw+0x7165>
               :   95b7d:	movw   $0x0,0x10(%rax)
               :   95b83:	mov    0x50(%r13),%rax
               :   95b87:	mov    0x0(%r13),%rdi
               :   95b8b:	mov    0x8(%rax),%rsi
               :   95b8f:	mov    %r8,0x88(%rsp)
               :   95b97:	vzeroupper 
               :   95b9a:	callq  *(%rax)
               :   95b9c:	mov    0x88(%rsp),%r8
               :   95ba4:	jmpq   944a0 <mlx5_tx_burst_mtiv_empw+0x2ed0>
               :   95ba9:	mov    %rbx,%rdi
               :   95bac:	mov    %r8,%rdx
               :   95baf:	vmovdqu64 %ymm0,(%rdi)
               :   95bb5:	vmovdqu64 0x20(%rax),%ymm4
               :   95bbc:	sub    $0x40,%rdx
               :   95bc0:	vmovdqu64 %ymm4,0x20(%rdi)
               :   95bc7:	add    $0x40,%rax
               :   95bcb:	add    $0x40,%rdi
               :   95bcf:	jmpq   92eac <mlx5_tx_burst_mtiv_empw+0x18dc>
               :   95bd4:	vzeroupper 
               :   95bd7:	jmpq   93652 <mlx5_tx_burst_mtiv_empw+0x2082>
               :   95bdc:	testb  $0x1,0x1020c4(%r13)
               :   95be4:	jne    9973b <mlx5_tx_burst_mtiv_empw+0x816b>
               :   95bea:	mov    0x50(%rbx),%rax
               :   95bee:	movzwl 0x10(%rax),%edx
               :   95bf2:	lea    0x10(%rax),%rsi
               :   95bf6:	cmp    $0x1,%dx
               :   95bfa:	jne    988ae <mlx5_tx_burst_mtiv_empw+0x72de>
               :   95c00:	movw   $0x0,0x10(%rax)
               :   95c06:	mov    0x50(%rbx),%rax
               :   95c0a:	mov    (%rbx),%rdi
               :   95c0d:	mov    0x8(%rax),%rsi
               :   95c11:	mov    %r9,0xa8(%rsp)
               :   95c19:	mov    %ecx,0xb0(%rsp)
               :   95c20:	vzeroupper 
               :   95c23:	callq  *(%rax)
               :   95c25:	mov    0xb0(%rsp),%ecx
               :   95c2c:	mov    0xa8(%rsp),%r9
               :   95c34:	jmpq   9467e <mlx5_tx_burst_mtiv_empw+0x30ae>
               :   95c39:	mov    %rax,0x20(%rsp)
               :   95c3e:	mov    %rbx,%rdx
               :   95c41:	mov    %r10,%rcx
               :   95c44:	vmovdqu64 %ymm0,(%rdx)
               :   95c4a:	vmovdqu64 0x20(%rcx),%ymm5
               :   95c51:	subq   $0x40,0x20(%rsp)
               :   95c57:	vmovdqu64 %ymm5,0x20(%rdx)
               :   95c5e:	add    $0x40,%rcx
               :   95c62:	add    $0x40,%rdx
               :   95c66:	jmpq   91f87 <mlx5_tx_burst_mtiv_empw+0x9b7>
               :   95c6b:	mov    %r10,0x20(%rsp)
               :   95c70:	mov    %rbx,%rcx
               :   95c73:	mov    %rax,%rdx
               :   95c76:	mov    %rcx,%r14
               :   95c79:	vmovdqu64 %ymm0,(%rcx)
               :   95c7f:	mov    0x20(%rsp),%rcx
               :   95c84:	add    $0x40,%r14
               :   95c88:	vmovdqu64 0x20(%rcx),%ymm2
               :   95c8f:	add    $0x40,%rcx
               :   95c93:	vmovdqu64 %ymm2,-0x20(%r14)
               :   95c9a:	mov    %rcx,0x20(%rsp)
               :   95c9f:	sub    $0x40,%rdx
               :   95ca3:	mov    %r14,%rcx
               :   95ca6:	jmpq   92055 <mlx5_tx_burst_mtiv_empw+0xa85>
               :   95cab:	mov    0x60(%rsp),%rdi
               :   95cb0:	mov    %r9,0xb0(%rsp)
               :   95cb8:	mov    %r8d,0xc0(%rsp)
               :   95cc0:	vzeroupper 
               :   95cc3:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :   95cc8:	mov    0x0(%r13),%rdx
               :   95ccc:	mov    0xb0(%rsp),%r9
               :   95cd4:	mov    0xc0(%rsp),%r8d
               :   95cdc:	jmpq   949d9 <mlx5_tx_burst_mtiv_empw+0x3409>
               :   95ce1:	mov    %r15,%r11
               :   95ce4:	mov    %r13,%r15
               :   95ce7:	cmp    %dx,%cx
               :   95cea:	jb     93ec0 <mlx5_tx_burst_mtiv_empw+0x28f0>
               :   95cf0:	mov    0x40(%r13),%r15
               :   95cf4:	movzwl 0x12(%r13),%eax
               :   95cf9:	cmp    $0x1,%ax
               :   95cfd:	jne    99855 <mlx5_tx_burst_mtiv_empw+0x8285>
               :   95d03:	mov    0x18(%r13),%rax
               :   95d07:	movabs $0x6000000000000000,%rdx
               :   95d11:	mov    0x38(%r13),%r12
               :   95d15:	test   %rdx,%rax
               :   95d18:	je     97cc0 <mlx5_tx_burst_mtiv_empw+0x66f0>
               :   95d1e:	movabs $0x2000000000000000,%rbx
               :   95d28:	test   %rbx,%rax
               :   95d2b:	je     99332 <mlx5_tx_burst_mtiv_empw+0x7d62>
               :   95d31:	mov    0x44(%r12),%r14d
               :   95d36:	test   %r14d,%r14d
               :   95d39:	jne    992e1 <mlx5_tx_burst_mtiv_empw+0x7d11>
               :   95d3f:	testb  $0x1,0xc4(%r12)
               :   95d48:	jne    9a7e3 <mlx5_tx_burst_mtiv_empw+0x9213>
               :   95d4e:	mov    0x50(%r13),%rdx
               :   95d52:	movzwl 0x10(%rdx),%ecx
               :   95d56:	lea    0x10(%rdx),%rax
               :   95d5a:	dec    %cx
               :   95d5d:	jne    9a7cd <mlx5_tx_burst_mtiv_empw+0x91fd>
               :   95d63:	movw   $0x0,0x10(%rdx)
               :   95d69:	mov    0x50(%r13),%rax
               :   95d6d:	mov    0x0(%r13),%rdi
               :   95d71:	mov    0x8(%rax),%rsi
               :   95d75:	mov    %r11,0xb0(%rsp)
               :   95d7d:	vzeroupper 
               :   95d80:	callq  *(%rax)
               :   95d82:	mov    0xb0(%rsp),%r11
               :   95d8a:	cmpl   $0x1,0x44(%r12)
               :   95d90:	sbb    %rax,%rax
               :   95d93:	and    $0xffffffffffefe000,%rax
               :   95d99:	lea    0x1020c0(%r12,%rax,1),%rax
               :   95da1:	movzwl 0x2(%rax),%edx
               :   95da5:	movzwl (%rax),%eax
               :   95da8:	mov    %dx,0x58(%r13)
               :   95dad:	sub    $0xffffffffffffff80,%rdx
               :   95db1:	lea    0x0(%r13,%rdx,1),%rcx
               :   95db6:	add    -0x8(%r13),%rdx
               :   95dba:	mov    %rdx,0x8(%r13)
               :   95dbe:	cmp    $0x80,%ax
               :   95dc2:	mov    $0x80,%edx
               :   95dc7:	mov    %ax,0x36(%r13)
               :   95dcc:	cmova  %edx,%eax
               :   95dcf:	mov    %rcx,0x0(%r13)
               :   95dd3:	xor    %r12d,%r12d
               :   95dd6:	mov    %ax,0x10(%r13)
               :   95ddb:	movq   $0x0,0x18(%r13)
               :   95de3:	mov    %r12w,0x28(%r13)
               :   95de8:	mov    0x38(%r13),%r12
               :   95dec:	cmpq   $0x0,0x40(%r13)
               :   95df1:	je     95dfb <mlx5_tx_burst_mtiv_empw+0x482b>
               :   95df3:	movq   $0x0,0x40(%r13)
               :   95dfb:	cmpw   $0x1,0x14(%r13)
               :   95e01:	je     95e0d <mlx5_tx_burst_mtiv_empw+0x483d>
               :   95e03:	mov    $0x1,%ebx
               :   95e08:	mov    %bx,0x14(%r13)
               :   95e0d:	mov    %r11,0xb0(%rsp)
               :   95e15:	mov    %r13,0xe0(%rsp)
               :   95e1d:	data16 lea 0x100023(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   95e25:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   95e2d:	mov    0x44(%r12),%edx
               :   95e32:	mov    0xb0(%rsp),%r11
               :   95e3a:	test   %edx,%edx
               :   95e3c:	mov    (%rax),%eax
               :   95e3e:	je     992a0 <mlx5_tx_burst_mtiv_empw+0x7cd0>
               :   95e44:	cmp    $0x7f,%eax
               :   95e47:	ja     992a0 <mlx5_tx_burst_mtiv_empw+0x7cd0>
               :   95e4d:	mov    %eax,%ebx
               :   95e4f:	imul   $0x2040,%rbx,%rbx
               :   95e56:	add    0x60(%r12),%rbx
               :   95e5b:	je     992a0 <mlx5_tx_burst_mtiv_empw+0x7cd0>
               :   95e61:	mov    0x4(%rbx),%ecx
               :   95e64:	test   %ecx,%ecx
               :   95e66:	je     992a0 <mlx5_tx_burst_mtiv_empw+0x7cd0>
               :   95e6c:	mov    0x8(%rbx),%edx
               :   95e6f:	lea    0x1(%rdx),%eax
               :   95e72:	cmp    %eax,%ecx
               :   95e74:	jb     99056 <mlx5_tx_burst_mtiv_empw+0x7a86>
               :   95e7a:	mov    %eax,0x8(%rbx)
               :   95e7d:	lea    0x40(%rbx,%rdx,8),%r13
               :   95e82:	mov    0xe0(%rsp),%rax
               :   95e8a:	mov    %rax,0x0(%r13)
               :   95e8e:	decw   0xc0(%rsp)
               :   95e96:	movzwl 0x28(%r15),%edx
               :   95e9b:	xor    %ecx,%ecx
               :   95e9d:	jmpq   93ec0 <mlx5_tx_burst_mtiv_empw+0x28f0>
               :   95ea2:	mov    %r9,0x60(%rsp)
               :   95ea7:	mov    %rdx,0x98(%rsp)
               :   95eaf:	mov    %rdi,0xb8(%rsp)
               :   95eb7:	vzeroupper 
               :   95eba:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :   95ebf:	mov    0x60(%rsp),%r9
               :   95ec4:	mov    0x98(%rsp),%rdx
               :   95ecc:	mov    (%r9),%rax
               :   95ecf:	mov    0xb8(%rsp),%rdi
               :   95ed7:	jmpq   923d1 <mlx5_tx_burst_mtiv_empw+0xe01>
               :   95edc:	bswap  %edx
               :   95ede:	mov    %edx,(%r14)
               :   95ee1:	mov    0x40(%r11),%edi
               :   95ee5:	mov    0x38(%r11),%rdx
               :   95ee9:	lea    0x38(%r11),%r13
               :   95eed:	cmp    %edi,(%rdx)
               :   95eef:	jne    98c88 <mlx5_tx_burst_mtiv_empw+0x76b8>
               :   95ef5:	movzwl 0x44(%r11),%ecx
               :   95efa:	lea    0x48(%r11),%rdx
               :   95efe:	lea    (%rcx,%rcx,4),%rcx
               :   95f02:	lea    (%rdx,%rcx,4),%rcx
               :   95f06:	cmp    (%rcx),%rax
               :   95f09:	jb     97ea3 <mlx5_tx_burst_mtiv_empw+0x68d3>
               :   95f0f:	cmp    0x8(%rcx),%rax
               :   95f13:	jae    97ea3 <mlx5_tx_burst_mtiv_empw+0x68d3>
               :   95f19:	mov    0x10(%rcx),%eax
               :   95f1c:	cmp    $0xffffffff,%eax
               :   95f1f:	je     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   95f25:	mov    %eax,0x4(%r14)
               :   95f29:	bswap  %r12
               :   95f2c:	mov    %r12,0x8(%r14)
               :   95f30:	jmpq   941a7 <mlx5_tx_burst_mtiv_empw+0x2bd7>
               :   95f35:	prefetcht0 (%rdx)
               :   95f38:	cmp    $0x12,%esi
               :   95f3b:	jbe    99d4a <mlx5_tx_burst_mtiv_empw+0x877a>
               :   95f41:	lea    0x101638(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :   95f48:	test   %rcx,(%rax)
               :   95f4b:	je     97613 <mlx5_tx_burst_mtiv_empw+0x6043>
               :   95f51:	test   %r8d,%r8d
               :   95f54:	je     95f61 <mlx5_tx_burst_mtiv_empw+0x4991>
               :   95f56:	cmpb   $0x0,0x1f(%r14)
               :   95f5b:	jns    930af <mlx5_tx_burst_mtiv_empw+0x1adf>
               :   95f61:	movzwl 0xa(%r14),%eax
               :   95f66:	movzwl 0x10(%r14),%r12d
               :   95f6b:	and    %eax,%r12d
               :   95f6e:	movzwl %r12w,%r12d
               :   95f72:	shl    $0x6,%r12
               :   95f76:	shl    $0x8,%eax
               :   95f79:	add    0xf8(%r14),%r12
               :   95f80:	or     $0xa,%eax
               :   95f83:	bswap  %eax
               :   95f85:	mov    %eax,(%r12)
               :   95f89:	mov    0x28(%r14),%eax
               :   95f8d:	or     $0x3,%eax
               :   95f90:	bswap  %eax
               :   95f92:	mov    %eax,0x4(%r12)
               :   95f97:	mov    0x10003a(%rip),%rax        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :   95f9e:	movq   $0x4000000,0x8(%r12)
               :   95fa7:	movq   $0x0,0x10(%r12)
               :   95fb0:	test   %rcx,(%rax)
               :   95fb3:	jne    97ced <mlx5_tx_burst_mtiv_empw+0x671d>
               :   95fb9:	xor    %eax,%eax
               :   95fbb:	mov    %eax,0x18(%r12)
               :   95fc0:	test   %r11,%r11
               :   95fc3:	je     97cdf <mlx5_tx_burst_mtiv_empw+0x670f>
               :   95fc9:	movzwl 0x2a(%rbx),%eax
               :   95fcd:	or     $0x80000000,%eax
               :   95fd2:	bswap  %eax
               :   95fd4:	mov    %eax,0x1c(%r12)
               :   95fd9:	bswap  %r9d
               :   95fdc:	mov    %r9d,0x20(%r12)
               :   95fe1:	mov    0x38(%r14),%rax
               :   95fe5:	mov    0x40(%r14),%ecx
               :   95fe9:	lea    0x38(%r14),%r9
               :   95fed:	cmp    %ecx,(%rax)
               :   95fef:	jne    994c1 <mlx5_tx_burst_mtiv_empw+0x7ef1>
               :   95ff5:	movzwl 0x44(%r14),%ecx
               :   95ffa:	lea    0x48(%r14),%rax
               :   95ffe:	lea    (%rcx,%rcx,4),%rcx
               :   96002:	lea    (%rax,%rcx,4),%rcx
               :   96006:	cmp    (%rcx),%rdi
               :   96009:	jb     990eb <mlx5_tx_burst_mtiv_empw+0x7b1b>
               :   9600f:	cmp    0x8(%rcx),%rdi
               :   96013:	jae    990eb <mlx5_tx_burst_mtiv_empw+0x7b1b>
               :   96019:	mov    0x10(%rcx),%eax
               :   9601c:	cmp    $0xffffffff,%eax
               :   9601f:	je     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   96025:	mov    %eax,0x24(%r12)
               :   9602a:	mov    %rdx,%rax
               :   9602d:	bswap  %rax
               :   96030:	mov    %rax,0x28(%r12)
               :   96035:	movzwl (%r14),%eax
               :   96039:	incw   0xa(%r14)
               :   9603e:	lea    0x1(%rax),%edx
               :   96041:	and    0x8(%r14),%ax
               :   96046:	movzwl %ax,%eax
               :   96049:	mov    %dx,(%r14)
               :   9604d:	mov    %rbx,0x188(%r14,%rax,8)
               :   96055:	movzwl 0x28(%rbx),%eax
               :   96059:	movabs $0x200000000000000,%rdi
               :   96063:	add    0x158(%r14),%rax
               :   9606a:	decw   0xce(%rsp)
               :   96072:	dec    %r13d
               :   96075:	lea    0x4(%rax),%rdx
               :   96079:	test   %rdi,0x18(%rbx)
               :   9607d:	cmovne %rdx,%rax
               :   96081:	mov    %rax,0x158(%r14)
               :   96088:	jmpq   931ee <mlx5_tx_burst_mtiv_empw+0x1c1e>
               :   9608d:	lea    0x4(%rdx,%rax,1),%eax
               :   96091:	add    %esi,%eax
               :   96093:	mov    %eax,0xb0(%rsp)
               :   9609a:	mov    $0x4,%r12d
               :   960a0:	jmpq   952c4 <mlx5_tx_burst_mtiv_empw+0x3cf4>
               :   960a5:	lock decw (%r8)
               :   960aa:	jne    93c82 <mlx5_tx_burst_mtiv_empw+0x26b2>
               :   960b0:	mov    0x18(%r13),%rax
               :   960b4:	movabs $0x6000000000000000,%rsi
               :   960be:	test   %rsi,%rax
               :   960c1:	je     96c24 <mlx5_tx_burst_mtiv_empw+0x5654>
               :   960c7:	mov    0x38(%r13),%rcx
               :   960cb:	movabs $0x2000000000000000,%rsi
               :   960d5:	mov    %rcx,0x88(%rsp)
               :   960dd:	test   %rsi,%rax
               :   960e0:	je     98b7f <mlx5_tx_burst_mtiv_empw+0x75af>
               :   960e6:	mov    0x44(%rcx),%eax
               :   960e9:	test   %eax,%eax
               :   960eb:	jne    98a84 <mlx5_tx_burst_mtiv_empw+0x74b4>
               :   960f1:	testb  $0x1,0xc4(%rcx)
               :   960f8:	jne    9a9d9 <mlx5_tx_burst_mtiv_empw+0x9409>
               :   960fe:	mov    0x50(%r13),%rdx
               :   96102:	movzwl 0x10(%rdx),%esi
               :   96106:	lea    0x10(%rdx),%rax
               :   9610a:	cmp    $0x1,%si
               :   9610e:	jne    99ac1 <mlx5_tx_burst_mtiv_empw+0x84f1>
               :   96114:	movw   $0x0,0x10(%rdx)
               :   9611a:	mov    0x50(%r13),%rax
               :   9611e:	mov    0x0(%r13),%rdi
               :   96122:	mov    0x8(%rax),%rsi
               :   96126:	mov    %r8,0x58(%rsp)
               :   9612b:	vzeroupper 
               :   9612e:	callq  *(%rax)
               :   96130:	mov    0x58(%rsp),%r8
               :   96135:	mov    0x88(%rsp),%rcx
               :   9613d:	cmpl   $0x1,0x44(%rcx)
               :   96141:	sbb    %rax,%rax
               :   96144:	and    $0xffffffffffefe000,%rax
               :   9614a:	lea    0x1020c0(%rcx,%rax,1),%rax
               :   96152:	movzwl 0x2(%rax),%edx
               :   96156:	movzwl (%rax),%eax
               :   96159:	mov    %dx,0x58(%r13)
               :   9615e:	sub    $0xffffffffffffff80,%rdx
               :   96162:	lea    0x0(%r13,%rdx,1),%rsi
               :   96167:	add    -0x8(%r13),%rdx
               :   9616b:	mov    %rdx,0x8(%r13)
               :   9616f:	cmp    $0x80,%ax
               :   96173:	mov    $0x80,%edx
               :   96178:	mov    %ax,0x36(%r13)
               :   9617d:	cmova  %edx,%eax
               :   96180:	mov    %rsi,0x0(%r13)
               :   96184:	mov    %ax,0x10(%r13)
               :   96189:	xor    %eax,%eax
               :   9618b:	mov    %ax,0x28(%r13)
               :   96190:	movq   $0x0,0x18(%r13)
               :   96198:	cmpq   $0x0,0x40(%r13)
               :   9619d:	je     961a7 <mlx5_tx_burst_mtiv_empw+0x4bd7>
               :   9619f:	movq   $0x0,0x40(%r13)
               :   961a7:	cmpw   $0x1,0x14(%r13)
               :   961ad:	je     961b9 <mlx5_tx_burst_mtiv_empw+0x4be9>
               :   961af:	mov    $0x1,%eax
               :   961b4:	mov    %ax,0x14(%r13)
               :   961b9:	movw   $0x1,(%r8)
               :   961bf:	mov    0x38(%r13),%r8
               :   961c3:	mov    0x44(%r8),%edx
               :   961c7:	jmpq   93bfc <mlx5_tx_burst_mtiv_empw+0x262c>
               :   961cc:	vmovdqu64 %ymm0,(%r14)
               :   961d2:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm4
               :   961da:	vmovdqu64 %ymm4,-0x20(%r14,%rdi,1)
               :   961e2:	jmpq   93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   961e7:	test   %rdx,%rdx
               :   961ea:	je     93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   961f0:	vmovdqu64 -0x20(%rax,%rdx,1),%ymm6
               :   961f8:	vmovdqu64 %ymm6,-0x20(%r8,%rdx,1)
               :   96200:	jmpq   93d20 <mlx5_tx_burst_mtiv_empw+0x2750>
               :   96205:	mov    %r10,%rcx
               :   96208:	mov    %r8,%rdx
               :   9620b:	jmpq   95953 <mlx5_tx_burst_mtiv_empw+0x4383>
               :   96210:	mov    0x40(%rsp),%rax
               :   96215:	movzwl 0x28(%r14),%edx
               :   9621a:	mov    0xf8(%rax),%rax
               :   96221:	mov    %r14,%r13
               :   96224:	mov    %rax,0x48(%rsp)
               :   96229:	mov    0x60(%rsp),%eax
               :   9622d:	sub    0xb0(%rsp),%eax
               :   96234:	mov    %eax,0x50(%rsp)
               :   96238:	mov    0x40(%rsp),%rax
               :   9623d:	jmpq   929a0 <mlx5_tx_burst_mtiv_empw+0x13d0>
               :   96242:	movzwl 0x26(%r11),%eax
               :   96247:	test   %ax,%ax
               :   9624a:	jne    93758 <mlx5_tx_burst_mtiv_empw+0x2188>
               :   96250:	mov    $0x10000039,%eax
               :   96255:	sub    %esi,%eax
               :   96257:	shl    $0x4,%eax
               :   9625a:	mov    0x60(%rsp),%esi
               :   9625e:	add    $0x12,%eax
               :   96261:	cmp    %eax,%esi
               :   96263:	cmovbe %esi,%eax
               :   96266:	mov    %eax,0x60(%rsp)
               :   9626a:	jmpq   928e7 <mlx5_tx_burst_mtiv_empw+0x1317>
               :   9626f:	lock decw (%r8)
               :   96274:	jne    93701 <mlx5_tx_burst_mtiv_empw+0x2131>
               :   9627a:	mov    0x18(%rbx),%rax
               :   9627e:	movabs $0x6000000000000000,%rsi
               :   96288:	test   %rsi,%rax
               :   9628b:	je     962fc <mlx5_tx_burst_mtiv_empw+0x4d2c>
               :   9628d:	mov    0x38(%rbx),%rdi
               :   96291:	movabs $0x2000000000000000,%rsi
               :   9629b:	mov    %rdi,0xb0(%rsp)
               :   962a3:	test   %rsi,%rax
               :   962a6:	je     98da0 <mlx5_tx_burst_mtiv_empw+0x77d0>
               :   962ac:	mov    0x44(%rdi),%eax
               :   962af:	test   %eax,%eax
               :   962b1:	jne    98d85 <mlx5_tx_burst_mtiv_empw+0x77b5>
               :   962b7:	testb  $0x1,0xc4(%rdi)
               :   962be:	je     98cd5 <mlx5_tx_burst_mtiv_empw+0x7705>
               :   962c4:	mov    $0xc0,%eax
               :   962c9:	mov    0xb0(%rsp),%rdi
               :   962d1:	testb  $0x1,0x4(%rdi,%rax,1)
               :   962d6:	je     962fc <mlx5_tx_burst_mtiv_empw+0x4d2c>
               :   962d8:	movabs $0x2000000000000000,%rsi
               :   962e2:	mov    %rsi,0x18(%rbx)
               :   962e6:	mov    0x50(%rbx),%rax
               :   962ea:	movzwl 0x10(%rax),%esi
               :   962ee:	lea    0x10(%rax),%rdx
               :   962f2:	cmp    $0x1,%si
               :   962f6:	jne    99ada <mlx5_tx_burst_mtiv_empw+0x850a>
               :   962fc:	vzeroupper 
               :   962ff:	cmpq   $0x0,0x40(%rbx)
               :   96304:	je     9630e <mlx5_tx_burst_mtiv_empw+0x4d3e>
               :   96306:	movq   $0x0,0x40(%rbx)
               :   9630e:	cmpw   $0x1,0x14(%rbx)
               :   96313:	je     9631e <mlx5_tx_burst_mtiv_empw+0x4d4e>
               :   96315:	mov    $0x1,%eax
               :   9631a:	mov    %ax,0x14(%rbx)
               :   9631e:	movw   $0x1,(%r8)
               :   96324:	mov    0x38(%rbx),%r13
               :   96328:	mov    0x44(%r13),%edx
               :   9632c:	jmpq   93671 <mlx5_tx_burst_mtiv_empw+0x20a1>
               :   96331:	mov    %rcx,%r15
               :   96334:	xor    %r14d,%r14d
               :   96337:	add    %ebx,0x60(%rsp)
               :   9633b:	mov    0x60(%rsp),%eax
               :   9633f:	cmp    %eax,0xb0(%rsp)
               :   96346:	jbe    96352 <mlx5_tx_burst_mtiv_empw+0x4d82>
               :   96348:	cmp    0x48(%rsp),%ebx
               :   9634c:	jae    988bd <mlx5_tx_burst_mtiv_empw+0x72ed>
               :   96352:	mov    0x60(%rsp),%r12d
               :   96357:	mov    0x18(%rsp),%r11
               :   9635c:	mov    %r15,%r10
               :   9635f:	mov    %r12d,%eax
               :   96362:	xchg   %al,%ah
               :   96364:	mov    0xb8(%rsp),%rsi
               :   9636c:	mov    %ax,0x1c(%rsi)
               :   96370:	mov    %ebx,%eax
               :   96372:	mov    0x88(%rsp),%rbx
               :   9637a:	lea    0xf(%rbx,%rax,1),%rax
               :   9637f:	and    $0xfffffffffffffff0,%rax
               :   96383:	cmpw   $0x0,0xc0(%rsp)
               :   9638c:	mov    %rax,%rdx
               :   9638f:	mov    %rax,%r12
               :   96392:	je     967a3 <mlx5_tx_burst_mtiv_empw+0x51d3>
               :   96398:	movzwl 0x28(%r15),%edx
               :   9639d:	test   %r14w,%r14w
               :   963a1:	je     96472 <mlx5_tx_burst_mtiv_empw+0x4ea2>
               :   963a7:	movzwl 0x10(%r15),%ebx
               :   963ac:	movzwl %r14w,%ecx
               :   963b0:	mov    (%r15),%rax
               :   963b3:	add    %rcx,%rbx
               :   963b6:	movzwl %r14w,%r14d
               :   963ba:	add    %rax,%rbx
               :   963bd:	sub    %r14d,%edx
               :   963c0:	cmp    %r12,0x100(%r11)
               :   963c7:	ja     963d0 <mlx5_tx_burst_mtiv_empw+0x4e00>
               :   963c9:	mov    0xf8(%r11),%r12
               :   963d0:	mov    %rbx,%rcx
               :   963d3:	cmp    $0xc,%edx
               :   963d6:	ja     98b23 <mlx5_tx_burst_mtiv_empw+0x7553>
               :   963dc:	mov    %edx,%eax
               :   963de:	or     $0x80000000,%eax
               :   963e3:	bswap  %eax
               :   963e5:	mov    %eax,(%r12)
               :   963e9:	lea    0x4(%r12),%rax
               :   963ee:	test   $0x8,%dl
               :   963f1:	je     96404 <mlx5_tx_burst_mtiv_empw+0x4e34>
               :   963f3:	mov    (%rbx),%rax
               :   963f6:	add    $0x8,%rcx
               :   963fa:	mov    %rax,0x4(%r12)
               :   963ff:	lea    0xc(%r12),%rax
               :   96404:	test   $0x4,%dl
               :   96407:	je     96416 <mlx5_tx_burst_mtiv_empw+0x4e46>
               :   96409:	mov    (%rcx),%esi
               :   9640b:	add    $0x4,%rax
               :   9640f:	mov    %esi,-0x4(%rax)
               :   96412:	add    $0x4,%rcx
               :   96416:	test   $0x2,%dl
               :   96419:	je     9642a <mlx5_tx_burst_mtiv_empw+0x4e5a>
               :   9641b:	movzwl (%rcx),%esi
               :   9641e:	add    $0x2,%rax
               :   96422:	mov    %si,-0x2(%rax)
               :   96426:	add    $0x2,%rcx
               :   9642a:	and    $0x1,%edx
               :   9642d:	je     96434 <mlx5_tx_burst_mtiv_empw+0x4e64>
               :   9642f:	movzbl (%rcx),%edx
               :   96432:	mov    %dl,(%rax)
               :   96434:	movzwl (%r11),%eax
               :   96438:	decw   0xa8(%rsp)
               :   96440:	lea    0x1(%rax),%edx
               :   96443:	add    $0x10,%r12
               :   96447:	and    0x8(%r11),%ax
               :   9644c:	decw   0xc0(%rsp)
               :   96454:	movzwl %ax,%eax
               :   96457:	mov    %dx,(%r11)
               :   9645b:	mov    %r10,0x188(%r11,%rax,8)
               :   96463:	je     967a0 <mlx5_tx_burst_mtiv_empw+0x51d0>
               :   96469:	mov    0x40(%r10),%r10
               :   9646d:	movzwl 0x28(%r10),%edx
               :   96472:	movzwl 0xc0(%rsp),%r15d
               :   9647b:	lea    0x38(%r11),%rax
               :   9647f:	mov    %rax,0x88(%rsp)
               :   96487:	movzwl 0xa8(%rsp),%ecx
               :   9648f:	dec    %r15d
               :   96492:	lea    0x48(%r11),%r8
               :   96496:	mov    %r10,%rbx
               :   96499:	mov    %r11,%r13
               :   9649c:	jmpq   96536 <mlx5_tx_burst_mtiv_empw+0x4f66>
               :   964a1:	nopl   0x0(%rax)
               :   964a8:	or     $0x80000000,%eax
               :   964ad:	bswap  %eax
               :   964af:	mov    %eax,(%r12)
               :   964b3:	lea    0x4(%r12),%rax
               :   964b8:	test   $0x8,%dl
               :   964bb:	je     964ce <mlx5_tx_burst_mtiv_empw+0x4efe>
               :   964bd:	mov    (%r14),%rax
               :   964c0:	add    $0x8,%rsi
               :   964c4:	mov    %rax,0x4(%r12)
               :   964c9:	lea    0xc(%r12),%rax
               :   964ce:	test   $0x4,%dl
               :   964d1:	je     964e0 <mlx5_tx_burst_mtiv_empw+0x4f10>
               :   964d3:	mov    (%rsi),%edi
               :   964d5:	add    $0x4,%rax
               :   964d9:	mov    %edi,-0x4(%rax)
               :   964dc:	add    $0x4,%rsi
               :   964e0:	test   $0x2,%dl
               :   964e3:	je     964f4 <mlx5_tx_burst_mtiv_empw+0x4f24>
               :   964e5:	movzwl (%rsi),%edi
               :   964e8:	add    $0x2,%rax
               :   964ec:	mov    %di,-0x2(%rax)
               :   964f0:	add    $0x2,%rsi
               :   964f4:	and    $0x1,%edx
               :   964f7:	je     964fe <mlx5_tx_burst_mtiv_empw+0x4f2e>
               :   964f9:	movzbl (%rsi),%edx
               :   964fc:	mov    %dl,(%rax)
               :   964fe:	movzwl 0x0(%r13),%eax
               :   96503:	dec    %ecx
               :   96505:	lea    0x1(%rax),%edx
               :   96508:	and    0x8(%r13),%ax
               :   9650d:	movzwl %ax,%eax
               :   96510:	mov    %dx,0x0(%r13)
               :   96515:	add    $0x10,%r12
               :   96519:	mov    %rbx,0x188(%r13,%rax,8)
               :   96521:	test   %r15w,%r15w
               :   96525:	je     96795 <mlx5_tx_burst_mtiv_empw+0x51c5>
               :   9652b:	mov    0x40(%rbx),%rbx
               :   9652f:	movzwl 0x28(%rbx),%edx
               :   96533:	dec    %r15d
               :   96536:	test   %dx,%dx
               :   96539:	je     965c1 <mlx5_tx_burst_mtiv_empw+0x4ff1>
               :   9653f:	cmp    %r12,0x100(%r13)
               :   96546:	ja     9654f <mlx5_tx_burst_mtiv_empw+0x4f7f>
               :   96548:	mov    0xf8(%r13),%r12
               :   9654f:	mov    (%rbx),%rdi
               :   96552:	movzwl 0x10(%rbx),%r14d
               :   96557:	movzwl %dx,%eax
               :   9655a:	add    %rdi,%r14
               :   9655d:	mov    %r14,%rsi
               :   96560:	cmp    $0xc,%dx
               :   96564:	jbe    964a8 <mlx5_tx_burst_mtiv_empw+0x4ed8>
               :   9656a:	bswap  %eax
               :   9656c:	mov    %eax,(%r12)
               :   96570:	mov    0x40(%r13),%esi
               :   96574:	mov    0x38(%r13),%rax
               :   96578:	cmp    %esi,(%rax)
               :   9657a:	jne    9740b <mlx5_tx_burst_mtiv_empw+0x5e3b>
               :   96580:	movzwl 0x44(%r13),%eax
               :   96585:	mov    %r8,%rdx
               :   96588:	lea    (%rax,%rax,4),%rax
               :   9658c:	lea    (%r8,%rax,4),%rax
               :   96590:	cmp    (%rax),%rdi
               :   96593:	jb     96a8e <mlx5_tx_burst_mtiv_empw+0x54be>
               :   96599:	cmp    0x8(%rax),%rdi
               :   9659d:	jae    96a8e <mlx5_tx_burst_mtiv_empw+0x54be>
               :   965a3:	mov    0x10(%rax),%eax
               :   965a6:	cmp    $0xffffffff,%eax
               :   965a9:	je     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   965af:	mov    %eax,0x4(%r12)
               :   965b4:	bswap  %r14
               :   965b7:	mov    %r14,0x8(%r12)
               :   965bc:	jmpq   964fe <mlx5_tx_burst_mtiv_empw+0x4f2e>
               :   965c1:	mov    0x40(%rbx),%rax
               :   965c5:	lea    0x12(%rbx),%r14
               :   965c9:	mov    %rax,0xc0(%rsp)
               :   965d1:	movzwl 0x12(%rbx),%eax
               :   965d5:	cmp    $0x1,%ax
               :   965d9:	jne    98ece <mlx5_tx_burst_mtiv_empw+0x78fe>
               :   965df:	mov    0x18(%rbx),%rax
               :   965e3:	movabs $0x6000000000000000,%rsi
               :   965ed:	mov    0x38(%rbx),%r14
               :   965f1:	test   %rsi,%rax
               :   965f4:	je     96a3f <mlx5_tx_burst_mtiv_empw+0x546f>
               :   965fa:	movabs $0x2000000000000000,%rdi
               :   96604:	test   %rdi,%rax
               :   96607:	je     9842b <mlx5_tx_burst_mtiv_empw+0x6e5b>
               :   9660d:	mov    0x44(%r14),%edx
               :   96611:	test   %edx,%edx
               :   96613:	jne    969f8 <mlx5_tx_burst_mtiv_empw+0x5428>
               :   96619:	testb  $0x1,0xc4(%r14)
               :   96621:	jne    9a6e4 <mlx5_tx_burst_mtiv_empw+0x9114>
               :   96627:	mov    0x50(%rbx),%rdx
               :   9662b:	movzwl 0x10(%rdx),%esi
               :   9662f:	lea    0x10(%rdx),%rax
               :   96633:	cmp    $0x1,%si
               :   96637:	jne    99d82 <mlx5_tx_burst_mtiv_empw+0x87b2>
               :   9663d:	movw   $0x0,0x10(%rdx)
               :   96643:	mov    0x50(%rbx),%rax
               :   96647:	mov    (%rbx),%rdi
               :   9664a:	mov    0x8(%rax),%rsi
               :   9664e:	mov    %r8,0xa8(%rsp)
               :   96656:	mov    %ecx,0xb0(%rsp)
               :   9665d:	vzeroupper 
               :   96660:	callq  *(%rax)
               :   96662:	mov    0xb0(%rsp),%ecx
               :   96669:	mov    0xa8(%rsp),%r8
               :   96671:	cmpl   $0x1,0x44(%r14)
               :   96676:	sbb    %rax,%rax
               :   96679:	and    $0xffffffffffefe000,%rax
               :   9667f:	lea    0x1020c0(%r14,%rax,1),%rax
               :   96687:	movzwl 0x2(%rax),%edx
               :   9668b:	movzwl (%rax),%eax
               :   9668e:	mov    %dx,0x58(%rbx)
               :   96692:	sub    $0xffffffffffffff80,%rdx
               :   96696:	lea    (%rbx,%rdx,1),%rsi
               :   9669a:	add    -0x8(%rbx),%rdx
               :   9669e:	mov    %rdx,0x8(%rbx)
               :   966a2:	cmp    $0x80,%ax
               :   966a6:	mov    $0x80,%edx
               :   966ab:	mov    %ax,0x36(%rbx)
               :   966af:	cmova  %edx,%eax
               :   966b2:	mov    0x38(%rbx),%r14
               :   966b6:	xor    %r11d,%r11d
               :   966b9:	mov    %rsi,(%rbx)
               :   966bc:	mov    %ax,0x10(%rbx)
               :   966c0:	mov    %r11w,0x28(%rbx)
               :   966c5:	movq   $0x0,0x18(%rbx)
               :   966cd:	mov    0x44(%r14),%edx
               :   966d1:	cmpq   $0x0,0x40(%rbx)
               :   966d6:	je     966e0 <mlx5_tx_burst_mtiv_empw+0x5110>
               :   966d8:	movq   $0x0,0x40(%rbx)
               :   966e0:	cmpw   $0x1,0x14(%rbx)
               :   966e5:	je     966f2 <mlx5_tx_burst_mtiv_empw+0x5122>
               :   966e7:	mov    $0x1,%r10d
               :   966ed:	mov    %r10w,0x14(%rbx)
               :   966f2:	mov    %r8,0x60(%rsp)
               :   966f7:	mov    %ecx,0xa8(%rsp)
               :   966fe:	mov    %edx,0xb0(%rsp)
               :   96705:	mov    %rbx,0x120(%rsp)
               :   9670d:	data16 lea 0xff733(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   96715:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   9671d:	mov    0xb0(%rsp),%edx
               :   96724:	mov    0xa8(%rsp),%ecx
               :   9672b:	test   %edx,%edx
               :   9672d:	mov    0x60(%rsp),%r8
               :   96732:	mov    (%rax),%eax
               :   96734:	je     98117 <mlx5_tx_burst_mtiv_empw+0x6b47>
               :   9673a:	cmp    $0x7f,%eax
               :   9673d:	ja     98117 <mlx5_tx_burst_mtiv_empw+0x6b47>
               :   96743:	mov    %eax,%ebx
               :   96745:	imul   $0x2040,%rbx,%rbx
               :   9674c:	add    0x60(%r14),%rbx
               :   96750:	je     98117 <mlx5_tx_burst_mtiv_empw+0x6b47>
               :   96756:	mov    0x4(%rbx),%eax
               :   96759:	test   %eax,%eax
               :   9675b:	je     98117 <mlx5_tx_burst_mtiv_empw+0x6b47>
               :   96761:	mov    0x8(%rbx),%edx
               :   96764:	lea    0x1(%rdx),%edi
               :   96767:	cmp    %edi,%eax
               :   96769:	jb     97a48 <mlx5_tx_burst_mtiv_empw+0x6478>
               :   9676f:	mov    %edi,0x8(%rbx)
               :   96772:	lea    0x40(%rbx,%rdx,8),%rsi
               :   96777:	mov    0x120(%rsp),%rax
               :   9677f:	mov    %rax,(%rsi)
               :   96782:	test   %r15w,%r15w
               :   96786:	je     96795 <mlx5_tx_burst_mtiv_empw+0x51c5>
               :   96788:	mov    0xc0(%rsp),%rbx
               :   96790:	jmpq   9652f <mlx5_tx_burst_mtiv_empw+0x4f5f>
               :   96795:	mov    %cx,0xa8(%rsp)
               :   9679d:	mov    %r13,%r11
               :   967a0:	mov    %r12,%rdx
               :   967a3:	mov    0xb8(%rsp),%rdi
               :   967ab:	cmp    %rdx,%rdi
               :   967ae:	jae    97029 <mlx5_tx_burst_mtiv_empw+0x5a59>
               :   967b4:	mov    %rdx,%rax
               :   967b7:	sub    %rdi,%rax
               :   967ba:	shr    $0x4,%rax
               :   967be:	mov    %rdi,%rbx
               :   967c1:	jmpq   934dc <mlx5_tx_burst_mtiv_empw+0x1f0c>
               :   967c6:	movzwl 0x28(%rcx),%edx
               :   967ca:	mov    %rcx,%r13
               :   967cd:	xor    %r14d,%r14d
               :   967d0:	jmpq   95488 <mlx5_tx_burst_mtiv_empw+0x3eb8>
               :   967d5:	testb  $0x1,0x1020c4(%r15)
               :   967dd:	je     94ade <mlx5_tx_burst_mtiv_empw+0x350e>
               :   967e3:	mov    $0x1020c0,%eax
               :   967e8:	testb  $0x1,0x4(%r15,%rax,1)
               :   967ee:	je     97fb4 <mlx5_tx_burst_mtiv_empw+0x69e4>
               :   967f4:	movabs $0x2000000000000000,%rcx
               :   967fe:	mov    %rcx,0x18(%r13)
               :   96802:	mov    0x50(%r13),%rax
               :   96806:	movzwl 0x10(%rax),%esi
               :   9680a:	lea    0x10(%rax),%rdx
               :   9680e:	cmp    $0x1,%si
               :   96812:	jne    99fe1 <mlx5_tx_burst_mtiv_empw+0x8a11>
               :   96818:	mov    0x38(%r13),%r15
               :   9681c:	mov    0x44(%r15),%edx
               :   96820:	vzeroupper 
               :   96823:	jmpq   94b90 <mlx5_tx_burst_mtiv_empw+0x35c0>
               :   96828:	mov    0x2(%rdx),%rax
               :   9682c:	mov    %rax,0x20(%r12)
               :   96831:	movzwl 0xa(%rdx),%eax
               :   96835:	mov    %ax,0x28(%r12)
               :   9683b:	movzwl 0x2a(%rbx),%eax
               :   9683f:	or     $0x81000000,%eax
               :   96844:	bswap  %eax
               :   96846:	mov    %eax,0x2a(%r12)
               :   9684b:	movzwl 0xc(%rdx),%eax
               :   9684f:	mov    %ax,0x2e(%r12)
               :   96855:	jmpq   93148 <mlx5_tx_burst_mtiv_empw+0x1b78>
               :   9685a:	mov    0x88(%rsp),%eax
               :   96861:	mov    %r14w,0xa8(%rsp)
               :   9686a:	add    $0x3,%eax
               :   9686d:	shr    $0x2,%eax
               :   96870:	add    %ax,0xa(%rbx)
               :   96874:	mov    %rbx,%r11
               :   96877:	sub    %ax,0xce(%rsp)
               :   9687f:	jmpq   934fa <mlx5_tx_burst_mtiv_empw+0x1f2a>
               :   96884:	mov    %rbx,0xb8(%rsp)
               :   9688c:	movzwl %r15w,%ebx
               :   96890:	jmpq   9279e <mlx5_tx_burst_mtiv_empw+0x11ce>
               :   96895:	vmovdqu64 (%rax),%ymm0
               :   9689b:	jmpq   95baf <mlx5_tx_burst_mtiv_empw+0x45df>
               :   968a0:	mov    %r8,%r11
               :   968a3:	mov    %rbx,%r9
               :   968a6:	jmpq   9452f <mlx5_tx_burst_mtiv_empw+0x2f5f>
               :   968ab:	mov    %r14,%rdx
               :   968ae:	and    $0x1f,%edx
               :   968b1:	je     97400 <mlx5_tx_burst_mtiv_empw+0x5e30>
               :   968b7:	mov    $0x20,%r8d
               :   968bd:	sub    %rdx,%r8
               :   968c0:	lea    -0x20(%rdi,%rdx,1),%r10
               :   968c5:	vmovdqu64 %ymm0,(%r14)
               :   968cb:	add    %r8,%rax
               :   968ce:	lea    (%r14,%r8,1),%r9
               :   968d2:	lea    -0x80(%r10),%rdx
               :   968d6:	and    $0xffffffffffffff80,%rdx
               :   968da:	lea    0x80(%rax,%rdx,1),%r11
               :   968e2:	mov    %r9,%r8
               :   968e5:	mov    %rax,%rdx
               :   968e8:	nopl   0x0(%rax,%rax,1)
               :   968f0:	vmovdqu64 (%rdx),%ymm2
               :   968f6:	vmovdqu64 0x20(%rdx),%ymm1
               :   968fd:	vmovdqu64 0x40(%rdx),%ymm0
               :   96904:	vmovdqu64 0x60(%rdx),%ymm7
               :   9690b:	sub    $0xffffffffffffff80,%rdx
               :   9690f:	vmovdqu64 %ymm7,0x60(%r8)
               :   96916:	vmovdqu64 %ymm2,(%r8)
               :   9691c:	vmovdqu64 %ymm1,0x20(%r8)
               :   96923:	vmovdqu64 %ymm0,0x40(%r8)
               :   9692a:	sub    $0xffffffffffffff80,%r8
               :   9692e:	cmp    %r11,%rdx
               :   96931:	jne    968f0 <mlx5_tx_burst_mtiv_empw+0x5320>
               :   96933:	mov    %r10,%rdx
               :   96936:	and    $0xffffffffffffff80,%r10
               :   9693a:	and    $0x7f,%edx
               :   9693d:	add    %r10,%rax
               :   96940:	lea    (%r9,%r10,1),%r8
               :   96944:	jmpq   93b02 <mlx5_tx_burst_mtiv_empw+0x2532>
               :   96949:	vmovdqu64 (%r10),%xmm0
               :   9694f:	vmovups %xmm0,(%r8)
               :   96954:	vmovdqu64 -0x10(%r10,%rax,1),%xmm2
               :   9695c:	vmovups %xmm2,-0x10(%r8,%rax,1)
               :   96963:	jmpq   92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   96968:	mov    %rax,0x20(%rsp)
               :   9696d:	mov    %r10,0x50(%rsp)
               :   96972:	mov    %rbx,0x48(%rsp)
               :   96977:	jmpq   94717 <mlx5_tx_burst_mtiv_empw+0x3147>
               :   9697c:	mov    %r14,%r8
               :   9697f:	mov    %rdi,%rdx
               :   96982:	vmovdqu64 %ymm0,(%r8)
               :   96988:	vmovdqu64 0x20(%rax),%ymm5
               :   9698f:	sub    $0x40,%rdx
               :   96993:	vmovdqu64 %ymm5,0x20(%r8)
               :   9699a:	add    $0x40,%rax
               :   9699e:	add    $0x40,%r8
               :   969a2:	jmpq   93b0c <mlx5_tx_burst_mtiv_empw+0x253c>
               :   969a7:	mov    0x20(%rsp),%r14
               :   969ac:	vmovdqu64 (%r14),%ymm0
               :   969b2:	jmpq   95c76 <mlx5_tx_burst_mtiv_empw+0x46a6>
               :   969b7:	vmovdqu64 (%rcx),%ymm0
               :   969bd:	jmpq   95c44 <mlx5_tx_burst_mtiv_empw+0x4674>
               :   969c2:	vmovdqu64 (%r10),%xmm3
               :   969c8:	vmovups %xmm3,(%r8)
               :   969cd:	vmovdqu64 -0x10(%r10,%rax,1),%xmm4
               :   969d5:	vmovups %xmm4,-0x10(%r8,%rax,1)
               :   969dc:	jmpq   92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   969e1:	mov    %rax,0x20(%rsp)
               :   969e6:	mov    %r10,0x50(%rsp)
               :   969eb:	mov    %rbx,0x48(%rsp)
               :   969f0:	mov    %r10,%r14
               :   969f3:	jmpq   94807 <mlx5_tx_burst_mtiv_empw+0x3237>
               :   969f8:	testb  $0x1,0x1020c4(%r14)
               :   96a00:	je     96627 <mlx5_tx_burst_mtiv_empw+0x5057>
               :   96a06:	mov    $0x1020c0,%eax
               :   96a0b:	testb  $0x1,0x4(%r14,%rax,1)
               :   96a11:	je     98511 <mlx5_tx_burst_mtiv_empw+0x6f41>
               :   96a17:	movabs $0x2000000000000000,%rdi
               :   96a21:	mov    %rdi,0x18(%rbx)
               :   96a25:	mov    0x50(%rbx),%rax
               :   96a29:	movzwl 0x10(%rax),%esi
               :   96a2d:	lea    0x10(%rax),%rdx
               :   96a31:	cmp    $0x1,%si
               :   96a35:	jne    99f20 <mlx5_tx_burst_mtiv_empw+0x8950>
               :   96a3b:	mov    0x38(%rbx),%r14
               :   96a3f:	mov    0x44(%r14),%edx
               :   96a43:	vzeroupper 
               :   96a46:	jmpq   966d1 <mlx5_tx_burst_mtiv_empw+0x5101>
               :   96a4b:	movslq 0x58(%r14),%rax
               :   96a4f:	mov    %rcx,0x50(%rsp)
               :   96a54:	lea    0x40(%r13),%rsi
               :   96a58:	cmp    $0xf,%eax
               :   96a5b:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   96a61:	shl    $0x7,%rax
               :   96a65:	add    0xff4a4(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   96a6c:	mov    %r14,%rdi
               :   96a6f:	mov    %rsi,0x58(%rsp)
               :   96a74:	callq  *0x70(%rax)
               :   96a77:	movl   $0x1,0x8(%r13)
               :   96a7f:	mov    0x50(%rsp),%rcx
               :   96a84:	mov    0x58(%rsp),%rsi
               :   96a89:	jmpq   957c8 <mlx5_tx_burst_mtiv_empw+0x41f8>
               :   96a8e:	mov    0x48(%r13),%rax
               :   96a92:	test   %rax,%rax
               :   96a95:	je     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   96a9b:	cmp    %rax,%rdi
               :   96a9e:	jb     96aaa <mlx5_tx_burst_mtiv_empw+0x54da>
               :   96aa0:	cmp    0x50(%r13),%rdi
               :   96aa4:	jb     988f3 <mlx5_tx_burst_mtiv_empw+0x7323>
               :   96aaa:	mov    0x5c(%r13),%rax
               :   96aae:	test   %rax,%rax
               :   96ab1:	je     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   96ab7:	cmp    %rax,%rdi
               :   96aba:	jb     96acf <mlx5_tx_burst_mtiv_empw+0x54ff>
               :   96abc:	lea    0x5c(%r13),%rdx
               :   96ac0:	mov    $0x1,%eax
               :   96ac5:	cmp    0x64(%r13),%rdi
               :   96ac9:	jb     988f5 <mlx5_tx_burst_mtiv_empw+0x7325>
               :   96acf:	mov    0x70(%r13),%rax
               :   96ad3:	test   %rax,%rax
               :   96ad6:	je     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   96adc:	cmp    %rax,%rdi
               :   96adf:	jb     96af4 <mlx5_tx_burst_mtiv_empw+0x5524>
               :   96ae1:	lea    0x70(%r13),%rdx
               :   96ae5:	mov    $0x2,%eax
               :   96aea:	cmp    0x78(%r13),%rdi
               :   96aee:	jb     988f5 <mlx5_tx_burst_mtiv_empw+0x7325>
               :   96af4:	mov    0x84(%r13),%rax
               :   96afb:	test   %rax,%rax
               :   96afe:	je     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   96b04:	cmp    %rax,%rdi
               :   96b07:	jb     96b22 <mlx5_tx_burst_mtiv_empw+0x5552>
               :   96b09:	lea    0x84(%r13),%rdx
               :   96b10:	mov    $0x3,%eax
               :   96b15:	cmp    0x8c(%r13),%rdi
               :   96b1c:	jb     988f5 <mlx5_tx_burst_mtiv_empw+0x7325>
               :   96b22:	mov    0x98(%r13),%rax
               :   96b29:	test   %rax,%rax
               :   96b2c:	je     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   96b32:	cmp    %rax,%rdi
               :   96b35:	jb     96b50 <mlx5_tx_burst_mtiv_empw+0x5580>
               :   96b37:	lea    0x98(%r13),%rdx
               :   96b3e:	mov    $0x4,%eax
               :   96b43:	cmp    0xa0(%r13),%rdi
               :   96b4a:	jb     988f5 <mlx5_tx_burst_mtiv_empw+0x7325>
               :   96b50:	mov    0xac(%r13),%rax
               :   96b57:	test   %rax,%rax
               :   96b5a:	je     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   96b5c:	cmp    %rax,%rdi
               :   96b5f:	jb     96b7a <mlx5_tx_burst_mtiv_empw+0x55aa>
               :   96b61:	lea    0xac(%r13),%rdx
               :   96b68:	mov    $0x5,%eax
               :   96b6d:	cmp    %rdi,0xb4(%r13)
               :   96b74:	ja     988f5 <mlx5_tx_burst_mtiv_empw+0x7325>
               :   96b7a:	mov    0xc0(%r13),%rax
               :   96b81:	test   %rax,%rax
               :   96b84:	je     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   96b86:	cmp    %rdi,%rax
               :   96b89:	ja     96ba4 <mlx5_tx_burst_mtiv_empw+0x55d4>
               :   96b8b:	lea    0xc0(%r13),%rdx
               :   96b92:	mov    $0x6,%eax
               :   96b97:	cmp    0xc8(%r13),%rdi
               :   96b9e:	jb     988f5 <mlx5_tx_burst_mtiv_empw+0x7325>
               :   96ba4:	mov    0xd4(%r13),%rax
               :   96bab:	test   %rax,%rax
               :   96bae:	je     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   96bb0:	cmp    %rax,%rdi
               :   96bb3:	jb     96bce <mlx5_tx_burst_mtiv_empw+0x55fe>
               :   96bb5:	lea    0xd4(%r13),%rdx
               :   96bbc:	mov    $0x7,%eax
               :   96bc1:	cmp    0xdc(%r13),%rdi
               :   96bc8:	jb     988f5 <mlx5_tx_burst_mtiv_empw+0x7325>
               :   96bce:	mov    0x88(%rsp),%rdi
               :   96bd6:	mov    %rbx,%rsi
               :   96bd9:	mov    %r8,0xb0(%rsp)
               :   96be1:	mov    %ecx,0xc0(%rsp)
               :   96be8:	vzeroupper 
               :   96beb:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :   96bf0:	mov    0xc0(%rsp),%ecx
               :   96bf7:	mov    0xb0(%rsp),%r8
               :   96bff:	jmpq   965af <mlx5_tx_burst_mtiv_empw+0x4fdf>
               :   96c04:	vmovdqu64 (%rax),%xmm1
               :   96c0a:	vmovups %xmm1,(%r12)
               :   96c10:	vmovdqu64 -0x10(%rax,%rcx,1),%xmm5
               :   96c18:	vmovups %xmm5,-0x10(%r12,%rcx,1)
               :   96c1f:	jmpq   95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   96c24:	vzeroupper 
               :   96c27:	jmpq   96198 <mlx5_tx_burst_mtiv_empw+0x4bc8>
               :   96c2c:	vmovdqu64 (%rax),%xmm5
               :   96c32:	vmovups %xmm5,(%r12)
               :   96c38:	vmovdqu64 -0x10(%rax,%rcx,1),%xmm6
               :   96c40:	vmovups %xmm6,-0x10(%r12,%rcx,1)
               :   96c47:	jmpq   95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   96c4c:	mov    0x98(%rsp),%rcx
               :   96c54:	add    %rax,%r10
               :   96c57:	mov    0xf8(%rcx),%r8
               :   96c5e:	mov    %esi,%r12d
               :   96c61:	jmpq   92291 <mlx5_tx_burst_mtiv_empw+0xcc1>
               :   96c66:	mov    %rax,%r12
               :   96c69:	lea    0x110(%rsp),%rax
               :   96c71:	movl   $0x0,0x60(%rsp)
               :   96c79:	mov    %rax,0x50(%rsp)
               :   96c7e:	xor    %r14d,%r14d
               :   96c81:	mov    $0xc,%r15d
               :   96c87:	mov    %r11,%rbx
               :   96c8a:	nopw   0x0(%rax,%rax,1)
               :   96c90:	cmp    %dx,%r14w
               :   96c94:	jae    96e40 <mlx5_tx_burst_mtiv_empw+0x5870>
               :   96c9a:	movzwl 0x10(%r13),%eax
               :   96c9f:	movzwl %r14w,%ecx
               :   96ca3:	add    %rcx,%rax
               :   96ca6:	movzwl %r14w,%ecx
               :   96caa:	sub    %ecx,%edx
               :   96cac:	add    0x0(%r13),%rax
               :   96cb0:	mov    %edx,%ecx
               :   96cb2:	cmp    %r15d,%edx
               :   96cb5:	mov    %rax,%rdx
               :   96cb8:	cmova  %r15d,%ecx
               :   96cbc:	or     %r12,%rdx
               :   96cbf:	and    $0x1f,%edx
               :   96cc2:	mov    %ecx,%esi
               :   96cc4:	jne    96d7d <mlx5_tx_burst_mtiv_empw+0x57ad>
               :   96cca:	cmp    $0xf,%ecx
               :   96ccd:	jbe    96fcc <mlx5_tx_burst_mtiv_empw+0x59fc>
               :   96cd3:	cmp    $0x20,%ecx
               :   96cd6:	jbe    975f3 <mlx5_tx_burst_mtiv_empw+0x6023>
               :   96cdc:	cmp    $0x40,%rsi
               :   96ce0:	jbe    97fed <mlx5_tx_burst_mtiv_empw+0x6a1d>
               :   96ce6:	lea    -0x40(%rsi),%r8
               :   96cea:	shr    $0x6,%r8
               :   96cee:	lea    0x1(%r8),%r9
               :   96cf2:	shl    $0x6,%r9
               :   96cf6:	lea    (%rax,%r9,1),%rdi
               :   96cfa:	mov    %r12,%rdx
               :   96cfd:	nopl   (%rax)
               :   96d00:	vmovdqu64 (%rax),%ymm6
               :   96d06:	add    $0x40,%rax
               :   96d0a:	vmovdqu64 %ymm6,(%rdx)
               :   96d10:	vmovdqu64 -0x20(%rax),%ymm2
               :   96d17:	add    $0x40,%rdx
               :   96d1b:	vmovdqu64 %ymm2,-0x20(%rdx)
               :   96d22:	cmp    %rdi,%rax
               :   96d25:	jne    96d00 <mlx5_tx_burst_mtiv_empw+0x5730>
               :   96d27:	mov    %r8,%rdx
               :   96d2a:	neg    %rdx
               :   96d2d:	shl    $0x6,%rdx
               :   96d31:	lea    -0x80(%rsi,%rdx,1),%rdx
               :   96d36:	add    %rdx,%rax
               :   96d39:	vmovdqu64 (%rax),%ymm0
               :   96d3f:	add    %r9,%rdx
               :   96d42:	add    %r12,%rdx
               :   96d45:	vmovdqu64 %ymm0,(%rdx)
               :   96d4b:	vmovdqu64 0x20(%rax),%ymm1
               :   96d52:	vmovdqu64 %ymm1,0x20(%rdx)
               :   96d59:	nopl   0x0(%rax)
               :   96d60:	add    %ecx,0x60(%rsp)
               :   96d64:	movzwl 0x28(%r13),%edx
               :   96d69:	add    %ecx,%r14d
               :   96d6c:	sub    %ecx,%r15d
               :   96d6f:	je     98649 <mlx5_tx_burst_mtiv_empw+0x7079>
               :   96d75:	add    %rsi,%r12
               :   96d78:	jmpq   96c90 <mlx5_tx_burst_mtiv_empw+0x56c0>
               :   96d7d:	cmp    $0xf,%ecx
               :   96d80:	jbe    96fcc <mlx5_tx_burst_mtiv_empw+0x59fc>
               :   96d86:	cmp    $0x20,%ecx
               :   96d89:	jbe    97c42 <mlx5_tx_burst_mtiv_empw+0x6672>
               :   96d8f:	cmp    $0x30,%rsi
               :   96d93:	jbe    980e9 <mlx5_tx_burst_mtiv_empw+0x6b19>
               :   96d99:	vmovdqu64 (%rax),%ymm0
               :   96d9f:	cmp    $0x40,%rsi
               :   96da3:	jbe    98892 <mlx5_tx_burst_mtiv_empw+0x72c2>
               :   96da9:	cmp    $0x100,%rsi
               :   96db0:	ja     98f72 <mlx5_tx_burst_mtiv_empw+0x79a2>
               :   96db6:	cmp    $0x7f,%rsi
               :   96dba:	jbe    9924e <mlx5_tx_burst_mtiv_empw+0x7c7e>
               :   96dc0:	vmovdqu64 %ymm0,(%r12)
               :   96dc7:	vmovdqu64 0x20(%rax),%ymm0
               :   96dce:	lea    -0x80(%rsi),%rdi
               :   96dd2:	vmovdqu64 %ymm0,0x20(%r12)
               :   96dda:	vmovdqu64 0x40(%rax),%ymm1
               :   96de1:	lea    0x80(%r12),%rdx
               :   96de9:	vmovdqu64 %ymm1,0x40(%r12)
               :   96df1:	vmovdqu64 0x60(%rax),%ymm2
               :   96df8:	sub    $0xffffffffffffff80,%rax
               :   96dfc:	vmovdqu64 %ymm2,0x60(%r12)
               :   96e04:	cmp    $0x3f,%rdi
               :   96e08:	ja     99532 <mlx5_tx_burst_mtiv_empw+0x7f62>
               :   96e0e:	cmp    $0x20,%rdi
               :   96e12:	jbe    98b05 <mlx5_tx_burst_mtiv_empw+0x7535>
               :   96e18:	vmovdqu64 (%rax),%ymm4
               :   96e1e:	vmovdqu64 %ymm4,(%rdx)
               :   96e24:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm5
               :   96e2c:	vmovdqu64 %ymm5,-0x20(%rdx,%rdi,1)
               :   96e34:	jmpq   96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   96e39:	nopl   0x0(%rax)
               :   96e40:	mov    0x40(%r13),%r14
               :   96e44:	movzwl 0x12(%r13),%eax
               :   96e49:	lea    0x12(%r13),%rdx
               :   96e4d:	cmp    $0x1,%ax
               :   96e51:	jne    987e3 <mlx5_tx_burst_mtiv_empw+0x7213>
               :   96e57:	mov    0x18(%r13),%rax
               :   96e5b:	movabs $0x6000000000000000,%rdi
               :   96e65:	mov    0x38(%r13),%r8
               :   96e69:	test   %rdi,%rax
               :   96e6c:	je     96ed4 <mlx5_tx_burst_mtiv_empw+0x5904>
               :   96e6e:	movabs $0x2000000000000000,%rsi
               :   96e78:	test   %rsi,%rax
               :   96e7b:	je     9829a <mlx5_tx_burst_mtiv_empw+0x6cca>
               :   96e81:	mov    0x44(%r8),%edx
               :   96e85:	test   %edx,%edx
               :   96e87:	jne    98035 <mlx5_tx_burst_mtiv_empw+0x6a65>
               :   96e8d:	testb  $0x1,0xc4(%r8)
               :   96e95:	je     98043 <mlx5_tx_burst_mtiv_empw+0x6a73>
               :   96e9b:	mov    $0xc0,%eax
               :   96ea0:	testb  $0x1,0x4(%r8,%rax,1)
               :   96ea6:	je     9802d <mlx5_tx_burst_mtiv_empw+0x6a5d>
               :   96eac:	movabs $0x2000000000000000,%rdi
               :   96eb6:	mov    %rdi,0x18(%r13)
               :   96eba:	mov    0x50(%r13),%rax
               :   96ebe:	movzwl 0x10(%rax),%ecx
               :   96ec2:	lea    0x10(%rax),%rdx
               :   96ec6:	cmp    $0x1,%cx
               :   96eca:	jne    99dd2 <mlx5_tx_burst_mtiv_empw+0x8802>
               :   96ed0:	mov    0x38(%r13),%r8
               :   96ed4:	mov    0x44(%r8),%edx
               :   96ed8:	vzeroupper 
               :   96edb:	cmpq   $0x0,0x40(%r13)
               :   96ee0:	je     96eea <mlx5_tx_burst_mtiv_empw+0x591a>
               :   96ee2:	movq   $0x0,0x40(%r13)
               :   96eea:	cmpw   $0x1,0x14(%r13)
               :   96ef0:	je     96efc <mlx5_tx_burst_mtiv_empw+0x592c>
               :   96ef2:	mov    $0x1,%esi
               :   96ef7:	mov    %si,0x14(%r13)
               :   96efc:	mov    %edx,0x58(%rsp)
               :   96f00:	mov    %r8,0x88(%rsp)
               :   96f08:	mov    %r13,0x110(%rsp)
               :   96f10:	data16 lea 0xfef30(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   96f18:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   96f20:	mov    0x58(%rsp),%edx
               :   96f24:	mov    0x88(%rsp),%r8
               :   96f2c:	test   %edx,%edx
               :   96f2e:	mov    (%rax),%eax
               :   96f30:	je     97e39 <mlx5_tx_burst_mtiv_empw+0x6869>
               :   96f36:	cmp    $0x7f,%eax
               :   96f39:	ja     97e39 <mlx5_tx_burst_mtiv_empw+0x6869>
               :   96f3f:	mov    %eax,%r13d
               :   96f42:	imul   $0x2040,%r13,%r13
               :   96f49:	add    0x60(%r8),%r13
               :   96f4d:	je     97e39 <mlx5_tx_burst_mtiv_empw+0x6869>
               :   96f53:	mov    0x4(%r13),%eax
               :   96f57:	test   %eax,%eax
               :   96f59:	je     97e39 <mlx5_tx_burst_mtiv_empw+0x6869>
               :   96f5f:	mov    0x8(%r13),%edx
               :   96f63:	lea    0x1(%rdx),%ecx
               :   96f66:	cmp    %ecx,%eax
               :   96f68:	jb     975b4 <mlx5_tx_burst_mtiv_empw+0x5fe4>
               :   96f6e:	mov    %ecx,0x8(%r13)
               :   96f72:	lea    0x40(%r13,%rdx,8),%rsi
               :   96f77:	mov    0x110(%rsp),%rax
               :   96f7f:	mov    %rax,(%rsi)
               :   96f82:	mov    0x18(%r14),%rcx
               :   96f86:	lea    0x1005f3(%rip),%rax        # 197580 <rte_net_mlx5_dynf_inline_mask>
               :   96f8d:	decw   0xc0(%rsp)
               :   96f95:	movzwl 0x28(%r14),%edx
               :   96f9a:	test   %rcx,(%rax)
               :   96f9d:	je     96fc1 <mlx5_tx_burst_mtiv_empw+0x59f1>
               :   96f9f:	mov    0x60(%rsp),%esi
               :   96fa3:	cmp    $0xb,%esi
               :   96fa6:	ja     97221 <mlx5_tx_burst_mtiv_empw+0x5c51>
               :   96fac:	mov    $0xc,%eax
               :   96fb1:	sub    %esi,%eax
               :   96fb3:	movzwl %dx,%ecx
               :   96fb6:	cmp    %ecx,%eax
               :   96fb8:	ja     96fc1 <mlx5_tx_burst_mtiv_empw+0x59f1>
               :   96fba:	cmp    %eax,%r15d
               :   96fbd:	cmova  %eax,%r15d
               :   96fc1:	mov    %r14,%r13
               :   96fc4:	xor    %r14d,%r14d
               :   96fc7:	jmpq   96c90 <mlx5_tx_burst_mtiv_empw+0x56c0>
               :   96fcc:	mov    %r12,%rdx
               :   96fcf:	test   $0x8,%cl
               :   96fd2:	je     96fe4 <mlx5_tx_burst_mtiv_empw+0x5a14>
               :   96fd4:	mov    (%rax),%rdx
               :   96fd7:	add    $0x8,%rax
               :   96fdb:	mov    %rdx,(%r12)
               :   96fdf:	lea    0x8(%r12),%rdx
               :   96fe4:	test   $0x4,%cl
               :   96fe7:	je     96ff6 <mlx5_tx_burst_mtiv_empw+0x5a26>
               :   96fe9:	mov    (%rax),%edi
               :   96feb:	add    $0x4,%rdx
               :   96fef:	mov    %edi,-0x4(%rdx)
               :   96ff2:	add    $0x4,%rax
               :   96ff6:	test   $0x2,%cl
               :   96ff9:	je     9700a <mlx5_tx_burst_mtiv_empw+0x5a3a>
               :   96ffb:	movzwl (%rax),%edi
               :   96ffe:	add    $0x2,%rdx
               :   97002:	mov    %di,-0x2(%rdx)
               :   97006:	add    $0x2,%rax
               :   9700a:	test   $0x1,%cl
               :   9700d:	je     96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   97013:	movzbl (%rax),%eax
               :   97016:	mov    %al,(%rdx)
               :   97018:	jmpq   96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   9701d:	mov    0xf8(%r14),%r12
               :   97024:	jmpq   9239d <mlx5_tx_burst_mtiv_empw+0xdcd>
               :   97029:	movzwl 0xe(%r11),%eax
               :   9702e:	mov    %rdi,%rbx
               :   97031:	shl    $0x6,%rax
               :   97035:	sub    0xb8(%rsp),%rax
               :   9703d:	add    %rdx,%rax
               :   97040:	shr    $0x4,%rax
               :   97044:	jmpq   934dc <mlx5_tx_burst_mtiv_empw+0x1f0c>
               :   97049:	mov    0x60(%rsp),%eax
               :   9704d:	movzwl %r10w,%r10d
               :   97051:	mov    %rax,%rbx
               :   97054:	add    %rdi,%rax
               :   97057:	cmp    %r10,%rax
               :   9705a:	cmova  %ebx,%eax
               :   9705d:	mov    %eax,0x60(%rsp)
               :   97061:	jmpq   928c0 <mlx5_tx_burst_mtiv_empw+0x12f0>
               :   97066:	mov    0x48(%r14),%rcx
               :   9706a:	test   %rcx,%rcx
               :   9706d:	je     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   97073:	cmp    %rax,%rcx
               :   97076:	ja     97082 <mlx5_tx_burst_mtiv_empw+0x5ab2>
               :   97078:	cmp    0x50(%r14),%rax
               :   9707c:	jb     9a9e3 <mlx5_tx_burst_mtiv_empw+0x9413>
               :   97082:	mov    0x5c(%r14),%rcx
               :   97086:	test   %rcx,%rcx
               :   97089:	je     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   9708f:	cmp    %rcx,%rax
               :   97092:	jb     9709e <mlx5_tx_burst_mtiv_empw+0x5ace>
               :   97094:	cmp    0x64(%r14),%rax
               :   97098:	jb     9a9ea <mlx5_tx_burst_mtiv_empw+0x941a>
               :   9709e:	mov    0x70(%r14),%rcx
               :   970a2:	test   %rcx,%rcx
               :   970a5:	je     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   970ab:	cmp    %rcx,%rax
               :   970ae:	jb     970ba <mlx5_tx_burst_mtiv_empw+0x5aea>
               :   970b0:	cmp    0x78(%r14),%rax
               :   970b4:	jb     9a9f8 <mlx5_tx_burst_mtiv_empw+0x9428>
               :   970ba:	mov    0x84(%r14),%rcx
               :   970c1:	test   %rcx,%rcx
               :   970c4:	je     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   970ca:	cmp    %rcx,%rax
               :   970cd:	jb     970dc <mlx5_tx_burst_mtiv_empw+0x5b0c>
               :   970cf:	cmp    0x8c(%r14),%rax
               :   970d6:	jb     9aa06 <mlx5_tx_burst_mtiv_empw+0x9436>
               :   970dc:	mov    0x98(%r14),%rcx
               :   970e3:	test   %rcx,%rcx
               :   970e6:	je     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   970e8:	cmp    %rcx,%rax
               :   970eb:	jb     970fa <mlx5_tx_burst_mtiv_empw+0x5b2a>
               :   970ed:	cmp    0xa0(%r14),%rax
               :   970f4:	jb     9aa17 <mlx5_tx_burst_mtiv_empw+0x9447>
               :   970fa:	mov    0xac(%r14),%rcx
               :   97101:	test   %rcx,%rcx
               :   97104:	je     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   97106:	cmp    %rcx,%rax
               :   97109:	jb     97118 <mlx5_tx_burst_mtiv_empw+0x5b48>
               :   9710b:	cmp    0xb4(%r14),%rax
               :   97112:	jb     9aa28 <mlx5_tx_burst_mtiv_empw+0x9458>
               :   97118:	mov    0xc0(%r14),%rcx
               :   9711f:	test   %rcx,%rcx
               :   97122:	je     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   97124:	cmp    %rcx,%rax
               :   97127:	jb     97136 <mlx5_tx_burst_mtiv_empw+0x5b66>
               :   97129:	cmp    0xc8(%r14),%rax
               :   97130:	jb     9aa39 <mlx5_tx_burst_mtiv_empw+0x9469>
               :   97136:	mov    0xd4(%r14),%rcx
               :   9713d:	cmp    %rcx,%rax
               :   97140:	jb     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   97142:	test   %rcx,%rcx
               :   97145:	je     97154 <mlx5_tx_burst_mtiv_empw+0x5b84>
               :   97147:	cmp    0xdc(%r14),%rax
               :   9714e:	jb     9a6c1 <mlx5_tx_burst_mtiv_empw+0x90f1>
               :   97154:	mov    %rbx,%rsi
               :   97157:	mov    %rdx,0xa8(%rsp)
               :   9715f:	mov    %r8d,0xb8(%rsp)
               :   97167:	vzeroupper 
               :   9716a:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :   9716f:	mov    0xb8(%rsp),%r8d
               :   97177:	mov    0xa8(%rsp),%rdx
               :   9717f:	jmpq   931a8 <mlx5_tx_burst_mtiv_empw+0x1bd8>
               :   97184:	movslq 0x58(%r14),%rax
               :   97188:	mov    %rcx,0x58(%rsp)
               :   9718d:	cmp    $0xf,%eax
               :   97190:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   97196:	mov    0x10(%rsp),%rsi
               :   9719b:	shl    $0x7,%rax
               :   9719f:	add    0xfed6a(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   971a6:	mov    $0x1,%edx
               :   971ab:	mov    %r14,%rdi
               :   971ae:	callq  *0x70(%rax)
               :   971b1:	mov    0x58(%rsp),%rcx
               :   971b6:	jmpq   957d3 <mlx5_tx_burst_mtiv_empw+0x4203>
               :   971bb:	xor    %eax,%eax
               :   971bd:	mov    %ax,0x44(%rbx)
               :   971c1:	mov    0x10(%rsi),%eax
               :   971c4:	jmpq   949fe <mlx5_tx_burst_mtiv_empw+0x342e>
               :   971c9:	vmovdqu64 (%r10),%ymm7
               :   971cf:	vmovdqu64 %ymm7,(%r8)
               :   971d5:	vmovdqu64 -0x20(%r10,%rax,1),%ymm0
               :   971dd:	vmovdqu64 %ymm0,-0x20(%r8,%rax,1)
               :   971e5:	jmpq   92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   971ea:	mov    %rcx,%r13
               :   971ed:	xor    %r14d,%r14d
               :   971f0:	jmpq   95488 <mlx5_tx_burst_mtiv_empw+0x3eb8>
               :   971f5:	vmovdqu64 (%r10),%xmm2
               :   971fb:	vmovups %xmm2,(%r8)
               :   97200:	vmovdqu64 0x10(%r10),%xmm3
               :   97207:	vmovups %xmm3,0x10(%r8)
               :   9720d:	vmovdqu64 -0x10(%r10,%rax,1),%xmm4
               :   97215:	vmovups %xmm4,-0x10(%r8,%rax,1)
               :   9721c:	jmpq   92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   97221:	mov    %r14,%r15
               :   97224:	mov    %rbx,%r11
               :   97227:	xor    %r14d,%r14d
               :   9722a:	movzwl 0x2a(%r15),%eax
               :   9722f:	mov    %r15,%r13
               :   97232:	or     $0x81000000,%eax
               :   97237:	bswap  %eax
               :   97239:	mov    0xb8(%rsp),%rdi
               :   97241:	mov    $0x10,%r12d
               :   97247:	mov    %eax,0x2a(%rdi)
               :   9724a:	lea    0x2e(%rdi),%rax
               :   9724e:	mov    %rax,0x88(%rsp)
               :   97256:	mov    0xb0(%rsp),%eax
               :   9725d:	lea    -0x10(%rax),%ecx
               :   97260:	jmpq   9542c <mlx5_tx_burst_mtiv_empw+0x3e5c>
               :   97265:	vmovdqu64 (%rax),%ymm7
               :   9726b:	vmovdqu64 %ymm7,(%r12)
               :   97272:	vmovdqu64 -0x20(%rax,%rcx,1),%ymm0
               :   9727a:	vmovdqu64 %ymm0,-0x20(%r12,%rcx,1)
               :   97282:	jmpq   95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   97287:	mov    0x0(%r13),%rax
               :   9728b:	movzwl 0x58(%r13),%edx
               :   97290:	add    $0xffffffffffffff80,%rax
               :   97294:	sub    %rdx,%rax
               :   97297:	movzwl 0x12(%rax),%esi
               :   9729b:	lea    0x12(%rax),%rdx
               :   9729f:	cmp    $0x1,%si
               :   972a3:	jne    996bc <mlx5_tx_burst_mtiv_empw+0x80ec>
               :   972a9:	movw   $0x0,0x12(%rax)
               :   972af:	mov    $0x1,%edx
               :   972b4:	mov    %rcx,0x50(%rsp)
               :   972b9:	movq   $0x0,0x40(%rax)
               :   972c1:	mov    %dx,0x14(%rax)
               :   972c5:	movw   $0x1,0x12(%rax)
               :   972cb:	mov    %rax,0x130(%rsp)
               :   972d3:	mov    0x38(%rax),%rdi
               :   972d7:	mov    %rdi,0x58(%rsp)
               :   972dc:	vzeroupper 
               :   972df:	data16 lea 0xfeb61(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   972e7:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   972ef:	mov    0x58(%rsp),%rdi
               :   972f4:	mov    0x44(%rdi),%ecx
               :   972f7:	test   %ecx,%ecx
               :   972f9:	mov    (%rax),%eax
               :   972fb:	mov    0x50(%rsp),%rcx
               :   97300:	je     9a078 <mlx5_tx_burst_mtiv_empw+0x8aa8>
               :   97306:	cmp    $0x7f,%eax
               :   97309:	ja     9a078 <mlx5_tx_burst_mtiv_empw+0x8aa8>
               :   9730f:	mov    %eax,%r8d
               :   97312:	imul   $0x2040,%r8,%r8
               :   97319:	add    0x60(%rdi),%r8
               :   9731d:	je     9a078 <mlx5_tx_burst_mtiv_empw+0x8aa8>
               :   97323:	mov    0x4(%r8),%esi
               :   97327:	test   %esi,%esi
               :   97329:	je     9a078 <mlx5_tx_burst_mtiv_empw+0x8aa8>
               :   9732f:	mov    0x8(%r8),%edx
               :   97333:	lea    0x1(%rdx),%eax
               :   97336:	cmp    %eax,%esi
               :   97338:	jb     99672 <mlx5_tx_burst_mtiv_empw+0x80a2>
               :   9733e:	mov    %eax,0x8(%r8)
               :   97342:	lea    0x40(%r8,%rdx,8),%rsi
               :   97347:	mov    0x130(%rsp),%rax
               :   9734f:	mov    %rax,(%rsi)
               :   97352:	jmpq   956ce <mlx5_tx_burst_mtiv_empw+0x40fe>
               :   97357:	vzeroupper 
               :   9735a:	jmpq   95732 <mlx5_tx_burst_mtiv_empw+0x4162>
               :   9735f:	vmovdqu64 (%rax),%xmm1
               :   97365:	vmovups %xmm1,(%r12)
               :   9736b:	vmovdqu64 0x10(%rax),%xmm2
               :   97372:	vmovups %xmm2,0x10(%r12)
               :   97379:	vmovdqu64 -0x10(%rax,%rcx,1),%xmm3
               :   97381:	vmovups %xmm3,-0x10(%r12,%rcx,1)
               :   97388:	jmpq   95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   9738d:	movl   $0x0,0x1c(%rbx)
               :   97394:	mov    %rbx,%rcx
               :   97397:	jmpq   9498c <mlx5_tx_burst_mtiv_empw+0x33bc>
               :   9739c:	vmovdqu64 (%rax),%ymm0
               :   973a2:	jmpq   96982 <mlx5_tx_burst_mtiv_empw+0x53b2>
               :   973a7:	movslq 0x58(%r15),%rax
               :   973ab:	mov    %r9,0x58(%rsp)
               :   973b0:	mov    %r8d,0xa8(%rsp)
               :   973b8:	lea    0x40(%r13),%rsi
               :   973bc:	cmp    $0xf,%eax
               :   973bf:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   973c5:	shl    $0x7,%rax
               :   973c9:	add    0xfeb40(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   973d0:	mov    %r15,%rdi
               :   973d3:	mov    %rsi,0xb0(%rsp)
               :   973db:	callq  *0x70(%rax)
               :   973de:	movl   $0x1,0x8(%r13)
               :   973e6:	mov    0x58(%rsp),%r9
               :   973eb:	mov    0xa8(%rsp),%r8d
               :   973f3:	mov    0xb0(%rsp),%rsi
               :   973fb:	jmpq   94c3c <mlx5_tx_burst_mtiv_empw+0x366c>
               :   97400:	mov    %rdi,%r10
               :   97403:	mov    %r14,%r9
               :   97406:	jmpq   968d2 <mlx5_tx_burst_mtiv_empw+0x5302>
               :   9740b:	mov    0x88(%rsp),%rdi
               :   97413:	mov    %r8,0xb0(%rsp)
               :   9741b:	mov    %ecx,0xc0(%rsp)
               :   97422:	vzeroupper 
               :   97425:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :   9742a:	mov    (%rbx),%rdi
               :   9742d:	mov    0xb0(%rsp),%r8
               :   97435:	mov    0xc0(%rsp),%ecx
               :   9743c:	jmpq   96580 <mlx5_tx_burst_mtiv_empw+0x4fb0>
               :   97441:	mov    %r13,%r15
               :   97444:	cmp    %dx,%r14w
               :   97448:	jb     96337 <mlx5_tx_burst_mtiv_empw+0x4d67>
               :   9744e:	mov    0x40(%r13),%r15
               :   97452:	movzwl 0x12(%r13),%eax
               :   97457:	cmp    $0x1,%ax
               :   9745b:	jne    9a7ed <mlx5_tx_burst_mtiv_empw+0x921d>
               :   97461:	movabs $0x6000000000000000,%rax
               :   9746b:	test   %rax,0x18(%r13)
               :   9746f:	jne    99745 <mlx5_tx_burst_mtiv_empw+0x8175>
               :   97475:	mov    0x38(%r13),%r14
               :   97479:	vzeroupper 
               :   9747c:	cmpq   $0x0,0x40(%r13)
               :   97481:	je     9748b <mlx5_tx_burst_mtiv_empw+0x5ebb>
               :   97483:	movq   $0x0,0x40(%r13)
               :   9748b:	cmpw   $0x1,0x14(%r13)
               :   97491:	je     9749a <mlx5_tx_burst_mtiv_empw+0x5eca>
               :   97493:	movw   $0x1,0x14(%r13)
               :   9749a:	mov    %r13,0x190(%rsp)
               :   974a2:	data16 lea 0xfe99e(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   974aa:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   974b2:	mov    0x44(%r14),%ecx
               :   974b6:	mov    (%rax),%eax
               :   974b8:	test   %ecx,%ecx
               :   974ba:	je     99b38 <mlx5_tx_burst_mtiv_empw+0x8568>
               :   974c0:	cmp    $0x7f,%eax
               :   974c3:	ja     99b38 <mlx5_tx_burst_mtiv_empw+0x8568>
               :   974c9:	mov    %eax,%r13d
               :   974cc:	imul   $0x2040,%r13,%r13
               :   974d3:	add    0x60(%r14),%r13
               :   974d7:	je     99b38 <mlx5_tx_burst_mtiv_empw+0x8568>
               :   974dd:	mov    0x4(%r13),%ecx
               :   974e1:	test   %ecx,%ecx
               :   974e3:	je     99b38 <mlx5_tx_burst_mtiv_empw+0x8568>
               :   974e9:	mov    0x8(%r13),%edx
               :   974ed:	lea    0x1(%rdx),%eax
               :   974f0:	cmp    %eax,%ecx
               :   974f2:	jb     99b12 <mlx5_tx_burst_mtiv_empw+0x8542>
               :   974f8:	mov    %eax,0x8(%r13)
               :   974fc:	lea    0x40(%r13,%rdx,8),%rcx
               :   97501:	mov    0x190(%rsp),%rax
               :   97509:	mov    %rax,(%rcx)
               :   9750c:	decw   0xc0(%rsp)
               :   97514:	xor    %r14d,%r14d
               :   97517:	jmpq   96337 <mlx5_tx_burst_mtiv_empw+0x4d67>
               :   9751c:	movslq 0x58(%rdi),%rax
               :   97520:	mov    %r8,0x8(%rsp)
               :   97525:	mov    %rcx,0x58(%rsp)
               :   9752a:	lea    0x40(%rcx),%r9
               :   9752e:	cmp    $0xf,%eax
               :   97531:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   97537:	shl    $0x7,%rax
               :   9753b:	mov    %r9,%rsi
               :   9753e:	add    0xfe9cb(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   97545:	mov    %r9,0x88(%rsp)
               :   9754d:	callq  *0x70(%rax)
               :   97550:	mov    0x58(%rsp),%rcx
               :   97555:	mov    0x8(%rsp),%r8
               :   9755a:	movl   $0x1,0x8(%rcx)
               :   97561:	mov    0x88(%rsp),%r9
               :   97569:	jmpq   940a6 <mlx5_tx_burst_mtiv_empw+0x2ad6>
               :   9756e:	test   %rcx,%rcx
               :   97571:	je     92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   97577:	mov    0x60(%rsp),%r14
               :   9757c:	vmovdqu64 -0x20(%r14,%rcx,1),%ymm4
               :   97584:	vmovdqa64 %ymm4,0x60(%rsp)
               :   9758c:	vmovdqu64 %ymm4,-0x20(%rdx,%rcx,1)
               :   97594:	jmpq   92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   97599:	vmovdqu64 %ymm0,(%r8)
               :   9759f:	vmovdqu64 -0x20(%r10,%rax,1),%ymm4
               :   975a7:	vmovdqu64 %ymm4,-0x20(%r8,%rax,1)
               :   975af:	jmpq   92370 <mlx5_tx_burst_mtiv_empw+0xda0>
               :   975b4:	movslq 0x58(%r8),%rax
               :   975b8:	lea    0x40(%r13),%rsi
               :   975bc:	cmp    $0xf,%eax
               :   975bf:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   975c5:	shl    $0x7,%rax
               :   975c9:	add    0xfe940(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   975d0:	mov    %r8,%rdi
               :   975d3:	mov    %rsi,0x88(%rsp)
               :   975db:	callq  *0x70(%rax)
               :   975de:	movl   $0x1,0x8(%r13)
               :   975e6:	mov    0x88(%rsp),%rsi
               :   975ee:	jmpq   96f77 <mlx5_tx_burst_mtiv_empw+0x59a7>
               :   975f3:	vmovdqu64 (%rax),%xmm1
               :   975f9:	vmovups %xmm1,(%r12)
               :   975ff:	vmovdqu64 -0x10(%rax,%rsi,1),%xmm5
               :   97607:	vmovups %xmm5,-0x10(%r12,%rsi,1)
               :   9760e:	jmpq   96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   97613:	lea    0x2d(%rsi),%edi
               :   97616:	shr    $0x4,%edi
               :   97619:	lea    0x3(%rdi),%eax
               :   9761c:	shr    $0x2,%eax
               :   9761f:	mov    %eax,0xa8(%rsp)
               :   97626:	mov    %eax,%r11d
               :   97629:	movzwl 0xce(%rsp),%eax
               :   97631:	cmp    %eax,%r11d
               :   97634:	ja     9aa4a <mlx5_tx_burst_mtiv_empw+0x947a>
               :   9763a:	movzwl 0xa(%r14),%eax
               :   9763f:	movzwl 0x10(%r14),%r12d
               :   97644:	and    %eax,%r12d
               :   97647:	movzwl %r12w,%r12d
               :   9764b:	shl    $0x6,%r12
               :   9764f:	shl    $0x8,%eax
               :   97652:	add    0xf8(%r14),%r12
               :   97659:	or     $0xa,%eax
               :   9765c:	bswap  %eax
               :   9765e:	mov    %eax,(%r12)
               :   97662:	mov    0x28(%r14),%eax
               :   97666:	or     %edi,%eax
               :   97668:	bswap  %eax
               :   9766a:	mov    0xfe967(%rip),%rdi        # 195fd8 <rte_flow_dynf_metadata_mask@EXPERIMENTAL>
               :   97671:	mov    %eax,0x4(%r12)
               :   97676:	movq   $0x4000000,0x8(%r12)
               :   9767f:	movq   $0x0,0x10(%r12)
               :   97688:	xor    %eax,%eax
               :   9768a:	test   %rcx,(%rdi)
               :   9768d:	je     9769e <mlx5_tx_burst_mtiv_empw+0x60ce>
               :   9768f:	mov    0xfe8ba(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :   97696:	movslq (%rax),%rax
               :   97699:	mov    (%rbx,%rax,1),%eax
               :   9769c:	bswap  %eax
               :   9769e:	mov    %eax,0x18(%r12)
               :   976a3:	mov    %esi,%eax
               :   976a5:	xchg   %al,%ah
               :   976a7:	mov    %ax,0x1c(%r12)
               :   976ad:	movzwl (%rdx),%eax
               :   976b0:	mov    %ax,0x1e(%r12)
               :   976b6:	test   %r8d,%r8d
               :   976b9:	jne    99020 <mlx5_tx_burst_mtiv_empw+0x7a50>
               :   976bf:	vmovdqu64 0x2(%rdx),%xmm6
               :   976c9:	lea    0x12(%rdx),%rax
               :   976cd:	vmovups %xmm6,0x20(%r12)
               :   976d4:	mov    0x100(%r14),%rcx
               :   976db:	lea    0x30(%r12),%rdx
               :   976e0:	sub    $0x12,%esi
               :   976e3:	sub    %rdx,%rcx
               :   976e6:	cmp    %ecx,%esi
               :   976e8:	mov    %ecx,%r11d
               :   976eb:	mov    %esi,0xb8(%rsp)
               :   976f2:	cmovb  %esi,%r11d
               :   976f6:	mov    %rax,%rsi
               :   976f9:	or     %rdx,%rsi
               :   976fc:	and    $0x1f,%esi
               :   976ff:	mov    %r11d,%ecx
               :   97702:	jne    98519 <mlx5_tx_burst_mtiv_empw+0x6f49>
               :   97708:	cmp    $0xf,%rcx
               :   9770c:	jbe    98e79 <mlx5_tx_burst_mtiv_empw+0x78a9>
               :   97712:	cmp    $0x20,%rcx
               :   97716:	jbe    99279 <mlx5_tx_burst_mtiv_empw+0x7ca9>
               :   9771c:	cmp    $0x40,%rcx
               :   97720:	jbe    99b52 <mlx5_tx_burst_mtiv_empw+0x8582>
               :   97726:	lea    -0x40(%rcx),%rdi
               :   9772a:	shr    $0x6,%rdi
               :   9772e:	lea    0x1(%rdi),%r9
               :   97732:	shl    $0x6,%r9
               :   97736:	lea    (%rax,%r9,1),%rsi
               :   9773a:	mov    %rsi,0x98(%rsp)
               :   97742:	mov    %rdx,%r10
               :   97745:	mov    %rax,%rsi
               :   97748:	vmovdqu64 (%rsi),%ymm3
               :   9774e:	add    $0x40,%rsi
               :   97752:	vmovdqu64 %ymm3,(%r10)
               :   97758:	vmovdqu64 -0x20(%rsi),%ymm4
               :   9775f:	add    $0x40,%r10
               :   97763:	vmovdqu64 %ymm4,-0x20(%r10)
               :   9776a:	cmp    0x98(%rsp),%rsi
               :   97772:	jne    97748 <mlx5_tx_burst_mtiv_empw+0x6178>
               :   97774:	imul   $0xffffffffffffffc0,%rdi,%rdi
               :   97778:	lea    -0x80(%rcx,%rdi,1),%rdi
               :   9777d:	add    %rdi,%rsi
               :   97780:	vmovdqu64 (%rsi),%ymm5
               :   97786:	add    %r9,%rdi
               :   97789:	add    %rdi,%rdx
               :   9778c:	vmovdqu64 %ymm5,(%rdx)
               :   97792:	vmovdqu64 0x20(%rsi),%ymm6
               :   97799:	vmovdqu64 %ymm6,0x20(%rdx)
               :   977a0:	sub    %r11d,0xb8(%rsp)
               :   977a8:	jne    99c39 <mlx5_tx_burst_mtiv_empw+0x8669>
               :   977ae:	mov    0xa8(%rsp),%edi
               :   977b5:	add    %di,0xa(%r14)
               :   977ba:	sub    %di,0xce(%rsp)
               :   977c2:	movzwl 0x12(%rbx),%eax
               :   977c6:	cmp    $0x1,%ax
               :   977ca:	jne    99b73 <mlx5_tx_burst_mtiv_empw+0x85a3>
               :   977d0:	mov    0x18(%rbx),%rax
               :   977d4:	movabs $0x6000000000000000,%rdi
               :   977de:	mov    0x38(%rbx),%r9
               :   977e2:	test   %rdi,%rax
               :   977e5:	je     98509 <mlx5_tx_burst_mtiv_empw+0x6f39>
               :   977eb:	movabs $0x2000000000000000,%rsi
               :   977f5:	test   %rsi,%rax
               :   977f8:	je     9991d <mlx5_tx_burst_mtiv_empw+0x834d>
               :   977fe:	mov    0x44(%r9),%eax
               :   97802:	test   %eax,%eax
               :   97804:	jne    9983d <mlx5_tx_burst_mtiv_empw+0x826d>
               :   9780a:	mov    $0xc0,%eax
               :   9780f:	testb  $0x1,0xc4(%r9)
               :   97817:	je     99791 <mlx5_tx_burst_mtiv_empw+0x81c1>
               :   9781d:	testb  $0x1,0x4(%r9,%rax,1)
               :   97823:	je     98509 <mlx5_tx_burst_mtiv_empw+0x6f39>
               :   97829:	mov    0x50(%rbx),%rsi
               :   9782d:	lea    0x18(%rbx),%rdi
               :   97831:	mov    %r8d,0xb8(%rsp)
               :   97839:	vzeroupper 
               :   9783c:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   97841:	test   %eax,%eax
               :   97843:	mov    0xb8(%rsp),%r8d
               :   9784b:	jne    931e0 <mlx5_tx_burst_mtiv_empw+0x1c10>
               :   97851:	mov    0x38(%rbx),%r9
               :   97855:	cmpq   $0x0,0x40(%rbx)
               :   9785a:	je     97864 <mlx5_tx_burst_mtiv_empw+0x6294>
               :   9785c:	movq   $0x0,0x40(%rbx)
               :   97864:	cmpw   $0x1,0x14(%rbx)
               :   97869:	je     97876 <mlx5_tx_burst_mtiv_empw+0x62a6>
               :   9786b:	mov    $0x1,%r10d
               :   97871:	mov    %r10w,0x14(%rbx)
               :   97876:	mov    %r8d,0xa8(%rsp)
               :   9787e:	mov    %r9,0xb8(%rsp)
               :   97886:	mov    %rbx,0xd8(%rsp)
               :   9788e:	data16 lea 0xfe5b2(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   97896:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   9789e:	mov    0xb8(%rsp),%r9
               :   978a6:	mov    0xa8(%rsp),%r8d
               :   978ae:	mov    0x44(%r9),%esi
               :   978b2:	test   %esi,%esi
               :   978b4:	mov    (%rax),%eax
               :   978b6:	je     99497 <mlx5_tx_burst_mtiv_empw+0x7ec7>
               :   978bc:	cmp    $0x7f,%eax
               :   978bf:	ja     99497 <mlx5_tx_burst_mtiv_empw+0x7ec7>
               :   978c5:	mov    %eax,%ecx
               :   978c7:	imul   $0x2040,%rcx,%rcx
               :   978ce:	add    0x60(%r9),%rcx
               :   978d2:	je     99497 <mlx5_tx_burst_mtiv_empw+0x7ec7>
               :   978d8:	mov    0x4(%rcx),%esi
               :   978db:	test   %esi,%esi
               :   978dd:	je     99497 <mlx5_tx_burst_mtiv_empw+0x7ec7>
               :   978e3:	mov    0x8(%rcx),%edx
               :   978e6:	lea    0x1(%rdx),%eax
               :   978e9:	cmp    %eax,%esi
               :   978eb:	jb     99439 <mlx5_tx_burst_mtiv_empw+0x7e69>
               :   978f1:	mov    %eax,0x8(%rcx)
               :   978f4:	lea    0x40(%rcx,%rdx,8),%rsi
               :   978f9:	mov    0xd8(%rsp),%rax
               :   97901:	mov    %rax,(%rsi)
               :   97904:	jmpq   931e0 <mlx5_tx_burst_mtiv_empw+0x1c10>
               :   97909:	vmovdqu64 %ymm0,(%r12)
               :   97910:	vmovdqu64 -0x20(%rax,%rcx,1),%ymm4
               :   97918:	vmovdqu64 %ymm4,-0x20(%r12,%rcx,1)
               :   97920:	jmpq   95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   97925:	lock decw (%r14)
               :   9792a:	jne    957d3 <mlx5_tx_burst_mtiv_empw+0x4203>
               :   97930:	mov    0x18(%r13),%rax
               :   97934:	movabs $0x6000000000000000,%rdi
               :   9793e:	test   %rdi,%rax
               :   97941:	je     98f1f <mlx5_tx_burst_mtiv_empw+0x794f>
               :   97947:	mov    0x38(%r13),%rsi
               :   9794b:	movabs $0x2000000000000000,%rdi
               :   97955:	mov    %rsi,0x58(%rsp)
               :   9795a:	test   %rdi,%rax
               :   9795d:	je     99c50 <mlx5_tx_burst_mtiv_empw+0x8680>
               :   97963:	cmpl   $0x1,0x44(%rsi)
               :   97967:	sbb    %rax,%rax
               :   9796a:	and    $0xffffffffffefe000,%rax
               :   97970:	testb  $0x1,0x1020c4(%rsi,%rax,1)
               :   97978:	jne    993f6 <mlx5_tx_burst_mtiv_empw+0x7e26>
               :   9797e:	mov    0x50(%r13),%rdx
               :   97982:	movzwl 0x10(%rdx),%esi
               :   97986:	lea    0x10(%rdx),%rax
               :   9798a:	dec    %si
               :   9798d:	jne    9a4d3 <mlx5_tx_burst_mtiv_empw+0x8f03>
               :   97993:	movw   $0x0,0x10(%rdx)
               :   97999:	mov    0x50(%r13),%rax
               :   9799d:	mov    0x0(%r13),%rdi
               :   979a1:	mov    0x8(%rax),%rsi
               :   979a5:	mov    %rcx,0x50(%rsp)
               :   979aa:	vzeroupper 
               :   979ad:	callq  *(%rax)
               :   979af:	mov    0x50(%rsp),%rcx
               :   979b4:	mov    0x58(%rsp),%rdi
               :   979b9:	cmpl   $0x1,0x44(%rdi)
               :   979bd:	sbb    %rax,%rax
               :   979c0:	and    $0xffffffffffefe000,%rax
               :   979c6:	lea    0x1020c0(%rdi,%rax,1),%rax
               :   979ce:	movzwl 0x2(%rax),%edx
               :   979d2:	movzwl (%rax),%eax
               :   979d5:	mov    %dx,0x58(%r13)
               :   979da:	sub    $0xffffffffffffff80,%rdx
               :   979de:	lea    0x0(%r13,%rdx,1),%rsi
               :   979e3:	add    -0x8(%r13),%rdx
               :   979e7:	mov    %rdx,0x8(%r13)
               :   979eb:	cmp    $0x80,%ax
               :   979ef:	mov    $0x80,%edx
               :   979f4:	mov    %ax,0x36(%r13)
               :   979f9:	cmova  %edx,%eax
               :   979fc:	mov    %rsi,0x0(%r13)
               :   97a00:	mov    %ax,0x10(%r13)
               :   97a05:	movw   $0x0,0x28(%r13)
               :   97a0c:	movq   $0x0,0x18(%r13)
               :   97a14:	cmpq   $0x0,0x40(%r13)
               :   97a19:	je     97a23 <mlx5_tx_burst_mtiv_empw+0x6453>
               :   97a1b:	movq   $0x0,0x40(%r13)
               :   97a23:	cmpw   $0x1,0x14(%r13)
               :   97a29:	je     97a35 <mlx5_tx_burst_mtiv_empw+0x6465>
               :   97a2b:	mov    $0x1,%eax
               :   97a30:	mov    %ax,0x14(%r13)
               :   97a35:	movw   $0x1,(%r14)
               :   97a3b:	mov    0x38(%r13),%r14
               :   97a3f:	mov    0x44(%r14),%edx
               :   97a43:	jmpq   95753 <mlx5_tx_burst_mtiv_empw+0x4183>
               :   97a48:	movslq 0x58(%r14),%rax
               :   97a4c:	mov    %r8,0x60(%rsp)
               :   97a51:	mov    %ecx,0xa8(%rsp)
               :   97a58:	lea    0x40(%rbx),%rsi
               :   97a5c:	cmp    $0xf,%eax
               :   97a5f:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   97a65:	shl    $0x7,%rax
               :   97a69:	add    0xfe4a0(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   97a70:	mov    %r14,%rdi
               :   97a73:	mov    %rsi,0xb0(%rsp)
               :   97a7b:	callq  *0x70(%rax)
               :   97a7e:	movl   $0x1,0x8(%rbx)
               :   97a85:	mov    0x60(%rsp),%r8
               :   97a8a:	mov    0xa8(%rsp),%ecx
               :   97a91:	mov    0xb0(%rsp),%rsi
               :   97a99:	jmpq   96777 <mlx5_tx_burst_mtiv_empw+0x51a7>
               :   97a9e:	mov    0x50(%r13),%rdx
               :   97aa2:	movzwl 0x10(%rdx),%esi
               :   97aa6:	lea    0x10(%rdx),%rax
               :   97aaa:	cmp    $0x1,%si
               :   97aae:	jne    99d69 <mlx5_tx_burst_mtiv_empw+0x8799>
               :   97ab4:	movw   $0x0,0x10(%rdx)
               :   97aba:	mov    0x50(%r13),%rax
               :   97abe:	mov    0x0(%r13),%rdi
               :   97ac2:	mov    0x8(%rax),%rsi
               :   97ac6:	mov    %r9,0x58(%rsp)
               :   97acb:	mov    %rcx,0x88(%rsp)
               :   97ad3:	vzeroupper 
               :   97ad6:	callq  *(%rax)
               :   97ad8:	mov    0x88(%rsp),%rcx
               :   97ae0:	mov    0x58(%rsp),%r9
               :   97ae5:	cmpl   $0x1,0x44(%r9)
               :   97aea:	sbb    %rax,%rax
               :   97aed:	and    $0xffffffffffefe000,%rax
               :   97af3:	lea    0x1020c0(%r9,%rax,1),%rax
               :   97afb:	movzwl 0x2(%rax),%edx
               :   97aff:	movzwl (%rax),%eax
               :   97b02:	mov    %dx,0x58(%r13)
               :   97b07:	sub    $0xffffffffffffff80,%rdx
               :   97b0b:	lea    0x0(%r13,%rdx,1),%rsi
               :   97b10:	add    -0x8(%r13),%rdx
               :   97b14:	mov    %rdx,0x8(%r13)
               :   97b18:	cmp    $0x80,%ax
               :   97b1c:	mov    $0x80,%edx
               :   97b21:	mov    %ax,0x36(%r13)
               :   97b26:	cmova  %edx,%eax
               :   97b29:	xor    %r10d,%r10d
               :   97b2c:	mov    %rsi,0x0(%r13)
               :   97b30:	mov    %ax,0x10(%r13)
               :   97b35:	mov    %r10w,0x28(%r13)
               :   97b3a:	movq   $0x0,0x18(%r13)
               :   97b42:	jmpq   951b2 <mlx5_tx_burst_mtiv_empw+0x3be2>
               :   97b47:	testb  $0x1,0x1020c4(%r9)
               :   97b4f:	je     97a9e <mlx5_tx_burst_mtiv_empw+0x64ce>
               :   97b55:	mov    $0x1020c0,%eax
               :   97b5a:	jmpq   95183 <mlx5_tx_burst_mtiv_empw+0x3bb3>
               :   97b5f:	nop
               :   97b60:	mov    0x0(%r13),%rax
               :   97b64:	movzwl 0x58(%r13),%edx
               :   97b69:	add    $0xffffffffffffff80,%rax
               :   97b6d:	sub    %rdx,%rax
               :   97b70:	movzwl 0x12(%rax),%esi
               :   97b74:	lea    0x12(%rax),%rdx
               :   97b78:	cmp    $0x1,%si
               :   97b7c:	jne    9a3b6 <mlx5_tx_burst_mtiv_empw+0x8de6>
               :   97b82:	movw   $0x0,0x12(%rax)
               :   97b88:	mov    $0x1,%r11d
               :   97b8e:	mov    %r9,0x8(%rsp)
               :   97b93:	mov    %rcx,0x58(%rsp)
               :   97b98:	movq   $0x0,0x40(%rax)
               :   97ba0:	mov    %r11w,0x14(%rax)
               :   97ba5:	movw   $0x1,0x12(%rax)
               :   97bab:	mov    %rax,0x170(%rsp)
               :   97bb3:	mov    0x38(%rax),%rdi
               :   97bb7:	mov    %rdi,0x88(%rsp)
               :   97bbf:	vzeroupper 
               :   97bc2:	data16 lea 0xfe27e(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   97bca:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   97bd2:	mov    0x88(%rsp),%rdi
               :   97bda:	mov    0x58(%rsp),%rcx
               :   97bdf:	mov    0x44(%rdi),%edx
               :   97be2:	mov    0x8(%rsp),%r9
               :   97be7:	test   %edx,%edx
               :   97be9:	mov    (%rax),%eax
               :   97beb:	je     9a36f <mlx5_tx_burst_mtiv_empw+0x8d9f>
               :   97bf1:	cmp    $0x7f,%eax
               :   97bf4:	ja     9a36f <mlx5_tx_burst_mtiv_empw+0x8d9f>
               :   97bfa:	mov    %eax,%r8d
               :   97bfd:	imul   $0x2040,%r8,%r8
               :   97c04:	add    0x60(%rdi),%r8
               :   97c08:	je     9a36f <mlx5_tx_burst_mtiv_empw+0x8d9f>
               :   97c0e:	mov    0x4(%r8),%esi
               :   97c12:	test   %esi,%esi
               :   97c14:	je     9a36f <mlx5_tx_burst_mtiv_empw+0x8d9f>
               :   97c1a:	mov    0x8(%r8),%edx
               :   97c1e:	lea    0x1(%rdx),%eax
               :   97c21:	cmp    %eax,%esi
               :   97c23:	jb     9a3cc <mlx5_tx_burst_mtiv_empw+0x8dfc>
               :   97c29:	mov    %eax,0x8(%r8)
               :   97c2d:	lea    0x40(%r8,%rdx,8),%rsi
               :   97c32:	mov    0x170(%rsp),%rax
               :   97c3a:	mov    %rax,(%rsi)
               :   97c3d:	jmpq   97ae5 <mlx5_tx_burst_mtiv_empw+0x6515>
               :   97c42:	vmovdqu64 (%rax),%xmm2
               :   97c48:	vmovups %xmm2,(%r12)
               :   97c4e:	vmovdqu64 -0x10(%rax,%rsi,1),%xmm3
               :   97c56:	vmovups %xmm3,-0x10(%r12,%rsi,1)
               :   97c5d:	jmpq   96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   97c62:	mov    %rdx,0x98(%rsp)
               :   97c6a:	mov    %r8d,0xa8(%rsp)
               :   97c72:	mov    %rdi,0xb8(%rsp)
               :   97c7a:	vzeroupper 
               :   97c7d:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :   97c82:	mov    (%rbx),%rax
               :   97c85:	mov    0x98(%rsp),%rdx
               :   97c8d:	mov    0xa8(%rsp),%r8d
               :   97c95:	mov    0xb8(%rsp),%rdi
               :   97c9d:	jmpq   93178 <mlx5_tx_burst_mtiv_empw+0x1ba8>
               :   97ca2:	test   %rdi,%rdi
               :   97ca5:	je     95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   97cab:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm3
               :   97cb3:	vmovdqu64 %ymm3,-0x20(%rdx,%rdi,1)
               :   97cbb:	jmpq   95558 <mlx5_tx_burst_mtiv_empw+0x3f88>
               :   97cc0:	vzeroupper 
               :   97cc3:	jmpq   95dec <mlx5_tx_burst_mtiv_empw+0x481c>
               :   97cc8:	mov    %r12,0xb8(%rsp)
               :   97cd0:	mov    %rbx,%r9
               :   97cd3:	mov    %eax,%r12d
               :   97cd6:	movzwl %r15w,%ebx
               :   97cda:	jmpq   9279e <mlx5_tx_burst_mtiv_empw+0x11ce>
               :   97cdf:	movl   $0x0,0x1c(%r12)
               :   97ce8:	jmpq   95fd9 <mlx5_tx_burst_mtiv_empw+0x4a09>
               :   97ced:	mov    0xfe25c(%rip),%rax        # 195f50 <rte_flow_dynf_metadata_offs@EXPERIMENTAL>
               :   97cf4:	movslq (%rax),%rax
               :   97cf7:	mov    (%rbx,%rax,1),%eax
               :   97cfa:	bswap  %eax
               :   97cfc:	jmpq   95fbb <mlx5_tx_burst_mtiv_empw+0x49eb>
               :   97d01:	movslq 0x58(%r15),%rax
               :   97d05:	mov    %r9,0xa8(%rsp)
               :   97d0d:	mov    %r8d,0xb0(%rsp)
               :   97d15:	cmp    $0xf,%eax
               :   97d18:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   97d1e:	shl    $0x7,%rax
               :   97d22:	lea    0x108(%rsp),%rsi
               :   97d2a:	add    0xfe1df(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   97d31:	mov    $0x1,%edx
               :   97d36:	mov    %r15,%rdi
               :   97d39:	callq  *0x70(%rax)
               :   97d3c:	mov    0xa8(%rsp),%r9
               :   97d44:	mov    0xb0(%rsp),%r8d
               :   97d4c:	jmpq   94c47 <mlx5_tx_burst_mtiv_empw+0x3677>
               :   97d51:	mov    0x0(%r13),%rax
               :   97d55:	movzwl 0x58(%r13),%edx
               :   97d5a:	add    $0xffffffffffffff80,%rax
               :   97d5e:	sub    %rdx,%rax
               :   97d61:	movzwl 0x12(%rax),%esi
               :   97d65:	lea    0x12(%rax),%rdx
               :   97d69:	cmp    $0x1,%si
               :   97d6d:	jne    9a1af <mlx5_tx_burst_mtiv_empw+0x8bdf>
               :   97d73:	movw   $0x0,0x12(%rax)
               :   97d79:	mov    $0x1,%r11d
               :   97d7f:	mov    %r9,0x58(%rsp)
               :   97d84:	mov    %r8d,0xa8(%rsp)
               :   97d8c:	movq   $0x0,0x40(%rax)
               :   97d94:	mov    %r11w,0x14(%rax)
               :   97d99:	movw   $0x1,0x12(%rax)
               :   97d9f:	mov    %rax,0x148(%rsp)
               :   97da7:	mov    0x38(%rax),%rdi
               :   97dab:	mov    %rdi,0xb0(%rsp)
               :   97db3:	vzeroupper 
               :   97db6:	data16 lea 0xfe08a(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   97dbe:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   97dc6:	mov    0xb0(%rsp),%rdi
               :   97dce:	mov    0xa8(%rsp),%r8d
               :   97dd6:	mov    0x44(%rdi),%edx
               :   97dd9:	mov    0x58(%rsp),%r9
               :   97dde:	test   %edx,%edx
               :   97de0:	mov    (%rax),%eax
               :   97de2:	je     9a162 <mlx5_tx_burst_mtiv_empw+0x8b92>
               :   97de8:	cmp    $0x7f,%eax
               :   97deb:	ja     9a162 <mlx5_tx_burst_mtiv_empw+0x8b92>
               :   97df1:	mov    %eax,%r11d
               :   97df4:	imul   $0x2040,%r11,%r11
               :   97dfb:	add    0x60(%rdi),%r11
               :   97dff:	je     9a162 <mlx5_tx_burst_mtiv_empw+0x8b92>
               :   97e05:	mov    0x4(%r11),%esi
               :   97e09:	test   %esi,%esi
               :   97e0b:	je     9a162 <mlx5_tx_burst_mtiv_empw+0x8b92>
               :   97e11:	mov    0x8(%r11),%edx
               :   97e15:	lea    0x1(%rdx),%eax
               :   97e18:	cmp    %eax,%esi
               :   97e1a:	jb     9a102 <mlx5_tx_burst_mtiv_empw+0x8b32>
               :   97e20:	mov    %eax,0x8(%r11)
               :   97e24:	lea    0x40(%r11,%rdx,8),%rsi
               :   97e29:	mov    0x148(%rsp),%rax
               :   97e31:	mov    %rax,(%rsi)
               :   97e34:	jmpq   94b2b <mlx5_tx_burst_mtiv_empw+0x355b>
               :   97e39:	movslq 0x58(%r8),%rax
               :   97e3d:	cmp    $0xf,%eax
               :   97e40:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   97e46:	shl    $0x7,%rax
               :   97e4a:	mov    0x50(%rsp),%rsi
               :   97e4f:	add    0xfe0ba(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   97e56:	mov    $0x1,%edx
               :   97e5b:	mov    %r8,%rdi
               :   97e5e:	callq  *0x70(%rax)
               :   97e61:	jmpq   96f82 <mlx5_tx_burst_mtiv_empw+0x59b2>
               :   97e66:	movslq 0x58(%rdi),%rax
               :   97e6a:	mov    %r8,0x88(%rsp)
               :   97e72:	cmp    $0xf,%eax
               :   97e75:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   97e7b:	shl    $0x7,%rax
               :   97e7f:	lea    0x168(%rsp),%rsi
               :   97e87:	add    0xfe082(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   97e8e:	mov    $0x1,%edx
               :   97e93:	callq  *0x70(%rax)
               :   97e96:	mov    0x88(%rsp),%r8
               :   97e9e:	jmpq   940b1 <mlx5_tx_burst_mtiv_empw+0x2ae1>
               :   97ea3:	mov    0x48(%r11),%rcx
               :   97ea7:	test   %rcx,%rcx
               :   97eaa:	je     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   97eb0:	cmp    %rcx,%rax
               :   97eb3:	jb     97ebf <mlx5_tx_burst_mtiv_empw+0x68ef>
               :   97eb5:	cmp    0x50(%r11),%rax
               :   97eb9:	jb     9a7c6 <mlx5_tx_burst_mtiv_empw+0x91f6>
               :   97ebf:	mov    0x5c(%r11),%rdx
               :   97ec3:	test   %rdx,%rdx
               :   97ec6:	je     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   97ecc:	cmp    %rdx,%rax
               :   97ecf:	jb     97edb <mlx5_tx_burst_mtiv_empw+0x690b>
               :   97ed1:	cmp    0x64(%r11),%rax
               :   97ed5:	jb     9a469 <mlx5_tx_burst_mtiv_empw+0x8e99>
               :   97edb:	mov    0x70(%r11),%rdx
               :   97edf:	test   %rdx,%rdx
               :   97ee2:	je     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   97ee8:	cmp    %rdx,%rax
               :   97eeb:	jb     97ef7 <mlx5_tx_burst_mtiv_empw+0x6927>
               :   97eed:	cmp    0x78(%r11),%rax
               :   97ef1:	jb     9a47f <mlx5_tx_burst_mtiv_empw+0x8eaf>
               :   97ef7:	mov    0x84(%r11),%rdx
               :   97efe:	test   %rdx,%rdx
               :   97f01:	je     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   97f07:	cmp    %rdx,%rax
               :   97f0a:	jb     97f19 <mlx5_tx_burst_mtiv_empw+0x6949>
               :   97f0c:	cmp    0x8c(%r11),%rax
               :   97f13:	jb     9a48a <mlx5_tx_burst_mtiv_empw+0x8eba>
               :   97f19:	mov    0x98(%r11),%rdx
               :   97f20:	test   %rdx,%rdx
               :   97f23:	je     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   97f25:	cmp    %rdx,%rax
               :   97f28:	jb     97f37 <mlx5_tx_burst_mtiv_empw+0x6967>
               :   97f2a:	cmp    0xa0(%r11),%rax
               :   97f31:	jb     9a498 <mlx5_tx_burst_mtiv_empw+0x8ec8>
               :   97f37:	mov    0xac(%r11),%rdx
               :   97f3e:	test   %rdx,%rdx
               :   97f41:	je     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   97f43:	cmp    %rdx,%rax
               :   97f46:	jb     97f55 <mlx5_tx_burst_mtiv_empw+0x6985>
               :   97f48:	cmp    0xb4(%r11),%rax
               :   97f4f:	jb     9a712 <mlx5_tx_burst_mtiv_empw+0x9142>
               :   97f55:	mov    0xc0(%r11),%rdx
               :   97f5c:	test   %rdx,%rdx
               :   97f5f:	je     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   97f61:	cmp    %rdx,%rax
               :   97f64:	jb     97f73 <mlx5_tx_burst_mtiv_empw+0x69a3>
               :   97f66:	cmp    0xc8(%r11),%rax
               :   97f6d:	jb     9a723 <mlx5_tx_burst_mtiv_empw+0x9153>
               :   97f73:	mov    0xd4(%r11),%rdx
               :   97f7a:	cmp    %rdx,%rax
               :   97f7d:	jb     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   97f7f:	test   %rdx,%rdx
               :   97f82:	je     97f91 <mlx5_tx_burst_mtiv_empw+0x69c1>
               :   97f84:	cmp    0xdc(%r11),%rax
               :   97f8b:	jb     9a8c0 <mlx5_tx_burst_mtiv_empw+0x92f0>
               :   97f91:	mov    %rbx,%rsi
               :   97f94:	mov    %r13,%rdi
               :   97f97:	mov    %r11,0xb0(%rsp)
               :   97f9f:	vzeroupper 
               :   97fa2:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :   97fa7:	mov    0xb0(%rsp),%r11
               :   97faf:	jmpq   95f25 <mlx5_tx_burst_mtiv_empw+0x4955>
               :   97fb4:	vzeroupper 
               :   97fb7:	jmpq   94b90 <mlx5_tx_burst_mtiv_empw+0x35c0>
               :   97fbc:	movslq 0x58(%r15),%rax
               :   97fc0:	lea    0x40(%rbx),%r13
               :   97fc4:	cmp    $0xf,%eax
               :   97fc7:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   97fcd:	shl    $0x7,%rax
               :   97fd1:	add    0xfdf38(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   97fd8:	mov    %r13,%rsi
               :   97fdb:	mov    %r15,%rdi
               :   97fde:	callq  *0x70(%rax)
               :   97fe1:	movl   $0x1,0x8(%rbx)
               :   97fe8:	jmpq   94f07 <mlx5_tx_burst_mtiv_empw+0x3937>
               :   97fed:	vmovdqu64 (%rax),%ymm6
               :   97ff3:	vmovdqu64 %ymm6,(%r12)
               :   97ffa:	vmovdqu64 -0x20(%rax,%rsi,1),%ymm7
               :   98002:	vmovdqu64 %ymm7,-0x20(%r12,%rsi,1)
               :   9800a:	jmpq   96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   9800f:	movzwl 0x28(%rbx),%edx
               :   98013:	movzwl 0x24(%r14),%esi
               :   98018:	mov    %rdx,%rax
               :   9801b:	add    $0x4,%rdx
               :   9801f:	cmp    %rsi,%rdx
               :   98022:	jbe    93271 <mlx5_tx_burst_mtiv_empw+0x1ca1>
               :   98028:	jmpq   93070 <mlx5_tx_burst_mtiv_empw+0x1aa0>
               :   9802d:	vzeroupper 
               :   98030:	jmpq   96edb <mlx5_tx_burst_mtiv_empw+0x590b>
               :   98035:	testb  $0x1,0x1020c4(%r8)
               :   9803d:	jne    9a6da <mlx5_tx_burst_mtiv_empw+0x910a>
               :   98043:	mov    0x50(%r13),%rdx
               :   98047:	movzwl 0x10(%rdx),%ecx
               :   9804b:	lea    0x10(%rdx),%rax
               :   9804f:	cmp    $0x1,%cx
               :   98053:	jne    9a424 <mlx5_tx_burst_mtiv_empw+0x8e54>
               :   98059:	movw   $0x0,0x10(%rdx)
               :   9805f:	mov    0x50(%r13),%rax
               :   98063:	mov    0x0(%r13),%rdi
               :   98067:	mov    0x8(%rax),%rsi
               :   9806b:	mov    %r8,0x88(%rsp)
               :   98073:	vzeroupper 
               :   98076:	callq  *(%rax)
               :   98078:	mov    0x88(%rsp),%r8
               :   98080:	cmpl   $0x1,0x44(%r8)
               :   98085:	sbb    %rax,%rax
               :   98088:	and    $0xffffffffffefe000,%rax
               :   9808e:	lea    0x1020c0(%r8,%rax,1),%rax
               :   98096:	movzwl 0x2(%rax),%edx
               :   9809a:	movzwl (%rax),%eax
               :   9809d:	mov    %dx,0x58(%r13)
               :   980a2:	sub    $0xffffffffffffff80,%rdx
               :   980a6:	lea    0x0(%r13,%rdx,1),%rcx
               :   980ab:	add    -0x8(%r13),%rdx
               :   980af:	mov    %rdx,0x8(%r13)
               :   980b3:	cmp    $0x80,%ax
               :   980b7:	mov    $0x80,%edx
               :   980bc:	mov    %ax,0x36(%r13)
               :   980c1:	mov    0x38(%r13),%r8
               :   980c5:	cmova  %edx,%eax
               :   980c8:	xor    %edi,%edi
               :   980ca:	mov    %rcx,0x0(%r13)
               :   980ce:	mov    %ax,0x10(%r13)
               :   980d3:	mov    %di,0x28(%r13)
               :   980d8:	movq   $0x0,0x18(%r13)
               :   980e0:	mov    0x44(%r8),%edx
               :   980e4:	jmpq   96edb <mlx5_tx_burst_mtiv_empw+0x590b>
               :   980e9:	vmovdqu64 (%rax),%xmm4
               :   980ef:	vmovups %xmm4,(%r12)
               :   980f5:	vmovdqu64 0x10(%rax),%xmm5
               :   980fc:	vmovups %xmm5,0x10(%r12)
               :   98103:	vmovdqu64 -0x10(%rax,%rsi,1),%xmm6
               :   9810b:	vmovups %xmm6,-0x10(%r12,%rsi,1)
               :   98112:	jmpq   96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   98117:	movslq 0x58(%r14),%rax
               :   9811b:	mov    %r8,0xa8(%rsp)
               :   98123:	mov    %ecx,0xb0(%rsp)
               :   9812a:	cmp    $0xf,%eax
               :   9812d:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   98133:	shl    $0x7,%rax
               :   98137:	lea    0x120(%rsp),%rsi
               :   9813f:	add    0xfddca(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   98146:	mov    $0x1,%edx
               :   9814b:	mov    %r14,%rdi
               :   9814e:	callq  *0x70(%rax)
               :   98151:	mov    0xa8(%rsp),%r8
               :   98159:	mov    0xb0(%rsp),%ecx
               :   98160:	jmpq   96782 <mlx5_tx_burst_mtiv_empw+0x51b2>
               :   98165:	mov    %r10,0x60(%rsp)
               :   9816a:	mov    %r8,%rdx
               :   9816d:	mov    %rax,%rcx
               :   98170:	mov    %r10,%r14
               :   98173:	vmovdqu64 %ymm0,(%rdx)
               :   98179:	vmovdqu64 0x20(%r14),%ymm0
               :   98180:	add    $0x40,%r14
               :   98184:	vmovdqu64 %ymm0,0x20(%rdx)
               :   9818b:	mov    %r14,0x60(%rsp)
               :   98190:	sub    $0x40,%rcx
               :   98194:	add    $0x40,%rdx
               :   98198:	jmpq   92338 <mlx5_tx_burst_mtiv_empw+0xd68>
               :   9819d:	mov    %r8,%rcx
               :   981a0:	and    $0x1f,%ecx
               :   981a3:	je     98cbb <mlx5_tx_burst_mtiv_empw+0x76eb>
               :   981a9:	mov    $0x20,%edx
               :   981ae:	sub    %rcx,%rdx
               :   981b1:	lea    -0x20(%rax,%rcx,1),%rcx
               :   981b6:	mov    %rcx,0x60(%rsp)
               :   981bb:	lea    (%r10,%rdx,1),%rcx
               :   981bf:	mov    %rcx,0x88(%rsp)
               :   981c7:	lea    (%r8,%rdx,1),%rcx
               :   981cb:	mov    %rcx,0x80(%rsp)
               :   981d3:	vmovdqu64 %ymm0,(%r8)
               :   981d9:	mov    0x60(%rsp),%rcx
               :   981de:	mov    0x88(%rsp),%r14
               :   981e6:	lea    -0x80(%rcx),%rdx
               :   981ea:	and    $0xffffffffffffff80,%rdx
               :   981ee:	lea    0x80(%r14,%rdx,1),%rcx
               :   981f6:	mov    %rcx,0x58(%rsp)
               :   981fb:	mov    %rax,0x20(%rsp)
               :   98200:	mov    %r14,%rdx
               :   98203:	mov    0x80(%rsp),%rcx
               :   9820b:	mov    0x58(%rsp),%rax
               :   98210:	mov    0x98(%rsp),%r14
               :   98218:	vmovdqu64 (%rdx),%ymm2
               :   9821e:	vmovdqu64 0x20(%rdx),%ymm1
               :   98225:	vmovdqu64 0x40(%rdx),%ymm0
               :   9822c:	vmovdqu64 0x60(%rdx),%ymm7
               :   98233:	sub    $0xffffffffffffff80,%rdx
               :   98237:	vmovdqu64 %ymm7,0x60(%rcx)
               :   9823e:	vmovdqu64 %ymm2,(%rcx)
               :   98244:	vmovdqu64 %ymm1,0x20(%rcx)
               :   9824b:	vmovdqu64 %ymm0,0x40(%rcx)
               :   98252:	sub    $0xffffffffffffff80,%rcx
               :   98256:	cmp    %rax,%rdx
               :   98259:	jne    98218 <mlx5_tx_burst_mtiv_empw+0x6c48>
               :   9825b:	mov    0x60(%rsp),%rdx
               :   98260:	mov    %r14,0x98(%rsp)
               :   98268:	mov    0x88(%rsp),%r14
               :   98270:	mov    %rdx,%rcx
               :   98273:	and    $0xffffffffffffff80,%rdx
               :   98277:	add    %rdx,%r14
               :   9827a:	mov    %r14,0x60(%rsp)
               :   9827f:	mov    0x80(%rsp),%r14
               :   98287:	mov    0x20(%rsp),%rax
               :   9828c:	add    %rdx,%r14
               :   9828f:	and    $0x7f,%ecx
               :   98292:	mov    %r14,%rdx
               :   98295:	jmpq   9232e <mlx5_tx_burst_mtiv_empw+0xd5e>
               :   9829a:	mov    0x0(%r13),%rax
               :   9829e:	movzwl 0x58(%r13),%edx
               :   982a3:	add    $0xffffffffffffff80,%rax
               :   982a7:	sub    %rdx,%rax
               :   982aa:	movzwl 0x12(%rax),%ecx
               :   982ae:	lea    0x12(%rax),%rdx
               :   982b2:	cmp    $0x1,%cx
               :   982b6:	jne    99fc8 <mlx5_tx_burst_mtiv_empw+0x89f8>
               :   982bc:	movw   $0x0,0x12(%rax)
               :   982c2:	mov    %r8,0x58(%rsp)
               :   982c7:	movq   $0x0,0x40(%rax)
               :   982cf:	movw   $0x1,0x14(%rax)
               :   982d5:	movw   $0x1,0x12(%rax)
               :   982db:	mov    %rax,0x128(%rsp)
               :   982e3:	mov    0x38(%rax),%rdi
               :   982e7:	mov    %rdi,0x88(%rsp)
               :   982ef:	vzeroupper 
               :   982f2:	data16 lea 0xfdb4e(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   982fa:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   98302:	mov    0x88(%rsp),%rdi
               :   9830a:	mov    0x58(%rsp),%r8
               :   9830f:	cmpl   $0x0,0x44(%rdi)
               :   98313:	mov    (%rax),%eax
               :   98315:	je     99f8b <mlx5_tx_burst_mtiv_empw+0x89bb>
               :   9831b:	cmp    $0x7f,%eax
               :   9831e:	ja     99f8b <mlx5_tx_burst_mtiv_empw+0x89bb>
               :   98324:	mov    %eax,%ecx
               :   98326:	imul   $0x2040,%rcx,%rcx
               :   9832d:	add    0x60(%rdi),%rcx
               :   98331:	je     99f8b <mlx5_tx_burst_mtiv_empw+0x89bb>
               :   98337:	mov    0x4(%rcx),%esi
               :   9833a:	test   %esi,%esi
               :   9833c:	je     99f8b <mlx5_tx_burst_mtiv_empw+0x89bb>
               :   98342:	mov    0x8(%rcx),%edx
               :   98345:	lea    0x1(%rdx),%eax
               :   98348:	cmp    %eax,%esi
               :   9834a:	jb     99f3c <mlx5_tx_burst_mtiv_empw+0x896c>
               :   98350:	mov    %eax,0x8(%rcx)
               :   98353:	lea    0x40(%rcx,%rdx,8),%rsi
               :   98358:	mov    0x128(%rsp),%rax
               :   98360:	mov    %rax,(%rsi)
               :   98363:	jmpq   98080 <mlx5_tx_burst_mtiv_empw+0x6ab0>
               :   98368:	mov    %r12,%rdx
               :   9836b:	mov    %rcx,%rdi
               :   9836e:	vmovdqu64 %ymm0,(%rdx)
               :   98374:	vmovdqu64 0x20(%rax),%ymm0
               :   9837b:	sub    $0x40,%rdi
               :   9837f:	vmovdqu64 %ymm0,0x20(%rdx)
               :   98386:	add    $0x40,%rax
               :   9838a:	add    $0x40,%rdx
               :   9838e:	jmpq   95609 <mlx5_tx_burst_mtiv_empw+0x4039>
               :   98393:	mov    %r12,%rdi
               :   98396:	and    $0x1f,%edi
               :   98399:	je     9900a <mlx5_tx_burst_mtiv_empw+0x7a3a>
               :   9839f:	mov    $0x20,%edx
               :   983a4:	sub    %rdi,%rdx
               :   983a7:	lea    -0x20(%rcx,%rdi,1),%r9
               :   983ac:	vmovdqu64 %ymm0,(%r12)
               :   983b3:	add    %rdx,%rax
               :   983b6:	lea    (%r12,%rdx,1),%r8
               :   983ba:	lea    -0x80(%r9),%rdx
               :   983be:	and    $0xffffffffffffff80,%rdx
               :   983c2:	lea    0x80(%rax,%rdx,1),%r10
               :   983ca:	mov    %r8,%rdi
               :   983cd:	mov    %rax,%rdx
               :   983d0:	vmovdqu64 (%rdx),%ymm2
               :   983d6:	vmovdqu64 0x20(%rdx),%ymm1
               :   983dd:	vmovdqu64 0x40(%rdx),%ymm0
               :   983e4:	vmovdqu64 0x60(%rdx),%ymm3
               :   983eb:	sub    $0xffffffffffffff80,%rdx
               :   983ef:	vmovdqu64 %ymm3,0x60(%rdi)
               :   983f6:	vmovdqu64 %ymm2,(%rdi)
               :   983fc:	vmovdqu64 %ymm1,0x20(%rdi)
               :   98403:	vmovdqu64 %ymm0,0x40(%rdi)
               :   9840a:	sub    $0xffffffffffffff80,%rdi
               :   9840e:	cmp    %r10,%rdx
               :   98411:	jne    983d0 <mlx5_tx_burst_mtiv_empw+0x6e00>
               :   98413:	mov    %r9,%rdx
               :   98416:	and    $0xffffffffffffff80,%rdx
               :   9841a:	mov    %r9,%rdi
               :   9841d:	add    %rdx,%rax
               :   98420:	and    $0x7f,%edi
               :   98423:	add    %r8,%rdx
               :   98426:	jmpq   955ff <mlx5_tx_burst_mtiv_empw+0x402f>
               :   9842b:	mov    (%rbx),%rax
               :   9842e:	movzwl 0x58(%rbx),%edx
               :   98432:	add    $0xffffffffffffff80,%rax
               :   98436:	sub    %rdx,%rax
               :   98439:	movzwl 0x12(%rax),%esi
               :   9843d:	lea    0x12(%rax),%rdx
               :   98441:	cmp    $0x1,%si
               :   98445:	jne    99dc0 <mlx5_tx_burst_mtiv_empw+0x87f0>
               :   9844b:	movw   $0x0,0x12(%rax)
               :   98451:	mov    %r8,0x60(%rsp)
               :   98456:	mov    %ecx,0xa8(%rsp)
               :   9845d:	movq   $0x0,0x40(%rax)
               :   98465:	movw   $0x1,0x14(%rax)
               :   9846b:	movw   $0x1,0x12(%rax)
               :   98471:	mov    %rax,0x140(%rsp)
               :   98479:	mov    0x38(%rax),%rdi
               :   9847d:	mov    %rdi,0xb0(%rsp)
               :   98485:	vzeroupper 
               :   98488:	data16 lea 0xfd9b8(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   98490:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   98498:	mov    0xb0(%rsp),%rdi
               :   984a0:	mov    0xa8(%rsp),%ecx
               :   984a7:	cmpl   $0x0,0x44(%rdi)
               :   984ab:	mov    0x60(%rsp),%r8
               :   984b0:	mov    (%rax),%eax
               :   984b2:	je     9a875 <mlx5_tx_burst_mtiv_empw+0x92a5>
               :   984b8:	cmp    $0x7f,%eax
               :   984bb:	ja     9a875 <mlx5_tx_burst_mtiv_empw+0x92a5>
               :   984c1:	mov    %eax,%r10d
               :   984c4:	imul   $0x2040,%r10,%r10
               :   984cb:	add    0x60(%rdi),%r10
               :   984cf:	je     9a875 <mlx5_tx_burst_mtiv_empw+0x92a5>
               :   984d5:	mov    0x4(%r10),%esi
               :   984d9:	test   %esi,%esi
               :   984db:	je     9a875 <mlx5_tx_burst_mtiv_empw+0x92a5>
               :   984e1:	mov    0x8(%r10),%edx
               :   984e5:	lea    0x1(%rdx),%eax
               :   984e8:	cmp    %eax,%esi
               :   984ea:	jb     999fe <mlx5_tx_burst_mtiv_empw+0x842e>
               :   984f0:	mov    %eax,0x8(%r10)
               :   984f4:	lea    0x40(%r10,%rdx,8),%rsi
               :   984f9:	mov    0x140(%rsp),%rax
               :   98501:	mov    %rax,(%rsi)
               :   98504:	jmpq   96671 <mlx5_tx_burst_mtiv_empw+0x50a1>
               :   98509:	vzeroupper 
               :   9850c:	jmpq   97855 <mlx5_tx_burst_mtiv_empw+0x6285>
               :   98511:	vzeroupper 
               :   98514:	jmpq   966d1 <mlx5_tx_burst_mtiv_empw+0x5101>
               :   98519:	cmp    $0xf,%rcx
               :   9851d:	jbe    98e79 <mlx5_tx_burst_mtiv_empw+0x78a9>
               :   98523:	cmp    $0x20,%rcx
               :   98527:	jbe    99279 <mlx5_tx_burst_mtiv_empw+0x7ca9>
               :   9852d:	cmp    $0x30,%rcx
               :   98531:	jbe    99e8d <mlx5_tx_burst_mtiv_empw+0x88bd>
               :   98537:	vmovdqu64 (%rax),%ymm0
               :   9853d:	cmp    $0x40,%rcx
               :   98541:	jbe    99e72 <mlx5_tx_burst_mtiv_empw+0x88a2>
               :   98547:	cmp    $0x100,%rcx
               :   9854e:	ja     9a8d1 <mlx5_tx_burst_mtiv_empw+0x9301>
               :   98554:	cmp    $0x7f,%rcx
               :   98558:	jbe    99e41 <mlx5_tx_burst_mtiv_empw+0x8871>
               :   9855e:	vmovdqu64 %ymm0,(%rdx)
               :   98564:	vmovdqu64 0x20(%rax),%ymm5
               :   9856b:	lea    -0x80(%rcx),%r9
               :   9856f:	vmovdqu64 %ymm5,0x20(%rdx)
               :   98576:	vmovdqu64 0x40(%rax),%ymm6
               :   9857d:	lea    0x80(%rax),%rsi
               :   98584:	vmovdqu64 %ymm6,0x40(%rdx)
               :   9858b:	vmovdqu64 0x60(%rax),%ymm7
               :   98592:	sub    $0xffffffffffffff80,%rdx
               :   98596:	vmovdqu64 %ymm7,-0x20(%rdx)
               :   9859d:	cmp    $0x3f,%r9
               :   985a1:	ja     99e47 <mlx5_tx_burst_mtiv_empw+0x8877>
               :   985a7:	cmp    $0x20,%r9
               :   985ab:	jbe    99e23 <mlx5_tx_burst_mtiv_empw+0x8853>
               :   985b1:	vmovdqu64 (%rsi),%ymm2
               :   985b7:	vmovdqu64 %ymm2,(%rdx)
               :   985bd:	vmovdqu64 -0x20(%rsi,%r9,1),%ymm3
               :   985c5:	vmovdqu64 %ymm3,-0x20(%rdx,%r9,1)
               :   985cd:	jmpq   977a0 <mlx5_tx_burst_mtiv_empw+0x61d0>
               :   985d2:	lock decw (%rsi)
               :   985d6:	je     945c7 <mlx5_tx_burst_mtiv_empw+0x2ff7>
               :   985dc:	vzeroupper 
               :   985df:	jmpq   9467e <mlx5_tx_burst_mtiv_empw+0x30ae>
               :   985e4:	lock decw (%rsi)
               :   985e8:	je     943f5 <mlx5_tx_burst_mtiv_empw+0x2e25>
               :   985ee:	vzeroupper 
               :   985f1:	jmpq   944a0 <mlx5_tx_burst_mtiv_empw+0x2ed0>
               :   985f6:	lock decw (%r15)
               :   985fb:	jne    94c47 <mlx5_tx_burst_mtiv_empw+0x3677>
               :   98601:	movabs $0x6000000000000000,%rax
               :   9860b:	test   %rax,0x18(%r13)
               :   9860f:	jne    9953d <mlx5_tx_burst_mtiv_empw+0x7f6d>
               :   98615:	vzeroupper 
               :   98618:	cmpq   $0x0,0x40(%r13)
               :   9861d:	je     98627 <mlx5_tx_burst_mtiv_empw+0x7057>
               :   9861f:	movq   $0x0,0x40(%r13)
               :   98627:	cmpw   $0x1,0x14(%r13)
               :   9862d:	je     98636 <mlx5_tx_burst_mtiv_empw+0x7066>
               :   9862f:	movw   $0x1,0x14(%r13)
               :   98636:	movw   $0x1,(%r15)
               :   9863c:	mov    0x38(%r13),%r15
               :   98640:	mov    0x44(%r15),%edx
               :   98644:	jmpq   94bb1 <mlx5_tx_burst_mtiv_empw+0x35e1>
               :   98649:	mov    %rbx,%r11
               :   9864c:	mov    %r13,%r15
               :   9864f:	cmp    %dx,%r14w
               :   98653:	jb     9722a <mlx5_tx_burst_mtiv_empw+0x5c5a>
               :   98659:	mov    0x40(%r13),%rax
               :   9865d:	mov    %rax,%r15
               :   98660:	movzwl 0x12(%r13),%eax
               :   98665:	dec    %ax
               :   98668:	jne    9a611 <mlx5_tx_burst_mtiv_empw+0x9041>
               :   9866e:	mov    $0x3,%eax
               :   98673:	shl    $0x3d,%rax
               :   98677:	test   %rax,0x18(%r13)
               :   9867b:	jne    9a00e <mlx5_tx_burst_mtiv_empw+0x8a3e>
               :   98681:	mov    0x38(%r13),%r12
               :   98685:	vzeroupper 
               :   98688:	cmpq   $0x0,0x40(%r13)
               :   9868d:	je     98697 <mlx5_tx_burst_mtiv_empw+0x70c7>
               :   9868f:	movq   $0x0,0x40(%r13)
               :   98697:	cmpw   $0x1,0x14(%r13)
               :   9869d:	je     986a6 <mlx5_tx_burst_mtiv_empw+0x70d6>
               :   9869f:	movw   $0x1,0x14(%r13)
               :   986a6:	mov    %r11,0x60(%rsp)
               :   986ab:	mov    %r13,0x190(%rsp)
               :   986b3:	data16 lea 0xfd78d(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   986bb:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   986c3:	cmpl   $0x0,0x44(%r12)
               :   986c9:	mov    0x60(%rsp),%r11
               :   986ce:	mov    (%rax),%eax
               :   986d0:	je     9a6ee <mlx5_tx_burst_mtiv_empw+0x911e>
               :   986d6:	cmp    $0x7f,%eax
               :   986d9:	ja     9a6ee <mlx5_tx_burst_mtiv_empw+0x911e>
               :   986df:	mov    %eax,%ebx
               :   986e1:	imul   $0x2040,%rbx,%rbx
               :   986e8:	add    0x60(%r12),%rbx
               :   986ed:	je     9a6ee <mlx5_tx_burst_mtiv_empw+0x911e>
               :   986f3:	mov    0x4(%rbx),%ecx
               :   986f6:	test   %ecx,%ecx
               :   986f8:	je     9a6ee <mlx5_tx_burst_mtiv_empw+0x911e>
               :   986fe:	mov    0x8(%rbx),%edx
               :   98701:	lea    0x1(%rdx),%eax
               :   98704:	cmp    %eax,%ecx
               :   98706:	jb     99d9b <mlx5_tx_burst_mtiv_empw+0x87cb>
               :   9870c:	mov    %eax,0x8(%rbx)
               :   9870f:	lea    0x40(%rbx,%rdx,8),%r13
               :   98714:	mov    0x190(%rsp),%rax
               :   9871c:	mov    %rax,0x0(%r13)
               :   98720:	decw   0xc0(%rsp)
               :   98728:	movzwl 0x28(%r15),%edx
               :   9872d:	xor    %r14d,%r14d
               :   98730:	jmpq   9722a <mlx5_tx_burst_mtiv_empw+0x5c5a>
               :   98735:	lock decw (%rsi)
               :   98739:	jne    985ee <mlx5_tx_burst_mtiv_empw+0x701e>
               :   9873f:	jmpq   95b83 <mlx5_tx_burst_mtiv_empw+0x45b3>
               :   98744:	lock decw (%rsi)
               :   98748:	jne    93c82 <mlx5_tx_burst_mtiv_empw+0x26b2>
               :   9874e:	movw   $0x1,0x10(%rax)
               :   98754:	jmpq   93bd0 <mlx5_tx_burst_mtiv_empw+0x2600>
               :   98759:	movslq 0x58(%r15),%rax
               :   9875d:	cmp    $0xf,%eax
               :   98760:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   98766:	shl    $0x7,%rax
               :   9876a:	lea    0xf0(%rsp),%rsi
               :   98772:	add    0xfd797(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   98779:	mov    $0x1,%edx
               :   9877e:	mov    %r15,%rdi
               :   98781:	callq  *0x70(%rax)
               :   98784:	jmpq   94f13 <mlx5_tx_burst_mtiv_empw+0x3943>
               :   98789:	movslq 0x58(%rdi),%rax
               :   9878d:	mov    %r8,0x48(%rsp)
               :   98792:	mov    %r9,0x58(%rsp)
               :   98797:	lea    0x40(%r9),%rsi
               :   9879b:	cmp    $0xf,%eax
               :   9879e:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   987a4:	shl    $0x7,%rax
               :   987a8:	add    0xfd761(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   987af:	mov    %rsi,0x88(%rsp)
               :   987b7:	callq  *0x70(%rax)
               :   987ba:	mov    0x58(%rsp),%r9
               :   987bf:	mov    0x48(%rsp),%r8
               :   987c4:	movl   $0x1,0x8(%r9)
               :   987cc:	mov    0x88(%rsp),%rsi
               :   987d4:	jmpq   94495 <mlx5_tx_burst_mtiv_empw+0x2ec5>
               :   987d9:	mov    $0x1020c0,%eax
               :   987de:	jmpq   92b1f <mlx5_tx_burst_mtiv_empw+0x154f>
               :   987e3:	lock decw (%rdx)
               :   987e7:	jne    96f82 <mlx5_tx_burst_mtiv_empw+0x59b2>
               :   987ed:	movabs $0x6000000000000000,%rax
               :   987f7:	test   %rax,0x18(%r13)
               :   987fb:	jne    996d2 <mlx5_tx_burst_mtiv_empw+0x8102>
               :   98801:	vzeroupper 
               :   98804:	cmpq   $0x0,0x40(%r13)
               :   98809:	je     98813 <mlx5_tx_burst_mtiv_empw+0x7243>
               :   9880b:	movq   $0x0,0x40(%r13)
               :   98813:	cmpw   $0x1,0x14(%r13)
               :   98819:	je     98822 <mlx5_tx_burst_mtiv_empw+0x7252>
               :   9881b:	movw   $0x1,0x14(%r13)
               :   98822:	movw   $0x1,(%rdx)
               :   98827:	mov    0x38(%r13),%r8
               :   9882b:	mov    0x44(%r8),%edx
               :   9882f:	jmpq   96efc <mlx5_tx_burst_mtiv_empw+0x592c>
               :   98834:	movslq 0x58(%rdi),%rax
               :   98838:	mov    %r9,0x58(%rsp)
               :   9883d:	mov    %ecx,0x60(%rsp)
               :   98841:	mov    %r10,0xa8(%rsp)
               :   98849:	lea    0x40(%r10),%rsi
               :   9884d:	cmp    $0xf,%eax
               :   98850:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   98856:	shl    $0x7,%rax
               :   9885a:	add    0xfd6af(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   98861:	mov    %rsi,0xb0(%rsp)
               :   98869:	callq  *0x70(%rax)
               :   9886c:	mov    0xa8(%rsp),%r10
               :   98874:	mov    0x58(%rsp),%r9
               :   98879:	movl   $0x1,0x8(%r10)
               :   98881:	mov    0x60(%rsp),%ecx
               :   98885:	mov    0xb0(%rsp),%rsi
               :   9888d:	jmpq   94673 <mlx5_tx_burst_mtiv_empw+0x30a3>
               :   98892:	vmovdqu64 %ymm0,(%r12)
               :   98899:	vmovdqu64 -0x20(%rax,%rsi,1),%ymm7
               :   988a1:	vmovdqu64 %ymm7,-0x20(%r12,%rsi,1)
               :   988a9:	jmpq   96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   988ae:	lock decw (%rsi)
               :   988b2:	jne    985dc <mlx5_tx_burst_mtiv_empw+0x700c>
               :   988b8:	jmpq   95c06 <mlx5_tx_burst_mtiv_empw+0x4636>
               :   988bd:	mov    0x18(%rsp),%rax
               :   988c2:	movzwl 0x28(%r15),%edx
               :   988c7:	mov    0xf8(%rax),%rax
               :   988ce:	mov    0x60(%rsp),%edi
               :   988d2:	mov    %rax,0x88(%rsp)
               :   988da:	mov    0xb0(%rsp),%eax
               :   988e1:	mov    %r15,%r13
               :   988e4:	sub    0x60(%rsp),%eax
               :   988e8:	mov    %eax,0x48(%rsp)
               :   988ec:	mov    %eax,%ecx
               :   988ee:	jmpq   95453 <mlx5_tx_burst_mtiv_empw+0x3e83>
               :   988f3:	xor    %eax,%eax
               :   988f5:	mov    %ax,0x44(%r13)
               :   988fa:	mov    0x10(%rdx),%eax
               :   988fd:	jmpq   965a6 <mlx5_tx_burst_mtiv_empw+0x4fd6>
               :   98902:	vzeroupper 
               :   98905:	jmpq   94e87 <mlx5_tx_burst_mtiv_empw+0x38b7>
               :   9890a:	mov    0x50(%r13),%rdx
               :   9890e:	movzwl 0x10(%rdx),%ecx
               :   98912:	lea    0x10(%rdx),%rax
               :   98916:	cmp    $0x1,%cx
               :   9891a:	jne    99d31 <mlx5_tx_burst_mtiv_empw+0x8761>
               :   98920:	movw   $0x0,0x10(%rdx)
               :   98926:	mov    0x50(%r13),%rax
               :   9892a:	mov    0x0(%r13),%rdi
               :   9892e:	mov    0x8(%rax),%rsi
               :   98932:	vzeroupper 
               :   98935:	callq  *(%rax)
               :   98937:	cmpl   $0x1,0x44(%r15)
               :   9893c:	sbb    %rax,%rax
               :   9893f:	and    $0xffffffffffefe000,%rax
               :   98945:	lea    0x1020c0(%r15,%rax,1),%rax
               :   9894d:	movzwl 0x2(%rax),%edx
               :   98951:	movzwl (%rax),%eax
               :   98954:	mov    %dx,0x58(%r13)
               :   98959:	sub    $0xffffffffffffff80,%rdx
               :   9895d:	lea    0x0(%r13,%rdx,1),%rcx
               :   98962:	add    -0x8(%r13),%rdx
               :   98966:	mov    %rdx,0x8(%r13)
               :   9896a:	cmp    $0x80,%ax
               :   9896e:	mov    $0x80,%edx
               :   98973:	mov    %ax,0x36(%r13)
               :   98978:	mov    0x38(%r13),%r15
               :   9897c:	cmova  %edx,%eax
               :   9897f:	xor    %r8d,%r8d
               :   98982:	mov    %rcx,0x0(%r13)
               :   98986:	mov    %ax,0x10(%r13)
               :   9898b:	mov    %r8w,0x28(%r13)
               :   98990:	movq   $0x0,0x18(%r13)
               :   98998:	mov    0x44(%r15),%ebx
               :   9899c:	jmpq   94e87 <mlx5_tx_burst_mtiv_empw+0x38b7>
               :   989a1:	testb  $0x1,0x1020c4(%r15)
               :   989a9:	je     9890a <mlx5_tx_burst_mtiv_empw+0x733a>
               :   989af:	mov    $0x1020c0,%eax
               :   989b4:	jmpq   94e4c <mlx5_tx_burst_mtiv_empw+0x387c>
               :   989b9:	nopl   0x0(%rax)
               :   989c0:	mov    0x0(%r13),%rax
               :   989c4:	movzwl 0x58(%r13),%edx
               :   989c9:	add    $0xffffffffffffff80,%rax
               :   989cd:	sub    %rdx,%rax
               :   989d0:	movzwl 0x12(%rax),%ecx
               :   989d4:	lea    0x12(%rax),%rdx
               :   989d8:	cmp    $0x1,%cx
               :   989dc:	jne    99d57 <mlx5_tx_burst_mtiv_empw+0x8787>
               :   989e2:	movw   $0x0,0x12(%rax)
               :   989e8:	movq   $0x0,0x40(%rax)
               :   989f0:	movw   $0x1,0x14(%rax)
               :   989f6:	movw   $0x1,0x12(%rax)
               :   989fc:	mov    %rax,0x178(%rsp)
               :   98a04:	mov    0x38(%rax),%rdi
               :   98a08:	mov    %rdi,0x88(%rsp)
               :   98a10:	vzeroupper 
               :   98a13:	data16 lea 0xfd42d(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   98a1b:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   98a23:	mov    0x88(%rsp),%rdi
               :   98a2b:	cmpl   $0x0,0x44(%rdi)
               :   98a2f:	mov    (%rax),%eax
               :   98a31:	je     9a799 <mlx5_tx_burst_mtiv_empw+0x91c9>
               :   98a37:	cmp    $0x7f,%eax
               :   98a3a:	ja     9a799 <mlx5_tx_burst_mtiv_empw+0x91c9>
               :   98a40:	mov    %eax,%ebx
               :   98a42:	imul   $0x2040,%rbx,%rbx
               :   98a49:	add    0x60(%rdi),%rbx
               :   98a4d:	je     9a799 <mlx5_tx_burst_mtiv_empw+0x91c9>
               :   98a53:	mov    0x4(%rbx),%ecx
               :   98a56:	test   %ecx,%ecx
               :   98a58:	je     9a799 <mlx5_tx_burst_mtiv_empw+0x91c9>
               :   98a5e:	mov    0x8(%rbx),%edx
               :   98a61:	lea    0x1(%rdx),%eax
               :   98a64:	cmp    %eax,%ecx
               :   98a66:	jb     9a1c8 <mlx5_tx_burst_mtiv_empw+0x8bf8>
               :   98a6c:	mov    %eax,0x8(%rbx)
               :   98a6f:	lea    0x40(%rbx,%rdx,8),%rcx
               :   98a74:	mov    0x178(%rsp),%rax
               :   98a7c:	mov    %rax,(%rcx)
               :   98a7f:	jmpq   98937 <mlx5_tx_burst_mtiv_empw+0x7367>
               :   98a84:	testb  $0x1,0x1020c4(%rcx)
               :   98a8b:	je     960fe <mlx5_tx_burst_mtiv_empw+0x4b2e>
               :   98a91:	mov    $0x1020c0,%eax
               :   98a96:	mov    0x88(%rsp),%rcx
               :   98a9e:	testb  $0x1,0x4(%rcx,%rax,1)
               :   98aa3:	je     96c24 <mlx5_tx_burst_mtiv_empw+0x5654>
               :   98aa9:	movabs $0x2000000000000000,%rcx
               :   98ab3:	mov    %rcx,0x18(%r13)
               :   98ab7:	mov    0x50(%r13),%rax
               :   98abb:	movzwl 0x10(%rax),%esi
               :   98abf:	lea    0x10(%rax),%rdx
               :   98ac3:	cmp    $0x1,%si
               :   98ac7:	je     96c24 <mlx5_tx_burst_mtiv_empw+0x5654>
               :   98acd:	or     $0xffffffff,%esi
               :   98ad0:	lock xadd %si,(%rdx)
               :   98ad5:	dec    %si
               :   98ad8:	jne    93c82 <mlx5_tx_burst_mtiv_empw+0x26b2>
               :   98ade:	movw   $0x1,0x10(%rax)
               :   98ae4:	vzeroupper 
               :   98ae7:	jmpq   96198 <mlx5_tx_burst_mtiv_empw+0x4bc8>
               :   98aec:	nopl   0x0(%rax)
               :   98af0:	lock decw (%rsi)
               :   98af4:	jne    93701 <mlx5_tx_burst_mtiv_empw+0x2131>
               :   98afa:	movw   $0x1,0x10(%rax)
               :   98b00:	jmpq   93647 <mlx5_tx_burst_mtiv_empw+0x2077>
               :   98b05:	test   %rdi,%rdi
               :   98b08:	je     96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   98b0e:	vmovdqu64 -0x20(%rax,%rdi,1),%ymm6
               :   98b16:	vmovdqu64 %ymm6,-0x20(%rdx,%rdi,1)
               :   98b1e:	jmpq   96d60 <mlx5_tx_burst_mtiv_empw+0x5790>
               :   98b23:	bswap  %edx
               :   98b25:	mov    %edx,(%r12)
               :   98b29:	mov    0x40(%r11),%ecx
               :   98b2d:	mov    0x38(%r11),%rdx
               :   98b31:	lea    0x38(%r11),%r13
               :   98b35:	cmp    %ecx,(%rdx)
               :   98b37:	jne    9a342 <mlx5_tx_burst_mtiv_empw+0x8d72>
               :   98b3d:	movzwl 0x44(%r11),%ecx
               :   98b42:	lea    0x48(%r11),%rdx
               :   98b46:	lea    (%rcx,%rcx,4),%rcx
               :   98b4a:	lea    (%rdx,%rcx,4),%rcx
               :   98b4e:	cmp    (%rcx),%rax
               :   98b51:	jb     9a233 <mlx5_tx_burst_mtiv_empw+0x8c63>
               :   98b57:	cmp    0x8(%rcx),%rax
               :   98b5b:	jae    9a233 <mlx5_tx_burst_mtiv_empw+0x8c63>
               :   98b61:	mov    0x10(%rcx),%eax
               :   98b64:	cmp    $0xffffffff,%eax
               :   98b67:	je     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   98b6d:	mov    %eax,0x4(%r12)
               :   98b72:	bswap  %rbx
               :   98b75:	mov    %rbx,0x8(%r12)
               :   98b7a:	jmpq   96434 <mlx5_tx_burst_mtiv_empw+0x4e64>
               :   98b7f:	mov    0x0(%r13),%rax
               :   98b83:	movzwl 0x58(%r13),%edx
               :   98b88:	add    $0xffffffffffffff80,%rax
               :   98b8c:	sub    %rdx,%rax
               :   98b8f:	movzwl 0x12(%rax),%esi
               :   98b93:	lea    0x12(%rax),%rdx
               :   98b97:	cmp    $0x1,%si
               :   98b9b:	jne    99f0a <mlx5_tx_burst_mtiv_empw+0x893a>
               :   98ba1:	movw   $0x0,0x12(%rax)
               :   98ba7:	mov    %r8,0x48(%rsp)
               :   98bac:	movq   $0x0,0x40(%rax)
               :   98bb4:	movw   $0x1,0x14(%rax)
               :   98bba:	movw   $0x1,0x12(%rax)
               :   98bc0:	mov    %rax,0x158(%rsp)
               :   98bc8:	mov    0x38(%rax),%rdi
               :   98bcc:	mov    %rdi,0x58(%rsp)
               :   98bd1:	vzeroupper 
               :   98bd4:	data16 lea 0xfd26c(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   98bdc:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   98be4:	mov    0x58(%rsp),%rdi
               :   98be9:	mov    0x48(%rsp),%r8
               :   98bee:	cmpl   $0x0,0x44(%rdi)
               :   98bf2:	mov    (%rax),%eax
               :   98bf4:	je     9a5da <mlx5_tx_burst_mtiv_empw+0x900a>
               :   98bfa:	cmp    $0x7f,%eax
               :   98bfd:	ja     9a5da <mlx5_tx_burst_mtiv_empw+0x900a>
               :   98c03:	mov    %eax,%r9d
               :   98c06:	imul   $0x2040,%r9,%r9
               :   98c0d:	add    0x60(%rdi),%r9
               :   98c11:	je     9a5da <mlx5_tx_burst_mtiv_empw+0x900a>
               :   98c17:	mov    0x4(%r9),%esi
               :   98c1b:	test   %esi,%esi
               :   98c1d:	je     9a5da <mlx5_tx_burst_mtiv_empw+0x900a>
               :   98c23:	mov    0x8(%r9),%edx
               :   98c27:	lea    0x1(%rdx),%eax
               :   98c2a:	cmp    %eax,%esi
               :   98c2c:	jb     99ec0 <mlx5_tx_burst_mtiv_empw+0x88f0>
               :   98c32:	mov    %eax,0x8(%r9)
               :   98c36:	lea    0x40(%r9,%rdx,8),%rsi
               :   98c3b:	mov    0x158(%rsp),%rax
               :   98c43:	mov    %rax,(%rsi)
               :   98c46:	jmpq   96135 <mlx5_tx_burst_mtiv_empw+0x4b65>
               :   98c4b:	movslq 0x58(%rdi),%rax
               :   98c4f:	mov    %r8,0x88(%rsp)
               :   98c57:	cmp    $0xf,%eax
               :   98c5a:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   98c60:	shl    $0x7,%rax
               :   98c64:	lea    0x150(%rsp),%rsi
               :   98c6c:	add    0xfd29d(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   98c73:	mov    $0x1,%edx
               :   98c78:	callq  *0x70(%rax)
               :   98c7b:	mov    0x88(%rsp),%r8
               :   98c83:	jmpq   944a0 <mlx5_tx_burst_mtiv_empw+0x2ed0>
               :   98c88:	mov    %r13,%rdi
               :   98c8b:	mov    %r11,0xb0(%rsp)
               :   98c93:	vzeroupper 
               :   98c96:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :   98c9b:	mov    (%rbx),%rax
               :   98c9e:	mov    0xb0(%rsp),%r11
               :   98ca6:	jmpq   95ef5 <mlx5_tx_burst_mtiv_empw+0x4925>
               :   98cab:	mov    0x60(%rsp),%r14
               :   98cb0:	vmovdqu64 (%r14),%ymm0
               :   98cb6:	jmpq   98173 <mlx5_tx_burst_mtiv_empw+0x6ba3>
               :   98cbb:	mov    %rax,0x60(%rsp)
               :   98cc0:	mov    %r10,0x88(%rsp)
               :   98cc8:	mov    %r8,0x80(%rsp)
               :   98cd0:	jmpq   981d9 <mlx5_tx_burst_mtiv_empw+0x6c09>
               :   98cd5:	mov    0x50(%rbx),%rdx
               :   98cd9:	movzwl 0x10(%rdx),%esi
               :   98cdd:	lea    0x10(%rdx),%rax
               :   98ce1:	cmp    $0x1,%si
               :   98ce5:	jne    99af9 <mlx5_tx_burst_mtiv_empw+0x8529>
               :   98ceb:	movw   $0x0,0x10(%rdx)
               :   98cf1:	mov    0x50(%rbx),%rax
               :   98cf5:	mov    (%rbx),%rdi
               :   98cf8:	mov    0x8(%rax),%rsi
               :   98cfc:	mov    %r9,0x58(%rsp)
               :   98d01:	mov    %ecx,0x60(%rsp)
               :   98d05:	mov    %r8,0xa8(%rsp)
               :   98d0d:	vzeroupper 
               :   98d10:	callq  *(%rax)
               :   98d12:	mov    0xa8(%rsp),%r8
               :   98d1a:	mov    0x60(%rsp),%ecx
               :   98d1e:	mov    0x58(%rsp),%r9
               :   98d23:	mov    0xb0(%rsp),%rdi
               :   98d2b:	cmpl   $0x1,0x44(%rdi)
               :   98d2f:	sbb    %rax,%rax
               :   98d32:	and    $0xffffffffffefe000,%rax
               :   98d38:	lea    0x1020c0(%rdi,%rax,1),%rax
               :   98d40:	movzwl 0x2(%rax),%edx
               :   98d44:	movzwl (%rax),%eax
               :   98d47:	mov    %dx,0x58(%rbx)
               :   98d4b:	sub    $0xffffffffffffff80,%rdx
               :   98d4f:	lea    (%rbx,%rdx,1),%rsi
               :   98d53:	add    -0x8(%rbx),%rdx
               :   98d57:	mov    %rdx,0x8(%rbx)
               :   98d5b:	cmp    $0x80,%ax
               :   98d5f:	mov    $0x80,%edx
               :   98d64:	mov    %ax,0x36(%rbx)
               :   98d68:	cmova  %edx,%eax
               :   98d6b:	mov    %rsi,(%rbx)
               :   98d6e:	mov    %ax,0x10(%rbx)
               :   98d72:	xor    %eax,%eax
               :   98d74:	mov    %ax,0x28(%rbx)
               :   98d78:	movq   $0x0,0x18(%rbx)
               :   98d80:	jmpq   962ff <mlx5_tx_burst_mtiv_empw+0x4d2f>
               :   98d85:	testb  $0x1,0x1020c4(%rdi)
               :   98d8c:	je     98cd5 <mlx5_tx_burst_mtiv_empw+0x7705>
               :   98d92:	mov    $0x1020c0,%eax
               :   98d97:	jmpq   962c9 <mlx5_tx_burst_mtiv_empw+0x4cf9>
               :   98d9c:	nopl   0x0(%rax)
               :   98da0:	mov    (%rbx),%rax
               :   98da3:	movzwl 0x58(%rbx),%edx
               :   98da7:	add    $0xffffffffffffff80,%rax
               :   98dab:	sub    %rdx,%rax
               :   98dae:	movzwl 0x12(%rax),%esi
               :   98db2:	lea    0x12(%rax),%rdx
               :   98db6:	cmp    $0x1,%si
               :   98dba:	jne    99d1b <mlx5_tx_burst_mtiv_empw+0x874b>
               :   98dc0:	movw   $0x0,0x12(%rax)
               :   98dc6:	mov    %r9,0x58(%rsp)
               :   98dcb:	mov    %ecx,0x60(%rsp)
               :   98dcf:	mov    %r8,0xa8(%rsp)
               :   98dd7:	movq   $0x0,0x40(%rax)
               :   98ddf:	movw   $0x1,0x14(%rax)
               :   98de5:	movw   $0x1,0x12(%rax)
               :   98deb:	mov    %rax,0x188(%rsp)
               :   98df3:	mov    0x38(%rax),%r13
               :   98df7:	vzeroupper 
               :   98dfa:	data16 lea 0xfd046(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   98e02:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   98e0a:	cmpl   $0x0,0x44(%r13)
               :   98e0f:	mov    0xa8(%rsp),%r8
               :   98e17:	mov    0x60(%rsp),%ecx
               :   98e1b:	mov    0x58(%rsp),%r9
               :   98e20:	mov    (%rax),%eax
               :   98e22:	je     9aa5b <mlx5_tx_burst_mtiv_empw+0x948b>
               :   98e28:	cmp    $0x7f,%eax
               :   98e2b:	ja     9aa5b <mlx5_tx_burst_mtiv_empw+0x948b>
               :   98e31:	mov    %eax,%r10d
               :   98e34:	imul   $0x2040,%r10,%r10
               :   98e3b:	add    0x60(%r13),%r10
               :   98e3f:	je     9aa5b <mlx5_tx_burst_mtiv_empw+0x948b>
               :   98e45:	mov    0x4(%r10),%esi
               :   98e49:	test   %esi,%esi
               :   98e4b:	je     9aa5b <mlx5_tx_burst_mtiv_empw+0x948b>
               :   98e51:	mov    0x8(%r10),%edx
               :   98e55:	lea    0x1(%rdx),%eax
               :   98e58:	cmp    %eax,%esi
               :   98e5a:	jb     9a734 <mlx5_tx_burst_mtiv_empw+0x9164>
               :   98e60:	mov    %eax,0x8(%r10)
               :   98e64:	lea    0x40(%r10,%rdx,8),%rsi
               :   98e69:	mov    0x188(%rsp),%rax
               :   98e71:	mov    %rax,(%rsi)
               :   98e74:	jmpq   98d23 <mlx5_tx_burst_mtiv_empw+0x7753>
               :   98e79:	mov    %rax,%rsi
               :   98e7c:	test   $0x8,%r11b
               :   98e80:	je     98e91 <mlx5_tx_burst_mtiv_empw+0x78c1>
               :   98e82:	mov    (%rax),%rsi
               :   98e85:	add    $0x8,%rdx
               :   98e89:	mov    %rsi,-0x8(%rdx)
               :   98e8d:	lea    0x8(%rax),%rsi
               :   98e91:	test   $0x4,%r11b
               :   98e95:	je     98ea4 <mlx5_tx_burst_mtiv_empw+0x78d4>
               :   98e97:	mov    (%rsi),%edi
               :   98e99:	add    $0x4,%rdx
               :   98e9d:	mov    %edi,-0x4(%rdx)
               :   98ea0:	add    $0x4,%rsi
               :   98ea4:	test   $0x2,%r11b
               :   98ea8:	je     98eb9 <mlx5_tx_burst_mtiv_empw+0x78e9>
               :   98eaa:	movzwl (%rsi),%edi
               :   98ead:	add    $0x2,%rdx
               :   98eb1:	mov    %di,-0x2(%rdx)
               :   98eb5:	add    $0x2,%rsi
               :   98eb9:	test   $0x1,%r11b
               :   98ebd:	je     977a0 <mlx5_tx_burst_mtiv_empw+0x61d0>
               :   98ec3:	movzbl (%rsi),%esi
               :   98ec6:	mov    %sil,(%rdx)
               :   98ec9:	jmpq   977a0 <mlx5_tx_burst_mtiv_empw+0x61d0>
               :   98ece:	lock decw (%r14)
               :   98ed3:	jne    96782 <mlx5_tx_burst_mtiv_empw+0x51b2>
               :   98ed9:	movabs $0x6000000000000000,%rax
               :   98ee3:	test   %rax,0x18(%rbx)
               :   98ee7:	jne    995d1 <mlx5_tx_burst_mtiv_empw+0x8001>
               :   98eed:	vzeroupper 
               :   98ef0:	cmpq   $0x0,0x40(%rbx)
               :   98ef5:	je     98eff <mlx5_tx_burst_mtiv_empw+0x792f>
               :   98ef7:	movq   $0x0,0x40(%rbx)
               :   98eff:	cmpw   $0x1,0x14(%rbx)
               :   98f04:	je     98f0c <mlx5_tx_burst_mtiv_empw+0x793c>
               :   98f06:	movw   $0x1,0x14(%rbx)
               :   98f0c:	movw   $0x1,(%r14)
               :   98f12:	mov    0x38(%rbx),%r14
               :   98f16:	mov    0x44(%r14),%edx
               :   98f1a:	jmpq   966f2 <mlx5_tx_burst_mtiv_empw+0x5122>
               :   98f1f:	vzeroupper 
               :   98f22:	jmpq   97a14 <mlx5_tx_burst_mtiv_empw+0x6444>
               :   98f27:	movslq 0x58(%rdi),%rax
               :   98f2b:	mov    %r9,0xa8(%rsp)
               :   98f33:	mov    %ecx,0xb0(%rsp)
               :   98f3a:	cmp    $0xf,%eax
               :   98f3d:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   98f43:	shl    $0x7,%rax
               :   98f47:	lea    0x180(%rsp),%rsi
               :   98f4f:	add    0xfcfba(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   98f56:	mov    $0x1,%edx
               :   98f5b:	callq  *0x70(%rax)
               :   98f5e:	mov    0xa8(%rsp),%r9
               :   98f66:	mov    0xb0(%rsp),%ecx
               :   98f6d:	jmpq   9467e <mlx5_tx_burst_mtiv_empw+0x30ae>
               :   98f72:	mov    %r12,%rdi
               :   98f75:	and    $0x1f,%edi
               :   98f78:	je     995c6 <mlx5_tx_burst_mtiv_empw+0x7ff6>
               :   98f7e:	mov    $0x20,%edx
               :   98f83:	sub    %rdi,%rdx
               :   98f86:	lea    -0x20(%rsi,%rdi,1),%r9
               :   98f8b:	vmovdqu64 %ymm0,(%r12)
               :   98f92:	add    %rdx,%rax
               :   98f95:	lea    (%r12,%rdx,1),%r8
               :   98f99:	lea    -0x80(%r9),%rdx
               :   98f9d:	and    $0xffffffffffffff80,%rdx
               :   98fa1:	lea    0x80(%rax,%rdx,1),%r10
               :   98fa9:	mov    %r8,%rdi
               :   98fac:	mov    %rax,%rdx
               :   98faf:	vmovdqu64 (%rdx),%ymm2
               :   98fb5:	vmovdqu64 0x20(%rdx),%ymm1
               :   98fbc:	vmovdqu64 0x40(%rdx),%ymm0
               :   98fc3:	vmovdqu64 0x60(%rdx),%ymm7
               :   98fca:	sub    $0xffffffffffffff80,%rdx
               :   98fce:	vmovdqu64 %ymm7,0x60(%rdi)
               :   98fd5:	vmovdqu64 %ymm2,(%rdi)
               :   98fdb:	vmovdqu64 %ymm1,0x20(%rdi)
               :   98fe2:	vmovdqu64 %ymm0,0x40(%rdi)
               :   98fe9:	sub    $0xffffffffffffff80,%rdi
               :   98fed:	cmp    %r10,%rdx
               :   98ff0:	jne    98faf <mlx5_tx_burst_mtiv_empw+0x79df>
               :   98ff2:	mov    %r9,%rdx
               :   98ff5:	and    $0xffffffffffffff80,%rdx
               :   98ff9:	mov    %r9,%rdi
               :   98ffc:	add    %rdx,%rax
               :   98fff:	and    $0x7f,%edi
               :   99002:	add    %r8,%rdx
               :   99005:	jmpq   96e04 <mlx5_tx_burst_mtiv_empw+0x5834>
               :   9900a:	mov    %rcx,%r9
               :   9900d:	mov    %r12,%r8
               :   99010:	jmpq   983ba <mlx5_tx_burst_mtiv_empw+0x6dea>
               :   99015:	vmovdqu64 (%rax),%ymm0
               :   9901b:	jmpq   9836e <mlx5_tx_burst_mtiv_empw+0x6d9e>
               :   99020:	mov    0x2(%rdx),%rax
               :   99024:	mov    %rax,0x20(%r12)
               :   99029:	movzwl 0xa(%rdx),%eax
               :   9902d:	mov    %ax,0x28(%r12)
               :   99033:	movzwl 0x2a(%rbx),%eax
               :   99037:	or     $0x81000000,%eax
               :   9903c:	bswap  %eax
               :   9903e:	mov    %eax,0x2a(%r12)
               :   99043:	movzwl 0xc(%rdx),%eax
               :   99047:	mov    %ax,0x2e(%r12)
               :   9904d:	lea    0xe(%rdx),%rax
               :   99051:	jmpq   976d4 <mlx5_tx_burst_mtiv_empw+0x6104>
               :   99056:	movslq 0x58(%r12),%rax
               :   9905b:	mov    %r11,0xb0(%rsp)
               :   99063:	lea    0x40(%rbx),%r13
               :   99067:	cmp    $0xf,%eax
               :   9906a:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   99070:	shl    $0x7,%rax
               :   99074:	add    0xfce95(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9907b:	mov    %r13,%rsi
               :   9907e:	mov    %r12,%rdi
               :   99081:	callq  *0x70(%rax)
               :   99084:	movl   $0x1,0x8(%rbx)
               :   9908b:	mov    0xb0(%rsp),%r11
               :   99093:	jmpq   95e82 <mlx5_tx_burst_mtiv_empw+0x48b2>
               :   99098:	lock decw (%rdx)
               :   9909c:	jne    94f13 <mlx5_tx_burst_mtiv_empw+0x3943>
               :   990a2:	mov    $0x3,%eax
               :   990a7:	shl    $0x3d,%rax
               :   990ab:	test   %rax,0x18(%r13)
               :   990af:	jne    99a5c <mlx5_tx_burst_mtiv_empw+0x848c>
               :   990b5:	vzeroupper 
               :   990b8:	cmpq   $0x0,0x40(%r13)
               :   990bd:	je     990c7 <mlx5_tx_burst_mtiv_empw+0x7af7>
               :   990bf:	movq   $0x0,0x40(%r13)
               :   990c7:	cmpw   $0x1,0x14(%r13)
               :   990cd:	je     990d6 <mlx5_tx_burst_mtiv_empw+0x7b06>
               :   990cf:	movw   $0x1,0x14(%r13)
               :   990d6:	mov    %r13,%rdi
               :   990d9:	callq  6f5f0 <rte_mbuf_refcnt_set.constprop.0>
               :   990de:	mov    0x38(%r13),%r15
               :   990e2:	mov    0x44(%r15),%ebx
               :   990e6:	jmpq   94ea8 <mlx5_tx_burst_mtiv_empw+0x38d8>
               :   990eb:	mov    0x48(%r14),%rcx
               :   990ef:	test   %rcx,%rcx
               :   990f2:	je     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   990f8:	cmp    %rcx,%rdi
               :   990fb:	jb     99107 <mlx5_tx_burst_mtiv_empw+0x7b37>
               :   990fd:	cmp    0x50(%r14),%rdi
               :   99101:	jb     9a0af <mlx5_tx_burst_mtiv_empw+0x8adf>
               :   99107:	mov    0x5c(%r14),%rax
               :   9910b:	test   %rax,%rax
               :   9910e:	je     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   99114:	cmp    %rax,%rdi
               :   99117:	jb     9912c <mlx5_tx_burst_mtiv_empw+0x7b5c>
               :   99119:	lea    0x5c(%r14),%rax
               :   9911d:	mov    $0x1,%ecx
               :   99122:	cmp    0x64(%r14),%rdi
               :   99126:	jb     9a0b1 <mlx5_tx_burst_mtiv_empw+0x8ae1>
               :   9912c:	mov    0x70(%r14),%rax
               :   99130:	test   %rax,%rax
               :   99133:	je     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   99139:	cmp    %rdi,%rax
               :   9913c:	ja     99151 <mlx5_tx_burst_mtiv_empw+0x7b81>
               :   9913e:	lea    0x70(%r14),%rax
               :   99142:	mov    $0x2,%ecx
               :   99147:	cmp    0x78(%r14),%rdi
               :   9914b:	jb     9a0b1 <mlx5_tx_burst_mtiv_empw+0x8ae1>
               :   99151:	mov    0x84(%r14),%rax
               :   99158:	test   %rax,%rax
               :   9915b:	je     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   99161:	cmp    %rax,%rdi
               :   99164:	jb     9917f <mlx5_tx_burst_mtiv_empw+0x7baf>
               :   99166:	lea    0x84(%r14),%rax
               :   9916d:	mov    $0x3,%ecx
               :   99172:	cmp    0x8c(%r14),%rdi
               :   99179:	jb     9a0b1 <mlx5_tx_burst_mtiv_empw+0x8ae1>
               :   9917f:	mov    0x98(%r14),%rax
               :   99186:	test   %rax,%rax
               :   99189:	je     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   9918f:	cmp    %rax,%rdi
               :   99192:	jb     991ad <mlx5_tx_burst_mtiv_empw+0x7bdd>
               :   99194:	lea    0x98(%r14),%rax
               :   9919b:	mov    $0x4,%ecx
               :   991a0:	cmp    0xa0(%r14),%rdi
               :   991a7:	jb     9a0b1 <mlx5_tx_burst_mtiv_empw+0x8ae1>
               :   991ad:	mov    0xac(%r14),%rax
               :   991b4:	test   %rax,%rax
               :   991b7:	je     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   991b9:	cmp    %rdi,%rax
               :   991bc:	ja     991d7 <mlx5_tx_burst_mtiv_empw+0x7c07>
               :   991be:	lea    0xac(%r14),%rax
               :   991c5:	mov    $0x5,%ecx
               :   991ca:	cmp    0xb4(%r14),%rdi
               :   991d1:	jb     9a0b1 <mlx5_tx_burst_mtiv_empw+0x8ae1>
               :   991d7:	mov    0xc0(%r14),%rax
               :   991de:	test   %rax,%rax
               :   991e1:	je     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   991e3:	cmp    %rax,%rdi
               :   991e6:	jb     99201 <mlx5_tx_burst_mtiv_empw+0x7c31>
               :   991e8:	lea    0xc0(%r14),%rax
               :   991ef:	mov    $0x6,%ecx
               :   991f4:	cmp    0xc8(%r14),%rdi
               :   991fb:	jb     9a0b1 <mlx5_tx_burst_mtiv_empw+0x8ae1>
               :   99201:	mov    0xd4(%r14),%rax
               :   99208:	test   %rax,%rax
               :   9920b:	je     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   9920d:	cmp    %rax,%rdi
               :   99210:	jb     9922b <mlx5_tx_burst_mtiv_empw+0x7c5b>
               :   99212:	lea    0xd4(%r14),%rax
               :   99219:	mov    $0x7,%ecx
               :   9921e:	cmp    0xdc(%r14),%rdi
               :   99225:	jb     9a0b1 <mlx5_tx_burst_mtiv_empw+0x8ae1>
               :   9922b:	mov    %rbx,%rsi
               :   9922e:	mov    %r9,%rdi
               :   99231:	mov    %rdx,0xb8(%rsp)
               :   99239:	vzeroupper 
               :   9923c:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :   99241:	mov    0xb8(%rsp),%rdx
               :   99249:	jmpq   96025 <mlx5_tx_burst_mtiv_empw+0x4a55>
               :   9924e:	mov    %r12,%rdx
               :   99251:	mov    %rsi,%rdi
               :   99254:	vmovdqu64 %ymm0,(%rdx)
               :   9925a:	vmovdqu64 0x20(%rax),%ymm3
               :   99261:	sub    $0x40,%rdi
               :   99265:	vmovdqu64 %ymm3,0x20(%rdx)
               :   9926c:	add    $0x40,%rax
               :   99270:	add    $0x40,%rdx
               :   99274:	jmpq   96e0e <mlx5_tx_burst_mtiv_empw+0x583e>
               :   99279:	vmovdqu64 (%rax),%xmm7
               :   9927f:	vmovups %xmm7,(%rdx)
               :   99283:	vmovdqu64 -0x10(%rax,%rcx,1),%xmm0
               :   9928b:	vmovups %xmm0,-0x10(%rdx,%rcx,1)
               :   99291:	jmpq   977a0 <mlx5_tx_burst_mtiv_empw+0x61d0>
               :   99296:	mov    $0x1020c0,%eax
               :   9929b:	jmpq   93ba0 <mlx5_tx_burst_mtiv_empw+0x25d0>
               :   992a0:	movslq 0x58(%r12),%rax
               :   992a5:	mov    %r11,0xb0(%rsp)
               :   992ad:	cmp    $0xf,%eax
               :   992b0:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   992b6:	shl    $0x7,%rax
               :   992ba:	lea    0xe0(%rsp),%rsi
               :   992c2:	add    0xfcc47(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   992c9:	mov    $0x1,%edx
               :   992ce:	mov    %r12,%rdi
               :   992d1:	callq  *0x70(%rax)
               :   992d4:	mov    0xb0(%rsp),%r11
               :   992dc:	jmpq   95e8e <mlx5_tx_burst_mtiv_empw+0x48be>
               :   992e1:	mov    $0x1020c0,%eax
               :   992e6:	testb  $0x1,0x1020c4(%r12)
               :   992ef:	je     95d4e <mlx5_tx_burst_mtiv_empw+0x477e>
               :   992f5:	testb  $0x1,0x4(%r12,%rax,1)
               :   992fb:	je     97cc0 <mlx5_tx_burst_mtiv_empw+0x66f0>
               :   99301:	mov    0x50(%r13),%rsi
               :   99305:	lea    0x18(%r13),%rdi
               :   99309:	mov    %r11,0xb0(%rsp)
               :   99311:	vzeroupper 
               :   99314:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   99319:	test   %eax,%eax
               :   9931b:	mov    0xb0(%rsp),%r11
               :   99323:	jne    95e8e <mlx5_tx_burst_mtiv_empw+0x48be>
               :   99329:	mov    0x38(%r13),%r12
               :   9932d:	jmpq   95dec <mlx5_tx_burst_mtiv_empw+0x481c>
               :   99332:	mov    0x0(%r13),%rax
               :   99336:	movzwl 0x58(%r13),%edx
               :   9933b:	add    $0xffffffffffffff80,%rax
               :   9933f:	sub    %rdx,%rax
               :   99342:	movzwl 0x12(%rax),%ecx
               :   99346:	lea    0x12(%rax),%rdx
               :   9934a:	dec    %cx
               :   9934d:	jne    9a57d <mlx5_tx_burst_mtiv_empw+0x8fad>
               :   99353:	movw   $0x0,0x12(%rax)
               :   99359:	mov    %r11,0xb0(%rsp)
               :   99361:	movq   $0x0,0x40(%rax)
               :   99369:	movw   $0x1,0x14(%rax)
               :   9936f:	movw   $0x1,0x12(%rax)
               :   99375:	mov    %rax,0x160(%rsp)
               :   9937d:	mov    0x38(%rax),%r14
               :   99381:	vzeroupper 
               :   99384:	data16 lea 0xfcabc(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   9938c:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   99394:	cmpl   $0x0,0x44(%r14)
               :   99399:	mov    0xb0(%rsp),%r11
               :   993a1:	mov    (%rax),%eax
               :   993a3:	je     9a53d <mlx5_tx_burst_mtiv_empw+0x8f6d>
               :   993a9:	cmp    $0x7f,%eax
               :   993ac:	ja     9a53d <mlx5_tx_burst_mtiv_empw+0x8f6d>
               :   993b2:	mov    %eax,%ebx
               :   993b4:	imul   $0x2040,%rbx,%rbx
               :   993bb:	add    0x60(%r14),%rbx
               :   993bf:	je     9a53d <mlx5_tx_burst_mtiv_empw+0x8f6d>
               :   993c5:	mov    0x4(%rbx),%ecx
               :   993c8:	test   %ecx,%ecx
               :   993ca:	je     9a53d <mlx5_tx_burst_mtiv_empw+0x8f6d>
               :   993d0:	mov    0x8(%rbx),%edx
               :   993d3:	lea    0x1(%rdx),%eax
               :   993d6:	cmp    %eax,%ecx
               :   993d8:	jb     9a4ec <mlx5_tx_burst_mtiv_empw+0x8f1c>
               :   993de:	mov    %eax,0x8(%rbx)
               :   993e1:	lea    0x40(%rbx,%rdx,8),%rcx
               :   993e6:	mov    0x160(%rsp),%rax
               :   993ee:	mov    %rax,(%rcx)
               :   993f1:	jmpq   95d8a <mlx5_tx_burst_mtiv_empw+0x47ba>
               :   993f6:	mov    0x58(%rsp),%rdi
               :   993fb:	mov    %rcx,0x50(%rsp)
               :   99400:	vzeroupper 
               :   99403:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   99408:	test   $0x1,%al
               :   9940a:	mov    0x50(%rsp),%rcx
               :   9940f:	je     97a14 <mlx5_tx_burst_mtiv_empw+0x6444>
               :   99415:	mov    0x50(%r13),%rsi
               :   99419:	lea    0x18(%r13),%rdi
               :   9941d:	mov    %rcx,0x58(%rsp)
               :   99422:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   99427:	test   %eax,%eax
               :   99429:	mov    0x58(%rsp),%rcx
               :   9942e:	je     97a14 <mlx5_tx_burst_mtiv_empw+0x6444>
               :   99434:	jmpq   957d3 <mlx5_tx_burst_mtiv_empw+0x4203>
               :   99439:	movslq 0x58(%r9),%rax
               :   9943d:	mov    %r8d,0x98(%rsp)
               :   99445:	mov    %rcx,0xa8(%rsp)
               :   9944d:	lea    0x40(%rcx),%rsi
               :   99451:	cmp    $0xf,%eax
               :   99454:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9945a:	shl    $0x7,%rax
               :   9945e:	add    0xfcaab(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   99465:	mov    %r9,%rdi
               :   99468:	mov    %rsi,0xb8(%rsp)
               :   99470:	callq  *0x70(%rax)
               :   99473:	mov    0xa8(%rsp),%rcx
               :   9947b:	mov    0x98(%rsp),%r8d
               :   99483:	movl   $0x1,0x8(%rcx)
               :   9948a:	mov    0xb8(%rsp),%rsi
               :   99492:	jmpq   978f9 <mlx5_tx_burst_mtiv_empw+0x6329>
               :   99497:	lea    0xd8(%rsp),%rsi
               :   9949f:	mov    $0x1,%edx
               :   994a4:	mov    %r9,%rdi
               :   994a7:	mov    %r8d,0xb8(%rsp)
               :   994af:	callq  6f5b0 <rte_mempool_ops_enqueue_bulk>
               :   994b4:	mov    0xb8(%rsp),%r8d
               :   994bc:	jmpq   931e0 <mlx5_tx_burst_mtiv_empw+0x1c10>
               :   994c1:	mov    %r9,%rdi
               :   994c4:	mov    %rdx,0xa8(%rsp)
               :   994cc:	mov    %r9,0xb8(%rsp)
               :   994d4:	vzeroupper 
               :   994d7:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :   994dc:	mov    (%rbx),%rdi
               :   994df:	mov    0xa8(%rsp),%rdx
               :   994e7:	mov    0xb8(%rsp),%r9
               :   994ef:	jmpq   95ff5 <mlx5_tx_burst_mtiv_empw+0x4a25>
               :   994f4:	or     $0xffffffff,%edx
               :   994f7:	lock xadd %dx,(%rax)
               :   994fc:	dec    %dx
               :   994ff:	je     956b3 <mlx5_tx_burst_mtiv_empw+0x40e3>
               :   99505:	vzeroupper 
               :   99508:	jmpq   956ce <mlx5_tx_burst_mtiv_empw+0x40fe>
               :   9950d:	xor    %eax,%eax
               :   9950f:	mov    %ax,0x44(%r14)
               :   99514:	mov    0x10(%rsi),%eax
               :   99517:	jmpq   923f8 <mlx5_tx_burst_mtiv_empw+0xe28>
               :   9951c:	lea    0x5c(%r14),%rsi
               :   99520:	mov    $0x1,%eax
               :   99525:	jmp    9950f <mlx5_tx_burst_mtiv_empw+0x7f3f>
               :   99527:	lea    0x70(%r14),%rsi
               :   9952b:	mov    $0x2,%eax
               :   99530:	jmp    9950f <mlx5_tx_burst_mtiv_empw+0x7f3f>
               :   99532:	vmovdqu64 (%rax),%ymm0
               :   99538:	jmpq   99254 <mlx5_tx_burst_mtiv_empw+0x7c84>
               :   9953d:	mov    %r13,%rdi
               :   99540:	mov    %r9,0xa8(%rsp)
               :   99548:	mov    %r8d,0xb0(%rsp)
               :   99550:	vzeroupper 
               :   99553:	callq  6f600 <rte_pktmbuf_detach>
               :   99558:	mov    $0x1,%eax
               :   9955d:	shl    $0x3d,%rax
               :   99561:	test   %rax,0x18(%r13)
               :   99565:	mov    0xb0(%rsp),%r8d
               :   9956d:	mov    0xa8(%rsp),%r9
               :   99575:	je     98618 <mlx5_tx_burst_mtiv_empw+0x7048>
               :   9957b:	mov    0x38(%r13),%rdi
               :   9957f:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   99584:	test   $0x1,%al
               :   99586:	mov    0xb0(%rsp),%r8d
               :   9958e:	mov    0xa8(%rsp),%r9
               :   99596:	je     98618 <mlx5_tx_burst_mtiv_empw+0x7048>
               :   9959c:	mov    0x50(%r13),%rsi
               :   995a0:	lea    0x18(%r13),%rdi
               :   995a4:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   995a9:	test   %eax,%eax
               :   995ab:	mov    0xb0(%rsp),%r8d
               :   995b3:	mov    0xa8(%rsp),%r9
               :   995bb:	je     98618 <mlx5_tx_burst_mtiv_empw+0x7048>
               :   995c1:	jmpq   94c47 <mlx5_tx_burst_mtiv_empw+0x3677>
               :   995c6:	mov    %rsi,%r9
               :   995c9:	mov    %r12,%r8
               :   995cc:	jmpq   98f99 <mlx5_tx_burst_mtiv_empw+0x79c9>
               :   995d1:	mov    %rbx,%rdi
               :   995d4:	mov    %r8,0xa8(%rsp)
               :   995dc:	mov    %ecx,0xb0(%rsp)
               :   995e3:	vzeroupper 
               :   995e6:	callq  6f600 <rte_pktmbuf_detach>
               :   995eb:	mov    $0x1,%eax
               :   995f0:	shl    $0x3d,%rax
               :   995f4:	test   %rax,0x18(%rbx)
               :   995f8:	mov    0xb0(%rsp),%ecx
               :   995ff:	mov    0xa8(%rsp),%r8
               :   99607:	je     98ef0 <mlx5_tx_burst_mtiv_empw+0x7920>
               :   9960d:	mov    0x38(%rbx),%rdi
               :   99611:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   99616:	test   $0x1,%al
               :   99618:	mov    0xb0(%rsp),%ecx
               :   9961f:	mov    0xa8(%rsp),%r8
               :   99627:	je     98ef0 <mlx5_tx_burst_mtiv_empw+0x7920>
               :   9962d:	mov    0x50(%rbx),%rsi
               :   99631:	lea    0x18(%rbx),%rdi
               :   99635:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   9963a:	test   %eax,%eax
               :   9963c:	mov    0xb0(%rsp),%ecx
               :   99643:	mov    0xa8(%rsp),%r8
               :   9964b:	je     98ef0 <mlx5_tx_burst_mtiv_empw+0x7920>
               :   99651:	jmpq   96782 <mlx5_tx_burst_mtiv_empw+0x51b2>
               :   99656:	or     $0xffffffff,%esi
               :   99659:	lock xadd %si,(%rdx)
               :   9965e:	dec    %si
               :   99661:	jne    957d3 <mlx5_tx_burst_mtiv_empw+0x4203>
               :   99667:	movw   $0x1,0x10(%rax)
               :   9966d:	jmpq   95b41 <mlx5_tx_burst_mtiv_empw+0x4571>
               :   99672:	movslq 0x58(%rdi),%rax
               :   99676:	mov    %rcx,0x8(%rsp)
               :   9967b:	mov    %r8,0x50(%rsp)
               :   99680:	lea    0x40(%r8),%rsi
               :   99684:	cmp    $0xf,%eax
               :   99687:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9968d:	shl    $0x7,%rax
               :   99691:	add    0xfc878(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   99698:	mov    %rsi,0x58(%rsp)
               :   9969d:	callq  *0x70(%rax)
               :   996a0:	mov    0x50(%rsp),%r8
               :   996a5:	mov    0x8(%rsp),%rcx
               :   996aa:	movl   $0x1,0x8(%r8)
               :   996b2:	mov    0x58(%rsp),%rsi
               :   996b7:	jmpq   97347 <mlx5_tx_burst_mtiv_empw+0x5d77>
               :   996bc:	or     $0xffffffff,%esi
               :   996bf:	lock xadd %si,(%rdx)
               :   996c4:	dec    %si
               :   996c7:	jne    99505 <mlx5_tx_burst_mtiv_empw+0x7f35>
               :   996cd:	jmpq   972af <mlx5_tx_burst_mtiv_empw+0x5cdf>
               :   996d2:	mov    %r13,%rdi
               :   996d5:	mov    %rdx,0x88(%rsp)
               :   996dd:	vzeroupper 
               :   996e0:	callq  6f600 <rte_pktmbuf_detach>
               :   996e5:	mov    $0x1,%eax
               :   996ea:	shl    $0x3d,%rax
               :   996ee:	test   %rax,0x18(%r13)
               :   996f2:	mov    0x88(%rsp),%rdx
               :   996fa:	je     98804 <mlx5_tx_burst_mtiv_empw+0x7234>
               :   99700:	mov    0x38(%r13),%rdi
               :   99704:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   99709:	test   $0x1,%al
               :   9970b:	mov    0x88(%rsp),%rdx
               :   99713:	je     98804 <mlx5_tx_burst_mtiv_empw+0x7234>
               :   99719:	mov    0x50(%r13),%rsi
               :   9971d:	lea    0x18(%r13),%rdi
               :   99721:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   99726:	test   %eax,%eax
               :   99728:	mov    0x88(%rsp),%rdx
               :   99730:	je     98804 <mlx5_tx_burst_mtiv_empw+0x7234>
               :   99736:	jmpq   96f82 <mlx5_tx_burst_mtiv_empw+0x59b2>
               :   9973b:	mov    $0x1020c0,%eax
               :   99740:	jmpq   93617 <mlx5_tx_burst_mtiv_empw+0x2047>
               :   99745:	mov    %r13,%rdi
               :   99748:	vzeroupper 
               :   9974b:	callq  6f600 <rte_pktmbuf_detach>
               :   99750:	mov    $0x1,%eax
               :   99755:	shl    $0x3d,%rax
               :   99759:	test   %rax,0x18(%r13)
               :   9975d:	je     99788 <mlx5_tx_burst_mtiv_empw+0x81b8>
               :   9975f:	mov    0x38(%r13),%r14
               :   99763:	mov    %r14,%rdi
               :   99766:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   9976b:	test   $0x1,%al
               :   9976d:	je     9747c <mlx5_tx_burst_mtiv_empw+0x5eac>
               :   99773:	mov    0x50(%r13),%rsi
               :   99777:	lea    0x18(%r13),%rdi
               :   9977b:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   99780:	test   %eax,%eax
               :   99782:	jne    9750c <mlx5_tx_burst_mtiv_empw+0x5f3c>
               :   99788:	mov    0x38(%r13),%r14
               :   9978c:	jmpq   9747c <mlx5_tx_burst_mtiv_empw+0x5eac>
               :   99791:	mov    0x50(%rbx),%rdx
               :   99795:	movzwl 0x10(%rdx),%ecx
               :   99799:	lea    0x10(%rdx),%rax
               :   9979d:	dec    %cx
               :   997a0:	jne    9a450 <mlx5_tx_burst_mtiv_empw+0x8e80>
               :   997a6:	movw   $0x0,0x10(%rdx)
               :   997ac:	mov    0x50(%rbx),%rax
               :   997b0:	mov    (%rbx),%rdi
               :   997b3:	mov    0x8(%rax),%rsi
               :   997b7:	mov    %r8d,0xa8(%rsp)
               :   997bf:	mov    %r9,0xb8(%rsp)
               :   997c7:	vzeroupper 
               :   997ca:	callq  *(%rax)
               :   997cc:	mov    0xb8(%rsp),%r9
               :   997d4:	mov    0xa8(%rsp),%r8d
               :   997dc:	cmpl   $0x1,0x44(%r9)
               :   997e1:	sbb    %rax,%rax
               :   997e4:	and    $0xffffffffffefe000,%rax
               :   997ea:	lea    0x1020c0(%r9,%rax,1),%rax
               :   997f2:	movzwl 0x2(%rax),%edx
               :   997f6:	movzwl (%rax),%eax
               :   997f9:	mov    %dx,0x58(%rbx)
               :   997fd:	sub    $0xffffffffffffff80,%rdx
               :   99801:	lea    (%rbx,%rdx,1),%rcx
               :   99805:	add    -0x8(%rbx),%rdx
               :   99809:	mov    %rdx,0x8(%rbx)
               :   9980d:	cmp    $0x80,%ax
               :   99811:	mov    $0x80,%edx
               :   99816:	mov    %ax,0x36(%rbx)
               :   9981a:	cmova  %edx,%eax
               :   9981d:	xor    %r11d,%r11d
               :   99820:	mov    %rcx,(%rbx)
               :   99823:	mov    %ax,0x10(%rbx)
               :   99827:	mov    %r11w,0x28(%rbx)
               :   9982c:	movq   $0x0,0x18(%rbx)
               :   99834:	mov    0x38(%rbx),%r9
               :   99838:	jmpq   97855 <mlx5_tx_burst_mtiv_empw+0x6285>
               :   9983d:	testb  $0x1,0x1020c4(%r9)
               :   99845:	je     99791 <mlx5_tx_burst_mtiv_empw+0x81c1>
               :   9984b:	mov    $0x1020c0,%eax
               :   99850:	jmpq   9781d <mlx5_tx_burst_mtiv_empw+0x624d>
               :   99855:	mov    %r13,%rdi
               :   99858:	mov    %r11,0xb0(%rsp)
               :   99860:	vzeroupper 
               :   99863:	callq  6f5e0 <__rte_mbuf_refcnt_update.constprop.0>
               :   99868:	test   %ax,%ax
               :   9986b:	mov    0xb0(%rsp),%r11
               :   99873:	jne    95e8e <mlx5_tx_burst_mtiv_empw+0x48be>
               :   99879:	mov    $0x3,%eax
               :   9987e:	shl    $0x3d,%rax
               :   99882:	test   %rax,0x18(%r13)
               :   99886:	je     998de <mlx5_tx_burst_mtiv_empw+0x830e>
               :   99888:	mov    %r11,0xb0(%rsp)
               :   99890:	callq  6f600 <rte_pktmbuf_detach>
               :   99895:	mov    $0x1,%eax
               :   9989a:	shl    $0x3d,%rax
               :   9989e:	test   %rax,0x18(%r13)
               :   998a2:	mov    0xb0(%rsp),%r11
               :   998aa:	je     998de <mlx5_tx_burst_mtiv_empw+0x830e>
               :   998ac:	mov    0x38(%r13),%rdi
               :   998b0:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   998b5:	test   $0x1,%al
               :   998b7:	mov    0xb0(%rsp),%r11
               :   998bf:	je     998de <mlx5_tx_burst_mtiv_empw+0x830e>
               :   998c1:	mov    0x50(%r13),%rsi
               :   998c5:	lea    0x18(%r13),%rdi
               :   998c9:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   998ce:	test   %eax,%eax
               :   998d0:	mov    0xb0(%rsp),%r11
               :   998d8:	jne    95e8e <mlx5_tx_burst_mtiv_empw+0x48be>
               :   998de:	cmpq   $0x0,0x40(%r13)
               :   998e3:	je     998ed <mlx5_tx_burst_mtiv_empw+0x831d>
               :   998e5:	movq   $0x0,0x40(%r13)
               :   998ed:	cmpw   $0x1,0x14(%r13)
               :   998f3:	je     998fc <mlx5_tx_burst_mtiv_empw+0x832c>
               :   998f5:	movw   $0x1,0x14(%r13)
               :   998fc:	mov    %r13,%rdi
               :   998ff:	mov    %r11,0xb0(%rsp)
               :   99907:	callq  6f5f0 <rte_mbuf_refcnt_set.constprop.0>
               :   9990c:	mov    0x38(%r13),%r12
               :   99910:	mov    0xb0(%rsp),%r11
               :   99918:	jmpq   95e0d <mlx5_tx_burst_mtiv_empw+0x483d>
               :   9991d:	mov    (%rbx),%rax
               :   99920:	movzwl 0x58(%rbx),%edx
               :   99924:	add    $0xffffffffffffff80,%rax
               :   99928:	sub    %rdx,%rax
               :   9992b:	movzwl 0x12(%rax),%ecx
               :   9992f:	lea    0x12(%rax),%rdx
               :   99933:	dec    %cx
               :   99936:	jne    9ab8f <mlx5_tx_burst_mtiv_empw+0x95bf>
               :   9993c:	movw   $0x0,0x12(%rax)
               :   99942:	movq   $0x0,0x40(%rax)
               :   9994a:	movw   $0x1,0x14(%rax)
               :   99950:	mov    %r8d,0x98(%rsp)
               :   99958:	mov    %r9,0xa8(%rsp)
               :   99960:	movw   $0x1,0x12(%rax)
               :   99966:	mov    0x38(%rax),%rdi
               :   9996a:	mov    %rax,0x190(%rsp)
               :   99972:	mov    %rdi,0xb8(%rsp)
               :   9997a:	vzeroupper 
               :   9997d:	data16 lea 0xfc4c3(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   99985:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   9998d:	mov    0xb8(%rsp),%rdi
               :   99995:	mov    0xa8(%rsp),%r9
               :   9999d:	cmpl   $0x0,0x44(%rdi)
               :   999a1:	mov    0x98(%rsp),%r8d
               :   999a9:	mov    (%rax),%eax
               :   999ab:	je     9ab42 <mlx5_tx_burst_mtiv_empw+0x9572>
               :   999b1:	cmp    $0x7f,%eax
               :   999b4:	ja     9ab42 <mlx5_tx_burst_mtiv_empw+0x9572>
               :   999ba:	mov    %eax,%ecx
               :   999bc:	imul   $0x2040,%rcx,%rcx
               :   999c3:	add    0x60(%rdi),%rcx
               :   999c7:	je     9ab42 <mlx5_tx_burst_mtiv_empw+0x9572>
               :   999cd:	mov    0x4(%rcx),%esi
               :   999d0:	test   %esi,%esi
               :   999d2:	je     9ab42 <mlx5_tx_burst_mtiv_empw+0x9572>
               :   999d8:	mov    0x8(%rcx),%edx
               :   999db:	lea    0x1(%rdx),%eax
               :   999de:	cmp    %eax,%esi
               :   999e0:	jb     9a974 <mlx5_tx_burst_mtiv_empw+0x93a4>
               :   999e6:	mov    %eax,0x8(%rcx)
               :   999e9:	lea    0x40(%rcx,%rdx,8),%rsi
               :   999ee:	mov    0x190(%rsp),%rax
               :   999f6:	mov    %rax,(%rsi)
               :   999f9:	jmpq   997dc <mlx5_tx_burst_mtiv_empw+0x820c>
               :   999fe:	movslq 0x58(%rdi),%rax
               :   99a02:	mov    %r8,0x58(%rsp)
               :   99a07:	mov    %ecx,0x60(%rsp)
               :   99a0b:	mov    %r10,0xa8(%rsp)
               :   99a13:	lea    0x40(%r10),%rsi
               :   99a17:	cmp    $0xf,%eax
               :   99a1a:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   99a20:	shl    $0x7,%rax
               :   99a24:	add    0xfc4e5(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   99a2b:	mov    %rsi,0xb0(%rsp)
               :   99a33:	callq  *0x70(%rax)
               :   99a36:	mov    0xa8(%rsp),%r10
               :   99a3e:	mov    0x58(%rsp),%r8
               :   99a43:	movl   $0x1,0x8(%r10)
               :   99a4b:	mov    0x60(%rsp),%ecx
               :   99a4f:	mov    0xb0(%rsp),%rsi
               :   99a57:	jmpq   984f9 <mlx5_tx_burst_mtiv_empw+0x6f29>
               :   99a5c:	mov    %r13,%rdi
               :   99a5f:	vzeroupper 
               :   99a62:	callq  6f600 <rte_pktmbuf_detach>
               :   99a67:	mov    $0x1,%eax
               :   99a6c:	shl    $0x3d,%rax
               :   99a70:	test   %rax,0x18(%r13)
               :   99a74:	je     990b8 <mlx5_tx_burst_mtiv_empw+0x7ae8>
               :   99a7a:	mov    0x38(%r13),%rdi
               :   99a7e:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   99a83:	test   $0x1,%al
               :   99a85:	je     990b8 <mlx5_tx_burst_mtiv_empw+0x7ae8>
               :   99a8b:	mov    0x50(%r13),%rsi
               :   99a8f:	lea    0x18(%r13),%rdi
               :   99a93:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   99a98:	test   %eax,%eax
               :   99a9a:	je     990b8 <mlx5_tx_burst_mtiv_empw+0x7ae8>
               :   99aa0:	jmpq   94f13 <mlx5_tx_burst_mtiv_empw+0x3943>
               :   99aa5:	or     $0xffffffff,%ecx
               :   99aa8:	lock xadd %cx,(%rdx)
               :   99aad:	dec    %cx
               :   99ab0:	jne    94f13 <mlx5_tx_burst_mtiv_empw+0x3943>
               :   99ab6:	movw   $0x1,0x10(%rax)
               :   99abc:	jmpq   94e7c <mlx5_tx_burst_mtiv_empw+0x38ac>
               :   99ac1:	or     $0xffffffff,%edx
               :   99ac4:	lock xadd %dx,(%rax)
               :   99ac9:	dec    %dx
               :   99acc:	je     9611a <mlx5_tx_burst_mtiv_empw+0x4b4a>
               :   99ad2:	vzeroupper 
               :   99ad5:	jmpq   96135 <mlx5_tx_burst_mtiv_empw+0x4b65>
               :   99ada:	or     $0xffffffff,%esi
               :   99add:	lock xadd %si,(%rdx)
               :   99ae2:	dec    %si
               :   99ae5:	jne    93701 <mlx5_tx_burst_mtiv_empw+0x2131>
               :   99aeb:	movw   $0x1,0x10(%rax)
               :   99af1:	vzeroupper 
               :   99af4:	jmpq   962ff <mlx5_tx_burst_mtiv_empw+0x4d2f>
               :   99af9:	or     $0xffffffff,%edx
               :   99afc:	lock xadd %dx,(%rax)
               :   99b01:	dec    %dx
               :   99b04:	je     98cf1 <mlx5_tx_burst_mtiv_empw+0x7721>
               :   99b0a:	vzeroupper 
               :   99b0d:	jmpq   98d23 <mlx5_tx_burst_mtiv_empw+0x7753>
               :   99b12:	lea    0x40(%r13),%rcx
               :   99b16:	mov    %rcx,%rsi
               :   99b19:	mov    %r14,%rdi
               :   99b1c:	mov    %rcx,0x58(%rsp)
               :   99b21:	callq  6f5b0 <rte_mempool_ops_enqueue_bulk>
               :   99b26:	movl   $0x1,0x8(%r13)
               :   99b2e:	mov    0x58(%rsp),%rcx
               :   99b33:	jmpq   97501 <mlx5_tx_burst_mtiv_empw+0x5f31>
               :   99b38:	lea    0x190(%rsp),%rsi
               :   99b40:	mov    $0x1,%edx
               :   99b45:	mov    %r14,%rdi
               :   99b48:	callq  6f5b0 <rte_mempool_ops_enqueue_bulk>
               :   99b4d:	jmpq   9750c <mlx5_tx_burst_mtiv_empw+0x5f3c>
               :   99b52:	vmovdqu64 (%rax),%ymm1
               :   99b58:	vmovdqu64 %ymm1,(%rdx)
               :   99b5e:	vmovdqu64 -0x20(%rax,%rcx,1),%ymm2
               :   99b66:	vmovdqu64 %ymm2,-0x20(%rdx,%rcx,1)
               :   99b6e:	jmpq   977a0 <mlx5_tx_burst_mtiv_empw+0x61d0>
               :   99b73:	mov    %rbx,%rdi
               :   99b76:	mov    %r8d,0xb8(%rsp)
               :   99b7e:	vzeroupper 
               :   99b81:	callq  6f5e0 <__rte_mbuf_refcnt_update.constprop.0>
               :   99b86:	test   %ax,%ax
               :   99b89:	mov    0xb8(%rsp),%r8d
               :   99b91:	jne    931e0 <mlx5_tx_burst_mtiv_empw+0x1c10>
               :   99b97:	mov    $0x3,%eax
               :   99b9c:	shl    $0x3d,%rax
               :   99ba0:	test   %rax,0x18(%rbx)
               :   99ba4:	je     99bfc <mlx5_tx_burst_mtiv_empw+0x862c>
               :   99ba6:	mov    %r8d,0xb8(%rsp)
               :   99bae:	callq  6f600 <rte_pktmbuf_detach>
               :   99bb3:	mov    $0x1,%eax
               :   99bb8:	shl    $0x3d,%rax
               :   99bbc:	test   %rax,0x18(%rbx)
               :   99bc0:	mov    0xb8(%rsp),%r8d
               :   99bc8:	je     99bfc <mlx5_tx_burst_mtiv_empw+0x862c>
               :   99bca:	mov    0x38(%rbx),%rdi
               :   99bce:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   99bd3:	test   $0x1,%al
               :   99bd5:	mov    0xb8(%rsp),%r8d
               :   99bdd:	je     99bfc <mlx5_tx_burst_mtiv_empw+0x862c>
               :   99bdf:	mov    0x50(%rbx),%rsi
               :   99be3:	lea    0x18(%rbx),%rdi
               :   99be7:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   99bec:	test   %eax,%eax
               :   99bee:	mov    0xb8(%rsp),%r8d
               :   99bf6:	jne    931e0 <mlx5_tx_burst_mtiv_empw+0x1c10>
               :   99bfc:	cmpq   $0x0,0x40(%rbx)
               :   99c01:	je     99c0b <mlx5_tx_burst_mtiv_empw+0x863b>
               :   99c03:	movq   $0x0,0x40(%rbx)
               :   99c0b:	cmpw   $0x1,0x14(%rbx)
               :   99c10:	je     99c18 <mlx5_tx_burst_mtiv_empw+0x8648>
               :   99c12:	movw   $0x1,0x14(%rbx)
               :   99c18:	mov    %rbx,%rdi
               :   99c1b:	mov    %r8d,0xb8(%rsp)
               :   99c23:	callq  6f5f0 <rte_mbuf_refcnt_set.constprop.0>
               :   99c28:	mov    0x38(%rbx),%r9
               :   99c2c:	mov    0xb8(%rsp),%r8d
               :   99c34:	jmpq   97876 <mlx5_tx_burst_mtiv_empw+0x62a6>
               :   99c39:	mov    0xf8(%r14),%rdx
               :   99c40:	mov    0xb8(%rsp),%r11d
               :   99c48:	add    %rcx,%rax
               :   99c4b:	jmpq   976f6 <mlx5_tx_burst_mtiv_empw+0x6126>
               :   99c50:	mov    0x0(%r13),%rax
               :   99c54:	movzwl 0x58(%r13),%edx
               :   99c59:	add    $0xffffffffffffff80,%rax
               :   99c5d:	sub    %rdx,%rax
               :   99c60:	movzwl 0x12(%rax),%esi
               :   99c64:	lea    0x12(%rax),%rdx
               :   99c68:	dec    %si
               :   99c6b:	jne    9ab2c <mlx5_tx_burst_mtiv_empw+0x955c>
               :   99c71:	movw   $0x0,0x12(%rax)
               :   99c77:	mov    %rcx,0x8(%rsp)
               :   99c7c:	movq   $0x0,0x40(%rax)
               :   99c84:	movw   $0x1,0x14(%rax)
               :   99c8a:	movw   $0x1,0x12(%rax)
               :   99c90:	mov    %rax,0x138(%rsp)
               :   99c98:	mov    0x38(%rax),%rdi
               :   99c9c:	mov    %rdi,0x50(%rsp)
               :   99ca1:	vzeroupper 
               :   99ca4:	data16 lea 0xfc19c(%rip),%rdi        # 195e48 <per_lcore__lcore_id@DPDK_23>
               :   99cac:	data16 data16 callq a700 <__tls_get_addr@plt>
               :   99cb4:	mov    0x50(%rsp),%rdi
               :   99cb9:	mov    0x8(%rsp),%rcx
               :   99cbe:	cmpl   $0x0,0x44(%rdi)
               :   99cc2:	mov    (%rax),%eax
               :   99cc4:	je     9aaf5 <mlx5_tx_burst_mtiv_empw+0x9525>
               :   99cca:	cmp    $0x7f,%eax
               :   99ccd:	ja     9aaf5 <mlx5_tx_burst_mtiv_empw+0x9525>
               :   99cd3:	mov    %eax,%r8d
               :   99cd6:	imul   $0x2040,%r8,%r8
               :   99cdd:	add    0x60(%rdi),%r8
               :   99ce1:	je     9aaf5 <mlx5_tx_burst_mtiv_empw+0x9525>
               :   99ce7:	mov    0x4(%r8),%esi
               :   99ceb:	test   %esi,%esi
               :   99ced:	je     9aaf5 <mlx5_tx_burst_mtiv_empw+0x9525>
               :   99cf3:	mov    0x8(%r8),%edx
               :   99cf7:	lea    0x1(%rdx),%eax
               :   99cfa:	cmp    %eax,%esi
               :   99cfc:	jb     9aaad <mlx5_tx_burst_mtiv_empw+0x94dd>
               :   99d02:	mov    %eax,0x8(%r8)
               :   99d06:	lea    0x40(%r8,%rdx,8),%rsi
               :   99d0b:	mov    0x138(%rsp),%rax
               :   99d13:	mov    %rax,(%rsi)
               :   99d16:	jmpq   979b4 <mlx5_tx_burst_mtiv_empw+0x63e4>
               :   99d1b:	or     $0xffffffff,%esi
               :   99d1e:	lock xadd %si,(%rdx)
               :   99d23:	dec    %si
               :   99d26:	jne    99b0a <mlx5_tx_burst_mtiv_empw+0x853a>
               :   99d2c:	jmpq   98dc6 <mlx5_tx_burst_mtiv_empw+0x77f6>
               :   99d31:	or     $0xffffffff,%edx
               :   99d34:	lock xadd %dx,(%rax)
               :   99d39:	dec    %dx
               :   99d3c:	je     98926 <mlx5_tx_burst_mtiv_empw+0x7356>
               :   99d42:	vzeroupper 
               :   99d45:	jmpq   98937 <mlx5_tx_burst_mtiv_empw+0x7367>
               :   99d4a:	mov    %r12,0xb8(%rsp)
               :   99d52:	jmpq   91b59 <mlx5_tx_burst_mtiv_empw+0x589>
               :   99d57:	or     $0xffffffff,%ecx
               :   99d5a:	lock xadd %cx,(%rdx)
               :   99d5f:	dec    %cx
               :   99d62:	jne    99d42 <mlx5_tx_burst_mtiv_empw+0x8772>
               :   99d64:	jmpq   989e8 <mlx5_tx_burst_mtiv_empw+0x7418>
               :   99d69:	or     $0xffffffff,%edx
               :   99d6c:	lock xadd %dx,(%rax)
               :   99d71:	dec    %dx
               :   99d74:	je     97aba <mlx5_tx_burst_mtiv_empw+0x64ea>
               :   99d7a:	vzeroupper 
               :   99d7d:	jmpq   97ae5 <mlx5_tx_burst_mtiv_empw+0x6515>
               :   99d82:	or     $0xffffffff,%edx
               :   99d85:	lock xadd %dx,(%rax)
               :   99d8a:	dec    %dx
               :   99d8d:	je     96643 <mlx5_tx_burst_mtiv_empw+0x5073>
               :   99d93:	vzeroupper 
               :   99d96:	jmpq   96671 <mlx5_tx_burst_mtiv_empw+0x50a1>
               :   99d9b:	lea    0x40(%rbx),%r13
               :   99d9f:	mov    %r13,%rsi
               :   99da2:	mov    %r12,%rdi
               :   99da5:	mov    %r11,0x60(%rsp)
               :   99daa:	callq  6f5b0 <rte_mempool_ops_enqueue_bulk>
               :   99daf:	movl   $0x1,0x8(%rbx)
               :   99db6:	mov    0x60(%rsp),%r11
               :   99dbb:	jmpq   98714 <mlx5_tx_burst_mtiv_empw+0x7144>
               :   99dc0:	or     $0xffffffff,%esi
               :   99dc3:	lock xadd %si,(%rdx)
               :   99dc8:	dec    %si
               :   99dcb:	jne    99d93 <mlx5_tx_burst_mtiv_empw+0x87c3>
               :   99dcd:	jmpq   98451 <mlx5_tx_burst_mtiv_empw+0x6e81>
               :   99dd2:	or     $0xffffffff,%ecx
               :   99dd5:	lock xadd %cx,(%rdx)
               :   99dda:	dec    %cx
               :   99ddd:	jne    96f82 <mlx5_tx_burst_mtiv_empw+0x59b2>
               :   99de3:	movw   $0x1,0x10(%rax)
               :   99de9:	jmpq   96ed0 <mlx5_tx_burst_mtiv_empw+0x5900>
               :   99dee:	or     $0xffffffff,%esi
               :   99df1:	lock xadd %si,(%rdx)
               :   99df6:	dec    %si
               :   99df9:	jne    92c00 <mlx5_tx_burst_mtiv_empw+0x1630>
               :   99dff:	movw   $0x1,0x10(%rax)
               :   99e05:	vzeroupper 
               :   99e08:	jmpq   951b2 <mlx5_tx_burst_mtiv_empw+0x3be2>
               :   99e0d:	mov    0x60(%rsp),%ebx
               :   99e11:	movzwl 0x10(%rax),%edi
               :   99e15:	sub    %r8d,%ebx
               :   99e18:	add    %rbx,%rdi
               :   99e1b:	add    (%rax),%rdi
               :   99e1e:	jmpq   928b4 <mlx5_tx_burst_mtiv_empw+0x12e4>
               :   99e23:	test   %r9,%r9
               :   99e26:	je     977a0 <mlx5_tx_burst_mtiv_empw+0x61d0>
               :   99e2c:	vmovdqu64 -0x20(%rsi,%r9,1),%ymm4
               :   99e34:	vmovdqu64 %ymm4,-0x20(%rdx,%r9,1)
               :   99e3c:	jmpq   977a0 <mlx5_tx_burst_mtiv_empw+0x61d0>
               :   99e41:	mov    %rax,%rsi
               :   99e44:	mov    %rcx,%r9
               :   99e47:	vmovdqu64 (%rsi),%ymm0
               :   99e4d:	sub    $0x40,%r9
               :   99e51:	vmovdqu64 %ymm0,(%rdx)
               :   99e57:	vmovdqu64 0x20(%rsi),%ymm1
               :   99e5e:	add    $0x40,%rdx
               :   99e62:	vmovdqu64 %ymm1,-0x20(%rdx)
               :   99e69:	add    $0x40,%rsi
               :   99e6d:	jmpq   985a7 <mlx5_tx_burst_mtiv_empw+0x6fd7>
               :   99e72:	vmovdqu64 %ymm0,(%rdx)
               :   99e78:	vmovdqu64 -0x20(%rax,%rcx,1),%ymm4
               :   99e80:	vmovdqu64 %ymm4,-0x20(%rdx,%rcx,1)
               :   99e88:	jmpq   977a0 <mlx5_tx_burst_mtiv_empw+0x61d0>
               :   99e8d:	vmovdqu64 (%rax),%xmm1
               :   99e93:	vmovups %xmm1,(%rdx)
               :   99e97:	vmovdqu64 0x10(%rax),%xmm2
               :   99e9e:	vmovups %xmm2,0x10(%rdx)
               :   99ea3:	vmovdqu64 -0x10(%rax,%rcx,1),%xmm3
               :   99eab:	vmovups %xmm3,-0x10(%rdx,%rcx,1)
               :   99eb1:	jmpq   977a0 <mlx5_tx_burst_mtiv_empw+0x61d0>
               :   99eb6:	mov    $0xc0,%eax
               :   99ebb:	jmpq   95b11 <mlx5_tx_burst_mtiv_empw+0x4541>
               :   99ec0:	movslq 0x58(%rdi),%rax
               :   99ec4:	mov    %r8,0x40(%rsp)
               :   99ec9:	mov    %r9,0x48(%rsp)
               :   99ece:	lea    0x40(%r9),%rsi
               :   99ed2:	cmp    $0xf,%eax
               :   99ed5:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   99edb:	shl    $0x7,%rax
               :   99edf:	add    0xfc02a(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   99ee6:	mov    %rsi,0x58(%rsp)
               :   99eeb:	callq  *0x70(%rax)
               :   99eee:	mov    0x48(%rsp),%r9
               :   99ef3:	mov    0x40(%rsp),%r8
               :   99ef8:	movl   $0x1,0x8(%r9)
               :   99f00:	mov    0x58(%rsp),%rsi
               :   99f05:	jmpq   98c3b <mlx5_tx_burst_mtiv_empw+0x766b>
               :   99f0a:	or     $0xffffffff,%esi
               :   99f0d:	lock xadd %si,(%rdx)
               :   99f12:	dec    %si
               :   99f15:	jne    99ad2 <mlx5_tx_burst_mtiv_empw+0x8502>
               :   99f1b:	jmpq   98ba7 <mlx5_tx_burst_mtiv_empw+0x75d7>
               :   99f20:	or     $0xffffffff,%esi
               :   99f23:	lock xadd %si,(%rdx)
               :   99f28:	dec    %si
               :   99f2b:	jne    96782 <mlx5_tx_burst_mtiv_empw+0x51b2>
               :   99f31:	movw   $0x1,0x10(%rax)
               :   99f37:	jmpq   96a3b <mlx5_tx_burst_mtiv_empw+0x546b>
               :   99f3c:	movslq 0x58(%rdi),%rax
               :   99f40:	lea    0x40(%rcx),%rsi
               :   99f44:	cmp    $0xf,%eax
               :   99f47:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   99f4d:	shl    $0x7,%rax
               :   99f51:	add    0xfbfb8(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   99f58:	mov    %r8,0x48(%rsp)
               :   99f5d:	mov    %rcx,0x58(%rsp)
               :   99f62:	mov    %rsi,0x88(%rsp)
               :   99f6a:	callq  *0x70(%rax)
               :   99f6d:	mov    0x58(%rsp),%rcx
               :   99f72:	mov    0x48(%rsp),%r8
               :   99f77:	movl   $0x1,0x8(%rcx)
               :   99f7e:	mov    0x88(%rsp),%rsi
               :   99f86:	jmpq   98358 <mlx5_tx_burst_mtiv_empw+0x6d88>
               :   99f8b:	movslq 0x58(%rdi),%rax
               :   99f8f:	mov    %r8,0x88(%rsp)
               :   99f97:	cmp    $0xf,%eax
               :   99f9a:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   99fa0:	shl    $0x7,%rax
               :   99fa4:	lea    0x128(%rsp),%rsi
               :   99fac:	add    0xfbf5d(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   99fb3:	mov    $0x1,%edx
               :   99fb8:	callq  *0x70(%rax)
               :   99fbb:	mov    0x88(%rsp),%r8
               :   99fc3:	jmpq   98080 <mlx5_tx_burst_mtiv_empw+0x6ab0>
               :   99fc8:	or     $0xffffffff,%ecx
               :   99fcb:	lock xadd %cx,(%rdx)
               :   99fd0:	dec    %cx
               :   99fd3:	je     982c2 <mlx5_tx_burst_mtiv_empw+0x6cf2>
               :   99fd9:	vzeroupper 
               :   99fdc:	jmpq   98080 <mlx5_tx_burst_mtiv_empw+0x6ab0>
               :   99fe1:	or     $0xffffffff,%esi
               :   99fe4:	lock xadd %si,(%rdx)
               :   99fe9:	dec    %si
               :   99fec:	jne    94c47 <mlx5_tx_burst_mtiv_empw+0x3677>
               :   99ff2:	movw   $0x1,0x10(%rax)
               :   99ff8:	jmpq   96818 <mlx5_tx_burst_mtiv_empw+0x5248>
               :   99ffd:	lea    0xd4(%r14),%rsi
               :   9a004:	mov    $0x7,%eax
               :   9a009:	jmpq   9950f <mlx5_tx_burst_mtiv_empw+0x7f3f>
               :   9a00e:	mov    %r13,%rdi
               :   9a011:	mov    %rbx,0x60(%rsp)
               :   9a016:	vzeroupper 
               :   9a019:	callq  6f600 <rte_pktmbuf_detach>
               :   9a01e:	mov    $0x1,%eax
               :   9a023:	shl    $0x3d,%rax
               :   9a027:	test   %rax,0x18(%r13)
               :   9a02b:	mov    0x60(%rsp),%r11
               :   9a030:	je     9a06a <mlx5_tx_burst_mtiv_empw+0x8a9a>
               :   9a032:	mov    0x38(%r13),%r12
               :   9a036:	mov    %r11,0x60(%rsp)
               :   9a03b:	mov    %r12,%rdi
               :   9a03e:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   9a043:	test   $0x1,%al
               :   9a045:	mov    0x60(%rsp),%r11
               :   9a04a:	je     98688 <mlx5_tx_burst_mtiv_empw+0x70b8>
               :   9a050:	mov    0x50(%r13),%rsi
               :   9a054:	lea    0x18(%r13),%rdi
               :   9a058:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   9a05d:	test   %eax,%eax
               :   9a05f:	mov    0x60(%rsp),%r11
               :   9a064:	jne    98720 <mlx5_tx_burst_mtiv_empw+0x7150>
               :   9a06a:	mov    0x38(%r13),%r12
               :   9a06e:	jmpq   98688 <mlx5_tx_burst_mtiv_empw+0x70b8>
               :   9a073:	callq  aaf0 <__stack_chk_fail@plt>
               :   9a078:	movslq 0x58(%rdi),%rax
               :   9a07c:	mov    %rcx,0x58(%rsp)
               :   9a081:	cmp    $0xf,%eax
               :   9a084:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a08a:	shl    $0x7,%rax
               :   9a08e:	lea    0x130(%rsp),%rsi
               :   9a096:	add    0xfbe73(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a09d:	mov    $0x1,%edx
               :   9a0a2:	callq  *0x70(%rax)
               :   9a0a5:	mov    0x58(%rsp),%rcx
               :   9a0aa:	jmpq   956ce <mlx5_tx_burst_mtiv_empw+0x40fe>
               :   9a0af:	xor    %ecx,%ecx
               :   9a0b1:	mov    %cx,0x44(%r14)
               :   9a0b6:	mov    0x10(%rax),%eax
               :   9a0b9:	jmpq   9601c <mlx5_tx_burst_mtiv_empw+0x4a4c>
               :   9a0be:	lea    0x84(%r14),%rsi
               :   9a0c5:	mov    $0x3,%eax
               :   9a0ca:	jmpq   9950f <mlx5_tx_burst_mtiv_empw+0x7f3f>
               :   9a0cf:	lea    0x98(%r14),%rsi
               :   9a0d6:	mov    $0x4,%eax
               :   9a0db:	jmpq   9950f <mlx5_tx_burst_mtiv_empw+0x7f3f>
               :   9a0e0:	lea    0xac(%r14),%rsi
               :   9a0e7:	mov    $0x5,%eax
               :   9a0ec:	jmpq   9950f <mlx5_tx_burst_mtiv_empw+0x7f3f>
               :   9a0f1:	lea    0xc0(%r14),%rsi
               :   9a0f8:	mov    $0x6,%eax
               :   9a0fd:	jmpq   9950f <mlx5_tx_burst_mtiv_empw+0x7f3f>
               :   9a102:	movslq 0x58(%rdi),%rax
               :   9a106:	mov    %r9,0x50(%rsp)
               :   9a10b:	mov    %r8d,0x58(%rsp)
               :   9a110:	mov    %r11,0xa8(%rsp)
               :   9a118:	lea    0x40(%r11),%rsi
               :   9a11c:	cmp    $0xf,%eax
               :   9a11f:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a125:	shl    $0x7,%rax
               :   9a129:	add    0xfbde0(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a130:	mov    %rsi,0xb0(%rsp)
               :   9a138:	callq  *0x70(%rax)
               :   9a13b:	mov    0xa8(%rsp),%r11
               :   9a143:	mov    0x50(%rsp),%r9
               :   9a148:	movl   $0x1,0x8(%r11)
               :   9a150:	mov    0x58(%rsp),%r8d
               :   9a155:	mov    0xb0(%rsp),%rsi
               :   9a15d:	jmpq   97e29 <mlx5_tx_burst_mtiv_empw+0x6859>
               :   9a162:	movslq 0x58(%rdi),%rax
               :   9a166:	mov    %r9,0xa8(%rsp)
               :   9a16e:	mov    %r8d,0xb0(%rsp)
               :   9a176:	cmp    $0xf,%eax
               :   9a179:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a17f:	shl    $0x7,%rax
               :   9a183:	lea    0x148(%rsp),%rsi
               :   9a18b:	add    0xfbd7e(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a192:	mov    $0x1,%edx
               :   9a197:	callq  *0x70(%rax)
               :   9a19a:	mov    0xa8(%rsp),%r9
               :   9a1a2:	mov    0xb0(%rsp),%r8d
               :   9a1aa:	jmpq   94b2b <mlx5_tx_burst_mtiv_empw+0x355b>
               :   9a1af:	or     $0xffffffff,%esi
               :   9a1b2:	lock xadd %si,(%rdx)
               :   9a1b7:	dec    %si
               :   9a1ba:	je     97d79 <mlx5_tx_burst_mtiv_empw+0x67a9>
               :   9a1c0:	vzeroupper 
               :   9a1c3:	jmpq   94b2b <mlx5_tx_burst_mtiv_empw+0x355b>
               :   9a1c8:	movslq 0x58(%rdi),%rax
               :   9a1cc:	lea    0x40(%rbx),%rcx
               :   9a1d0:	cmp    $0xf,%eax
               :   9a1d3:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a1d9:	shl    $0x7,%rax
               :   9a1dd:	mov    %rcx,%rsi
               :   9a1e0:	add    0xfbd29(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a1e7:	mov    %rcx,0x88(%rsp)
               :   9a1ef:	callq  *0x70(%rax)
               :   9a1f2:	movl   $0x1,0x8(%rbx)
               :   9a1f9:	mov    0x88(%rsp),%rcx
               :   9a201:	jmpq   98a74 <mlx5_tx_burst_mtiv_empw+0x74a4>
               :   9a206:	mov    %r10,%rsi
               :   9a209:	mov    %r13,%rdi
               :   9a20c:	mov    %r11,0x60(%rsp)
               :   9a211:	mov    %r10,0xb0(%rsp)
               :   9a219:	vzeroupper 
               :   9a21c:	callq  aa30 <mlx5_mr_mb2mr_bh@plt>
               :   9a221:	mov    0xb0(%rsp),%r10
               :   9a229:	mov    0x60(%rsp),%r11
               :   9a22e:	jmpq   98b6d <mlx5_tx_burst_mtiv_empw+0x759d>
               :   9a233:	mov    0x48(%r11),%rcx
               :   9a237:	test   %rcx,%rcx
               :   9a23a:	je     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a23c:	cmp    %rcx,%rax
               :   9a23f:	jb     9a24b <mlx5_tx_burst_mtiv_empw+0x8c7b>
               :   9a241:	cmp    0x50(%r11),%rax
               :   9a245:	jb     9a4c2 <mlx5_tx_burst_mtiv_empw+0x8ef2>
               :   9a24b:	mov    0x5c(%r11),%rdx
               :   9a24f:	test   %rdx,%rdx
               :   9a252:	je     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a254:	cmp    %rdx,%rax
               :   9a257:	jb     9a263 <mlx5_tx_burst_mtiv_empw+0x8c93>
               :   9a259:	cmp    0x64(%r11),%rax
               :   9a25d:	jb     9a4a6 <mlx5_tx_burst_mtiv_empw+0x8ed6>
               :   9a263:	mov    0x70(%r11),%rdx
               :   9a267:	test   %rdx,%rdx
               :   9a26a:	je     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a26c:	cmp    %rdx,%rax
               :   9a26f:	jb     9a27b <mlx5_tx_burst_mtiv_empw+0x8cab>
               :   9a271:	cmp    %rax,0x78(%r11)
               :   9a275:	ja     9a4b4 <mlx5_tx_burst_mtiv_empw+0x8ee4>
               :   9a27b:	mov    0x84(%r11),%rdx
               :   9a282:	test   %rdx,%rdx
               :   9a285:	je     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a28b:	cmp    %rdx,%rax
               :   9a28e:	jb     9a29d <mlx5_tx_burst_mtiv_empw+0x8ccd>
               :   9a290:	cmp    0x8c(%r11),%rax
               :   9a297:	jb     9a596 <mlx5_tx_burst_mtiv_empw+0x8fc6>
               :   9a29d:	mov    0x98(%r11),%rdx
               :   9a2a4:	test   %rdx,%rdx
               :   9a2a7:	je     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a2ad:	cmp    %rdx,%rax
               :   9a2b0:	jb     9a2bf <mlx5_tx_burst_mtiv_empw+0x8cef>
               :   9a2b2:	cmp    0xa0(%r11),%rax
               :   9a2b9:	jb     9a5a7 <mlx5_tx_burst_mtiv_empw+0x8fd7>
               :   9a2bf:	mov    0xac(%r11),%rdx
               :   9a2c6:	test   %rdx,%rdx
               :   9a2c9:	je     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a2cf:	cmp    %rdx,%rax
               :   9a2d2:	jb     9a2e1 <mlx5_tx_burst_mtiv_empw+0x8d11>
               :   9a2d4:	cmp    0xb4(%r11),%rax
               :   9a2db:	jb     9a5b8 <mlx5_tx_burst_mtiv_empw+0x8fe8>
               :   9a2e1:	mov    0xc0(%r11),%rdx
               :   9a2e8:	test   %rdx,%rdx
               :   9a2eb:	je     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a2f1:	cmp    %rdx,%rax
               :   9a2f4:	jb     9a303 <mlx5_tx_burst_mtiv_empw+0x8d33>
               :   9a2f6:	cmp    0xc8(%r11),%rax
               :   9a2fd:	jb     9a5c9 <mlx5_tx_burst_mtiv_empw+0x8ff9>
               :   9a303:	mov    0xd4(%r11),%rdx
               :   9a30a:	cmp    %rdx,%rax
               :   9a30d:	jb     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a313:	test   %rdx,%rdx
               :   9a316:	je     9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a31c:	cmp    0xdc(%r11),%rax
               :   9a323:	jae    9a206 <mlx5_tx_burst_mtiv_empw+0x8c36>
               :   9a329:	lea    0xd4(%r11),%rdx
               :   9a330:	mov    $0x7,%eax
               :   9a335:	mov    %ax,0x44(%r11)
               :   9a33a:	mov    0x10(%rdx),%eax
               :   9a33d:	jmpq   98b64 <mlx5_tx_burst_mtiv_empw+0x7594>
               :   9a342:	mov    %r13,%rdi
               :   9a345:	mov    %r11,0x60(%rsp)
               :   9a34a:	mov    %r10,0xb0(%rsp)
               :   9a352:	vzeroupper 
               :   9a355:	callq  ab90 <mlx5_mr_flush_local_cache@plt>
               :   9a35a:	mov    0xb0(%rsp),%r10
               :   9a362:	mov    0x60(%rsp),%r11
               :   9a367:	mov    (%r10),%rax
               :   9a36a:	jmpq   98b3d <mlx5_tx_burst_mtiv_empw+0x756d>
               :   9a36f:	movslq 0x58(%rdi),%rax
               :   9a373:	mov    %r9,0x58(%rsp)
               :   9a378:	mov    %rcx,0x88(%rsp)
               :   9a380:	cmp    $0xf,%eax
               :   9a383:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a389:	shl    $0x7,%rax
               :   9a38d:	lea    0x170(%rsp),%rsi
               :   9a395:	add    0xfbb74(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a39c:	mov    $0x1,%edx
               :   9a3a1:	callq  *0x70(%rax)
               :   9a3a4:	mov    0x58(%rsp),%r9
               :   9a3a9:	mov    0x88(%rsp),%rcx
               :   9a3b1:	jmpq   97ae5 <mlx5_tx_burst_mtiv_empw+0x6515>
               :   9a3b6:	or     $0xffffffff,%esi
               :   9a3b9:	lock xadd %si,(%rdx)
               :   9a3be:	dec    %si
               :   9a3c1:	jne    99d7a <mlx5_tx_burst_mtiv_empw+0x87aa>
               :   9a3c7:	jmpq   97b88 <mlx5_tx_burst_mtiv_empw+0x65b8>
               :   9a3cc:	movslq 0x58(%rdi),%rax
               :   9a3d0:	mov    %r9,(%rsp)
               :   9a3d4:	mov    %rcx,0x8(%rsp)
               :   9a3d9:	mov    %r8,0x58(%rsp)
               :   9a3de:	lea    0x40(%r8),%rsi
               :   9a3e2:	cmp    $0xf,%eax
               :   9a3e5:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a3eb:	shl    $0x7,%rax
               :   9a3ef:	add    0xfbb1a(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a3f6:	mov    %rsi,0x88(%rsp)
               :   9a3fe:	callq  *0x70(%rax)
               :   9a401:	mov    0x58(%rsp),%r8
               :   9a406:	mov    (%rsp),%r9
               :   9a40a:	movl   $0x1,0x8(%r8)
               :   9a412:	mov    0x8(%rsp),%rcx
               :   9a417:	mov    0x88(%rsp),%rsi
               :   9a41f:	jmpq   97c32 <mlx5_tx_burst_mtiv_empw+0x6662>
               :   9a424:	or     $0xffffffff,%edx
               :   9a427:	lock xadd %dx,(%rax)
               :   9a42c:	dec    %dx
               :   9a42f:	jne    99fd9 <mlx5_tx_burst_mtiv_empw+0x8a09>
               :   9a435:	jmpq   9805f <mlx5_tx_burst_mtiv_empw+0x6a8f>
               :   9a43a:	or     $0xffffffff,%edx
               :   9a43d:	lock xadd %dx,(%rax)
               :   9a442:	dec    %dx
               :   9a445:	jne    9a1c0 <mlx5_tx_burst_mtiv_empw+0x8bf0>
               :   9a44b:	jmpq   94afa <mlx5_tx_burst_mtiv_empw+0x352a>
               :   9a450:	or     $0xffffffff,%edx
               :   9a453:	lock xadd %dx,(%rax)
               :   9a458:	dec    %dx
               :   9a45b:	je     997ac <mlx5_tx_burst_mtiv_empw+0x81dc>
               :   9a461:	vzeroupper 
               :   9a464:	jmpq   997dc <mlx5_tx_burst_mtiv_empw+0x820c>
               :   9a469:	lea    0x5c(%r11),%rdx
               :   9a46d:	mov    $0x1,%eax
               :   9a472:	mov    %ax,0x44(%r11)
               :   9a477:	mov    0x10(%rdx),%eax
               :   9a47a:	jmpq   95f1c <mlx5_tx_burst_mtiv_empw+0x494c>
               :   9a47f:	lea    0x70(%r11),%rdx
               :   9a483:	mov    $0x2,%eax
               :   9a488:	jmp    9a472 <mlx5_tx_burst_mtiv_empw+0x8ea2>
               :   9a48a:	lea    0x84(%r11),%rdx
               :   9a491:	mov    $0x3,%eax
               :   9a496:	jmp    9a472 <mlx5_tx_burst_mtiv_empw+0x8ea2>
               :   9a498:	lea    0x98(%r11),%rdx
               :   9a49f:	mov    $0x4,%eax
               :   9a4a4:	jmp    9a472 <mlx5_tx_burst_mtiv_empw+0x8ea2>
               :   9a4a6:	lea    0x5c(%r11),%rdx
               :   9a4aa:	mov    $0x1,%eax
               :   9a4af:	jmpq   9a335 <mlx5_tx_burst_mtiv_empw+0x8d65>
               :   9a4b4:	lea    0x70(%r11),%rdx
               :   9a4b8:	mov    $0x2,%eax
               :   9a4bd:	jmpq   9a335 <mlx5_tx_burst_mtiv_empw+0x8d65>
               :   9a4c2:	xor    %eax,%eax
               :   9a4c4:	jmpq   9a335 <mlx5_tx_burst_mtiv_empw+0x8d65>
               :   9a4c9:	mov    $0xc0,%eax
               :   9a4ce:	jmpq   967e8 <mlx5_tx_burst_mtiv_empw+0x5218>
               :   9a4d3:	or     $0xffffffff,%edx
               :   9a4d6:	lock xadd %dx,(%rax)
               :   9a4db:	dec    %dx
               :   9a4de:	je     97999 <mlx5_tx_burst_mtiv_empw+0x63c9>
               :   9a4e4:	vzeroupper 
               :   9a4e7:	jmpq   979b4 <mlx5_tx_burst_mtiv_empw+0x63e4>
               :   9a4ec:	movslq 0x58(%r14),%rax
               :   9a4f0:	mov    %r11,0x88(%rsp)
               :   9a4f8:	lea    0x40(%rbx),%rcx
               :   9a4fc:	cmp    $0xf,%eax
               :   9a4ff:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a505:	shl    $0x7,%rax
               :   9a509:	mov    %rcx,%rsi
               :   9a50c:	add    0xfb9fd(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a513:	mov    %r14,%rdi
               :   9a516:	mov    %rcx,0xb0(%rsp)
               :   9a51e:	callq  *0x70(%rax)
               :   9a521:	movl   $0x1,0x8(%rbx)
               :   9a528:	mov    0x88(%rsp),%r11
               :   9a530:	mov    0xb0(%rsp),%rcx
               :   9a538:	jmpq   993e6 <mlx5_tx_burst_mtiv_empw+0x7e16>
               :   9a53d:	movslq 0x58(%r14),%rax
               :   9a541:	mov    %r11,0xb0(%rsp)
               :   9a549:	cmp    $0xf,%eax
               :   9a54c:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a552:	shl    $0x7,%rax
               :   9a556:	lea    0x160(%rsp),%rsi
               :   9a55e:	add    0xfb9ab(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a565:	mov    $0x1,%edx
               :   9a56a:	mov    %r14,%rdi
               :   9a56d:	callq  *0x70(%rax)
               :   9a570:	mov    0xb0(%rsp),%r11
               :   9a578:	jmpq   95d8a <mlx5_tx_burst_mtiv_empw+0x47ba>
               :   9a57d:	or     $0xffffffff,%ecx
               :   9a580:	lock xadd %cx,(%rdx)
               :   9a585:	dec    %cx
               :   9a588:	je     99359 <mlx5_tx_burst_mtiv_empw+0x7d89>
               :   9a58e:	vzeroupper 
               :   9a591:	jmpq   95d8a <mlx5_tx_burst_mtiv_empw+0x47ba>
               :   9a596:	lea    0x84(%r11),%rdx
               :   9a59d:	mov    $0x3,%eax
               :   9a5a2:	jmpq   9a335 <mlx5_tx_burst_mtiv_empw+0x8d65>
               :   9a5a7:	lea    0x98(%r11),%rdx
               :   9a5ae:	mov    $0x4,%eax
               :   9a5b3:	jmpq   9a335 <mlx5_tx_burst_mtiv_empw+0x8d65>
               :   9a5b8:	lea    0xac(%r11),%rdx
               :   9a5bf:	mov    $0x5,%eax
               :   9a5c4:	jmpq   9a335 <mlx5_tx_burst_mtiv_empw+0x8d65>
               :   9a5c9:	lea    0xc0(%r11),%rdx
               :   9a5d0:	mov    $0x6,%eax
               :   9a5d5:	jmpq   9a335 <mlx5_tx_burst_mtiv_empw+0x8d65>
               :   9a5da:	movslq 0x58(%rdi),%rax
               :   9a5de:	mov    %r8,0x58(%rsp)
               :   9a5e3:	cmp    $0xf,%eax
               :   9a5e6:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a5ec:	shl    $0x7,%rax
               :   9a5f0:	lea    0x158(%rsp),%rsi
               :   9a5f8:	add    0xfb911(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a5ff:	mov    $0x1,%edx
               :   9a604:	callq  *0x70(%rax)
               :   9a607:	mov    0x58(%rsp),%r8
               :   9a60c:	jmpq   96135 <mlx5_tx_burst_mtiv_empw+0x4b65>
               :   9a611:	mov    %r13,%rdi
               :   9a614:	mov    %rbx,0x60(%rsp)
               :   9a619:	vzeroupper 
               :   9a61c:	callq  6f5e0 <__rte_mbuf_refcnt_update.constprop.0>
               :   9a621:	test   %ax,%ax
               :   9a624:	mov    0x60(%rsp),%r11
               :   9a629:	jne    98720 <mlx5_tx_burst_mtiv_empw+0x7150>
               :   9a62f:	mov    $0x3,%eax
               :   9a634:	shl    $0x3d,%rax
               :   9a638:	test   %rax,0x18(%r13)
               :   9a63c:	je     9a688 <mlx5_tx_burst_mtiv_empw+0x90b8>
               :   9a63e:	mov    %r11,0x60(%rsp)
               :   9a643:	callq  6f600 <rte_pktmbuf_detach>
               :   9a648:	mov    $0x1,%eax
               :   9a64d:	shl    $0x3d,%rax
               :   9a651:	test   %rax,0x18(%r13)
               :   9a655:	mov    0x60(%rsp),%r11
               :   9a65a:	je     9a688 <mlx5_tx_burst_mtiv_empw+0x90b8>
               :   9a65c:	mov    0x38(%r13),%rdi
               :   9a660:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   9a665:	test   $0x1,%al
               :   9a667:	mov    0x60(%rsp),%r11
               :   9a66c:	je     9a688 <mlx5_tx_burst_mtiv_empw+0x90b8>
               :   9a66e:	mov    0x50(%r13),%rsi
               :   9a672:	lea    0x18(%r13),%rdi
               :   9a676:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   9a67b:	test   %eax,%eax
               :   9a67d:	mov    0x60(%rsp),%r11
               :   9a682:	jne    98720 <mlx5_tx_burst_mtiv_empw+0x7150>
               :   9a688:	cmpq   $0x0,0x40(%r13)
               :   9a68d:	je     9a697 <mlx5_tx_burst_mtiv_empw+0x90c7>
               :   9a68f:	movq   $0x0,0x40(%r13)
               :   9a697:	cmpw   $0x1,0x14(%r13)
               :   9a69d:	je     9a6a6 <mlx5_tx_burst_mtiv_empw+0x90d6>
               :   9a69f:	movw   $0x1,0x14(%r13)
               :   9a6a6:	mov    %r13,%rdi
               :   9a6a9:	mov    %r11,0x60(%rsp)
               :   9a6ae:	callq  6f5f0 <rte_mbuf_refcnt_set.constprop.0>
               :   9a6b3:	mov    0x38(%r13),%r12
               :   9a6b7:	mov    0x60(%rsp),%r11
               :   9a6bc:	jmpq   986a6 <mlx5_tx_burst_mtiv_empw+0x70d6>
               :   9a6c1:	lea    0xd4(%r14),%rsi
               :   9a6c8:	mov    $0x7,%eax
               :   9a6cd:	mov    %ax,0x44(%r14)
               :   9a6d2:	mov    0x10(%rsi),%eax
               :   9a6d5:	jmpq   9319f <mlx5_tx_burst_mtiv_empw+0x1bcf>
               :   9a6da:	mov    $0x1020c0,%eax
               :   9a6df:	jmpq   96ea0 <mlx5_tx_burst_mtiv_empw+0x58d0>
               :   9a6e4:	mov    $0xc0,%eax
               :   9a6e9:	jmpq   96a0b <mlx5_tx_burst_mtiv_empw+0x543b>
               :   9a6ee:	lea    0x190(%rsp),%rsi
               :   9a6f6:	mov    $0x1,%edx
               :   9a6fb:	mov    %r12,%rdi
               :   9a6fe:	mov    %r11,0x60(%rsp)
               :   9a703:	callq  6f5b0 <rte_mempool_ops_enqueue_bulk>
               :   9a708:	mov    0x60(%rsp),%r11
               :   9a70d:	jmpq   98720 <mlx5_tx_burst_mtiv_empw+0x7150>
               :   9a712:	lea    0xac(%r11),%rdx
               :   9a719:	mov    $0x5,%eax
               :   9a71e:	jmpq   9a472 <mlx5_tx_burst_mtiv_empw+0x8ea2>
               :   9a723:	lea    0xc0(%r11),%rdx
               :   9a72a:	mov    $0x6,%eax
               :   9a72f:	jmpq   9a472 <mlx5_tx_burst_mtiv_empw+0x8ea2>
               :   9a734:	movslq 0x58(%r13),%rax
               :   9a738:	mov    %r9,0x48(%rsp)
               :   9a73d:	mov    %ecx,0x50(%rsp)
               :   9a741:	mov    %r8,0x58(%rsp)
               :   9a746:	mov    %r10,0x60(%rsp)
               :   9a74b:	lea    0x40(%r10),%rsi
               :   9a74f:	cmp    $0xf,%eax
               :   9a752:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a758:	shl    $0x7,%rax
               :   9a75c:	add    0xfb7ad(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a763:	mov    %r13,%rdi
               :   9a766:	mov    %rsi,0xa8(%rsp)
               :   9a76e:	callq  *0x70(%rax)
               :   9a771:	mov    0x60(%rsp),%r10
               :   9a776:	mov    0x48(%rsp),%r9
               :   9a77b:	movl   $0x1,0x8(%r10)
               :   9a783:	mov    0x50(%rsp),%ecx
               :   9a787:	mov    0x58(%rsp),%r8
               :   9a78c:	mov    0xa8(%rsp),%rsi
               :   9a794:	jmpq   98e69 <mlx5_tx_burst_mtiv_empw+0x7899>
               :   9a799:	movslq 0x58(%rdi),%rax
               :   9a79d:	cmp    $0xf,%eax
               :   9a7a0:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a7a6:	shl    $0x7,%rax
               :   9a7aa:	lea    0x178(%rsp),%rsi
               :   9a7b2:	add    0xfb757(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a7b9:	mov    $0x1,%edx
               :   9a7be:	callq  *0x70(%rax)
               :   9a7c1:	jmpq   98937 <mlx5_tx_burst_mtiv_empw+0x7367>
               :   9a7c6:	xor    %eax,%eax
               :   9a7c8:	jmpq   9a472 <mlx5_tx_burst_mtiv_empw+0x8ea2>
               :   9a7cd:	or     $0xffffffff,%edx
               :   9a7d0:	lock xadd %dx,(%rax)
               :   9a7d5:	dec    %dx
               :   9a7d8:	jne    9a58e <mlx5_tx_burst_mtiv_empw+0x8fbe>
               :   9a7de:	jmpq   95d69 <mlx5_tx_burst_mtiv_empw+0x4799>
               :   9a7e3:	mov    $0xc0,%eax
               :   9a7e8:	jmpq   992f5 <mlx5_tx_burst_mtiv_empw+0x7d25>
               :   9a7ed:	mov    %r13,%rdi
               :   9a7f0:	vzeroupper 
               :   9a7f3:	callq  6f5e0 <__rte_mbuf_refcnt_update.constprop.0>
               :   9a7f8:	test   %ax,%ax
               :   9a7fb:	jne    9750c <mlx5_tx_burst_mtiv_empw+0x5f3c>
               :   9a801:	mov    $0x3,%eax
               :   9a806:	shl    $0x3d,%rax
               :   9a80a:	test   %rax,0x18(%r13)
               :   9a80e:	je     9a846 <mlx5_tx_burst_mtiv_empw+0x9276>
               :   9a810:	callq  6f600 <rte_pktmbuf_detach>
               :   9a815:	mov    $0x1,%eax
               :   9a81a:	shl    $0x3d,%rax
               :   9a81e:	test   %rax,0x18(%r13)
               :   9a822:	je     9a846 <mlx5_tx_burst_mtiv_empw+0x9276>
               :   9a824:	mov    0x38(%r13),%rdi
               :   9a828:	callq  6f550 <rte_pktmbuf_priv_flags>
               :   9a82d:	test   $0x1,%al
               :   9a82f:	je     9a846 <mlx5_tx_burst_mtiv_empw+0x9276>
               :   9a831:	mov    0x50(%r13),%rsi
               :   9a835:	lea    0x18(%r13),%rdi
               :   9a839:	callq  6f570 <__rte_pktmbuf_pinned_extbuf_decref.isra.0>
               :   9a83e:	test   %eax,%eax
               :   9a840:	jne    9750c <mlx5_tx_burst_mtiv_empw+0x5f3c>
               :   9a846:	cmpq   $0x0,0x40(%r13)
               :   9a84b:	je     9a855 <mlx5_tx_burst_mtiv_empw+0x9285>
               :   9a84d:	movq   $0x0,0x40(%r13)
               :   9a855:	cmpw   $0x1,0x14(%r13)
               :   9a85b:	je     9a864 <mlx5_tx_burst_mtiv_empw+0x9294>
               :   9a85d:	movw   $0x1,0x14(%r13)
               :   9a864:	mov    %r13,%rdi
               :   9a867:	callq  6f5f0 <rte_mbuf_refcnt_set.constprop.0>
               :   9a86c:	mov    0x38(%r13),%r14
               :   9a870:	jmpq   9749a <mlx5_tx_burst_mtiv_empw+0x5eca>
               :   9a875:	movslq 0x58(%rdi),%rax
               :   9a879:	mov    %r8,0xa8(%rsp)
               :   9a881:	mov    %ecx,0xb0(%rsp)
               :   9a888:	cmp    $0xf,%eax
               :   9a88b:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a891:	shl    $0x7,%rax
               :   9a895:	lea    0x140(%rsp),%rsi
               :   9a89d:	add    0xfb66c(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a8a4:	mov    $0x1,%edx
               :   9a8a9:	callq  *0x70(%rax)
               :   9a8ac:	mov    0xa8(%rsp),%r8
               :   9a8b4:	mov    0xb0(%rsp),%ecx
               :   9a8bb:	jmpq   96671 <mlx5_tx_burst_mtiv_empw+0x50a1>
               :   9a8c0:	lea    0xd4(%r11),%rdx
               :   9a8c7:	mov    $0x7,%eax
               :   9a8cc:	jmpq   9a472 <mlx5_tx_burst_mtiv_empw+0x8ea2>
               :   9a8d1:	mov    %rdx,%rsi
               :   9a8d4:	and    $0x1f,%esi
               :   9a8d7:	je     9aba5 <mlx5_tx_burst_mtiv_empw+0x95d5>
               :   9a8dd:	mov    $0x20,%r9d
               :   9a8e3:	sub    %rsi,%r9
               :   9a8e6:	lea    -0x20(%rcx,%rsi,1),%rdi
               :   9a8eb:	vmovdqu64 %ymm0,(%rdx)
               :   9a8f1:	lea    (%rax,%r9,1),%rsi
               :   9a8f5:	add    %r9,%rdx
               :   9a8f8:	lea    -0x80(%rdi),%r9
               :   9a8fc:	and    $0xffffffffffffff80,%r9
               :   9a900:	lea    0x80(%rsi,%r9,1),%r10
               :   9a908:	mov    %r10,0x98(%rsp)
               :   9a910:	mov    %rsi,%r9
               :   9a913:	mov    %rdx,%r10
               :   9a916:	vmovdqu64 (%r9),%ymm2
               :   9a91c:	vmovdqu64 0x20(%r9),%ymm1
               :   9a923:	vmovdqu64 0x40(%r9),%ymm0
               :   9a92a:	vmovdqu64 0x60(%r9),%ymm5
               :   9a931:	sub    $0xffffffffffffff80,%r9
               :   9a935:	vmovdqu64 %ymm5,0x60(%r10)
               :   9a93c:	vmovdqu64 %ymm2,(%r10)
               :   9a942:	vmovdqu64 %ymm1,0x20(%r10)
               :   9a949:	vmovdqu64 %ymm0,0x40(%r10)
               :   9a950:	sub    $0xffffffffffffff80,%r10
               :   9a954:	cmp    0x98(%rsp),%r9
               :   9a95c:	jne    9a916 <mlx5_tx_burst_mtiv_empw+0x9346>
               :   9a95e:	mov    %rdi,%r9
               :   9a961:	and    $0xffffffffffffff80,%rdi
               :   9a965:	and    $0x7f,%r9d
               :   9a969:	add    %rdi,%rsi
               :   9a96c:	add    %rdi,%rdx
               :   9a96f:	jmpq   9859d <mlx5_tx_burst_mtiv_empw+0x6fcd>
               :   9a974:	movslq 0x58(%rdi),%rax
               :   9a978:	mov    %r8d,0x60(%rsp)
               :   9a97d:	mov    %r9,0x98(%rsp)
               :   9a985:	mov    %rcx,0xa8(%rsp)
               :   9a98d:	lea    0x40(%rcx),%rsi
               :   9a991:	cmp    $0xf,%eax
               :   9a994:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9a99a:	shl    $0x7,%rax
               :   9a99e:	add    0xfb56b(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9a9a5:	mov    %rsi,0xb8(%rsp)
               :   9a9ad:	callq  *0x70(%rax)
               :   9a9b0:	mov    0xa8(%rsp),%rcx
               :   9a9b8:	mov    0x60(%rsp),%r8d
               :   9a9bd:	movl   $0x1,0x8(%rcx)
               :   9a9c4:	mov    0x98(%rsp),%r9
               :   9a9cc:	mov    0xb8(%rsp),%rsi
               :   9a9d4:	jmpq   999ee <mlx5_tx_burst_mtiv_empw+0x841e>
               :   9a9d9:	mov    $0xc0,%eax
               :   9a9de:	jmpq   98a96 <mlx5_tx_burst_mtiv_empw+0x74c6>
               :   9a9e3:	xor    %eax,%eax
               :   9a9e5:	jmpq   9a6cd <mlx5_tx_burst_mtiv_empw+0x90fd>
               :   9a9ea:	lea    0x5c(%r14),%rsi
               :   9a9ee:	mov    $0x1,%eax
               :   9a9f3:	jmpq   9a6cd <mlx5_tx_burst_mtiv_empw+0x90fd>
               :   9a9f8:	lea    0x70(%r14),%rsi
               :   9a9fc:	mov    $0x2,%eax
               :   9aa01:	jmpq   9a6cd <mlx5_tx_burst_mtiv_empw+0x90fd>
               :   9aa06:	lea    0x84(%r14),%rsi
               :   9aa0d:	mov    $0x3,%eax
               :   9aa12:	jmpq   9a6cd <mlx5_tx_burst_mtiv_empw+0x90fd>
               :   9aa17:	lea    0x98(%r14),%rsi
               :   9aa1e:	mov    $0x4,%eax
               :   9aa23:	jmpq   9a6cd <mlx5_tx_burst_mtiv_empw+0x90fd>
               :   9aa28:	lea    0xac(%r14),%rsi
               :   9aa2f:	mov    $0x5,%eax
               :   9aa34:	jmpq   9a6cd <mlx5_tx_burst_mtiv_empw+0x90fd>
               :   9aa39:	lea    0xc0(%r14),%rsi
               :   9aa40:	mov    $0x6,%eax
               :   9aa45:	jmpq   9a6cd <mlx5_tx_burst_mtiv_empw+0x90fd>
               :   9aa4a:	mov    %r12,0xb8(%rsp)
               :   9aa52:	movzwl %r15w,%ebx
               :   9aa56:	jmpq   91d7c <mlx5_tx_burst_mtiv_empw+0x7ac>
               :   9aa5b:	movslq 0x58(%r13),%rax
               :   9aa5f:	mov    %r9,0x58(%rsp)
               :   9aa64:	mov    %ecx,0x60(%rsp)
               :   9aa68:	mov    %r8,0xa8(%rsp)
               :   9aa70:	cmp    $0xf,%eax
               :   9aa73:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9aa79:	shl    $0x7,%rax
               :   9aa7d:	lea    0x188(%rsp),%rsi
               :   9aa85:	add    0xfb484(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9aa8c:	mov    $0x1,%edx
               :   9aa91:	mov    %r13,%rdi
               :   9aa94:	callq  *0x70(%rax)
               :   9aa97:	mov    0x58(%rsp),%r9
               :   9aa9c:	mov    0x60(%rsp),%ecx
               :   9aaa0:	mov    0xa8(%rsp),%r8
               :   9aaa8:	jmpq   98d23 <mlx5_tx_burst_mtiv_empw+0x7753>
               :   9aaad:	movslq 0x58(%rdi),%rax
               :   9aab1:	mov    %rcx,(%rsp)
               :   9aab5:	mov    %r8,0x8(%rsp)
               :   9aaba:	lea    0x40(%r8),%rsi
               :   9aabe:	cmp    $0xf,%eax
               :   9aac1:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9aac7:	shl    $0x7,%rax
               :   9aacb:	add    0xfb43e(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9aad2:	mov    %rsi,0x50(%rsp)
               :   9aad7:	callq  *0x70(%rax)
               :   9aada:	mov    0x8(%rsp),%r8
               :   9aadf:	mov    (%rsp),%rcx
               :   9aae3:	movl   $0x1,0x8(%r8)
               :   9aaeb:	mov    0x50(%rsp),%rsi
               :   9aaf0:	jmpq   99d0b <mlx5_tx_burst_mtiv_empw+0x873b>
               :   9aaf5:	movslq 0x58(%rdi),%rax
               :   9aaf9:	mov    %rcx,0x50(%rsp)
               :   9aafe:	cmp    $0xf,%eax
               :   9ab01:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9ab07:	shl    $0x7,%rax
               :   9ab0b:	lea    0x138(%rsp),%rsi
               :   9ab13:	add    0xfb3f6(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9ab1a:	mov    $0x1,%edx
               :   9ab1f:	callq  *0x70(%rax)
               :   9ab22:	mov    0x50(%rsp),%rcx
               :   9ab27:	jmpq   979b4 <mlx5_tx_burst_mtiv_empw+0x63e4>
               :   9ab2c:	or     $0xffffffff,%esi
               :   9ab2f:	lock xadd %si,(%rdx)
               :   9ab34:	dec    %si
               :   9ab37:	jne    9a4e4 <mlx5_tx_burst_mtiv_empw+0x8f14>
               :   9ab3d:	jmpq   99c77 <mlx5_tx_burst_mtiv_empw+0x86a7>
               :   9ab42:	movslq 0x58(%rdi),%rax
               :   9ab46:	mov    %r8d,0xa8(%rsp)
               :   9ab4e:	mov    %r9,0xb8(%rsp)
               :   9ab56:	cmp    $0xf,%eax
               :   9ab59:	ja     14386 <mlx5_tx_burst_mtiv_empw.cold>
               :   9ab5f:	shl    $0x7,%rax
               :   9ab63:	lea    0x190(%rsp),%rsi
               :   9ab6b:	add    0xfb39e(%rip),%rax        # 195f10 <rte_mempool_ops_table@DPDK_23>
               :   9ab72:	mov    $0x1,%edx
               :   9ab77:	callq  *0x70(%rax)
               :   9ab7a:	mov    0xa8(%rsp),%r8d
               :   9ab82:	mov    0xb8(%rsp),%r9
               :   9ab8a:	jmpq   997dc <mlx5_tx_burst_mtiv_empw+0x820c>
               :   9ab8f:	or     $0xffffffff,%ecx
               :   9ab92:	lock xadd %cx,(%rdx)
               :   9ab97:	dec    %cx
               :   9ab9a:	jne    9a461 <mlx5_tx_burst_mtiv_empw+0x8e91>
               :   9aba0:	jmpq   99942 <mlx5_tx_burst_mtiv_empw+0x8372>
               :   9aba5:	mov    %rcx,%rdi
               :   9aba8:	mov    %rax,%rsi
               :   9abab:	jmpq   9a8f8 <mlx5_tx_burst_mtiv_empw+0x9328>
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000001054f <rte_devargs_parse.cold>: /* rte_devargs_parse.cold total: 1782956 52.7231 */
               :   1054f:	mov    %r14,%rcx
               :   10552:	lea    0x3544f(%rip),%rdx        # 459a8 <__func__.5568+0x6f8>
               :   10559:	xor    %esi,%esi
               :   1055b:	mov    $0x4,%edi
 33194  0.9816 :   10560:	xor    %eax,%eax
1749762 51.7416 :   10562:	callq  e810 <rte_log@plt>
               :   10567:	mov    $0xfffffff2,%eax
               :   1056c:	jmpq   19ca7 <rte_devargs_parse+0x157>
               :   10571:	mov    $0x40,%r8d
               :   10577:	mov    %r14,%rcx
               :   1057a:	lea    0x353e7(%rip),%rdx        # 45968 <__func__.5568+0x6b8>
               :   10581:	xor    %esi,%esi
               :   10583:	mov    $0x5,%edi
               :   10588:	xor    %eax,%eax
               :   1058a:	callq  e810 <rte_log@plt>
               :   1058f:	movb   $0x0,0x57(%r13)
               :   10594:	mov    $0xffffffea,%eax
               :   10599:	jmpq   19ca7 <rte_devargs_parse+0x157>
               :   1059e:	lea    0x3542b(%rip),%rdx        # 459d0 <__func__.5568+0x720>
               :   105a5:	xor    %esi,%esi
               :   105a7:	mov    $0x4,%edi
               :   105ac:	xor    %eax,%eax
               :   105ae:	callq  e810 <rte_log@plt>
               :   105b3:	mov    $0xfffffff4,%eax
               :   105b8:	jmpq   19ca7 <rte_devargs_parse+0x157>
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000029120 <alloc_more_mem_on_socket>: /* alloc_more_mem_on_socket total:      4 1.2e-04 */
               :   29120:	push   %r15
               :   29122:	push   %r14
               :   29124:	push   %r13
               :   29126:	push   %r12
               :   29128:	push   %rbp
               :   29129:	push   %rbx
               :   2912a:	sub    $0x1000,%rsp
               :   29131:	orq    $0x0,(%rsp)
               :   29136:	sub    $0x68,%rsp
               :   2913a:	mov    0x10a0(%rsp),%eax
               :   29141:	mov    %r9,(%rsp)
               :   29145:	mov    %rdi,0x28(%rsp)
               :   2914a:	mov    %rsi,0x8(%rsp)
               :   2914f:	mov    %eax,0x30(%rsp)
               :   29153:	mov    %ecx,%r15d
               :   29156:	mov    %r8,%r14
               :   29159:	mov    %edx,%ebx
               :   2915b:	mov    %fs:0x28,%rax
               :   29164:	mov    %rax,0x1058(%rsp)
               :   2916c:	xor    %eax,%eax
               :   2916e:	callq  181e0 <rte_eal_get_configuration>
               :   29173:	mov    0x298(%rax),%r12
               :   2917a:	mov    %r15d,%eax
               :   2917d:	and    $0xfffffffb,%eax
               :   29180:	lea    0x50(%rsp),%rdi
               :   29185:	mov    $0x400,%edx
               :   2918a:	xor    %esi,%esi
               :   2918c:	lea    0x450(%rsp),%rbp
               :   29194:	mov    %r15d,0x24(%rsp)
               :   29199:	mov    %rdi,0x10(%rsp)
               :   2919e:	mov    %eax,0x34(%rsp)
               :   291a2:	mov    %eax,%r15d
               :   291a5:	lea    0x850(%rsp),%r13
               :   291ad:	callq  f140 <memset@plt>
               :   291b2:	mov    $0x400,%edx
               :   291b7:	xor    %esi,%esi
               :   291b9:	mov    %rbp,%rdi
               :   291bc:	callq  f140 <memset@plt>
               :   291c1:	mov    $0x400,%edx
               :   291c6:	xor    %esi,%esi
               :   291c8:	mov    %r13,%rdi
               :   291cb:	callq  f140 <memset@plt>
               :   291d0:	lea    0xc50(%rsp),%rdi
               :   291d8:	mov    $0x400,%edx
               :   291dd:	xor    %esi,%esi
               :   291df:	mov    %rdi,0x40(%rsp)
               :   291e4:	callq  f140 <memset@plt>
               :   291e9:	lea    0x88(%r12),%rax
               :   291f1:	testb  $0x4,0x24(%rsp)
               :   291f6:	jne    295f4 <alloc_more_mem_on_socket+0x4d4>
               :   291fc:	lea    0x4488(%r12),%rcx
               :   29204:	test   %r15d,%r15d
               :   29207:	je     29458 <alloc_more_mem_on_socket+0x338>
               :   2920d:	mov    0x24(%rsp),%esi
               :   29211:	xor    %r12d,%r12d
               :   29214:	mov    %esi,%edi
               :   29216:	and    $0x80000,%edi
               :   2921c:	mov    %edi,0x18(%rsp)
               :   29220:	mov    %esi,%edi
               :   29222:	and    $0x200,%edi
               :   29228:	mov    %edi,0x38(%rsp)
               :   2922c:	mov    %esi,%edi
               :   2922e:	and    $0x2,%edi
               :   29231:	mov    %edi,0x3c(%rsp)
               :   29235:	mov    %esi,%edi
               :   29237:	and    $0x100,%edi
               :   2923d:	mov    %esi,%r15d
               :   29240:	mov    %esi,%r8d
               :   29243:	mov    %edi,0x48(%rsp)
               :   29247:	mov    %esi,%edi
               :   29249:	and    $0x1,%esi
               :   2924c:	and    $0x40000,%r15d
               :   29253:	movabs $0x100000000,%r10
               :   2925d:	movabs $0x400000000,%r9
               :   29267:	and    $0x20000,%edi
               :   2926d:	and    $0x10000,%r8d
               :   29274:	mov    %esi,%r11d
               :   29277:	jmp    292bb <alloc_more_mem_on_socket+0x19b>
               :   29279:	nopl   0x0(%rax)
               :   29280:	cmp    $0x40000,%rdx
               :   29287:	je     29510 <alloc_more_mem_on_socket+0x3f0>
               :   2928d:	cmp    $0x200000,%rdx
               :   29294:	jne    292b0 <alloc_more_mem_on_socket+0x190>
               :   29296:	mov    %r11d,%esi
               :   29299:	nopl   0x0(%rax)
               :   292a0:	test   %esi,%esi
               :   292a2:	je     292b0 <alloc_more_mem_on_socket+0x190>
               :   292a4:	movslq %r12d,%rdx
               :   292a7:	mov    %rax,0x50(%rsp,%rdx,8)
               :   292ac:	inc    %r12d
               :   292af:	nop
               :   292b0:	add    $0x88,%rax
               :   292b6:	cmp    %rax,%rcx
               :   292b9:	je     29302 <alloc_more_mem_on_socket+0x1e2>
               :   292bb:	cmp    %ebx,0x10(%rax)
               :   292be:	jne    292b0 <alloc_more_mem_on_socket+0x190>
               :   292c0:	cmpq   $0x0,(%rax)
               :   292c4:	je     292b0 <alloc_more_mem_on_socket+0x190>
               :   292c6:	mov    0x8(%rax),%rdx
               :   292ca:	cmp    $0x20000000,%rdx
               :   292d1:	je     29508 <alloc_more_mem_on_socket+0x3e8>
               :   292d7:	ja     294c8 <alloc_more_mem_on_socket+0x3a8>
               :   292dd:	cmp    $0x1000000,%rdx
               :   292e4:	je     29520 <alloc_more_mem_on_socket+0x400>
               :   292ea:	jbe    29280 <alloc_more_mem_on_socket+0x160>
               :   292ec:	mov    %edi,%esi
               :   292ee:	cmp    $0x10000000,%rdx
               :   292f5:	je     292a0 <alloc_more_mem_on_socket+0x180>
               :   292f7:	add    $0x88,%rax
               :   292fd:	cmp    %rax,%rcx
               :   29300:	jne    292bb <alloc_more_mem_on_socket+0x19b>
               :   29302:	mov    0x10(%rsp),%rdi
               :   29307:	movslq %r12d,%rsi
               :   2930a:	lea    -0xd61(%rip),%rcx        # 285b0 <compare_pagesz>
               :   29311:	mov    $0x8,%edx
               :   29316:	callq  eb70 <qsort@plt>
               :   2931b:	xor    %esi,%esi
               :   2931d:	lea    -0xd74(%rip),%rcx        # 285b0 <compare_pagesz>
               :   29324:	mov    $0x8,%edx
               :   29329:	mov    %rbp,%rdi
               :   2932c:	callq  eb70 <qsort@plt>
               :   29331:	test   %r12d,%r12d
               :   29334:	je     294b7 <alloc_more_mem_on_socket+0x397>
               :   2933a:	xor    %r15d,%r15d
               :   2933d:	lea    -0x1(%r12),%edx
               :   29342:	mov    0x10(%rsp),%rax
               :   29347:	lea    0x58(%rsp,%rdx,8),%rsi
               :   2934c:	xor    %r12d,%r12d
               :   2934f:	xor    %edx,%edx
               :   29351:	nopl   0x0(%rax)
               :   29358:	mov    %rdx,%rcx
               :   2935b:	mov    (%rax),%rdx
               :   2935e:	mov    0x8(%rdx),%rdx
               :   29362:	cmp    %rdx,%rcx
               :   29365:	je     29375 <alloc_more_mem_on_socket+0x255>
               :   29367:	movslq %r12d,%rcx
               :   2936a:	mov    %rdx,0x850(%rsp,%rcx,8)
               :   29372:	inc    %r12d
               :   29375:	add    $0x8,%rax
               :   29379:	cmp    %rax,%rsi
               :   2937c:	jne    29358 <alloc_more_mem_on_socket+0x238>
               :   2937e:	test   %r15d,%r15d
               :   29381:	je     295de <alloc_more_mem_on_socket+0x4be>
               :   29387:	xor    %eax,%eax
               :   29389:	xor    %esi,%esi
               :   2938b:	xor    %edx,%edx
               :   2938d:	nopl   (%rax)
               :   29390:	mov    %rdx,%rcx
               :   29393:	mov    0x0(%rbp,%rax,8),%rdx
               :   29398:	mov    0x8(%rdx),%rdx
               :   2939c:	cmp    %rcx,%rdx
               :   2939f:	je     293ae <alloc_more_mem_on_socket+0x28e>
               :   293a1:	movslq %esi,%rcx
               :   293a4:	mov    %rdx,0xc50(%rsp,%rcx,8)
               :   293ac:	inc    %esi
               :   293ae:	inc    %rax
               :   293b1:	cmp    %eax,%r15d
               :   293b4:	jg     29390 <alloc_more_mem_on_socket+0x270>
               :   293b6:	mov    %esi,0x38(%rsp)
               :   293ba:	test   %r12d,%r12d
               :   293bd:	je     2952f <alloc_more_mem_on_socket+0x40f>
               :   293c3:	movzbl 0x30(%rsp),%r15d
               :   293c9:	mov    %r12d,0x18(%rsp)
               :   293ce:	mov    %r15d,0x10(%rsp)
               :   293d3:	mov    0x34(%rsp),%r12d
               :   293d8:	mov    %r14,%r15
               :   293db:	xor    %ebp,%ebp
               :   293dd:	mov    %ebx,%r14d
               :   293e0:	mov    %r13,%rbx
               :   293e3:	mov    0x28(%rsp),%r13
               :   293e8:	jmp    293fd <alloc_more_mem_on_socket+0x2dd>
               :   293ea:	nopw   0x0(%rax,%rax,1)
               :   293f0:	inc    %rbp
               :   293f3:	cmp    %ebp,0x18(%rsp)
               :   293f7:	jle    29529 <alloc_more_mem_on_socket+0x409>
               :   293fd:	mov    0x10(%rsp),%eax
               :   29401:	mov    (%rbx,%rbp,8),%rsi
               :   29405:	push   %rax
               :   29406:	mov    %r13,%rdi
               :   29409:	mov    %r15,%r9
               :   2940c:	pushq  0x8(%rsp)
               :   29410:	mov    %r12d,%r8d
               :   29413:	mov    %r14d,%ecx
               :   29416:	mov    0x18(%rsp),%rdx
               :   2941b:	callq  28f00 <try_expand_heap>
               :   29420:	pop    %rsi
               :   29421:	pop    %rdi
               :   29422:	test   %eax,%eax
               :   29424:	jne    293f0 <alloc_more_mem_on_socket+0x2d0>
               :   29426:	xor    %eax,%eax
               :   29428:	mov    0x1058(%rsp),%rdi
               :   29430:	xor    %fs:0x28,%rdi
               :   29439:	jne    29749 <alloc_more_mem_on_socket+0x629>
               :   2943f:	add    $0x1068,%rsp
               :   29446:	pop    %rbx
               :   29447:	pop    %rbp
               :   29448:	pop    %r12
               :   2944a:	pop    %r13
               :   2944c:	pop    %r14
               :   2944e:	pop    %r15
               :   29450:	retq   
               :   29451:	nopl   0x0(%rax)
               :   29458:	cmp    0x10(%rax),%ebx
               :   2945b:	jne    29471 <alloc_more_mem_on_socket+0x351>
               :   2945d:	cmpq   $0x0,(%rax)
               :   29461:	je     29471 <alloc_more_mem_on_socket+0x351>
               :   29463:	movslq %r15d,%rdx
               :   29466:	mov    %rax,0x450(%rsp,%rdx,8)
               :   2946e:	inc    %r15d
               :   29471:	add    $0x88,%rax
               :   29477:	cmp    %rcx,%rax
               :   2947a:	jne    29458 <alloc_more_mem_on_socket+0x338>
               :   2947c:	mov    0x10(%rsp),%rdi
               :   29481:	lea    -0xed8(%rip),%rcx        # 285b0 <compare_pagesz>
               :   29488:	mov    $0x8,%edx
               :   2948d:	xor    %esi,%esi
               :   2948f:	callq  eb70 <qsort@plt>
               :   29494:	movslq %r15d,%rsi
               :   29497:	lea    -0xeee(%rip),%rcx        # 285b0 <compare_pagesz>
               :   2949e:	mov    $0x8,%edx
               :   294a3:	mov    %rbp,%rdi
               :   294a6:	callq  eb70 <qsort@plt>
               :   294ab:	xor    %r12d,%r12d
               :   294ae:	test   %r15d,%r15d
               :   294b1:	jne    29387 <alloc_more_mem_on_socket+0x267>
     1 3.0e-05 :   294b7:	mov    $0xffffffff,%eax
               :   294bc:	jmpq   29428 <alloc_more_mem_on_socket+0x308>
               :   294c1:	nopl   0x0(%rax)
               :   294c8:	cmp    %r10,%rdx
               :   294cb:	je     294f8 <alloc_more_mem_on_socket+0x3d8>
               :   294cd:	cmp    %r9,%rdx
               :   294d0:	jne    294db <alloc_more_mem_on_socket+0x3bb>
               :   294d2:	mov    0x38(%rsp),%esi
               :   294d6:	jmpq   292a0 <alloc_more_mem_on_socket+0x180>
               :   294db:	cmp    $0x40000000,%rdx
               :   294e2:	jne    292b0 <alloc_more_mem_on_socket+0x190>
               :   294e8:	mov    0x3c(%rsp),%esi
               :   294ec:	jmpq   292a0 <alloc_more_mem_on_socket+0x180>
               :   294f1:	nopl   0x0(%rax)
               :   294f8:	mov    0x18(%rsp),%esi
               :   294fc:	jmpq   292a0 <alloc_more_mem_on_socket+0x180>
               :   29501:	nopl   0x0(%rax)
               :   29508:	mov    %r15d,%esi
               :   2950b:	jmpq   292a0 <alloc_more_mem_on_socket+0x180>
               :   29510:	mov    %r8d,%esi
               :   29513:	jmpq   292a0 <alloc_more_mem_on_socket+0x180>
               :   29518:	nopl   0x0(%rax,%rax,1)
     2 5.9e-05 :   29520:	mov    0x48(%rsp),%esi
               :   29524:	jmpq   292a0 <alloc_more_mem_on_socket+0x180>
               :   29529:	mov    %r14d,%ebx
               :   2952c:	mov    %r15,%r14
               :   2952f:	mov    0x38(%rsp),%r13d
               :   29534:	test   %r13d,%r13d
               :   29537:	je     294b7 <alloc_more_mem_on_socket+0x397>
               :   2953d:	mov    0x30(%rsp),%eax
               :   29541:	mov    (%rsp),%r8
               :   29545:	mov    0x24(%rsp),%edx
               :   29549:	mov    0x8(%rsp),%rsi
               :   2954e:	mov    0x28(%rsp),%rdi
               :   29553:	movzbl %al,%r9d
               :   29557:	mov    %r14,%rcx
               :   2955a:	movzbl %al,%ebp
               :   2955d:	callq  28650 <find_suitable_element>
               :   29562:	test   %rax,%rax
               :   29565:	jne    29426 <alloc_more_mem_on_socket+0x306>
               :   2956b:	mov    %r13d,%eax
               :   2956e:	dec    %eax
               :   29570:	lea    0xc58(%rsp,%rax,8),%r12
               :   29578:	mov    %ebp,0x10(%rsp)
               :   2957c:	mov    %r12,0x18(%rsp)
               :   29581:	mov    %r14,%rbp
               :   29584:	mov    0x40(%rsp),%r15
               :   29589:	mov    0x28(%rsp),%r12
               :   2958e:	mov    0x8(%rsp),%r13
     1 3.0e-05 :   29593:	mov    0x24(%rsp),%r14d
               :   29598:	nopl   0x0(%rax,%rax,1)
               :   295a0:	mov    0x10(%rsp),%eax
               :   295a4:	mov    %ebx,%ecx
               :   295a6:	push   %rax
               :   295a7:	mov    %r13,%rdx
               :   295aa:	mov    %rbp,%r9
               :   295ad:	pushq  0x8(%rsp)
               :   295b1:	mov    %r14d,%r8d
               :   295b4:	mov    %r12,%rdi
               :   295b7:	mov    (%r15),%rsi
               :   295ba:	callq  28f00 <try_expand_heap>
               :   295bf:	pop    %rdx
               :   295c0:	pop    %rcx
               :   295c1:	test   %eax,%eax
               :   295c3:	je     29426 <alloc_more_mem_on_socket+0x306>
               :   295c9:	add    $0x8,%r15
               :   295cd:	cmp    0x18(%rsp),%r15
               :   295d2:	jne    295a0 <alloc_more_mem_on_socket+0x480>
               :   295d4:	mov    $0xffffffff,%eax
               :   295d9:	jmpq   29428 <alloc_more_mem_on_socket+0x308>
               :   295de:	movl   $0x0,0x38(%rsp)
               :   295e6:	test   %r12d,%r12d
               :   295e9:	jne    293c3 <alloc_more_mem_on_socket+0x2a3>
               :   295ef:	jmpq   294b7 <alloc_more_mem_on_socket+0x397>
               :   295f4:	cmpl   $0x0,0x34(%rsp)
               :   295f9:	jne    2962f <alloc_more_mem_on_socket+0x50f>
               :   295fb:	lea    0x4488(%r12),%rcx
               :   29603:	xor    %r15d,%r15d
               :   29606:	cmp    0x10(%rax),%ebx
               :   29609:	jne    2961f <alloc_more_mem_on_socket+0x4ff>
               :   2960b:	cmpq   $0x0,(%rax)
               :   2960f:	je     2961f <alloc_more_mem_on_socket+0x4ff>
               :   29611:	movslq %r15d,%rdx
               :   29614:	mov    %rax,0x450(%rsp,%rdx,8)
               :   2961c:	inc    %r15d
               :   2961f:	add    $0x88,%rax
               :   29625:	cmp    %rax,%rcx
               :   29628:	jne    29606 <alloc_more_mem_on_socket+0x4e6>
               :   2962a:	jmpq   2947c <alloc_more_mem_on_socket+0x35c>
               :   2962f:	mov    0x24(%rsp),%ecx
               :   29633:	mov    $0x1,%esi
               :   29638:	mov    %ecx,%edx
               :   2963a:	and    $0x200,%edx
               :   29640:	mov    %edx,0x18(%rsp)
               :   29644:	mov    %ecx,%edx
               :   29646:	and    $0x2,%edx
               :   29649:	mov    %edx,0x38(%rsp)
               :   2964d:	mov    %ecx,%edx
               :   2964f:	and    $0x100,%edx
               :   29655:	mov    %edx,0x3c(%rsp)
               :   29659:	mov    %ecx,%edx
               :   2965b:	and    $0x20000,%edx
               :   29661:	mov    %edx,0x48(%rsp)
               :   29665:	mov    %ecx,%edx
               :   29667:	mov    %ecx,%edi
               :   29669:	and    $0x10000,%edx
               :   2966f:	and    $0x80000,%edi
               :   29675:	mov    %edx,0x4c(%rsp)
               :   29679:	mov    %ecx,%r10d
               :   2967c:	mov    %edi,%r8d
               :   2967f:	and    $0x1,%ecx
               :   29682:	mov    $0x1,%edi
               :   29687:	lea    0x4488(%r12),%r9
               :   2968f:	xor    %r15d,%r15d
               :   29692:	xor    %r12d,%r12d
               :   29695:	and    $0x40000,%r10d
               :   2969c:	shl    $0x20,%rsi
               :   296a0:	shl    $0x22,%rdi
               :   296a4:	mov    %ecx,%r11d
               :   296a7:	cmp    %ebx,0x10(%rax)
               :   296aa:	jne    29700 <alloc_more_mem_on_socket+0x5e0>
               :   296ac:	cmpq   $0x0,(%rax)
               :   296b0:	je     29700 <alloc_more_mem_on_socket+0x5e0>
               :   296b2:	mov    0x8(%rax),%rcx
               :   296b6:	cmp    $0x20000000,%rcx
               :   296bd:	je     2979f <alloc_more_mem_on_socket+0x67f>
               :   296c3:	ja     2977a <alloc_more_mem_on_socket+0x65a>
               :   296c9:	cmp    $0x1000000,%rcx
               :   296d0:	je     29771 <alloc_more_mem_on_socket+0x651>
               :   296d6:	ja     2974e <alloc_more_mem_on_socket+0x62e>
               :   296d8:	cmp    $0x40000,%rcx
               :   296df:	je     2976b <alloc_more_mem_on_socket+0x64b>
               :   296e5:	mov    %r11d,%edx
               :   296e8:	cmp    $0x200000,%rcx
               :   296ef:	jne    2975b <alloc_more_mem_on_socket+0x63b>
               :   296f1:	test   %edx,%edx
               :   296f3:	je     2975b <alloc_more_mem_on_socket+0x63b>
               :   296f5:	movslq %r12d,%rdx
               :   296f8:	mov    %rax,0x50(%rsp,%rdx,8)
               :   296fd:	inc    %r12d
               :   29700:	add    $0x88,%rax
               :   29706:	cmp    %r9,%rax
               :   29709:	jne    296a7 <alloc_more_mem_on_socket+0x587>
               :   2970b:	mov    0x10(%rsp),%rdi
               :   29710:	movslq %r12d,%rsi
               :   29713:	lea    -0x116a(%rip),%rcx        # 285b0 <compare_pagesz>
               :   2971a:	mov    $0x8,%edx
               :   2971f:	callq  eb70 <qsort@plt>
               :   29724:	movslq %r15d,%rsi
               :   29727:	lea    -0x117e(%rip),%rcx        # 285b0 <compare_pagesz>
               :   2972e:	mov    $0x8,%edx
               :   29733:	mov    %rbp,%rdi
               :   29736:	callq  eb70 <qsort@plt>
               :   2973b:	test   %r12d,%r12d
               :   2973e:	jne    2933d <alloc_more_mem_on_socket+0x21d>
               :   29744:	jmpq   294ab <alloc_more_mem_on_socket+0x38b>
               :   29749:	callq  eeb0 <__stack_chk_fail@plt>
               :   2974e:	mov    0x48(%rsp),%edx
               :   29752:	cmp    $0x10000000,%rcx
               :   29759:	je     296f1 <alloc_more_mem_on_socket+0x5d1>
               :   2975b:	movslq %r15d,%rdx
               :   2975e:	mov    %rax,0x450(%rsp,%rdx,8)
               :   29766:	inc    %r15d
               :   29769:	jmp    29700 <alloc_more_mem_on_socket+0x5e0>
               :   2976b:	mov    0x4c(%rsp),%edx
               :   2976f:	jmp    296f1 <alloc_more_mem_on_socket+0x5d1>
               :   29771:	mov    0x3c(%rsp),%edx
               :   29775:	jmpq   296f1 <alloc_more_mem_on_socket+0x5d1>
               :   2977a:	cmp    %rsi,%rcx
               :   2977d:	je     297a7 <alloc_more_mem_on_socket+0x687>
               :   2977f:	mov    0x18(%rsp),%edx
               :   29783:	cmp    %rdi,%rcx
               :   29786:	je     296f1 <alloc_more_mem_on_socket+0x5d1>
               :   2978c:	mov    0x38(%rsp),%edx
               :   29790:	cmp    $0x40000000,%rcx
               :   29797:	je     296f1 <alloc_more_mem_on_socket+0x5d1>
               :   2979d:	jmp    2975b <alloc_more_mem_on_socket+0x63b>
               :   2979f:	mov    %r10d,%edx
               :   297a2:	jmpq   296f1 <alloc_more_mem_on_socket+0x5d1>
               :   297a7:	mov    %r8d,%edx
               :   297aa:	jmpq   296f1 <alloc_more_mem_on_socket+0x5d1>
               :   297af:	nop
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000186d0 <local_dev_remove>: /* local_dev_remove total:      4 1.2e-04 */
     1 3.0e-05 :   186d0:	endbr64 
               :   186d4:	push   %r12
     1 3.0e-05 :   186d6:	push   %rbx
               :   186d7:	sub    $0x8,%rsp
               :   186db:	mov    0x28(%rdi),%rdx
     1 3.0e-05 :   186df:	mov    0x38(%rdx),%rax
               :   186e3:	test   %rax,%rax
               :   186e6:	je     101eb <local_dev_remove.cold>
               :   186ec:	mov    %rdi,%rbx
               :   186ef:	callq  *%rax
               :   186f1:	mov    %eax,%r12d
               :   186f4:	test   %eax,%eax
     1 3.0e-05 :   186f6:	jne    1020f <local_dev_remove.cold+0x24>
               :   186fc:	add    $0x8,%rsp
               :   18700:	pop    %rbx
               :   18701:	mov    %r12d,%eax
               :   18704:	pop    %r12
               :   18706:	retq   
               :   18707:	nopw   0x0(%rax,%rax,1)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000028d10 <alloc_pages_on_heap>: /* alloc_pages_on_heap total:      3 8.9e-05 */
               :   28d10:	endbr64 
               :   28d14:	push   %r15
               :   28d16:	push   %r14
               :   28d18:	mov    %ecx,%r14d
               :   28d1b:	push   %r13
               :   28d1d:	push   %r12
               :   28d1f:	mov    %rsi,%r12
               :   28d22:	push   %rbp
               :   28d23:	mov    %rdi,%rbp
               :   28d26:	push   %rbx
               :   28d27:	sub    $0x38,%rsp
               :   28d2b:	mov    %rdx,0x10(%rsp)
               :   28d30:	mov    %r8d,0x28(%rsp)
               :   28d35:	mov    %r9,0x18(%rsp)
               :   28d3a:	mov    0x78(%rsp),%r15d
               :   28d3f:	mov    0x80(%rsp),%r13
               :   28d47:	callq  181e0 <rte_eal_get_configuration>
               :   28d4c:	movslq 0x88(%rsp),%rbx
               :   28d54:	mov    0x88(%rbp),%rsi
               :   28d5b:	imul   %r12,%rbx
     1 3.0e-05 :   28d5f:	mov    0x298(%rax),%rax
               :   28d66:	mov    %r14d,%edi
               :   28d69:	add    %rbx,%rsi
               :   28d6c:	mov    %rax,0x8(%rsp)
               :   28d71:	callq  1fad0 <eal_memalloc_mem_alloc_validate>
               :   28d76:	test   %eax,%eax
               :   28d78:	js     1221f <alloc_pages_on_heap.cold+0x53>
               :   28d7e:	mov    0x88(%rsp),%esi
               :   28d85:	mov    %r12,%rdx
               :   28d88:	mov    $0x1,%r8d
               :   28d8e:	mov    %r14d,%ecx
               :   28d91:	mov    %r13,%rdi
               :   28d94:	callq  3f190 <eal_memalloc_alloc_seg_bulk>
               :   28d99:	xor    %r12d,%r12d
               :   28d9c:	test   %eax,%eax
               :   28d9e:	mov    %eax,0x20(%rsp)
               :   28da2:	js     28e6d <alloc_pages_on_heap+0x15d>
               :   28da8:	mov    0x0(%r13),%rax
               :   28dac:	mov    0x8(%rax),%r14
               :   28db0:	mov    %r14,%rdi
               :   28db3:	callq  ea40 <rte_mem_virt2memseg_list@plt>
               :   28db8:	test   %r15b,%r15b
     1 3.0e-05 :   28dbb:	mov    0x20(%rsp),%ecx
               :   28dbf:	mov    %rax,%r11
               :   28dc2:	jne    28e80 <alloc_pages_on_heap+0x170>
               :   28dc8:	mov    0x8(%rsp),%rax
               :   28dcd:	movzbl 0x62e0(%rax),%edi
               :   28dd4:	test   %dil,%dil
               :   28dd7:	jne    28eb0 <alloc_pages_on_heap+0x1a0>
               :   28ddd:	test   %ecx,%ecx
               :   28ddf:	je     28e0d <alloc_pages_on_heap+0xfd>
               :   28de1:	lea    -0x1(%rcx),%eax
               :   28de4:	lea    0x8(%r13,%rax,8),%rsi
               :   28de9:	mov    %r13,%rdx
               :   28dec:	xor    %eax,%eax
               :   28dee:	xchg   %ax,%ax
               :   28df0:	mov    (%rdx),%rcx
               :   28df3:	movzbl %al,%eax
     1 3.0e-05 :   28df6:	mov    0x2c(%rcx),%ecx
               :   28df9:	and    $0x2,%ecx
               :   28dfc:	or     %eax,%ecx
               :   28dfe:	setne  %al
               :   28e01:	add    $0x8,%rdx
               :   28e05:	cmp    %rsi,%rdx
               :   28e08:	jne    28df0 <alloc_pages_on_heap+0xe0>
               :   28e0a:	movzbl %al,%ecx
               :   28e0d:	sub    $0x8,%rsp
               :   28e11:	push   %rcx
               :   28e12:	mov    %r11,%rdx
               :   28e15:	mov    %rbx,%r9
               :   28e18:	mov    %r14,%r8
               :   28e1b:	mov    %rbx,%rcx
               :   28e1e:	mov    %rbp,%rsi
               :   28e21:	mov    %r14,%rdi
               :   28e24:	callq  27820 <malloc_elem_init>
               :   28e29:	mov    %r14,%rdi
               :   28e2c:	callq  27870 <malloc_elem_insert>
               :   28e31:	mov    %r14,%rdi
               :   28e34:	callq  27e80 <malloc_elem_join_adjacent_free>
               :   28e39:	mov    %rax,%rdi
               :   28e3c:	mov    %rax,%r12
               :   28e3f:	callq  27af0 <malloc_elem_free_list_insert>
               :   28e44:	mov    0x80(%rsp),%r8
               :   28e4c:	mov    0x28(%rsp),%rcx
               :   28e51:	mov    0x38(%rsp),%edx
               :   28e55:	mov    0x20(%rsp),%rsi
               :   28e5a:	movzbl %r15b,%r9d
               :   28e5e:	mov    %rbp,%rdi
               :   28e61:	callq  28650 <find_suitable_element>
               :   28e66:	pop    %rdx
               :   28e67:	pop    %rcx
               :   28e68:	test   %rax,%rax
               :   28e6b:	je     28ed4 <alloc_pages_on_heap+0x1c4>
               :   28e6d:	add    $0x38,%rsp
               :   28e71:	pop    %rbx
               :   28e72:	pop    %rbp
               :   28e73:	mov    %r12,%rax
               :   28e76:	pop    %r12
               :   28e78:	pop    %r13
               :   28e7a:	pop    %r14
               :   28e7c:	pop    %r15
               :   28e7e:	retq   
               :   28e7f:	nop
               :   28e80:	mov    %rbx,%rdx
               :   28e83:	mov    %r14,%rsi
               :   28e86:	mov    %rax,%rdi
               :   28e89:	mov    %ecx,0x2c(%rsp)
               :   28e8d:	mov    %rax,0x20(%rsp)
               :   28e92:	callq  1f290 <eal_memalloc_is_contig>
               :   28e97:	test   %al,%al
               :   28e99:	je     1223c <alloc_pages_on_heap.cold+0x70>
               :   28e9f:	mov    0x20(%rsp),%r11
               :   28ea4:	mov    0x2c(%rsp),%ecx
               :   28ea8:	jmpq   28dc8 <alloc_pages_on_heap+0xb8>
               :   28ead:	nopl   (%rax)
               :   28eb0:	mov    %ecx,0x20(%rsp)
               :   28eb4:	mov    %r11,0x8(%rsp)
               :   28eb9:	callq  ea60 <rte_mem_check_dma_mask_thread_unsafe@plt>
               :   28ebe:	test   %eax,%eax
               :   28ec0:	jne    121cc <alloc_pages_on_heap.cold>
               :   28ec6:	mov    0x8(%rsp),%r11
               :   28ecb:	mov    0x20(%rsp),%ecx
               :   28ecf:	jmpq   28ddd <alloc_pages_on_heap+0xcd>
               :   28ed4:	mov    0x88(%rsp),%esi
               :   28edb:	mov    %r12,%rdx
               :   28ede:	mov    %rbx,%r8
               :   28ee1:	mov    %r14,%rcx
               :   28ee4:	mov    %r13,%rdi
               :   28ee7:	callq  28cc0 <rollback_expand_heap>
               :   28eec:	xor    %r12d,%r12d
               :   28eef:	jmpq   28e6d <alloc_pages_on_heap+0x15d>
               :   28ef4:	data16 nopw %cs:0x0(%rax,%rax,1)
               :   28eff:	nop
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000001a830 <fbarray_find_biggest.constprop.0>: /* fbarray_find_biggest.constprop.0 total:      2 5.9e-05 */
     2 5.9e-05 :   1a830:	push   %r15
               :   1a832:	push   %r14
               :   1a834:	push   %r13
               :   1a836:	push   %r12
               :   1a838:	push   %rbp
               :   1a839:	push   %rbx
               :   1a83a:	sub    $0x18,%rsp
               :   1a83e:	mov    %edx,0xc(%rsp)
               :   1a842:	test   %rdi,%rdi
               :   1a845:	je     1a94b <fbarray_find_biggest.constprop.0+0x11b>
               :   1a84b:	mov    %rdi,%rbx
               :   1a84e:	cmp    %esi,0x44(%rdi)
               :   1a851:	jbe    1a94b <fbarray_find_biggest.constprop.0+0x11b>
               :   1a857:	lea    0x58(%rdi),%r12
               :   1a85b:	jmp    1a862 <fbarray_find_biggest.constprop.0+0x32>
               :   1a85d:	nopl   (%rax)
               :   1a860:	pause  
               :   1a862:	mov    (%r12),%eax
               :   1a866:	test   $0x3,%al
               :   1a868:	jne    1a860 <fbarray_find_biggest.constprop.0+0x30>
               :   1a86a:	mov    $0x4,%ebp
               :   1a86f:	lock xadd %ebp,(%r12)
               :   1a875:	and    $0x3,%ebp
               :   1a878:	jne    1a940 <fbarray_find_biggest.constprop.0+0x110>
               :   1a87e:	cmpb   $0x0,0xc(%rsp)
               :   1a883:	jne    1a928 <fbarray_find_biggest.constprop.0+0xf8>
               :   1a889:	mov    0x475f0(%rip),%r14        # 61e80 <rte_fbarray_find_contig_free@@DPDK_23+0x47140>
               :   1a890:	mov    0x47751(%rip),%r13        # 61fe8 <rte_fbarray_find_next_free@@DPDK_23+0x47958>
               :   1a897:	movl   $0xffffffff,0x8(%rsp)
               :   1a89f:	jmp    1a8c3 <fbarray_find_biggest.constprop.0+0x93>
               :   1a8a1:	nopl   0x0(%rax)
               :   1a8a8:	mov    %eax,%esi
               :   1a8aa:	mov    %rbx,%rdi
               :   1a8ad:	callq  *%r14
               :   1a8b0:	lea    (%r15,%rax,1),%esi
               :   1a8b4:	cmp    %ebp,%eax
               :   1a8b6:	jle    1a8bf <fbarray_find_biggest.constprop.0+0x8f>
               :   1a8b8:	mov    %r15d,0x8(%rsp)
               :   1a8bd:	mov    %eax,%ebp
               :   1a8bf:	test   %esi,%esi
               :   1a8c1:	js     1a8e6 <fbarray_find_biggest.constprop.0+0xb6>
               :   1a8c3:	mov    %rbx,%rdi
               :   1a8c6:	callq  *%r13
               :   1a8c9:	mov    %eax,%r15d
               :   1a8cc:	test   %eax,%eax
               :   1a8ce:	jns    1a8a8 <fbarray_find_biggest.constprop.0+0x78>
               :   1a8d0:	data16 lea 0x47580(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1a8d8:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1a8e0:	movl   $0x0,(%rax)
               :   1a8e6:	cmpl   $0xffffffff,0x8(%rsp)
               :   1a8eb:	jne    1a90c <fbarray_find_biggest.constprop.0+0xdc>
               :   1a8ed:	cmpb   $0x1,0xc(%rsp)
               :   1a8f2:	sbb    %ebx,%ebx
               :   1a8f4:	data16 lea 0x4755c(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1a8fc:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1a904:	and    $0x1a,%ebx
               :   1a907:	add    $0x2,%ebx
               :   1a90a:	mov    %ebx,(%rax)
               :   1a90c:	lock subl $0x4,(%r12)
               :   1a912:	mov    0x8(%rsp),%eax
               :   1a916:	add    $0x18,%rsp
               :   1a91a:	pop    %rbx
               :   1a91b:	pop    %rbp
               :   1a91c:	pop    %r12
               :   1a91e:	pop    %r13
               :   1a920:	pop    %r14
               :   1a922:	pop    %r15
               :   1a924:	retq   
               :   1a925:	nopl   (%rax)
               :   1a928:	mov    0x47699(%rip),%r14        # 61fc8 <rte_fbarray_find_contig_used@@DPDK_23+0x47278>
               :   1a92f:	mov    0x4755a(%rip),%r13        # 61e90 <rte_fbarray_find_next_used@@DPDK_23+0x477f0>
               :   1a936:	jmpq   1a897 <fbarray_find_biggest.constprop.0+0x67>
               :   1a93b:	nopl   0x0(%rax,%rax,1)
               :   1a940:	lock subl $0x4,(%r12)
               :   1a946:	jmpq   1a862 <fbarray_find_biggest.constprop.0+0x32>
               :   1a94b:	data16 lea 0x47505(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1a953:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1a95b:	movl   $0xffffffff,0x8(%rsp)
               :   1a963:	movl   $0x16,(%rax)
               :   1a969:	jmp    1a912 <fbarray_find_biggest.constprop.0+0xe2>
               :   1a96b:	nopl   0x0(%rax,%rax,1)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000018c70 <rte_dev_iterator_next>: /* rte_dev_iterator_next total:      2 5.9e-05 */
               :   18c70:	endbr64 
               :   18c74:	push   %r15
               :   18c76:	push   %r14
               :   18c78:	push   %r13
               :   18c7a:	push   %r12
               :   18c7c:	push   %rbp
               :   18c7d:	push   %rbx
               :   18c7e:	mov    %rdi,%rbx
               :   18c81:	sub    $0x38,%rsp
               :   18c85:	mov    %fs:0x28,%rax
               :   18c8e:	mov    %rax,0x28(%rsp)
               :   18c93:	xor    %eax,%eax
               :   18c95:	data16 lea 0x491bb(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   18c9d:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   18ca5:	mov    0x8(%rbx),%rbp
               :   18ca9:	mov    (%rax),%ecx
               :   18cab:	movl   $0x0,(%rax)
               :   18cb1:	mov    %ecx,0xc(%rsp)
               :   18cb5:	test   %rbp,%rbp
               :   18cb8:	je     18df0 <rte_dev_iterator_next+0x180>
               :   18cbe:	mov    0x18(%rbx),%r15
               :   18cc2:	test   %r15,%r15
               :   18cc5:	je     18cd2 <rte_dev_iterator_next+0x62>
               :   18cc7:	mov    0x8(%r15),%rax
               :   18ccb:	mov    0x8(%rax),%rax
               :   18ccf:	mov    (%rax),%r15
               :   18cd2:	lea    0x2cb5d(%rip),%rsi        # 45836 <__func__.5568+0x586>
               :   18cd9:	mov    %rbp,%rdi
               :   18cdc:	callq  f2e0 <strcspn@plt>
               :   18ce1:	cmpb   $0x2c,0x0(%rbp,%rax,1)
               :   18ce6:	je     18e80 <rte_dev_iterator_next+0x210>
               :   18cec:	lea    0x31d69(%rip),%rdi        # 4aa5c <__func__.11185+0x45c>
               :   18cf3:	callq  fe90 <strdup@plt>
               :   18cf8:	mov    %rax,%rbp
               :   18cfb:	test   %rbp,%rbp
               :   18cfe:	je     18ed2 <rte_dev_iterator_next+0x262>
               :   18d04:	mov    $0x2f,%esi
               :   18d09:	mov    %rbp,%rdi
               :   18d0c:	callq  ef30 <strchr@plt>
               :   18d11:	mov    0x10(%rbx),%r12
               :   18d15:	test   %rax,%rax
               :   18d18:	je     18d1d <rte_dev_iterator_next+0xad>
     2 5.9e-05 :   18d1a:	movb   $0x0,(%rax)
               :   18d1d:	test   %r12,%r12
               :   18d20:	jne    18e10 <rte_dev_iterator_next+0x1a0>
               :   18d26:	lea    0x10(%rsp),%r14
               :   18d2b:	lea    -0x942(%rip),%r13        # 183f0 <bus_next_dev_cmp>
               :   18d32:	jmp    18d60 <rte_dev_iterator_next+0xf0>
               :   18d34:	nopl   0x0(%rax)
               :   18d38:	cmpq   $0x0,0x28(%rbx)
               :   18d3d:	jne    18e60 <rte_dev_iterator_next+0x1f0>
               :   18d43:	data16 lea 0x4910d(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   18d4b:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   18d53:	cmpq   $0x0,0x8(%rbx)
               :   18d58:	mov    (%rax),%eax
               :   18d5a:	jne    18d97 <rte_dev_iterator_next+0x127>
               :   18d5c:	test   %eax,%eax
               :   18d5e:	jne    18db1 <rte_dev_iterator_next+0x141>
               :   18d60:	mov    %r15,%rdi
               :   18d63:	mov    %r14,%rdx
               :   18d66:	mov    %r13,%rsi
               :   18d69:	mov    %rbx,0x10(%rsp)
               :   18d6e:	mov    %rbp,0x18(%rsp)
               :   18d73:	mov    %r12,0x20(%rsp)
               :   18d78:	callq  f470 <rte_bus_find@plt>
               :   18d7d:	mov    %rax,%r15
               :   18d80:	test   %rax,%rax
               :   18d83:	jne    18d38 <rte_dev_iterator_next+0xc8>
               :   18d85:	data16 lea 0x490cb(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   18d8d:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   18d95:	mov    (%rax),%eax
               :   18d97:	test   %eax,%eax
               :   18d99:	jne    18db1 <rte_dev_iterator_next+0x141>
               :   18d9b:	data16 lea 0x490b5(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   18da3:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   18dab:	mov    0xc(%rsp),%ecx
               :   18daf:	mov    %ecx,(%rax)
               :   18db1:	mov    %rbp,%rdi
               :   18db4:	callq  e8c0 <free@plt>
               :   18db9:	mov    %r12,%rdi
               :   18dbc:	callq  e8c0 <free@plt>
               :   18dc1:	mov    0x28(%rbx),%r12
               :   18dc5:	mov    0x28(%rsp),%rax
               :   18dca:	xor    %fs:0x28,%rax
               :   18dd3:	jne    18eb2 <rte_dev_iterator_next+0x242>
               :   18dd9:	add    $0x38,%rsp
               :   18ddd:	pop    %rbx
               :   18dde:	pop    %rbp
               :   18ddf:	mov    %r12,%rax
               :   18de2:	pop    %r12
               :   18de4:	pop    %r13
               :   18de6:	pop    %r14
               :   18de8:	pop    %r15
               :   18dea:	retq   
               :   18deb:	nopl   0x0(%rax,%rax,1)
               :   18df0:	mov    0x10(%rbx),%r12
               :   18df4:	test   %r12,%r12
               :   18df7:	je     18ea7 <rte_dev_iterator_next+0x237>
               :   18dfd:	mov    0x18(%rbx),%r15
               :   18e01:	test   %r15,%r15
               :   18e04:	jne    18e70 <rte_dev_iterator_next+0x200>
               :   18e06:	mov    %r15,%rbp
               :   18e09:	nopl   0x0(%rax)
               :   18e10:	lea    0x2ca1f(%rip),%rsi        # 45836 <__func__.5568+0x586>
               :   18e17:	mov    %r12,%rdi
               :   18e1a:	callq  f2e0 <strcspn@plt>
               :   18e1f:	cmpb   $0x2c,(%r12,%rax,1)
               :   18e24:	je     18e98 <rte_dev_iterator_next+0x228>
               :   18e26:	lea    0x31c2f(%rip),%rdi        # 4aa5c <__func__.11185+0x45c>
               :   18e2d:	callq  fe90 <strdup@plt>
               :   18e32:	mov    %rax,%r12
               :   18e35:	test   %r12,%r12
               :   18e38:	je     18eb7 <rte_dev_iterator_next+0x247>
               :   18e3a:	mov    $0x2f,%esi
               :   18e3f:	mov    %r12,%rdi
               :   18e42:	callq  ef30 <strchr@plt>
               :   18e47:	test   %rax,%rax
               :   18e4a:	je     18d26 <rte_dev_iterator_next+0xb6>
               :   18e50:	movb   $0x0,(%rax)
               :   18e53:	jmpq   18d26 <rte_dev_iterator_next+0xb6>
               :   18e58:	nopl   0x0(%rax,%rax,1)
               :   18e60:	mov    %r15,0x18(%rbx)
               :   18e64:	jmpq   18db1 <rte_dev_iterator_next+0x141>
               :   18e69:	nopl   0x0(%rax)
               :   18e70:	mov    0x8(%r15),%rax
               :   18e74:	mov    0x8(%rax),%rax
               :   18e78:	mov    (%rax),%r15
               :   18e7b:	jmp    18e10 <rte_dev_iterator_next+0x1a0>
               :   18e7d:	nopl   (%rax)
               :   18e80:	lea    0x1(%rbp,%rax,1),%rdi
               :   18e85:	callq  fe90 <strdup@plt>
               :   18e8a:	mov    %rax,%rbp
               :   18e8d:	jmpq   18cfb <rte_dev_iterator_next+0x8b>
               :   18e92:	nopw   0x0(%rax,%rax,1)
               :   18e98:	lea    0x1(%r12,%rax,1),%rdi
               :   18e9d:	callq  fe90 <strdup@plt>
               :   18ea2:	mov    %rax,%r12
               :   18ea5:	jmp    18e35 <rte_dev_iterator_next+0x1c5>
               :   18ea7:	movl   $0x16,(%rax)
               :   18ead:	jmpq   18dc5 <rte_dev_iterator_next+0x155>
               :   18eb2:	callq  eeb0 <__stack_chk_fail@plt>
               :   18eb7:	data16 lea 0x48f99(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   18ebf:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   18ec7:	movl   $0xc,(%rax)
               :   18ecd:	jmpq   18db1 <rte_dev_iterator_next+0x141>
               :   18ed2:	data16 lea 0x48f7e(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   18eda:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   18ee2:	xor    %r12d,%r12d
               :   18ee5:	movl   $0xc,(%rax)
               :   18eeb:	jmpq   18db1 <rte_dev_iterator_next+0x141>
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000371e0 <rte_eal_init>: /* rte_eal_init total:      2 5.9e-05 */
               :   371e0:	endbr64 
               :   371e4:	push   %r15
               :   371e6:	push   %r14
               :   371e8:	mov    %edi,%r14d
               :   371eb:	push   %r13
               :   371ed:	push   %r12
               :   371ef:	push   %rbp
               :   371f0:	mov    %rsi,%rbp
               :   371f3:	push   %rbx
               :   371f4:	sub    $0x1c8,%rsp
               :   371fb:	mov    %fs:0x28,%rax
               :   37204:	mov    %rax,0x1b8(%rsp)
               :   3720c:	xor    %eax,%eax
               :   3720e:	callq  181e0 <rte_eal_get_configuration>
               :   37213:	mov    %rax,0x38(%rsp)
               :   37218:	callq  181f0 <eal_get_internal_configuration>
               :   3721d:	mov    %rax,(%rsp)
               :   37221:	callq  fc50 <rte_cpu_is_supported@plt>
               :   37226:	test   %eax,%eax
               :   37228:	je     37e6d <rte_eal_init+0xc8d>
               :   3722e:	xor    %eax,%eax
               :   37230:	mov    $0x1,%edx
               :   37235:	lock cmpxchg %edx,0x3e9e3(%rip)        # 75c20 <run_once.13582>
               :   3723d:	sete   %al
               :   37240:	movzbl %al,%eax
               :   37243:	mov    %eax,0x34(%rsp)
               :   37247:	jne    380ce <rte_eal_init+0xeee>
               :   3724d:	mov    0x0(%rbp),%r12
               :   37251:	mov    $0x2f,%esi
               :   37256:	mov    %r12,%rdi
               :   37259:	callq  efe0 <strrchr@plt>
               :   3725e:	test   %rax,%rax
               :   37261:	lea    0x1(%rax),%rdx
               :   37265:	cmovne %rdx,%r12
               :   37269:	lea    0x3d9b0(%rip),%rdi        # 74c20 <logid.13585>
               :   37270:	mov    %r12,%rsi
               :   37273:	mov    $0x1000,%edx
               :   37278:	callq  f530 <strlcpy@plt>
               :   3727d:	mov    (%rsp),%rdi
               :   37281:	callq  22c60 <eal_reset_internal_config>
               :   37286:	mov    0x2ac5b(%rip),%rax        # 61ee8 <optopt@GLIBC_2.2.5>
               :   3728d:	mov    0x2ac2c(%rip),%rbx        # 61ec0 <optarg@GLIBC_2.2.5>
               :   37294:	mov    0x2abb5(%rip),%r15        # 61e50 <optind@GLIBC_2.2.5>
               :   3729b:	mov    (%rax),%r12d
               :   3729e:	mov    (%rbx),%rax
               :   372a1:	mov    (%r15),%r13d
               :   372a4:	mov    %rax,0x10(%rsp)
               :   372a9:	callq  181f0 <eal_get_internal_configuration>
               :   372ae:	mov    %rax,0x18(%rsp)
               :   372b3:	lea    0x58(%rsp),%rax
               :   372b8:	movl   $0x1,(%r15)
               :   372bf:	mov    %rax,0x8(%rsp)
               :   372c4:	jmp    372db <rte_eal_init+0xfb>
               :   372c6:	nopw   %cs:0x0(%rax,%rax,1)
               :   372d0:	cmp    $0x107,%eax
               :   372d5:	je     376b8 <rte_eal_init+0x4d8>
               :   372db:	lea    0x123be(%rip),%rdx        # 496a0 <eal_short_options>
               :   372e2:	mov    0x8(%rsp),%r8
               :   372e7:	lea    0x2a2d2(%rip),%rcx        # 615c0 <eal_long_options>
               :   372ee:	mov    %rbp,%rsi
               :   372f1:	mov    %r14d,%edi
               :   372f4:	callq  eef0 <getopt_long@plt>
               :   372f9:	lea    0x1(%rax),%edx
               :   372fc:	and    $0xffffffbf,%edx
               :   372ff:	jne    372d0 <rte_eal_init+0xf0>
               :   37301:	mov    0x2abe0(%rip),%rax        # 61ee8 <optopt@GLIBC_2.2.5>
               :   37308:	mov    %rbp,%rsi
               :   3730b:	mov    %r12d,(%rax)
               :   3730e:	mov    0x10(%rsp),%rax
               :   37313:	mov    %r14d,%edi
               :   37316:	mov    %r13d,(%r15)
               :   37319:	mov    %rax,(%rbx)
               :   3731c:	callq  229e0 <eal_save_args>
               :   37321:	callq  1dc70 <rte_eal_cpu_init>
               :   37326:	test   %eax,%eax
               :   37328:	js     37de7 <rte_eal_init+0xc07>
               :   3732e:	mov    0x0(%rbp),%rax
               :   37332:	mov    %rax,0x10(%rsp)
               :   37337:	mov    (%r15),%eax
               :   3733a:	mov    %eax,0x24(%rsp)
               :   3733e:	mov    0x2aba3(%rip),%rax        # 61ee8 <optopt@GLIBC_2.2.5>
               :   37345:	mov    (%rax),%eax
               :   37347:	mov    %eax,0x30(%rsp)
               :   3734b:	mov    (%rbx),%rax
               :   3734e:	mov    %rax,0x28(%rsp)
               :   37353:	callq  181f0 <eal_get_internal_configuration>
               :   37358:	mov    %rax,%r13
               :   3735b:	lea    0x54(%rsp),%rax
               :   37360:	movl   $0x1,(%r15)
               :   37367:	mov    %rax,0x18(%rsp)
               :   3736c:	nopl   0x0(%rax)
               :   37370:	mov    0x18(%rsp),%r8
               :   37375:	lea    0x2a244(%rip),%rcx        # 615c0 <eal_long_options>
               :   3737c:	lea    0x1231d(%rip),%rdx        # 496a0 <eal_short_options>
               :   37383:	mov    %rbp,%rsi
               :   37386:	mov    %r14d,%edi
               :   37389:	callq  eef0 <getopt_long@plt>
               :   3738e:	mov    %eax,%r12d
               :   37391:	cmp    $0xffffffff,%eax
               :   37394:	je     37738 <rte_eal_init+0x558>
               :   3739a:	cmp    $0x3f,%r12d
               :   3739e:	je     37aa0 <rte_eal_init+0x8c0>
               :   373a4:	cmp    $0x107,%r12d
               :   373ab:	je     37370 <rte_eal_init+0x190>
               :   373ad:	mov    (%rbx),%rsi
               :   373b0:	mov    %r13,%rdx
               :   373b3:	mov    %r12d,%edi
               :   373b6:	callq  22e80 <eal_parse_common_option>
               :   373bb:	test   %eax,%eax
               :   373bd:	js     37ce0 <rte_eal_init+0xb00>
               :   373c3:	je     37370 <rte_eal_init+0x190>
               :   373c5:	cmp    $0x68,%r12d
               :   373c9:	je     376e0 <rte_eal_init+0x500>
               :   373cf:	lea    -0x102(%r12),%eax
               :   373d7:	cmp    $0x20,%eax
               :   373da:	ja     146f6 <rte_eal_init.cold+0x922>
               :   373e0:	lea    0x16ac1(%rip),%rcx        # 4dea8 <__func__.11431+0x1328>
               :   373e7:	movslq (%rcx,%rax,4),%rax
               :   373eb:	add    %rcx,%rax
               :   373ee:	notrack jmpq *%rax
               :   373f1:	mov    (%rbx),%r12
               :   373f4:	callq  181f0 <eal_get_internal_configuration>
               :   373f9:	mov    %rax,0x40(%rsp)
               :   373fe:	test   %r12,%r12
               :   37401:	je     3740e <rte_eal_init+0x22e>
               :   37403:	cmpb   $0x0,(%r12)
               :   37408:	jne    37b10 <rte_eal_init+0x930>
               :   3740e:	lea    0x60(%rsp),%r12
               :   37413:	mov    %r12,%rdi
               :   37416:	callq  f340 <pthread_attr_init@plt>
               :   3741b:	test   %eax,%eax
               :   3741d:	jne    147e5 <rte_eal_init.cold+0xa11>
               :   37423:	mov    0x40(%rsp),%rax
               :   37428:	mov    %r12,%rdi
               :   3742b:	lea    0x34d8(%rax),%rsi
               :   37432:	callq  f3a0 <pthread_attr_getstacksize@plt>
               :   37437:	mov    %r12,%rdi
               :   3743a:	mov    %eax,0x48(%rsp)
               :   3743e:	callq  fcc0 <pthread_attr_destroy@plt>
               :   37443:	mov    0x48(%rsp),%edx
               :   37447:	test   %edx,%edx
               :   37449:	jne    147e5 <rte_eal_init.cold+0xa11>
               :   3744f:	jmpq   13e4c <rte_eal_init.cold+0x78>
               :   37454:	movl   $0x1,0x24c(%r13)
               :   3745f:	jmpq   37370 <rte_eal_init+0x190>
               :   37464:	mov    (%rbx),%rdi
               :   37467:	mov    %rdi,0x40(%rsp)
               :   3746c:	callq  181f0 <eal_get_internal_configuration>
               :   37471:	mov    0x40(%rsp),%rdi
               :   37476:	lea    0xb0(%rsp),%rsi
               :   3747e:	mov    %rax,%r12
               :   37481:	callq  f2f0 <rte_uuid_parse@plt>
               :   37486:	test   %eax,%eax
               :   37488:	jne    37d90 <rte_eal_init+0xbb0>
               :   3748e:	vmovdqa64 0xb0(%rsp),%xmm0
               :   37496:	vmovups %xmm0,0x25c(%r12)
               :   374a0:	jmpq   37370 <rte_eal_init+0x190>
               :   374a5:	mov    (%rbx),%r12
               :   374a8:	callq  181f0 <eal_get_internal_configuration>
               :   374ad:	mov    $0x7,%ecx
               :   374b2:	mov    %r12,%rsi
               :   374b5:	lea    0x167e5(%rip),%rdi        # 4dca1 <__func__.11431+0x1121>
               :   374bc:	repz cmpsb %es:(%rdi),%ds:(%rsi)
               :   374be:	seta   %dl
               :   374c1:	sbb    $0x0,%dl
               :   374c4:	test   %dl,%dl
               :   374c6:	je     37db8 <rte_eal_init+0xbd8>
               :   374cc:	mov    $0x4,%ecx
               :   374d1:	lea    0x167d0(%rip),%rdi        # 4dca8 <__func__.11431+0x1128>
               :   374d8:	mov    %r12,%rsi
               :   374db:	repz cmpsb %es:(%rdi),%ds:(%rsi)
               :   374dd:	seta   %dl
               :   374e0:	sbb    $0x0,%dl
               :   374e3:	test   %dl,%dl
               :   374e5:	je     37dd8 <rte_eal_init+0xbf8>
               :   374eb:	mov    $0x5,%ecx
               :   374f0:	lea    0x167b5(%rip),%rdi        # 4dcac <__func__.11431+0x112c>
               :   374f7:	mov    %r12,%rsi
               :   374fa:	repz cmpsb %es:(%rdi),%ds:(%rsi)
               :   374fc:	seta   %dl
               :   374ff:	sbb    $0x0,%dl
               :   37502:	test   %dl,%dl
               :   37504:	je     37de0 <rte_eal_init+0xc00>
               :   3750a:	mov    $0x4,%edi
               :   3750f:	lea    0x15e8a(%rip),%rdx        # 4d3a0 <__func__.11431+0x820>
               :   37516:	xor    %esi,%esi
               :   37518:	xor    %eax,%eax
               :   3751a:	callq  e810 <rte_log@plt>
               :   3751f:	mov    0x10(%rsp),%rdi
               :   37524:	callq  36f40 <eal_usage>
               :   37529:	mov    0x24(%rsp),%eax
               :   3752d:	mov    0x30(%rsp),%ecx
               :   37531:	mov    %eax,(%r15)
               :   37534:	mov    0x2a9ad(%rip),%rax        # 61ee8 <optopt@GLIBC_2.2.5>
               :   3753b:	mov    %ecx,(%rax)
               :   3753d:	mov    0x28(%rsp),%rax
               :   37542:	mov    %rax,(%rbx)
               :   37545:	mov    0x2aaa4(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   3754c:	lea    0x16065(%rip),%rcx        # 4d5b8 <__func__.11431+0xa38>
               :   37553:	mov    (%rax),%rdi
               :   37556:	lea    0x166e0(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   3755d:	mov    $0x1,%esi
               :   37562:	xor    %eax,%eax
               :   37564:	callq  fde0 <__fprintf_chk@plt>
               :   37569:	lea    0x16048(%rip),%rcx        # 4d5b8 <__func__.11431+0xa38>
               :   37570:	lea    0xf82b(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   37577:	xor    %esi,%esi
               :   37579:	mov    $0x4,%edi
               :   3757e:	xor    %eax,%eax
               :   37580:	callq  e810 <rte_log@plt>
     2 5.9e-05 :   37585:	data16 lea 0x2a8cb(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   3758d:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   37595:	mov    $0xffffffff,%r12d
               :   3759b:	movl   $0x16,(%rax)
               :   375a1:	movl   $0x0,0x3e675(%rip)        # 75c20 <run_once.13582>
               :   375ab:	nopl   0x0(%rax,%rax,1)
               :   375b0:	mov    0x1b8(%rsp),%rax
               :   375b8:	xor    %fs:0x28,%rax
               :   375c1:	jne    38140 <rte_eal_init+0xf60>
               :   375c7:	add    $0x1c8,%rsp
               :   375ce:	pop    %rbx
               :   375cf:	pop    %rbp
               :   375d0:	mov    %r12d,%eax
               :   375d3:	pop    %r12
               :   375d5:	pop    %r13
               :   375d7:	pop    %r14
               :   375d9:	pop    %r15
               :   375db:	retq   
               :   375dc:	mov    (%rbx),%rdi
               :   375df:	lea    0x140(%r13),%rsi
               :   375e6:	callq  36e10 <eal_parse_socket_arg>
               :   375eb:	test   %eax,%eax
               :   375ed:	js     14679 <rte_eal_init.cold+0x8a5>
               :   375f3:	movl   $0x1,0x138(%r13)
               :   375fe:	jmpq   37370 <rte_eal_init+0x190>
               :   37603:	mov    (%rbx),%rdi
               :   37606:	lea    0x38(%r13),%rsi
               :   3760a:	callq  36e10 <eal_parse_socket_arg>
               :   3760f:	test   %eax,%eax
               :   37611:	js     146b9 <rte_eal_init.cold+0x8e5>
               :   37617:	movl   $0x1,0x34(%r13)
               :   3761f:	jmpq   37370 <rte_eal_init+0x190>
               :   37624:	mov    (%rbx),%rdi
               :   37627:	callq  fe90 <strdup@plt>
               :   3762c:	mov    %rax,%r12
               :   3762f:	test   %rax,%rax
               :   37632:	je     146c2 <rte_eal_init.cold+0x8ee>
               :   37638:	mov    0x280(%r13),%rdi
               :   3763f:	callq  e8c0 <free@plt>
               :   37644:	mov    %r12,0x280(%r13)
               :   3764b:	jmpq   37370 <rte_eal_init+0x190>
               :   37650:	mov    (%rbx),%rdi
               :   37653:	callq  fe90 <strdup@plt>
               :   37658:	mov    %rax,%r12
               :   3765b:	test   %rax,%rax
               :   3765e:	je     146dc <rte_eal_init.cold+0x908>
               :   37664:	mov    0x278(%r13),%rdi
               :   3766b:	callq  e8c0 <free@plt>
               :   37670:	mov    %r12,0x278(%r13)
               :   37677:	jmpq   37370 <rte_eal_init+0x190>
               :   3767c:	mov    (%rbx),%rdi
               :   3767f:	callq  fe90 <strdup@plt>
               :   37684:	mov    %rax,%r12
               :   37687:	test   %rax,%rax
               :   3768a:	je     14759 <rte_eal_init.cold+0x985>
               :   37690:	mov    0x270(%r13),%rdi
               :   37697:	callq  e8c0 <free@plt>
               :   3769c:	mov    %r12,0x270(%r13)
               :   376a3:	jmpq   37370 <rte_eal_init+0x190>
               :   376a8:	movl   $0x1,0x2c(%r13)
               :   376b0:	jmpq   37370 <rte_eal_init+0x190>
               :   376b5:	nopl   (%rax)
               :   376b8:	mov    0x18(%rsp),%rdx
               :   376bd:	mov    (%rbx),%rsi
               :   376c0:	mov    $0x107,%edi
               :   376c5:	callq  22e80 <eal_parse_common_option>
               :   376ca:	test   %eax,%eax
               :   376cc:	jns    372db <rte_eal_init+0xfb>
               :   376d2:	jmpq   37301 <rte_eal_init+0x121>
               :   376d7:	nopw   0x0(%rax,%rax,1)
               :   376e0:	callq  229b0 <eal_get_application_usage_hook>
               :   376e5:	mov    0x10(%rsp),%r15
               :   376ea:	mov    $0x1,%edi
               :   376ef:	mov    %rax,%rbx
               :   376f2:	mov    %r15,%rdx
               :   376f5:	lea    0x16535(%rip),%rsi        # 4dc31 <__func__.11431+0x10b1>
               :   376fc:	xor    %eax,%eax
               :   376fe:	callq  f920 <__printf_chk@plt>
               :   37703:	callq  24fd0 <eal_common_usage>
               :   37708:	lea    0x15709(%rip),%rdi        # 4ce18 <__func__.11431+0x298>
               :   3770f:	callq  eb50 <puts@plt>
               :   37714:	test   %rbx,%rbx
               :   37717:	je     3772a <rte_eal_init+0x54a>
               :   37719:	lea    0x15aa0(%rip),%rdi        # 4d1c0 <__func__.11431+0x640>
               :   37720:	callq  eb50 <puts@plt>
               :   37725:	mov    %r15,%rdi
               :   37728:	callq  *%rbx
               :   3772a:	xor    %edi,%edi
               :   3772c:	callq  fd90 <exit@plt>
               :   37731:	nopl   0x0(%rax)
               :   37738:	callq  35b90 <eal_create_runtime_dir>
               :   3773d:	test   %eax,%eax
               :   3773f:	js     14739 <rte_eal_init.cold+0x965>
               :   37745:	mov    %r13,%rdi
               :   37748:	callq  24950 <eal_adjust_config>
               :   3774d:	test   %eax,%eax
               :   3774f:	jne    37ae9 <rte_eal_init+0x909>
               :   37755:	mov    %r13,%rdi
               :   37758:	callq  24e20 <eal_check_common_options>
               :   3775d:	test   %eax,%eax
               :   3775f:	jne    37aa0 <rte_eal_init+0x8c0>
               :   37765:	mov    (%r15),%eax
               :   37768:	test   %eax,%eax
               :   3776a:	js     37779 <rte_eal_init+0x599>
               :   3776c:	mov    0x10(%rsp),%rcx
               :   37771:	movslq %eax,%rdx
               :   37774:	mov    %rcx,-0x8(%rbp,%rdx,8)
               :   37779:	mov    0x24(%rsp),%ecx
               :   3777d:	mov    0x30(%rsp),%esi
               :   37781:	mov    %ecx,(%r15)
               :   37784:	mov    0x2a75d(%rip),%rcx        # 61ee8 <optopt@GLIBC_2.2.5>
               :   3778b:	dec    %eax
               :   3778d:	mov    %esi,(%rcx)
               :   3778f:	mov    0x28(%rsp),%rcx
               :   37794:	mov    %rcx,(%rbx)
               :   37797:	mov    %eax,%ebx
               :   37799:	js     37545 <rte_eal_init+0x365>
               :   3779f:	callq  22e20 <eal_plugins_init>
               :   377a4:	test   %eax,%eax
               :   377a6:	js     37f33 <rte_eal_init+0xd53>
               :   377ac:	callq  313f0 <eal_trace_init>
               :   377b1:	test   %eax,%eax
               :   377b3:	js     37fdd <rte_eal_init+0xdfd>
               :   377b9:	callq  22b80 <eal_option_device_parse>
               :   377be:	test   %eax,%eax
               :   377c0:	jne    37e48 <rte_eal_init+0xc68>
               :   377c6:	callq  181e0 <rte_eal_get_configuration>
               :   377cb:	mov    %rax,%rbp
               :   377ce:	callq  181f0 <eal_get_internal_configuration>
               :   377d3:	mov    0x30(%rax),%ecx
               :   377d6:	mov    %ecx,0x290(%rbp)
               :   377dc:	cmp    $0x1,%ecx
               :   377df:	je     37ba0 <rte_eal_init+0x9c0>
               :   377e5:	jg     37b70 <rte_eal_init+0x990>
               :   377eb:	cmp    $0xffffffff,%ecx
               :   377ee:	je     1465f <rte_eal_init.cold+0x88b>
               :   377f4:	test   %ecx,%ecx
               :   377f6:	jne    37958 <rte_eal_init+0x778>
               :   377fc:	callq  181e0 <rte_eal_get_configuration>
               :   37801:	mov    $0x1e,%edi
               :   37806:	mov    %rax,%rbp
               :   37809:	callq  fc10 <sysconf@plt>
               :   3780e:	mov    %rax,%r14
               :   37811:	mov    %rax,%r13
               :   37814:	neg    %r14
               :   37817:	lea    0x62ff(%rax),%rax
               :   3781e:	and    %r14,%rax
               :   37821:	mov    %rax,0x58(%rsp)
               :   37826:	callq  181f0 <eal_get_internal_configuration>
               :   3782b:	mov    %rax,%r15
               :   3782e:	callq  fd60 <rte_eal_get_runtime_dir@plt>
               :   37833:	mov    %rax,%r9
               :   37836:	sub    $0x8,%rsp
               :   3783a:	lea    0x164c0(%rip),%rax        # 4dd01 <__func__.11431+0x1181>
               :   37841:	push   %rax
               :   37842:	lea    0x16a53(%rip),%r8        # 4e29c <__func__.13592+0x36c>
               :   37849:	mov    $0x1000,%ecx
               :   3784e:	mov    $0x1,%edx
               :   37853:	mov    $0x1000,%esi
               :   37858:	lea    0x3e3e1(%rip),%rdi        # 75c40 <buffer.12943>
               :   3785f:	xor    %eax,%eax
               :   37861:	callq  e8b0 <__snprintf_chk@plt>
               :   37866:	mov    0x24(%r15),%eax
               :   3786a:	pop    %r10
               :   3786c:	pop    %r11
               :   3786e:	test   %eax,%eax
               :   37870:	jne    3794f <rte_eal_init+0x76f>
               :   37876:	mov    0x240(%r15),%rdx
               :   3787d:	mov    0x2b89c(%rip),%r15d        # 63120 <mem_cfg_fd>
               :   37884:	lea    -0x6300(%rdx),%rax
               :   3788b:	and    %rax,%r14
               :   3788e:	test   %rdx,%rdx
               :   37891:	mov    $0x0,%eax
               :   37896:	cmove  %rax,%r14
               :   3789a:	test   %r15d,%r15d
               :   3789d:	js     37d38 <rte_eal_init+0xb58>
               :   378a3:	mov    $0x6300,%esi
               :   378a8:	mov    %r15d,%edi
               :   378ab:	callq  f910 <ftruncate64@plt>
               :   378b0:	test   %eax,%eax
               :   378b2:	js     38269 <rte_eal_init+0x1089>
               :   378b8:	xor    %eax,%eax
               :   378ba:	lea    0x2b83f(%rip),%rdx        # 63100 <wr_lock>
               :   378c1:	mov    $0x6,%esi
               :   378c6:	mov    %r15d,%edi
               :   378c9:	callq  fa10 <fcntl64@plt>
               :   378ce:	test   %eax,%eax
               :   378d0:	js     38233 <rte_eal_init+0x1053>
               :   378d6:	mov    0x8(%rsp),%rsi
               :   378db:	mov    %r13,%rdx
               :   378de:	xor    %r8d,%r8d
               :   378e1:	xor    %ecx,%ecx
               :   378e3:	mov    %r14,%rdi
               :   378e6:	callq  1ff60 <eal_get_virtual_area>
               :   378eb:	mov    %rax,%r13
               :   378ee:	test   %rax,%rax
               :   378f1:	je     13dd4 <rte_eal_init.cold>
               :   378f7:	mov    0x2b822(%rip),%r14d        # 63120 <mem_cfg_fd>
               :   378fe:	mov    0x58(%rsp),%rsi
               :   37903:	xor    %r9d,%r9d
               :   37906:	mov    %r14d,%r8d
               :   37909:	mov    $0x11,%ecx
               :   3790e:	mov    $0x3,%edx
               :   37913:	mov    %rax,%rdi
               :   37916:	callq  f6c0 <mmap64@plt>
               :   3791b:	cmp    $0xffffffffffffffff,%rax
               :   3791f:	je     381fa <rte_eal_init+0x101a>
               :   37925:	mov    0x298(%rbp),%rsi
               :   3792c:	mov    $0x6300,%edx
               :   37931:	mov    %r13,%rdi
               :   37934:	callq  f540 <memcpy@plt>
               :   37939:	mov    %r13,0x298(%rbp)
               :   37940:	mov    %r13,0x62c8(%r13)
               :   37947:	movb   $0x0,0x62e0(%r13)
               :   3794f:	callq  1ef00 <eal_mcfg_update_from_internal>
               :   37954:	nopl   0x0(%rax)
               :   37958:	callq  3c720 <rte_eal_intr_init>
               :   3795d:	test   %eax,%eax
               :   3795f:	js     37f98 <rte_eal_init+0xdb8>
               :   37965:	callq  38650 <rte_eal_alarm_init>
               :   3796a:	test   %eax,%eax
               :   3796c:	js     3807d <rte_eal_init+0xe9d>
               :   37972:	callq  30740 <rte_mp_channel_init>
               :   37977:	test   %eax,%eax
               :   37979:	jns    379e0 <rte_eal_init+0x800>
               :   3797b:	data16 lea 0x2a4d5(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   37983:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   3798b:	cmpl   $0x5f,(%rax)
               :   3798e:	mov    %rax,%rbp
               :   37991:	je     379e0 <rte_eal_init+0x800>
               :   37993:	mov    0x2a656(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   3799a:	lea    0x16379(%rip),%rcx        # 4dd1a <__func__.11431+0x119a>
               :   379a1:	mov    (%rax),%rdi
               :   379a4:	lea    0x16292(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   379ab:	mov    $0x1,%esi
               :   379b0:	xor    %eax,%eax
               :   379b2:	callq  fde0 <__fprintf_chk@plt>
               :   379b7:	xor    %esi,%esi
               :   379b9:	lea    0x1635a(%rip),%rcx        # 4dd1a <__func__.11431+0x119a>
               :   379c0:	lea    0xf3db(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   379c7:	mov    $0x4,%edi
               :   379cc:	xor    %eax,%eax
               :   379ce:	callq  e810 <rte_log@plt>
               :   379d3:	callq  f7c0 <rte_eal_process_type@plt>
               :   379d8:	test   %eax,%eax
               :   379da:	je     380c2 <rte_eal_init+0xee2>
               :   379e0:	callq  34260 <eal_mp_dev_hotplug_init>
               :   379e5:	test   %eax,%eax
               :   379e7:	js     38038 <rte_eal_init+0xe58>
               :   379ed:	callq  f8c0 <rte_bus_scan@plt>
               :   379f2:	test   %eax,%eax
               :   379f4:	jne    37ece <rte_eal_init+0xcee>
               :   379fa:	callq  f2b0 <rte_eal_using_phys_addrs@plt>
               :   379ff:	mov    %eax,%ebp
               :   37a01:	mov    (%rsp),%rax
               :   37a05:	mov    0x3440(%rax),%edi
               :   37a0b:	test   %edi,%edi
               :   37a0d:	jne    37b80 <rte_eal_init+0x9a0>
               :   37a13:	callq  f270 <rte_bus_get_iommu_class@plt>
               :   37a18:	mov    %eax,%r13d
               :   37a1b:	test   %eax,%eax
               :   37a1d:	je     13e03 <rte_eal_init.cold+0x2f>
               :   37a23:	callq  181e0 <rte_eal_get_configuration>
               :   37a28:	mov    %r13d,0x294(%rax)
               :   37a2f:	callq  f870 <rte_eal_iova_mode@plt>
               :   37a34:	cmp    $0x1,%eax
               :   37a37:	jne    380f9 <rte_eal_init+0xf19>
               :   37a3d:	test   %ebp,%ebp
               :   37a3f:	jne    380f9 <rte_eal_init+0xf19>
               :   37a45:	mov    0x2a5a4(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   37a4c:	lea    0x15edd(%rip),%rcx        # 4d930 <__func__.11431+0xdb0>
               :   37a53:	mov    (%rax),%rdi
               :   37a56:	lea    0x161e0(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   37a5d:	mov    $0x1,%esi
               :   37a62:	xor    %eax,%eax
               :   37a64:	callq  fde0 <__fprintf_chk@plt>
               :   37a69:	lea    0x15ec0(%rip),%rcx        # 4d930 <__func__.11431+0xdb0>
               :   37a70:	lea    0xf32b(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   37a77:	xor    %esi,%esi
               :   37a79:	mov    $0x4,%edi
               :   37a7e:	xor    %eax,%eax
               :   37a80:	callq  e810 <rte_log@plt>
               :   37a85:	data16 lea 0x2a3cb(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   37a8d:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   37a95:	movl   $0x16,(%rax)
               :   37a9b:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   37aa0:	callq  229b0 <eal_get_application_usage_hook>
               :   37aa5:	mov    0x10(%rsp),%rdx
               :   37aaa:	mov    $0x1,%edi
               :   37aaf:	mov    %rax,%rbp
               :   37ab2:	lea    0x16178(%rip),%rsi        # 4dc31 <__func__.11431+0x10b1>
               :   37ab9:	xor    %eax,%eax
               :   37abb:	callq  f920 <__printf_chk@plt>
               :   37ac0:	callq  24fd0 <eal_common_usage>
               :   37ac5:	lea    0x1534c(%rip),%rdi        # 4ce18 <__func__.11431+0x298>
               :   37acc:	callq  eb50 <puts@plt>
               :   37ad1:	test   %rbp,%rbp
               :   37ad4:	je     37ae9 <rte_eal_init+0x909>
               :   37ad6:	lea    0x156e3(%rip),%rdi        # 4d1c0 <__func__.11431+0x640>
               :   37add:	callq  eb50 <puts@plt>
               :   37ae2:	mov    0x10(%rsp),%rdi
               :   37ae7:	callq  *%rbp
               :   37ae9:	mov    0x24(%rsp),%eax
               :   37aed:	mov    0x30(%rsp),%esi
               :   37af1:	mov    %eax,(%r15)
               :   37af4:	mov    0x2a3ed(%rip),%rax        # 61ee8 <optopt@GLIBC_2.2.5>
               :   37afb:	mov    %esi,(%rax)
               :   37afd:	mov    0x28(%rsp),%rax
               :   37b02:	mov    %rax,(%rbx)
               :   37b05:	jmpq   37545 <rte_eal_init+0x365>
               :   37b0a:	nopw   0x0(%rax,%rax,1)
               :   37b10:	callq  e9d0 <__errno_location@plt>
               :   37b15:	movl   $0x0,(%rax)
               :   37b1b:	mov    0x8(%rsp),%rsi
               :   37b20:	mov    %r12,%rdi
               :   37b23:	mov    $0xa,%edx
               :   37b28:	mov    %rax,0x48(%rsp)
               :   37b2d:	callq  fc80 <strtoul@plt>
               :   37b32:	mov    0x48(%rsp),%rcx
               :   37b37:	mov    (%rcx),%r12d
               :   37b3a:	test   %r12d,%r12d
               :   37b3d:	jne    37b5e <rte_eal_init+0x97e>
               :   37b3f:	cmpq   $0x0,0x58(%rsp)
               :   37b45:	je     37b5e <rte_eal_init+0x97e>
               :   37b47:	lea    -0x1(%rax),%rdx
               :   37b4b:	movabs $0x3ffffffffffffd,%rsi
               :   37b55:	cmp    %rsi,%rdx
               :   37b58:	jbe    13e3c <rte_eal_init.cold+0x68>
               :   37b5e:	lea    0x15943(%rip),%rdx        # 4d4a8 <__func__.11431+0x928>
               :   37b65:	jmpq   37d97 <rte_eal_init+0xbb7>
               :   37b6a:	nopw   0x0(%rax,%rax,1)
               :   37b70:	cmp    $0x2,%ecx
               :   37b73:	jne    37958 <rte_eal_init+0x778>
               :   37b79:	jmpq   1465f <rte_eal_init.cold+0x88b>
               :   37b7e:	xchg   %ax,%ax
               :   37b80:	callq  181e0 <rte_eal_get_configuration>
               :   37b85:	mov    (%rsp),%rcx
               :   37b89:	mov    0x3440(%rcx),%edx
               :   37b8f:	mov    %edx,0x294(%rax)
               :   37b95:	jmpq   37a2f <rte_eal_init+0x84f>
               :   37b9a:	nopw   0x0(%rax,%rax,1)
               :   37ba0:	callq  181e0 <rte_eal_get_configuration>
               :   37ba5:	mov    %rax,%rbp
               :   37ba8:	callq  181f0 <eal_get_internal_configuration>
               :   37bad:	mov    %rax,%r13
               :   37bb0:	callq  fd60 <rte_eal_get_runtime_dir@plt>
               :   37bb5:	mov    %rax,%r9
               :   37bb8:	sub    $0x8,%rsp
               :   37bbc:	lea    0x1613e(%rip),%rax        # 4dd01 <__func__.11431+0x1181>
               :   37bc3:	push   %rax
               :   37bc4:	lea    0x166d1(%rip),%r8        # 4e29c <__func__.13592+0x36c>
               :   37bcb:	mov    $0x1000,%ecx
               :   37bd0:	mov    $0x1,%edx
               :   37bd5:	mov    $0x1000,%esi
               :   37bda:	lea    0x3e05f(%rip),%rdi        # 75c40 <buffer.12943>
               :   37be1:	xor    %eax,%eax
               :   37be3:	callq  e8b0 <__snprintf_chk@plt>
               :   37be8:	mov    0x24(%r13),%eax
               :   37bec:	pop    %r8
               :   37bee:	pop    %r9
               :   37bf0:	test   %eax,%eax
               :   37bf2:	jne    37c31 <rte_eal_init+0xa51>
               :   37bf4:	mov    0x2b525(%rip),%r13d        # 63120 <mem_cfg_fd>
               :   37bfb:	test   %r13d,%r13d
               :   37bfe:	js     37d68 <rte_eal_init+0xb88>
               :   37c04:	xor    %r9d,%r9d
               :   37c07:	xor    %edi,%edi
               :   37c09:	mov    %r13d,%r8d
               :   37c0c:	mov    $0x1,%ecx
               :   37c11:	mov    $0x1,%edx
               :   37c16:	mov    $0x6300,%esi
               :   37c1b:	callq  f6c0 <mmap64@plt>
               :   37c20:	cmp    $0xffffffffffffffff,%rax
               :   37c24:	je     38145 <rte_eal_init+0xf65>
               :   37c2a:	mov    %rax,0x298(%rbp)
               :   37c31:	callq  1ee70 <eal_mcfg_wait_complete>
               :   37c36:	callq  1eea0 <eal_mcfg_check_version>
               :   37c3b:	test   %eax,%eax
               :   37c3d:	js     1485b <rte_eal_init.cold+0xa87>
               :   37c43:	callq  181e0 <rte_eal_get_configuration>
               :   37c48:	mov    %rax,%rbp
               :   37c4b:	callq  181f0 <eal_get_internal_configuration>
               :   37c50:	mov    0x24(%rax),%eax
               :   37c53:	test   %eax,%eax
               :   37c55:	jne    37cc2 <rte_eal_init+0xae2>
               :   37c57:	mov    0x298(%rbp),%rdi
               :   37c5e:	mov    $0x6300,%esi
               :   37c63:	mov    0x62c8(%rdi),%r13
               :   37c6a:	callq  f8e0 <munmap@plt>
               :   37c6f:	mov    0x2b4aa(%rip),%r15d        # 63120 <mem_cfg_fd>
               :   37c76:	xor    %r9d,%r9d
               :   37c79:	mov    %r15d,%r8d
               :   37c7c:	mov    $0x1,%ecx
               :   37c81:	mov    $0x3,%edx
               :   37c86:	mov    $0x6300,%esi
               :   37c8b:	mov    %r13,%rdi
               :   37c8e:	callq  f6c0 <mmap64@plt>
               :   37c93:	mov    %rax,%r14
               :   37c96:	mov    %r15d,%edi
               :   37c99:	callq  f200 <close@plt>
               :   37c9e:	movl   $0xffffffff,0x2b478(%rip)        # 63120 <mem_cfg_fd>
               :   37ca8:	cmp    $0xffffffffffffffff,%r14
               :   37cac:	je     381cf <rte_eal_init+0xfef>
               :   37cb2:	cmp    %r14,%r13
               :   37cb5:	jne    381c5 <rte_eal_init+0xfe5>
               :   37cbb:	mov    %r14,0x298(%rbp)
               :   37cc2:	callq  31390 <__rte_mp_enable>
               :   37cc7:	test   %al,%al
               :   37cc9:	je     14841 <rte_eal_init.cold+0xa6d>
               :   37ccf:	callq  1eed0 <eal_mcfg_update_internal>
               :   37cd4:	jmpq   37958 <rte_eal_init+0x778>
               :   37cd9:	nopl   0x0(%rax)
               :   37ce0:	callq  229b0 <eal_get_application_usage_hook>
               :   37ce5:	mov    0x10(%rsp),%rdx
               :   37cea:	mov    $0x1,%edi
               :   37cef:	mov    %rax,%rbp
               :   37cf2:	lea    0x15f38(%rip),%rsi        # 4dc31 <__func__.11431+0x10b1>
               :   37cf9:	xor    %eax,%eax
               :   37cfb:	callq  f920 <__printf_chk@plt>
               :   37d00:	callq  24fd0 <eal_common_usage>
               :   37d05:	lea    0x1510c(%rip),%rdi        # 4ce18 <__func__.11431+0x298>
               :   37d0c:	callq  eb50 <puts@plt>
               :   37d11:	test   %rbp,%rbp
               :   37d14:	je     37529 <rte_eal_init+0x349>
               :   37d1a:	lea    0x1549f(%rip),%rdi        # 4d1c0 <__func__.11431+0x640>
               :   37d21:	callq  eb50 <puts@plt>
               :   37d26:	mov    0x10(%rsp),%rdi
               :   37d2b:	callq  *%rbp
               :   37d2d:	jmpq   37529 <rte_eal_init+0x349>
               :   37d32:	nopw   0x0(%rax,%rax,1)
               :   37d38:	mov    $0x180,%edx
               :   37d3d:	mov    $0x42,%esi
               :   37d42:	lea    0x3def7(%rip),%rdi        # 75c40 <buffer.12943>
               :   37d49:	callq  f9f0 <open64@plt>
               :   37d4e:	mov    %eax,0x2b3cc(%rip)        # 63120 <mem_cfg_fd>
               :   37d54:	mov    %eax,%r15d
               :   37d57:	test   %eax,%eax
               :   37d59:	jns    378a3 <rte_eal_init+0x6c3>
               :   37d5f:	jmpq   14820 <rte_eal_init.cold+0xa4c>
               :   37d64:	nopl   0x0(%rax)
               :   37d68:	mov    $0x2,%esi
               :   37d6d:	lea    0x3decc(%rip),%rdi        # 75c40 <buffer.12943>
               :   37d74:	callq  f9f0 <open64@plt>
               :   37d79:	mov    %eax,0x2b3a1(%rip)        # 63120 <mem_cfg_fd>
               :   37d7f:	mov    %eax,%r13d
               :   37d82:	test   %eax,%eax
               :   37d84:	jns    37c04 <rte_eal_init+0xa24>
               :   37d8a:	jmpq   147ff <rte_eal_init.cold+0xa2b>
               :   37d8f:	nop
               :   37d90:	lea    0x15639(%rip),%rdx        # 4d3d0 <__func__.11431+0x850>
               :   37d97:	xor    %esi,%esi
               :   37d99:	mov    $0x4,%edi
               :   37d9e:	xor    %eax,%eax
               :   37da0:	callq  e810 <rte_log@plt>
               :   37da5:	mov    0x10(%rsp),%rdi
               :   37daa:	callq  36f40 <eal_usage>
               :   37daf:	jmpq   37ae9 <rte_eal_init+0x909>
               :   37db4:	nopl   0x0(%rax)
               :   37db8:	xor    %edx,%edx
               :   37dba:	shl    $0x4,%rdx
               :   37dbe:	lea    0x29cbb(%rip),%rcx        # 61a80 <map.13470>
               :   37dc5:	mov    0x8(%rcx,%rdx,1),%edx
               :   37dc9:	mov    %edx,0x258(%rax)
               :   37dcf:	jmpq   37370 <rte_eal_init+0x190>
               :   37dd4:	nopl   0x0(%rax)
               :   37dd8:	mov    0x34(%rsp),%edx
               :   37ddc:	jmp    37dba <rte_eal_init+0xbda>
               :   37dde:	xchg   %ax,%ax
               :   37de0:	mov    $0x2,%edx
               :   37de5:	jmp    37dba <rte_eal_init+0xbda>
               :   37de7:	mov    0x2a202(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   37dee:	lea    0x15e96(%rip),%rcx        # 4dc8b <__func__.11431+0x110b>
               :   37df5:	mov    (%rax),%rdi
               :   37df8:	lea    0x15e3e(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   37dff:	mov    $0x1,%esi
               :   37e04:	xor    %eax,%eax
               :   37e06:	callq  fde0 <__fprintf_chk@plt>
               :   37e0b:	lea    0x15e79(%rip),%rcx        # 4dc8b <__func__.11431+0x110b>
               :   37e12:	lea    0xef89(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   37e19:	xor    %esi,%esi
               :   37e1b:	mov    $0x4,%edi
               :   37e20:	xor    %eax,%eax
               :   37e22:	callq  e810 <rte_log@plt>
               :   37e27:	data16 lea 0x2a029(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   37e2f:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   37e37:	mov    $0xffffffff,%r12d
               :   37e3d:	movl   $0x5f,(%rax)
               :   37e43:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   37e48:	data16 lea 0x2a008(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   37e50:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   37e58:	movl   $0x13,(%rax)
               :   37e5e:	movl   $0x0,0x3ddb8(%rip)        # 75c20 <run_once.13582>
               :   37e68:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   37e6d:	mov    0x2a17c(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   37e74:	lea    0x15dfa(%rip),%rcx        # 4dc75 <__func__.11431+0x10f5>
               :   37e7b:	mov    (%rax),%rdi
               :   37e7e:	lea    0x15db8(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   37e85:	mov    $0x1,%esi
               :   37e8a:	xor    %eax,%eax
               :   37e8c:	callq  fde0 <__fprintf_chk@plt>
               :   37e91:	lea    0x15ddd(%rip),%rcx        # 4dc75 <__func__.11431+0x10f5>
               :   37e98:	lea    0xef03(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   37e9f:	xor    %esi,%esi
               :   37ea1:	mov    $0x4,%edi
               :   37ea6:	xor    %eax,%eax
               :   37ea8:	callq  e810 <rte_log@plt>
               :   37ead:	data16 lea 0x29fa3(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   37eb5:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   37ebd:	mov    $0xffffffff,%r12d
               :   37ec3:	movl   $0x5f,(%rax)
               :   37ec9:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   37ece:	mov    0x2a11b(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   37ed5:	lea    0x1596c(%rip),%rcx        # 4d848 <__func__.11431+0xcc8>
               :   37edc:	mov    (%rax),%rdi
               :   37edf:	lea    0x15d57(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   37ee6:	mov    $0x1,%esi
               :   37eeb:	xor    %eax,%eax
               :   37eed:	callq  fde0 <__fprintf_chk@plt>
               :   37ef2:	lea    0x1594f(%rip),%rcx        # 4d848 <__func__.11431+0xcc8>
               :   37ef9:	lea    0xeea2(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   37f00:	xor    %esi,%esi
               :   37f02:	mov    $0x4,%edi
               :   37f07:	xor    %eax,%eax
               :   37f09:	callq  e810 <rte_log@plt>
               :   37f0e:	data16 lea 0x29f42(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   37f16:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   37f1e:	movl   $0x13,(%rax)
               :   37f24:	movl   $0x0,0x3dcf2(%rip)        # 75c20 <run_once.13582>
               :   37f2e:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   37f33:	mov    0x2a0b6(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   37f3a:	lea    0x15d70(%rip),%rcx        # 4dcb1 <__func__.11431+0x1131>
               :   37f41:	mov    (%rax),%rdi
               :   37f44:	lea    0x15cf2(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   37f4b:	mov    $0x1,%esi
               :   37f50:	xor    %eax,%eax
               :   37f52:	callq  fde0 <__fprintf_chk@plt>
               :   37f57:	lea    0x15d53(%rip),%rcx        # 4dcb1 <__func__.11431+0x1131>
               :   37f5e:	lea    0xee3d(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   37f65:	xor    %esi,%esi
               :   37f67:	mov    $0x4,%edi
               :   37f6c:	xor    %eax,%eax
               :   37f6e:	callq  e810 <rte_log@plt>
               :   37f73:	data16 lea 0x29edd(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   37f7b:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   37f83:	movl   $0x16,(%rax)
               :   37f89:	movl   $0x0,0x3dc8d(%rip)        # 75c20 <run_once.13582>
               :   37f93:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   37f98:	mov    0x2a051(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   37f9f:	lea    0x1584a(%rip),%rcx        # 4d7f0 <__func__.11431+0xc70>
               :   37fa6:	mov    (%rax),%rdi
               :   37fa9:	lea    0x15c8d(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   37fb0:	mov    $0x1,%esi
               :   37fb5:	xor    %eax,%eax
               :   37fb7:	callq  fde0 <__fprintf_chk@plt>
               :   37fbc:	lea    0x1582d(%rip),%rcx        # 4d7f0 <__func__.11431+0xc70>
               :   37fc3:	lea    0xedd8(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   37fca:	xor    %esi,%esi
               :   37fcc:	mov    $0x4,%edi
               :   37fd1:	xor    %eax,%eax
               :   37fd3:	callq  e810 <rte_log@plt>
               :   37fd8:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   37fdd:	mov    0x2a00c(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   37fe4:	lea    0x15cda(%rip),%rcx        # 4dcc5 <__func__.11431+0x1145>
               :   37feb:	mov    (%rax),%rdi
               :   37fee:	lea    0x15c48(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   37ff5:	mov    $0x1,%esi
               :   37ffa:	xor    %eax,%eax
               :   37ffc:	callq  fde0 <__fprintf_chk@plt>
               :   38001:	lea    0x15cbd(%rip),%rcx        # 4dcc5 <__func__.11431+0x1145>
               :   38008:	lea    0xed93(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   3800f:	xor    %esi,%esi
               :   38011:	mov    $0x4,%edi
               :   38016:	xor    %eax,%eax
               :   38018:	callq  e810 <rte_log@plt>
               :   3801d:	data16 lea 0x29e33(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   38025:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   3802d:	movl   $0xe,(%rax)
               :   38033:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   38038:	mov    0x29fb1(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   3803f:	lea    0x157d2(%rip),%rcx        # 4d818 <__func__.11431+0xc98>
               :   38046:	mov    (%rax),%rdi
               :   38049:	lea    0x15bed(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   38050:	mov    $0x1,%esi
               :   38055:	xor    %eax,%eax
               :   38057:	callq  fde0 <__fprintf_chk@plt>
               :   3805c:	lea    0x157b5(%rip),%rcx        # 4d818 <__func__.11431+0xc98>
               :   38063:	lea    0xed38(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   3806a:	xor    %esi,%esi
               :   3806c:	mov    $0x4,%edi
               :   38071:	xor    %eax,%eax
               :   38073:	callq  e810 <rte_log@plt>
               :   38078:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   3807d:	mov    0x29f6c(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   38084:	lea    0x15c7d(%rip),%rcx        # 4dd08 <__func__.11431+0x1188>
               :   3808b:	mov    (%rax),%rdi
               :   3808e:	lea    0x15ba8(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   38095:	mov    $0x1,%esi
               :   3809a:	xor    %eax,%eax
               :   3809c:	callq  fde0 <__fprintf_chk@plt>
               :   380a1:	lea    0x15c60(%rip),%rcx        # 4dd08 <__func__.11431+0x1188>
               :   380a8:	lea    0xecf3(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   380af:	xor    %esi,%esi
               :   380b1:	mov    $0x4,%edi
               :   380b6:	xor    %eax,%eax
               :   380b8:	callq  e810 <rte_log@plt>
               :   380bd:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   380c2:	movl   $0xe,0x0(%rbp)
               :   380c9:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   380ce:	lea    0x151f3(%rip),%rdi        # 4d2c8 <__func__.11431+0x748>
               :   380d5:	callq  36fb0 <rte_eal_init_alert>
               :   380da:	data16 lea 0x29d76(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   380e2:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   380ea:	or     $0xffffffff,%r12d
               :   380ee:	movl   $0x72,(%rax)
               :   380f4:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   380f9:	callq  f870 <rte_eal_iova_mode@plt>
               :   380fe:	callq  f870 <rte_eal_iova_mode@plt>
               :   38103:	dec    %eax
               :   38105:	lea    0xcf9e(%rip),%rcx        # 450aa <_fini+0x49a>
               :   3810c:	lea    0xcf94(%rip),%rax        # 450a7 <_fini+0x497>
               :   38113:	cmovne %rax,%rcx
               :   38117:	lea    0x15c2f(%rip),%rdx        # 4dd4d <__func__.11431+0x11cd>
               :   3811e:	xor    %esi,%esi
               :   38120:	mov    $0x7,%edi
               :   38125:	xor    %eax,%eax
               :   38127:	callq  e810 <rte_log@plt>
               :   3812c:	mov    (%rsp),%rax
               :   38130:	mov    0x10(%rax),%eax
               :   38133:	test   %eax,%eax
               :   38135:	jne    13ec9 <rte_eal_init.cold+0xf5>
               :   3813b:	jmpq   13ead <rte_eal_init.cold+0xd9>
               :   38140:	callq  eeb0 <__stack_chk_fail@plt>
               :   38145:	mov    %r13d,%edi
               :   38148:	callq  f200 <close@plt>
               :   3814d:	movl   $0xffffffff,0x2afc9(%rip)        # 63120 <mem_cfg_fd>
               :   38157:	callq  e9d0 <__errno_location@plt>
               :   3815c:	mov    (%rax),%edi
               :   3815e:	mov    %rax,%rbx
               :   38161:	callq  fea0 <strerror@plt>
               :   38166:	mov    (%rbx),%ecx
               :   38168:	mov    %rax,%r8
               :   3816b:	lea    0x1556e(%rip),%rdx        # 4d6e0 <__func__.11431+0xb60>
               :   38172:	xor    %esi,%esi
               :   38174:	mov    $0x4,%edi
               :   38179:	xor    %eax,%eax
               :   3817b:	callq  e810 <rte_log@plt>
               :   38180:	mov    0x29e69(%rip),%rax        # 61ff0 <stderr@GLIBC_2.2.5>
               :   38187:	lea    0x15b67(%rip),%rcx        # 4dcf5 <__func__.11431+0x1175>
               :   3818e:	mov    (%rax),%rdi
               :   38191:	lea    0x15aa5(%rip),%rdx        # 4dc3d <__func__.11431+0x10bd>
               :   38198:	mov    $0x1,%esi
               :   3819d:	xor    %eax,%eax
               :   3819f:	callq  fde0 <__fprintf_chk@plt>
               :   381a4:	lea    0x15b4a(%rip),%rcx        # 4dcf5 <__func__.11431+0x1175>
               :   381ab:	lea    0xebf0(%rip),%rdx        # 46da2 <__func__.11463+0xc2>
               :   381b2:	xor    %esi,%esi
               :   381b4:	mov    $0x4,%edi
               :   381b9:	xor    %eax,%eax
               :   381bb:	callq  e810 <rte_log@plt>
               :   381c0:	jmpq   375b0 <rte_eal_init+0x3d0>
               :   381c5:	cmp    $0xffffffffffffffff,%r14
               :   381c9:	jne    14875 <rte_eal_init.cold+0xaa1>
               :   381cf:	callq  e9d0 <__errno_location@plt>
               :   381d4:	mov    (%rax),%edi
               :   381d6:	mov    %rax,%rbx
               :   381d9:	callq  fea0 <strerror@plt>
               :   381de:	mov    (%rbx),%ecx
               :   381e0:	mov    %rax,%r8
               :   381e3:	lea    0x154f6(%rip),%rdx        # 4d6e0 <__func__.11431+0xb60>
               :   381ea:	xor    %esi,%esi
               :   381ec:	mov    $0x4,%edi
               :   381f1:	xor    %eax,%eax
               :   381f3:	callq  e810 <rte_log@plt>
               :   381f8:	jmp    38180 <rte_eal_init+0xfa0>
               :   381fa:	mov    $0x6300,%esi
               :   381ff:	mov    %r13,%rdi
               :   38202:	callq  f8e0 <munmap@plt>
               :   38207:	mov    %r14d,%edi
               :   3820a:	callq  f200 <close@plt>
               :   3820f:	lea    0x1549a(%rip),%rdx        # 4d6b0 <__func__.11431+0xb30>
               :   38216:	xor    %esi,%esi
               :   38218:	mov    $0x4,%edi
               :   3821d:	xor    %eax,%eax
               :   3821f:	movl   $0xffffffff,0x2aef7(%rip)        # 63120 <mem_cfg_fd>
               :   38229:	callq  e810 <rte_log@plt>
               :   3822e:	jmpq   38180 <rte_eal_init+0xfa0>
               :   38233:	mov    0x2aee7(%rip),%edi        # 63120 <mem_cfg_fd>
               :   38239:	callq  f200 <close@plt>
               :   3823e:	lea    0x3d9fb(%rip),%rcx        # 75c40 <buffer.12943>
               :   38245:	lea    0x153f4(%rip),%rdx        # 4d640 <__func__.11431+0xac0>
               :   3824c:	xor    %esi,%esi
               :   3824e:	mov    $0x4,%edi
               :   38253:	xor    %eax,%eax
               :   38255:	movl   $0xffffffff,0x2aec1(%rip)        # 63120 <mem_cfg_fd>
               :   3825f:	callq  e810 <rte_log@plt>
               :   38264:	jmpq   38180 <rte_eal_init+0xfa0>
               :   38269:	mov    %r15d,%edi
               :   3826c:	callq  f200 <close@plt>
               :   38271:	lea    0x3d9c8(%rip),%rcx        # 75c40 <buffer.12943>
               :   38278:	lea    0x15391(%rip),%rdx        # 4d610 <__func__.11431+0xa90>
               :   3827f:	xor    %esi,%esi
               :   38281:	mov    $0x4,%edi
               :   38286:	xor    %eax,%eax
               :   38288:	movl   $0xffffffff,0x2ae8e(%rip)        # 63120 <mem_cfg_fd>
               :   38292:	callq  e810 <rte_log@plt>
               :   38297:	jmpq   38180 <rte_eal_init+0xfa0>
               :   3829c:	nopl   0x0(%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000000319d0 <__rte_trace_point_emit_field>: /* __rte_trace_point_emit_field total:      1 3.0e-05 */
               :   319d0:	endbr64 
               :   319d4:	push   %r15
               :   319d6:	mov    %rdx,%r15
               :   319d9:	push   %r14
               :   319db:	push   %r13
               :   319dd:	mov    %rdi,%r13
               :   319e0:	mov    %rsi,%rdi
               :   319e3:	push   %r12
               :   319e5:	push   %rbp
               :   319e6:	push   %rbx
               :   319e7:	mov    %rsi,%rbx
               :   319ea:	sub    $0x18,%rsp
               :   319ee:	mov    %fs:0x28,%rax
               :   319f7:	mov    %rax,0x8(%rsp)
               :   319fc:	xor    %eax,%eax
               :   319fe:	callq  32780 <trace_metadata_fixup_field>
               :   31a03:	test   %rax,%rax
               :   31a06:	cmovne %rax,%rbx
               :   31a0a:	mov    %rax,%rbp
               :   31a0d:	lea    0x303c4(%rip),%rdi        # 61dd8 <.got>
               :   31a14:	callq  f360 <__tls_get_addr@plt>
               :   31a19:	lea    0x1903c(%rip),%rcx        # 4aa5c <__func__.11185+0x45c>
               :   31a20:	mov    %rbx,%r9
               :   31a23:	mov    %rsp,%rdi
               :   31a26:	mov    %r15,%r8
     1 3.0e-05 :   31a29:	lea    0x199e0(%rip),%rdx        # 4b410 <compile_time_flags.5240+0x650>
               :   31a30:	mov    0x11a0(%rax),%r14
               :   31a37:	mov    $0x1,%esi
               :   31a3c:	test   %r14,%r14
               :   31a3f:	cmovne %r14,%rcx
               :   31a43:	mov    %rax,%r12
               :   31a46:	xor    %eax,%eax
               :   31a48:	callq  f3c0 <__asprintf_chk@plt>
               :   31a4d:	mov    %r14,%rdi
               :   31a50:	mov    %eax,%ebx
               :   31a52:	callq  e8c0 <free@plt>
               :   31a57:	mov    %rbp,%rdi
               :   31a5a:	callq  e8c0 <free@plt>
               :   31a5f:	cmp    $0xffffffff,%ebx
               :   31a62:	je     31aac <__rte_trace_point_emit_field+0xdc>
               :   31a64:	data16 lea 0x30504(%rip),%rdi        # 61f70 <per_lcore_trace_point_sz@@EXPERIMENTAL+0x60dc8>
               :   31a6c:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   31a74:	mov    (%rax),%edi
               :   31a76:	add    %edi,%r13d
               :   31a79:	mov    %r13d,(%rax)
               :   31a7c:	mov    (%rsp),%rax
               :   31a80:	mov    %rax,0x11a0(%r12)
               :   31a88:	mov    0x8(%rsp),%rax
               :   31a8d:	xor    %fs:0x28,%rax
               :   31a96:	jne    31aa7 <__rte_trace_point_emit_field+0xd7>
               :   31a98:	add    $0x18,%rsp
               :   31a9c:	pop    %rbx
               :   31a9d:	pop    %rbp
               :   31a9e:	pop    %r12
               :   31aa0:	pop    %r13
               :   31aa2:	pop    %r14
               :   31aa4:	pop    %r15
               :   31aa6:	retq   
               :   31aa7:	callq  eeb0 <__stack_chk_fail@plt>
               :   31aac:	data16 lea 0x304bc(%rip),%rdi        # 61f70 <per_lcore_trace_point_sz@@EXPERIMENTAL+0x60dc8>
               :   31ab4:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   31abc:	mov    $0x1b9,%r8d
               :   31ac2:	lea    0x19c67(%rip),%rcx        # 4b730 <__func__.11061>
               :   31ac9:	lea    0x199f8(%rip),%rdx        # 4b4c8 <compile_time_flags.5240+0x708>
               :   31ad0:	xor    %esi,%esi
               :   31ad2:	mov    $0x3,%edi
               :   31ad7:	movl   $0x0,(%rax)
               :   31add:	xor    %eax,%eax
               :   31adf:	movq   $0x0,0x11a0(%r12)
               :   31aeb:	callq  e810 <rte_log@plt>
               :   31af0:	jmp    31a88 <__rte_trace_point_emit_field+0xb8>
               :   31af2:	data16 nopw %cs:0x0(%rax,%rax,1)
               :   31afd:	nopl   (%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000011c63 <eal_check_common_options.cold>: /* eal_check_common_options.cold total:      1 3.0e-05 */
               :   11c63:	lea    0x36396(%rip),%rdx        # 48000 <__func__.11463+0x1320>
               :   11c6a:	xor    %esi,%esi
               :   11c6c:	mov    $0x4,%edi
               :   11c71:	xor    %eax,%eax
               :   11c73:	callq  e810 <rte_log@plt>
               :   11c78:	or     $0xffffffff,%r12d
               :   11c7c:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11c81:	lea    0x36298(%rip),%rdx        # 47f20 <__func__.11463+0x1240>
               :   11c88:	xor    %esi,%esi
               :   11c8a:	mov    $0x4,%edi
               :   11c8f:	xor    %eax,%eax
               :   11c91:	callq  e810 <rte_log@plt>
               :   11c96:	or     $0xffffffff,%r12d
               :   11c9a:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11c9f:	lea    0x36232(%rip),%rdx        # 47ed8 <__func__.11463+0x11f8>
               :   11ca6:	xor    %esi,%esi
               :   11ca8:	mov    $0x4,%edi
               :   11cad:	xor    %eax,%eax
               :   11caf:	callq  e810 <rte_log@plt>
               :   11cb4:	or     $0xffffffff,%r12d
               :   11cb8:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11cbd:	lea    0x362f4(%rip),%rdx        # 47fb8 <__func__.11463+0x12d8>
               :   11cc4:	xor    %esi,%esi
               :   11cc6:	mov    $0x4,%edi
               :   11ccb:	xor    %eax,%eax
               :   11ccd:	callq  e810 <rte_log@plt>
               :   11cd2:	jmpq   24f1e <eal_check_common_options+0xfe>
               :   11cd7:	lea    0x3628a(%rip),%rdx        # 47f68 <__func__.11463+0x1288>
               :   11cde:	xor    %esi,%esi
               :   11ce0:	mov    $0x4,%edi
               :   11ce5:	xor    %eax,%eax
               :   11ce7:	callq  e810 <rte_log@plt>
               :   11cec:	or     $0xffffffff,%r12d
     1 3.0e-05 :   11cf0:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11cf5:	lea    0x36194(%rip),%rdx        # 47e90 <__func__.11463+0x11b0>
               :   11cfc:	xor    %esi,%esi
               :   11cfe:	mov    $0x4,%edi
               :   11d03:	xor    %eax,%eax
               :   11d05:	callq  e810 <rte_log@plt>
               :   11d0a:	or     $0xffffffff,%r12d
               :   11d0e:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11d13:	lea    0x3613e(%rip),%rdx        # 47e58 <__func__.11463+0x1178>
               :   11d1a:	xor    %esi,%esi
               :   11d1c:	mov    $0x4,%edi
               :   11d21:	xor    %eax,%eax
               :   11d23:	callq  e810 <rte_log@plt>
               :   11d28:	or     $0xffffffff,%r12d
               :   11d2c:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11d31:	lea    0x360e8(%rip),%rdx        # 47e20 <__func__.11463+0x1140>
               :   11d38:	xor    %esi,%esi
               :   11d3a:	mov    $0x4,%edi
               :   11d3f:	xor    %eax,%eax
               :   11d41:	callq  e810 <rte_log@plt>
               :   11d46:	or     $0xffffffff,%r12d
               :   11d4a:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11d4f:	lea    0x3609a(%rip),%rdx        # 47df0 <__func__.11463+0x1110>
               :   11d56:	xor    %esi,%esi
               :   11d58:	mov    $0x4,%edi
               :   11d5d:	xor    %eax,%eax
               :   11d5f:	callq  e810 <rte_log@plt>
               :   11d64:	or     $0xffffffff,%r12d
               :   11d68:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11d6d:	lea    0x3604c(%rip),%rdx        # 47dc0 <__func__.11463+0x10e0>
               :   11d74:	xor    %esi,%esi
               :   11d76:	mov    $0x4,%edi
               :   11d7b:	xor    %eax,%eax
               :   11d7d:	callq  e810 <rte_log@plt>
               :   11d82:	or     $0xffffffff,%r12d
               :   11d86:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11d8b:	lea    0x36006(%rip),%rdx        # 47d98 <__func__.11463+0x10b8>
               :   11d92:	xor    %esi,%esi
               :   11d94:	mov    $0x4,%edi
               :   11d99:	xor    %eax,%eax
               :   11d9b:	callq  e810 <rte_log@plt>
               :   11da0:	or     $0xffffffff,%r12d
               :   11da4:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11da9:	lea    0x35fb8(%rip),%rdx        # 47d68 <__func__.11463+0x1088>
               :   11db0:	xor    %esi,%esi
               :   11db2:	mov    $0x4,%edi
               :   11db7:	xor    %eax,%eax
               :   11db9:	callq  e810 <rte_log@plt>
               :   11dbe:	or     $0xffffffff,%r12d
               :   11dc2:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11dc7:	lea    0x3639a(%rip),%rdx        # 48168 <__func__.11463+0x1488>
               :   11dce:	xor    %esi,%esi
               :   11dd0:	mov    $0x6,%edi
               :   11dd5:	xor    %eax,%eax
               :   11dd7:	callq  e810 <rte_log@plt>
               :   11ddc:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11de1:	lea    0x36338(%rip),%rdx        # 48120 <__func__.11463+0x1440>
               :   11de8:	xor    %esi,%esi
               :   11dea:	mov    $0x4,%edi
               :   11def:	xor    %eax,%eax
               :   11df1:	callq  e810 <rte_log@plt>
               :   11df6:	or     $0xffffffff,%r12d
               :   11dfa:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11dff:	lea    0x362d2(%rip),%rdx        # 480d8 <__func__.11463+0x13f8>
               :   11e06:	xor    %esi,%esi
               :   11e08:	mov    $0x4,%edi
               :   11e0d:	xor    %eax,%eax
               :   11e0f:	callq  e810 <rte_log@plt>
               :   11e14:	or     $0xffffffff,%r12d
               :   11e18:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11e1d:	lea    0x36274(%rip),%rdx        # 48098 <__func__.11463+0x13b8>
               :   11e24:	xor    %esi,%esi
               :   11e26:	mov    $0x4,%edi
               :   11e2b:	xor    %eax,%eax
               :   11e2d:	callq  e810 <rte_log@plt>
               :   11e32:	or     $0xffffffff,%r12d
               :   11e36:	jmpq   24f9a <eal_check_common_options+0x17a>
               :   11e3b:	lea    0x3620e(%rip),%rdx        # 48050 <__func__.11463+0x1370>
               :   11e42:	xor    %esi,%esi
               :   11e44:	mov    $0x4,%edi
               :   11e49:	xor    %eax,%eax
               :   11e4b:	callq  e810 <rte_log@plt>
               :   11e50:	or     $0xffffffff,%r12d
               :   11e54:	jmpq   24f9a <eal_check_common_options+0x17a>
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000001e050 <eal_lcore_non_eal_allocate>: /* eal_lcore_non_eal_allocate total:      1 3.0e-05 */
               :   1e050:	endbr64 
               :   1e054:	push   %r13
               :   1e056:	push   %r12
               :   1e058:	push   %rbp
               :   1e059:	push   %rbx
               :   1e05a:	sub    $0x8,%rsp
               :   1e05e:	callq  181e0 <rte_eal_get_configuration>
               :   1e063:	mov    %rax,%rbx
     1 3.0e-05 :   1e066:	mov    $0x2,%edx
               :   1e06b:	mov    0x4fa73(%rip),%eax        # 6dae4 <lcore_lock>
               :   1e071:	cmp    $0x1,%eax
               :   1e074:	jg     1e110 <eal_lcore_non_eal_allocate+0xc0>
               :   1e07a:	lock cmpxchg %edx,0x4fa62(%rip)        # 6dae4 <lcore_lock>
               :   1e082:	jne    1e110 <eal_lcore_non_eal_allocate+0xc0>
               :   1e088:	xor    %eax,%eax
               :   1e08a:	cmpl   $0x1,0x90(%rbx,%rax,4)
               :   1e092:	mov    %eax,%r12d
               :   1e095:	je     1e0d8 <eal_lcore_non_eal_allocate+0x88>
               :   1e097:	inc    %rax
               :   1e09a:	cmp    $0x80,%rax
               :   1e0a0:	jne    1e08a <eal_lcore_non_eal_allocate+0x3a>
               :   1e0a2:	lea    0x28040(%rip),%rdx        # 460e9 <__func__.11809+0x4e9>
               :   1e0a9:	xor    %esi,%esi
               :   1e0ab:	mov    $0x8,%edi
               :   1e0b0:	xor    %eax,%eax
               :   1e0b2:	callq  e810 <rte_log@plt>
               :   1e0b7:	mov    $0x80,%r12d
               :   1e0bd:	lock subl $0x2,0x4fa1f(%rip)        # 6dae4 <lcore_lock>
               :   1e0c5:	add    $0x8,%rsp
               :   1e0c9:	pop    %rbx
               :   1e0ca:	pop    %rbp
               :   1e0cb:	mov    %r12d,%eax
               :   1e0ce:	pop    %r12
               :   1e0d0:	pop    %r13
               :   1e0d2:	retq   
               :   1e0d3:	nopl   0x0(%rax,%rax,1)
               :   1e0d8:	lea    (%rbx,%rax,4),%r13
               :   1e0dc:	movl   $0x3,0x90(%r13)
               :   1e0e7:	mov    0x44e12(%rip),%rbp        # 62f00 <lcore_callbacks>
               :   1e0ee:	incl   0x4(%rbx)
               :   1e0f1:	test   %rbp,%rbp
               :   1e0f4:	je     1e0bd <eal_lcore_non_eal_allocate+0x6d>
               :   1e0f6:	cmpq   $0x0,0x18(%rbp)
               :   1e0fb:	jne    108a3 <eal_lcore_non_eal_allocate.cold>
               :   1e101:	mov    0x0(%rbp),%rbp
               :   1e105:	test   %rbp,%rbp
               :   1e108:	jne    1e0f6 <eal_lcore_non_eal_allocate+0xa6>
               :   1e10a:	jmp    1e0bd <eal_lcore_non_eal_allocate+0x6d>
               :   1e10c:	nopl   0x0(%rax)
               :   1e110:	test   $0x1,%al
               :   1e112:	jne    1e122 <eal_lcore_non_eal_allocate+0xd2>
               :   1e114:	jmp    1e138 <eal_lcore_non_eal_allocate+0xe8>
               :   1e116:	nopw   %cs:0x0(%rax,%rax,1)
               :   1e120:	pause  
               :   1e122:	mov    0x4f9bc(%rip),%eax        # 6dae4 <lcore_lock>
               :   1e128:	cmp    $0x1,%eax
               :   1e12b:	jg     1e120 <eal_lcore_non_eal_allocate+0xd0>
               :   1e12d:	jmpq   1e06b <eal_lcore_non_eal_allocate+0x1b>
               :   1e132:	nopw   0x0(%rax,%rax,1)
               :   1e138:	lock orl $0x1,0x4f9a4(%rip)        # 6dae4 <lcore_lock>
               :   1e140:	jmp    1e122 <eal_lcore_non_eal_allocate+0xd2>
               :   1e142:	data16 nopw %cs:0x0(%rax,%rax,1)
               :   1e14d:	nopl   (%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000001a970 <fbarray_find_contig>: /* fbarray_find_contig total:      1 3.0e-05 */
               :   1a970:	push   %r14
               :   1a972:	push   %r13
               :   1a974:	push   %r12
               :   1a976:	push   %rbp
               :   1a977:	push   %rbx
               :   1a978:	test   %rdi,%rdi
               :   1a97b:	je     1ad20 <fbarray_find_contig+0x3b0>
               :   1a981:	cmp    %esi,0x44(%rdi)
               :   1a984:	jbe    1ad20 <fbarray_find_contig+0x3b0>
               :   1a98a:	lea    0x58(%rdi),%r8
               :   1a98e:	jmp    1a992 <fbarray_find_contig+0x22>
               :   1a990:	pause  
               :   1a992:	mov    (%r8),%eax
               :   1a995:	test   $0x3,%al
               :   1a997:	jne    1a990 <fbarray_find_contig+0x20>
               :   1a999:	mov    $0x4,%eax
               :   1a99e:	lock xadd %eax,(%r8)
               :   1a9a3:	and    $0x3,%eax
               :   1a9a6:	jne    1acc0 <fbarray_find_contig+0x350>
               :   1a9ac:	mov    0x40(%rdi),%r9d
               :   1a9b0:	test   %cl,%cl
     1 3.0e-05 :   1a9b2:	je     1aa70 <fbarray_find_contig+0x100>
               :   1a9b8:	test   %r9d,%r9d
               :   1a9bb:	je     1ab10 <fbarray_find_contig+0x1a0>
               :   1a9c1:	mov    0x44(%rdi),%ebx
               :   1a9c4:	test   %dl,%dl
               :   1a9c6:	je     1abc8 <fbarray_find_contig+0x258>
               :   1a9cc:	cmp    %ebx,%r9d
               :   1a9cf:	je     1ad10 <fbarray_find_contig+0x3a0>
               :   1a9d5:	mov    %ebx,%edx
               :   1a9d7:	imul   0x48(%rdi),%edx
               :   1a9db:	mov    %esi,%r9d
               :   1a9de:	mov    %ebx,%r11d
               :   1a9e1:	add    0x50(%rdi),%rdx
               :   1a9e5:	mov    (%rdx),%r10d
               :   1a9e8:	mov    $0xffffffffffffffff,%rcx
               :   1a9ef:	shr    $0x6,%r9d
               :   1a9f3:	shlx   %rbx,%rcx,%rbx
               :   1a9f8:	shr    $0x6,%r11d
               :   1a9fc:	not    %rbx
               :   1a9ff:	and    $0x3f,%esi
               :   1aa02:	cmp    %r10d,%r9d
               :   1aa05:	jae    1ab10 <fbarray_find_contig+0x1a0>
               :   1aa0b:	mov    %r9d,%eax
               :   1aa0e:	mov    $0x40,%ebp
               :   1aa13:	lea    (%rdx,%rax,8),%rdi
               :   1aa17:	mov    %r9d,%ecx
               :   1aa1a:	xor    %eax,%eax
               :   1aa1c:	sub    %esi,%ebp
               :   1aa1e:	jmp    1aa4b <fbarray_find_contig+0xdb>
               :   1aa20:	cmp    %r9d,%ecx
               :   1aa23:	je     1ac80 <fbarray_find_contig+0x310>
               :   1aa29:	xor    $0xffffffffffffffff,%rdx
               :   1aa2d:	jne    1abb5 <fbarray_find_contig+0x245>
               :   1aa33:	mov    $0x40,%r12d
               :   1aa39:	inc    %ecx
               :   1aa3b:	add    %r12d,%eax
               :   1aa3e:	add    $0x8,%rdi
               :   1aa42:	cmp    %r10d,%ecx
               :   1aa45:	je     1ab10 <fbarray_find_contig+0x1a0>
               :   1aa4b:	mov    0x8(%rdi),%rdx
               :   1aa4f:	cmp    %r11d,%ecx
               :   1aa52:	jne    1aa20 <fbarray_find_contig+0xb0>
               :   1aa54:	and    %rbx,%rdx
               :   1aa57:	cmp    %r9d,%ecx
               :   1aa5a:	je     1acd0 <fbarray_find_contig+0x360>
               :   1aa60:	not    %rdx
               :   1aa63:	jmpq   1abb5 <fbarray_find_contig+0x245>
               :   1aa68:	nopl   0x0(%rax,%rax,1)
               :   1aa70:	mov    0x44(%rdi),%r10d
               :   1aa74:	cmp    %r9d,%r10d
               :   1aa77:	je     1ab10 <fbarray_find_contig+0x1a0>
               :   1aa7d:	test   %dl,%dl
               :   1aa7f:	jne    1ab20 <fbarray_find_contig+0x1b0>
               :   1aa85:	test   %r9d,%r9d
               :   1aa88:	je     1acf0 <fbarray_find_contig+0x380>
               :   1aa8e:	imul   0x48(%rdi),%r10d
               :   1aa93:	mov    %esi,%r11d
               :   1aa96:	shr    $0x6,%r11d
               :   1aa9a:	not    %esi
               :   1aa9c:	add    0x50(%rdi),%r10
               :   1aaa0:	mov    %r11d,%eax
               :   1aaa3:	and    $0x3f,%esi
               :   1aaa6:	mov    $0x40,%ebp
               :   1aaab:	lea    (%r10,%rax,8),%r9
               :   1aaaf:	mov    %r11d,%edi
               :   1aab2:	xor    %eax,%eax
               :   1aab4:	sub    %esi,%ebp
               :   1aab6:	jmp    1aadd <fbarray_find_contig+0x16d>
               :   1aab8:	nopl   0x0(%rax,%rax,1)
               :   1aac0:	test   %rdx,%rdx
               :   1aac3:	jne    1acb0 <fbarray_find_contig+0x340>
               :   1aac9:	mov    $0x40,%r10d
               :   1aacf:	dec    %edi
               :   1aad1:	add    %r10d,%eax
               :   1aad4:	sub    $0x8,%r9
               :   1aad8:	cmp    $0xffffffff,%edi
               :   1aadb:	je     1ab10 <fbarray_find_contig+0x1a0>
               :   1aadd:	mov    0x8(%r9),%rdx
               :   1aae1:	mov    %rdx,%rcx
               :   1aae4:	not    %rcx
               :   1aae7:	cmp    %r11d,%edi
               :   1aaea:	jne    1aac0 <fbarray_find_contig+0x150>
               :   1aaec:	mov    %ebp,%r10d
               :   1aaef:	shlx   %rsi,%rcx,%rcx
               :   1aaf4:	xor    $0xffffffffffffffff,%rcx
               :   1aaf8:	je     1aacf <fbarray_find_contig+0x15f>
               :   1aafa:	lzcnt  %rcx,%rcx
               :   1aaff:	mov    %ecx,%ebx
               :   1ab01:	cmp    %ebp,%ecx
               :   1ab03:	jae    1aacf <fbarray_find_contig+0x15f>
               :   1ab05:	add    %ebx,%eax
               :   1ab07:	nopw   0x0(%rax,%rax,1)
               :   1ab10:	lock subl $0x4,(%r8)
               :   1ab15:	pop    %rbx
               :   1ab16:	pop    %rbp
               :   1ab17:	pop    %r12
               :   1ab19:	pop    %r13
               :   1ab1b:	pop    %r14
               :   1ab1d:	retq   
               :   1ab1e:	xchg   %ax,%ax
               :   1ab20:	test   %r9d,%r9d
               :   1ab23:	je     1ad00 <fbarray_find_contig+0x390>
               :   1ab29:	mov    %r10d,%edx
               :   1ab2c:	imul   0x48(%rdi),%edx
               :   1ab30:	mov    %esi,%r11d
               :   1ab33:	mov    %r10d,%ebx
               :   1ab36:	add    0x50(%rdi),%rdx
               :   1ab3a:	mov    (%rdx),%ebp
               :   1ab3c:	mov    $0xffffffffffffffff,%rcx
               :   1ab43:	shr    $0x6,%r11d
               :   1ab47:	shr    $0x6,%ebx
               :   1ab4a:	and    $0x3f,%esi
               :   1ab4d:	shlx   %r10,%rcx,%r10
               :   1ab52:	cmp    %ebp,%r11d
               :   1ab55:	jae    1ab10 <fbarray_find_contig+0x1a0>
               :   1ab57:	mov    %r11d,%eax
               :   1ab5a:	mov    $0x40,%r12d
               :   1ab60:	lea    (%rdx,%rax,8),%r9
               :   1ab64:	mov    %r11d,%edi
               :   1ab67:	xor    %eax,%eax
               :   1ab69:	sub    %esi,%r12d
               :   1ab6c:	jmp    1ab95 <fbarray_find_contig+0x225>
               :   1ab6e:	xchg   %ax,%ax
               :   1ab70:	cmp    %r11d,%edi
               :   1ab73:	je     1ac50 <fbarray_find_contig+0x2e0>
               :   1ab79:	test   %rdx,%rdx
               :   1ab7c:	jne    1abb5 <fbarray_find_contig+0x245>
               :   1ab7e:	mov    $0x40,%r14d
               :   1ab84:	inc    %edi
               :   1ab86:	add    %r14d,%eax
               :   1ab89:	add    $0x8,%r9
               :   1ab8d:	cmp    %ebp,%edi
               :   1ab8f:	je     1ab10 <fbarray_find_contig+0x1a0>
               :   1ab95:	mov    0x8(%r9),%rdx
               :   1ab99:	mov    %rdx,%rcx
               :   1ab9c:	not    %rcx
               :   1ab9f:	cmp    %ebx,%edi
               :   1aba1:	jne    1ab70 <fbarray_find_contig+0x200>
               :   1aba3:	or     %r10,%rdx
               :   1aba6:	mov    %rdx,%rcx
               :   1aba9:	not    %rcx
               :   1abac:	cmp    %r11d,%edi
               :   1abaf:	je     1ace0 <fbarray_find_contig+0x370>
               :   1abb5:	xor    %r13d,%r13d
               :   1abb8:	tzcnt  %rdx,%r13
               :   1abbd:	add    %r13d,%eax
               :   1abc0:	jmpq   1ab10 <fbarray_find_contig+0x1a0>
               :   1abc5:	nopl   (%rax)
               :   1abc8:	cmp    %ebx,%r9d
               :   1abcb:	je     1acf0 <fbarray_find_contig+0x380>
               :   1abd1:	imul   0x48(%rdi),%ebx
               :   1abd5:	mov    %esi,%r11d
               :   1abd8:	shr    $0x6,%r11d
               :   1abdc:	not    %esi
               :   1abde:	mov    %r11d,%eax
               :   1abe1:	add    0x50(%rdi),%rbx
               :   1abe5:	and    $0x3f,%esi
               :   1abe8:	mov    $0x40,%r10d
               :   1abee:	lea    (%rbx,%rax,8),%rdi
               :   1abf2:	mov    %r11d,%ecx
               :   1abf5:	xor    %eax,%eax
               :   1abf7:	sub    %esi,%r10d
               :   1abfa:	jmp    1ac22 <fbarray_find_contig+0x2b2>
               :   1abfc:	nopl   0x0(%rax)
               :   1ac00:	xor    $0xffffffffffffffff,%rdx
               :   1ac04:	jne    1acb0 <fbarray_find_contig+0x340>
               :   1ac0a:	mov    $0x40,%r9d
               :   1ac10:	dec    %ecx
               :   1ac12:	add    %r9d,%eax
               :   1ac15:	sub    $0x8,%rdi
               :   1ac19:	cmp    $0xffffffff,%ecx
               :   1ac1c:	je     1ab10 <fbarray_find_contig+0x1a0>
               :   1ac22:	mov    0x8(%rdi),%rdx
               :   1ac26:	cmp    %r11d,%ecx
               :   1ac29:	jne    1ac00 <fbarray_find_contig+0x290>
               :   1ac2b:	mov    %r10d,%r9d
               :   1ac2e:	shlx   %rsi,%rdx,%rdx
               :   1ac33:	xor    $0xffffffffffffffff,%rdx
               :   1ac37:	je     1ac10 <fbarray_find_contig+0x2a0>
               :   1ac39:	lzcnt  %rdx,%rdx
               :   1ac3e:	mov    %edx,%ebx
               :   1ac40:	cmp    %edx,%r10d
               :   1ac43:	jbe    1ac10 <fbarray_find_contig+0x2a0>
               :   1ac45:	add    %ebx,%eax
               :   1ac47:	jmpq   1ab10 <fbarray_find_contig+0x1a0>
               :   1ac4c:	nopl   0x0(%rax)
               :   1ac50:	mov    %r12d,%r14d
               :   1ac53:	shrx   %rsi,%rcx,%rdx
               :   1ac58:	xor    $0xffffffffffffffff,%rdx
               :   1ac5c:	je     1ab84 <fbarray_find_contig+0x214>
               :   1ac62:	tzcnt  %rdx,%rdx
               :   1ac67:	mov    %edx,%r13d
               :   1ac6a:	cmp    %r12d,%edx
               :   1ac6d:	jae    1ab84 <fbarray_find_contig+0x214>
               :   1ac73:	jmpq   1abbd <fbarray_find_contig+0x24d>
               :   1ac78:	nopl   0x0(%rax,%rax,1)
               :   1ac80:	mov    %ebp,%r12d
               :   1ac83:	shrx   %rsi,%rdx,%rdx
               :   1ac88:	xor    $0xffffffffffffffff,%rdx
               :   1ac8c:	je     1aa39 <fbarray_find_contig+0xc9>
               :   1ac92:	tzcnt  %rdx,%rdx
               :   1ac97:	mov    %edx,%r13d
               :   1ac9a:	cmp    %edx,%ebp
               :   1ac9c:	jbe    1aa39 <fbarray_find_contig+0xc9>
               :   1aca2:	jmpq   1abbd <fbarray_find_contig+0x24d>
               :   1aca7:	nopw   0x0(%rax,%rax,1)
               :   1acb0:	xor    %ebx,%ebx
               :   1acb2:	lzcnt  %rdx,%rbx
               :   1acb7:	add    %ebx,%eax
               :   1acb9:	jmpq   1ab10 <fbarray_find_contig+0x1a0>
               :   1acbe:	xchg   %ax,%ax
               :   1acc0:	lock subl $0x4,(%r8)
               :   1acc5:	jmpq   1a992 <fbarray_find_contig+0x22>
               :   1acca:	nopw   0x0(%rax,%rax,1)
               :   1acd0:	shrx   %rsi,%rdx,%rdx
               :   1acd5:	mov    %ebp,%r12d
               :   1acd8:	not    %rdx
               :   1acdb:	jmp    1ac92 <fbarray_find_contig+0x322>
               :   1acdd:	nopl   (%rax)
               :   1ace0:	shrx   %rsi,%rcx,%rdx
               :   1ace5:	mov    %r12d,%r14d
               :   1ace8:	not    %rdx
               :   1aceb:	jmpq   1ac62 <fbarray_find_contig+0x2f2>
               :   1acf0:	lea    0x1(%rsi),%eax
               :   1acf3:	jmpq   1ab10 <fbarray_find_contig+0x1a0>
               :   1acf8:	nopl   0x0(%rax,%rax,1)
               :   1ad00:	mov    %r10d,%eax
               :   1ad03:	sub    %esi,%eax
               :   1ad05:	jmpq   1ab10 <fbarray_find_contig+0x1a0>
               :   1ad0a:	nopw   0x0(%rax,%rax,1)
               :   1ad10:	mov    %r9d,%eax
               :   1ad13:	sub    %esi,%eax
               :   1ad15:	jmpq   1ab10 <fbarray_find_contig+0x1a0>
               :   1ad1a:	nopw   0x0(%rax,%rax,1)
               :   1ad20:	data16 lea 0x47130(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1ad28:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1ad30:	movl   $0x16,(%rax)
               :   1ad36:	mov    $0xffffffff,%eax
               :   1ad3b:	jmpq   1ab15 <fbarray_find_contig+0x1a5>
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000002fbe0 <mp_handle>: /* mp_handle total:      1 3.0e-05 */
               :   2fbe0:	endbr64 
               :   2fbe4:	push   %r13
               :   2fbe6:	push   %r12
               :   2fbe8:	push   %rbp
               :   2fbe9:	push   %rbx
               :   2fbea:	movabs $0x100000001,%rbx
               :   2fbf4:	sub    $0x3e8,%rsp
               :   2fbfb:	mov    %fs:0x28,%rax
               :   2fc04:	mov    %rax,0x3d8(%rsp)
               :   2fc0c:	xor    %eax,%eax
               :   2fc0e:	xchg   %ax,%ax
               :   2fc10:	mov    0x3339a(%rip),%ebp        # 62fb0 <mp_fd>
               :   2fc16:	test   %ebp,%ebp
               :   2fc18:	js     2fcaa <mp_handle+0xca>
               :   2fc1e:	lea    0x230(%rsp),%rax
               :   2fc26:	mov    %rax,(%rsp)
               :   2fc2a:	lea    0x50(%rsp),%rax
               :   2fc2f:	vpxor  %xmm0,%xmm0,%xmm0
               :   2fc33:	mov    %rax,0x10(%rsp)
               :   2fc38:	mov    %rsp,%rax
               :   2fc3b:	vmovups %xmm0,0x18(%rsp)
               :   2fc41:	mov    %rax,0x20(%rsp)
               :   2fc46:	lea    0x3a0(%rsp),%rax
               :   2fc4e:	vmovups %xmm0,0x38(%rsp)
               :   2fc54:	movq   $0x14c,0x8(%rsp)
               :   2fc5d:	movl   $0x6e,0x18(%rsp)
               :   2fc65:	movq   $0x1,0x28(%rsp)
               :   2fc6e:	mov    %rax,0x30(%rsp)
               :   2fc73:	movq   $0x30,0x38(%rsp)
               :   2fc7c:	lea    0x10(%rsp),%r12
               :   2fc81:	jmp    2fc9a <mp_handle+0xba>
               :   2fc83:	nopl   0x0(%rax,%rax,1)
               :   2fc88:	jns    2fcd8 <mp_handle+0xf8>
               :   2fc8a:	callq  e9d0 <__errno_location@plt>
               :   2fc8f:	mov    (%rax),%edi
               :   2fc91:	cmp    $0x4,%edi
               :   2fc94:	jne    300a5 <mp_handle+0x4c5>
               :   2fc9a:	xor    %edx,%edx
               :   2fc9c:	mov    %r12,%rsi
               :   2fc9f:	mov    %ebp,%edi
               :   2fca1:	callq  f8f0 <recvmsg@plt>
               :   2fca6:	test   %eax,%eax
               :   2fca8:	jne    2fc88 <mp_handle+0xa8>
               :   2fcaa:	mov    0x3d8(%rsp),%rax
               :   2fcb2:	xor    %fs:0x28,%rax
               :   2fcbb:	jne    300c7 <mp_handle+0x4e7>
               :   2fcc1:	add    $0x3e8,%rsp
               :   2fcc8:	pop    %rbx
               :   2fcc9:	pop    %rbp
               :   2fcca:	pop    %r12
               :   2fccc:	xor    %eax,%eax
               :   2fcce:	pop    %r13
               :   2fcd0:	retq   
               :   2fcd1:	nopl   0x0(%rax)
               :   2fcd8:	cmp    $0x14c,%eax
               :   2fcdd:	jne    12a45 <mp_handle.cold+0x1d>
               :   2fce3:	testb  $0x28,0x40(%rsp)
               :   2fce8:	jne    12a45 <mp_handle.cold+0x1d>
               :   2fcee:	mov    0x38(%rsp),%rcx
               :   2fcf3:	cmp    $0xf,%rcx
               :   2fcf7:	jbe    2fd40 <mp_handle+0x160>
               :   2fcf9:	mov    0x30(%rsp),%rax
               :   2fcfe:	add    %rax,%rcx
               :   2fd01:	test   %rax,%rax
               :   2fd04:	je     2fd40 <mp_handle+0x160>
               :   2fd06:	cmp    %rbx,0x8(%rax)
               :   2fd0a:	je     30080 <mp_handle+0x4a0>
               :   2fd10:	mov    (%rax),%rdx
               :   2fd13:	cmp    $0xf,%rdx
               :   2fd17:	jbe    2fd40 <mp_handle+0x160>
               :   2fd19:	add    $0x7,%rdx
               :   2fd1d:	and    $0xfffffffffffffff8,%rdx
               :   2fd21:	add    %rdx,%rax
               :   2fd24:	lea    0x10(%rax),%rdx
               :   2fd28:	cmp    %rdx,%rcx
               :   2fd2b:	jb     2fd40 <mp_handle+0x160>
               :   2fd2d:	mov    (%rax),%rsi
               :   2fd30:	lea    0x7(%rsi),%rdx
               :   2fd34:	and    $0xfffffffffffffff8,%rdx
               :   2fd38:	add    %rax,%rdx
               :   2fd3b:	cmp    %rdx,%rcx
               :   2fd3e:	jae    2fd01 <mp_handle+0x121>
               :   2fd40:	cmpl   $0x8,0x278(%rsp)
               :   2fd48:	ja     12a96 <mp_handle.cold+0x6e>
               :   2fd4e:	cmpl   $0x100,0x274(%rsp)
               :   2fd59:	ja     12a7c <mp_handle.cold+0x54>
               :   2fd5f:	callq  181f0 <eal_get_internal_configuration>
               :   2fd64:	lea    0x234(%rsp),%rbp
               :   2fd6c:	mov    %rax,%r13
               :   2fd6f:	mov    %rbp,%rcx
               :   2fd72:	lea    0x1b122(%rip),%rdx        # 4ae9b <compile_time_flags.5240+0xdb>
               :   2fd79:	xor    %esi,%esi
               :   2fd7b:	mov    $0x8,%edi
               :   2fd80:	xor    %eax,%eax
               :   2fd82:	callq  e810 <rte_log@plt>
               :   2fd87:	mov    0x230(%rsp),%eax
               :   2fd8e:	sub    $0x2,%eax
               :   2fd91:	cmp    $0x1,%eax
               :   2fd94:	jbe    2fe10 <mp_handle+0x230>
               :   2fd96:	lea    0x42e23(%rip),%rdi        # 72bc0 <mp_mutex_action>
               :   2fd9d:	callq  ff40 <pthread_mutex_lock@plt>
               :   2fda2:	mov    0x33257(%rip),%r12        # 63000 <action_entry_list>
               :   2fda9:	test   %r12,%r12
               :   2fdac:	jne    2fdc5 <mp_handle+0x1e5>
               :   2fdae:	jmpq   2ff80 <mp_handle+0x3a0>
               :   2fdb3:	nopl   0x0(%rax,%rax,1)
               :   2fdb8:	mov    (%r12),%r12
               :   2fdbc:	test   %r12,%r12
               :   2fdbf:	je     2ff80 <mp_handle+0x3a0>
               :   2fdc5:	lea    0x10(%r12),%rdi
               :   2fdca:	mov    $0x40,%edx
               :   2fdcf:	mov    %rbp,%rsi
               :   2fdd2:	callq  ea30 <strncmp@plt>
               :   2fdd7:	test   %eax,%eax
               :   2fdd9:	jne    2fdb8 <mp_handle+0x1d8>
               :   2fddb:	mov    0x50(%r12),%r12
               :   2fde0:	lea    0x42dd9(%rip),%rdi        # 72bc0 <mp_mutex_action>
               :   2fde7:	callq  f6f0 <pthread_mutex_unlock@plt>
               :   2fdec:	test   %r12,%r12
               :   2fdef:	je     2ff8c <mp_handle+0x3ac>
               :   2fdf5:	lea    0x52(%rsp),%r13
               :   2fdfa:	mov    %r13,%rsi
               :   2fdfd:	mov    %rbp,%rdi
               :   2fe00:	callq  *%r12
               :   2fe03:	test   %eax,%eax
               :   2fe05:	jns    2fc10 <mp_handle+0x30>
               :   2fe0b:	jmpq   12a5f <mp_handle.cold+0x37>
               :   2fe10:	lea    0x331b9(%rip),%rdi        # 62fd0 <pending_requests+0x10>
               :   2fe17:	callq  ff40 <pthread_mutex_lock@plt>
               :   2fe1c:	mov    0x3319d(%rip),%r12        # 62fc0 <pending_requests>
               :   2fe23:	test   %r12,%r12
               :   2fe26:	je     2fe5e <mp_handle+0x27e>
               :   2fe28:	lea    0x52(%rsp),%r13
               :   2fe2d:	nopl   (%rax)
               :   2fe30:	lea    0x14(%r12),%rdi
               :   2fe35:	mov    %r13,%rsi
               :   2fe38:	callq  f420 <strcmp@plt>
               :   2fe3d:	test   %eax,%eax
               :   2fe3f:	jne    2fe55 <mp_handle+0x275>
               :   2fe41:	mov    0x1018(%r12),%rdi
               :   2fe49:	mov    %rbp,%rsi
               :   2fe4c:	callq  f420 <strcmp@plt>
               :   2fe51:	test   %eax,%eax
               :   2fe53:	je     2fe90 <mp_handle+0x2b0>
               :   2fe55:	mov    (%r12),%r12
               :   2fe59:	test   %r12,%r12
               :   2fe5c:	jne    2fe30 <mp_handle+0x250>
               :   2fe5e:	mov    %rbp,%rcx
               :   2fe61:	lea    0x1b05e(%rip),%rdx        # 4aec6 <compile_time_flags.5240+0x106>
               :   2fe68:	xor    %esi,%esi
               :   2fe6a:	mov    $0x4,%edi
               :   2fe6f:	xor    %eax,%eax
               :   2fe71:	callq  e810 <rte_log@plt>
               :   2fe76:	lea    0x33153(%rip),%rdi        # 62fd0 <pending_requests+0x10>
               :   2fe7d:	callq  f6f0 <pthread_mutex_unlock@plt>
               :   2fe82:	jmpq   2fc10 <mp_handle+0x30>
               :   2fe87:	nopw   0x0(%rax,%rax,1)
               :   2fe90:	mov    0x1020(%r12),%rax
               :   2fe98:	mov    0x0(%rbp),%rdx
               :   2fe9c:	xor    %esi,%esi
               :   2fe9e:	mov    %rdx,(%rax)
               :   2fea1:	lea    0x8(%rax),%rdx
               :   2fea5:	and    $0xfffffffffffffff8,%rdx
               :   2fea9:	mov    0x37c(%rsp),%rcx
               :   2feb1:	mov    %rcx,0x148(%rax)
               :   2feb8:	mov    0x384(%rsp),%rcx
               :   2fec0:	mov    %rcx,0x150(%rax)
               :   2fec7:	mov    0x38c(%rsp),%rcx
               :   2fecf:	mov    %rcx,0x158(%rax)
               :   2fed6:	mov    0x394(%rsp),%rcx
               :   2fede:	mov    %rcx,0x160(%rax)
               :   2fee5:	sub    %rdx,%rax
               :   2fee8:	lea    0x168(%rax),%ecx
               :   2feee:	sub    %rax,%rbp
               :   2fef1:	and    $0xffffffe0,%ecx
               :   2fef4:	mov    %esi,%eax
               :   2fef6:	mov    0x0(%rbp,%rax,1),%r10
               :   2fefb:	mov    0x8(%rbp,%rax,1),%r9
               :   2ff00:	mov    0x10(%rbp,%rax,1),%r8
               :   2ff05:	mov    0x18(%rbp,%rax,1),%rdi
               :   2ff0a:	add    $0x20,%esi
               :   2ff0d:	mov    %r10,(%rdx,%rax,1)
               :   2ff11:	mov    %r9,0x8(%rdx,%rax,1)
               :   2ff16:	mov    %r8,0x10(%rdx,%rax,1)
               :   2ff1b:	mov    %rdi,0x18(%rdx,%rax,1)
               :   2ff20:	cmp    %ecx,%esi
               :   2ff22:	jb     2fef4 <mp_handle+0x314>
               :   2ff24:	xor    %eax,%eax
               :   2ff26:	cmpl   $0x2,0x230(%rsp)
               :   2ff2e:	sete   %al
               :   2ff31:	lea    -0x1(%rax,%rax,1),%eax
               :   2ff35:	mov    %eax,0x1028(%r12)
               :   2ff3d:	mov    0x10(%r12),%eax
               :   2ff42:	test   %eax,%eax
               :   2ff44:	je     2ff60 <mp_handle+0x380>
               :   2ff46:	cmp    $0x1,%eax
     1 3.0e-05 :   2ff49:	je     30010 <mp_handle+0x430>
               :   2ff4f:	lea    0x3307a(%rip),%rdi        # 62fd0 <pending_requests+0x10>
               :   2ff56:	callq  f6f0 <pthread_mutex_unlock@plt>
               :   2ff5b:	jmpq   2fc10 <mp_handle+0x30>
               :   2ff60:	lea    0x1030(%r12),%rdi
               :   2ff68:	callq  f370 <pthread_cond_signal@plt>
               :   2ff6d:	lea    0x3305c(%rip),%rdi        # 62fd0 <pending_requests+0x10>
               :   2ff74:	callq  f6f0 <pthread_mutex_unlock@plt>
               :   2ff79:	jmpq   2fc10 <mp_handle+0x30>
               :   2ff7e:	xchg   %ax,%ax
               :   2ff80:	lea    0x42c39(%rip),%rdi        # 72bc0 <mp_mutex_action>
               :   2ff87:	callq  f6f0 <pthread_mutex_unlock@plt>
               :   2ff8c:	cmpl   $0x1,0x230(%rsp)
               :   2ff94:	jne    12a28 <mp_handle.cold>
               :   2ff9a:	mov    0x34c8(%r13),%eax
               :   2ffa1:	test   %eax,%eax
               :   2ffa3:	jne    12a28 <mp_handle.cold>
               :   2ffa9:	lea    0xc0(%rsp),%r12
               :   2ffb1:	xor    %ecx,%ecx
               :   2ffb3:	xor    %edx,%edx
               :   2ffb5:	mov    %edx,%eax
               :   2ffb7:	add    $0x20,%edx
               :   2ffba:	mov    %rcx,(%r12,%rax,1)
               :   2ffbe:	mov    %rcx,0x8(%r12,%rax,1)
               :   2ffc3:	mov    %rcx,0x10(%r12,%rax,1)
               :   2ffc8:	mov    %rcx,0x18(%r12,%rax,1)
               :   2ffcd:	cmp    $0x160,%edx
               :   2ffd3:	jb     2ffb5 <mp_handle+0x3d5>
               :   2ffd5:	movq   $0x0,(%r12,%rdx,1)
               :   2ffdd:	mov    %rbp,%rsi
               :   2ffe0:	mov    %r12,%rdi
               :   2ffe3:	mov    $0x40,%edx
               :   2ffe8:	lea    0x52(%rsp),%r13
               :   2ffed:	callq  f530 <strlcpy@plt>
               :   2fff2:	mov    $0x3,%edx
               :   2fff7:	mov    %r12,%rsi
               :   2fffa:	mov    %r13,%rdi
               :   2fffd:	callq  2f540 <send_msg>
               :   30002:	jmpq   2fc10 <mp_handle+0x30>
               :   30007:	nopw   0x0(%rax,%rax,1)
               :   30010:	mov    %r12,%rdi
               :   30013:	callq  2f310 <async_reply_handle_thread_unsafe>
               :   30018:	mov    %rax,%rbp
               :   3001b:	lea    0x32fae(%rip),%rdi        # 62fd0 <pending_requests+0x10>
               :   30022:	callq  f6f0 <pthread_mutex_unlock@plt>
               :   30027:	test   %rbp,%rbp
               :   3002a:	je     2fc10 <mp_handle+0x30>
               :   30030:	mov    0x1030(%rbp),%rax
               :   30037:	mov    0x1018(%rbp),%rdi
               :   3003e:	lea    0x8(%rax),%rsi
               :   30042:	callq  *(%rax)
               :   30044:	mov    0x1030(%rbp),%rax
               :   3004b:	mov    0x10(%rax),%rdi
               :   3004f:	callq  e8c0 <free@plt>
               :   30054:	mov    0x1030(%rbp),%rdi
               :   3005b:	callq  e8c0 <free@plt>
               :   30060:	mov    0x1018(%rbp),%rdi
               :   30067:	callq  e8c0 <free@plt>
               :   3006c:	mov    %rbp,%rdi
               :   3006f:	callq  e8c0 <free@plt>
               :   30074:	jmpq   2fc10 <mp_handle+0x30>
               :   30079:	nopl   0x0(%rax)
               :   30080:	vmovdqu64 0x10(%rax),%xmm1
               :   30087:	vmovups %xmm1,0x37c(%rsp)
               :   30090:	vmovdqu64 0x20(%rax),%xmm2
               :   30097:	vmovups %xmm2,0x38c(%rsp)
               :   300a0:	jmpq   2fd40 <mp_handle+0x160>
               :   300a5:	callq  fea0 <strerror@plt>
               :   300aa:	mov    %rax,%rcx
               :   300ad:	lea    0x1adba(%rip),%rdx        # 4ae6e <compile_time_flags.5240+0xae>
               :   300b4:	xor    %esi,%esi
               :   300b6:	mov    $0x4,%edi
               :   300bb:	xor    %eax,%eax
               :   300bd:	callq  e810 <rte_log@plt>
               :   300c2:	jmpq   2fcaa <mp_handle+0xca>
               :   300c7:	callq  eeb0 <__stack_chk_fail@plt>
               :   300cc:	nopl   0x0(%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000001c9a0 <rte_intr_fd_get>: /* rte_intr_fd_get total:      1 3.0e-05 */
     1 3.0e-05 :   1c9a0:	endbr64 
               :   1c9a4:	test   %rdi,%rdi
               :   1c9a7:	je     1c9ad <rte_intr_fd_get+0xd>
               :   1c9a9:	mov    0x4(%rdi),%eax
               :   1c9ac:	retq   
               :   1c9ad:	push   %rax
               :   1c9ae:	lea    0x2933b(%rip),%rdx        # 45cf0 <__func__.11809+0xf0>
               :   1c9b5:	xor    %esi,%esi
               :   1c9b7:	mov    $0x8,%edi
               :   1c9bc:	xor    %eax,%eax
               :   1c9be:	callq  e810 <rte_log@plt>
               :   1c9c3:	data16 lea 0x4548d(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1c9cb:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1c9d3:	movl   $0x16,(%rax)
               :   1c9d9:	or     $0xffffffff,%eax
               :   1c9dc:	pop    %rdx
               :   1c9dd:	retq   
               :   1c9de:	xchg   %ax,%ax
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000001c710 <rte_intr_instance_alloc>: /* rte_intr_instance_alloc total:      1 3.0e-05 */
               :   1c710:	endbr64 
               :   1c714:	push   %r13
               :   1c716:	mov    %edi,%r13d
               :   1c719:	push   %r12
               :   1c71b:	sub    $0x8,%rsp
               :   1c71f:	and    $0xfffffffe,%edi
               :   1c722:	jne    1c7ee <rte_intr_instance_alloc+0xde>
               :   1c728:	test   %r13d,%r13d
               :   1c72b:	je     1c7a0 <rte_intr_instance_alloc+0x90>
               :   1c72d:	xor    %edx,%edx
               :   1c72f:	mov    $0x40,%esi
               :   1c734:	xor    %edi,%edi
               :   1c736:	callq  f160 <rte_zmalloc@plt>
               :   1c73b:	mov    %rax,%r12
               :   1c73e:	test   %rax,%rax
               :   1c741:	je     1c899 <rte_intr_instance_alloc+0x189>
               :   1c747:	xor    %edx,%edx
               :   1c749:	mov    $0x800,%esi
               :   1c74e:	xor    %edi,%edi
               :   1c750:	callq  f160 <rte_zmalloc@plt>
               :   1c755:	mov    %rax,0x20(%r12)
               :   1c75a:	test   %rax,%rax
               :   1c75d:	je     1c86c <rte_intr_instance_alloc+0x15c>
               :   1c763:	xor    %edx,%edx
               :   1c765:	mov    $0x6000,%esi
               :   1c76a:	xor    %edi,%edi
               :   1c76c:	callq  f160 <rte_zmalloc@plt>
               :   1c771:	mov    %rax,0x28(%r12)
               :   1c776:	test   %rax,%rax
               :   1c779:	je     1c824 <rte_intr_instance_alloc+0x114>
               :   1c77f:	mov    $0x200,%eax
               :   1c784:	mov    %r13d,0x8(%r12)
               :   1c789:	mov    %ax,0x1a(%r12)
               :   1c78f:	add    $0x8,%rsp
               :   1c793:	mov    %r12,%rax
               :   1c796:	pop    %r12
               :   1c798:	pop    %r13
               :   1c79a:	retq   
               :   1c79b:	nopl   0x0(%rax,%rax,1)
               :   1c7a0:	mov    $0x40,%esi
               :   1c7a5:	mov    $0x1,%edi
               :   1c7aa:	callq  f3e0 <calloc@plt>
               :   1c7af:	mov    %rax,%r12
               :   1c7b2:	test   %rax,%rax
               :   1c7b5:	je     1c899 <rte_intr_instance_alloc+0x189>
               :   1c7bb:	mov    $0x4,%esi
               :   1c7c0:	mov    $0x200,%edi
               :   1c7c5:	callq  f3e0 <calloc@plt>
               :   1c7ca:	mov    %rax,0x20(%r12)
               :   1c7cf:	test   %rax,%rax
               :   1c7d2:	je     1c86c <rte_intr_instance_alloc+0x15c>
               :   1c7d8:	mov    $0x30,%esi
               :   1c7dd:	mov    $0x200,%edi
               :   1c7e2:	callq  f3e0 <calloc@plt>
               :   1c7e7:	mov    %rax,0x28(%r12)
               :   1c7ec:	jmp    1c776 <rte_intr_instance_alloc+0x66>
               :   1c7ee:	mov    %r13d,%ecx
               :   1c7f1:	lea    0x29458(%rip),%rdx        # 45c50 <__func__.11809+0x50>
               :   1c7f8:	xor    %esi,%esi
               :   1c7fa:	mov    $0x8,%edi
               :   1c7ff:	xor    %eax,%eax
               :   1c801:	callq  e810 <rte_log@plt>
     1 3.0e-05 :   1c806:	data16 lea 0x4564a(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1c80e:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1c816:	xor    %r12d,%r12d
               :   1c819:	movl   $0x16,(%rax)
               :   1c81f:	jmpq   1c78f <rte_intr_instance_alloc+0x7f>
               :   1c824:	lea    0x2949d(%rip),%rdx        # 45cc8 <__func__.11809+0xc8>
               :   1c82b:	xor    %esi,%esi
               :   1c82d:	mov    $0x4,%edi
               :   1c832:	callq  e810 <rte_log@plt>
               :   1c837:	data16 lea 0x45619(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1c83f:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1c847:	movl   $0xc,(%rax)
               :   1c84d:	mov    0x20(%r12),%rdi
               :   1c852:	test   %r13d,%r13d
               :   1c855:	je     1c8cc <rte_intr_instance_alloc+0x1bc>
               :   1c857:	callq  f5e0 <rte_free@plt>
               :   1c85c:	mov    %r12,%rdi
               :   1c85f:	callq  f5e0 <rte_free@plt>
               :   1c864:	xor    %r12d,%r12d
               :   1c867:	jmpq   1c78f <rte_intr_instance_alloc+0x7f>
               :   1c86c:	lea    0x2942d(%rip),%rdx        # 45ca0 <__func__.11809+0xa0>
               :   1c873:	xor    %esi,%esi
               :   1c875:	mov    $0x4,%edi
               :   1c87a:	xor    %eax,%eax
               :   1c87c:	callq  e810 <rte_log@plt>
               :   1c881:	data16 lea 0x455cf(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1c889:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1c891:	movl   $0xc,(%rax)
               :   1c897:	jmp    1c84d <rte_intr_instance_alloc+0x13d>
               :   1c899:	lea    0x293d8(%rip),%rdx        # 45c78 <__func__.11809+0x78>
               :   1c8a0:	xor    %esi,%esi
               :   1c8a2:	mov    $0x4,%edi
               :   1c8a7:	xor    %eax,%eax
               :   1c8a9:	callq  e810 <rte_log@plt>
               :   1c8ae:	data16 lea 0x455a2(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1c8b6:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1c8be:	xor    %r12d,%r12d
               :   1c8c1:	movl   $0xc,(%rax)
               :   1c8c7:	jmpq   1c78f <rte_intr_instance_alloc+0x7f>
               :   1c8cc:	callq  e8c0 <free@plt>
               :   1c8d1:	mov    %r12,%rdi
               :   1c8d4:	callq  e8c0 <free@plt>
               :   1c8d9:	xor    %r12d,%r12d
               :   1c8dc:	jmpq   1c78f <rte_intr_instance_alloc+0x7f>
               :   1c8e1:	data16 nopw %cs:0x0(%rax,%rax,1)
               :   1c8ec:	nopl   0x0(%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000001ca70 <rte_intr_instance_dup>: /* rte_intr_instance_dup total:      1 3.0e-05 */
               :   1ca70:	endbr64 
               :   1ca74:	push   %r12
               :   1ca76:	push   %rbx
               :   1ca77:	sub    $0x8,%rsp
               :   1ca7b:	test   %rdi,%rdi
               :   1ca7e:	je     1caf1 <rte_intr_instance_dup+0x81>
               :   1ca80:	mov    %rdi,%rbx
               :   1ca83:	mov    0x8(%rdi),%edi
               :   1ca86:	callq  f000 <rte_intr_instance_alloc@plt>
               :   1ca8b:	mov    %rax,%r12
               :   1ca8e:	test   %rax,%rax
               :   1ca91:	je     1cae6 <rte_intr_instance_dup+0x76>
               :   1ca93:	mov    0x4(%rbx),%eax
               :   1ca96:	mov    0x20(%r12),%rdi
               :   1ca9b:	mov    %eax,0x4(%r12)
               :   1caa0:	mov    (%rbx),%eax
               :   1caa2:	mov    %eax,(%r12)
               :   1caa6:	mov    0xc(%rbx),%eax
               :   1caa9:	mov    %eax,0xc(%r12)
               :   1caae:	mov    0x10(%rbx),%eax
               :   1cab1:	mov    %eax,0x10(%r12)
               :   1cab6:	mov    0x14(%rbx),%eax
               :   1cab9:	mov    %eax,0x14(%r12)
               :   1cabe:	movzbl 0x18(%rbx),%eax
               :   1cac2:	mov    %al,0x18(%r12)
               :   1cac7:	movzwl 0x1a(%rbx),%edx
               :   1cacb:	mov    0x20(%rbx),%rsi
               :   1cacf:	callq  f540 <memcpy@plt>
               :   1cad4:	mov    0x28(%r12),%rdi
               :   1cad9:	movzwl 0x1a(%rbx),%edx
               :   1cadd:	mov    0x28(%rbx),%rsi
               :   1cae1:	callq  f540 <memcpy@plt>
               :   1cae6:	add    $0x8,%rsp
               :   1caea:	pop    %rbx
               :   1caeb:	mov    %r12,%rax
     1 3.0e-05 :   1caee:	pop    %r12
               :   1caf0:	retq   
               :   1caf1:	lea    0x29220(%rip),%rdx        # 45d18 <__func__.11809+0x118>
               :   1caf8:	xor    %esi,%esi
               :   1cafa:	mov    $0x8,%edi
               :   1caff:	xor    %eax,%eax
               :   1cb01:	callq  e810 <rte_log@plt>
               :   1cb06:	data16 lea 0x4534a(%rip),%rdi        # 61e58 <per_lcore__rte_errno@@DPDK_23+0x61d48>
               :   1cb0e:	data16 data16 callq f360 <__tls_get_addr@plt>
               :   1cb16:	xor    %r12d,%r12d
               :   1cb19:	movl   $0x16,(%rax)
               :   1cb1f:	jmp    1cae6 <rte_intr_instance_dup+0x76>
               :   1cb21:	data16 nopw %cs:0x0(%rax,%rax,1)
               :   1cb2c:	nopl   0x0(%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000001dfc0 <rte_lcore_callback_unregister>: /* rte_lcore_callback_unregister total:      1 3.0e-05 */
               :   1dfc0:	endbr64 
               :   1dfc4:	push   %r12
               :   1dfc6:	push   %rbp
               :   1dfc7:	mov    %rdi,%rbp
               :   1dfca:	push   %rbx
               :   1dfcb:	callq  181e0 <rte_eal_get_configuration>
               :   1dfd0:	test   %rbp,%rbp
               :   1dfd3:	jne    1dfda <rte_lcore_callback_unregister+0x1a>
               :   1dfd5:	pop    %rbx
               :   1dfd6:	pop    %rbp
               :   1dfd7:	pop    %r12
               :   1dfd9:	retq   
               :   1dfda:	mov    %rax,%r12
               :   1dfdd:	mov    $0x2,%edx
               :   1dfe2:	mov    0x4fafc(%rip),%eax        # 6dae4 <lcore_lock>
               :   1dfe8:	cmp    $0x1,%eax
               :   1dfeb:	jg     1e02b <rte_lcore_callback_unregister+0x6b>
               :   1dfed:	lock cmpxchg %edx,0x4faef(%rip)        # 6dae4 <lcore_lock>
               :   1dff5:	jne    1e02b <rte_lcore_callback_unregister+0x6b>
               :   1dff7:	xor    %ebx,%ebx
               :   1dff9:	cmpq   $0x0,0x20(%rbp)
               :   1dffe:	jne    1e014 <rte_lcore_callback_unregister+0x54>
               :   1e000:	jmpq   10839 <rte_lcore_callback_unregister.cold>
               :   1e005:	nopl   (%rax)
               :   1e008:	inc    %rbx
               :   1e00b:	cmp    $0x80,%rbx
               :   1e012:	je     1e049 <rte_lcore_callback_unregister+0x89>
               :   1e014:	cmpl   $0x1,0x90(%r12,%rbx,4)
               :   1e01d:	je     1e008 <rte_lcore_callback_unregister+0x48>
               :   1e01f:	cmpq   $0x0,0x20(%rbp)
               :   1e024:	je     1e008 <rte_lcore_callback_unregister+0x48>
               :   1e026:	jmpq   1088b <rte_lcore_callback_unregister.cold+0x52>
               :   1e02b:	test   $0x1,%al
               :   1e02d:	jne    1e033 <rte_lcore_callback_unregister+0x73>
               :   1e02f:	jmp    1e03f <rte_lcore_callback_unregister+0x7f>
               :   1e031:	pause  
               :   1e033:	mov    0x4faab(%rip),%eax        # 6dae4 <lcore_lock>
               :   1e039:	dec    %eax
               :   1e03b:	jg     1e031 <rte_lcore_callback_unregister+0x71>
               :   1e03d:	jmp    1dfe2 <rte_lcore_callback_unregister+0x22>
     1 3.0e-05 :   1e03f:	lock orl $0x1,0x4fa9d(%rip)        # 6dae4 <lcore_lock>
               :   1e047:	jmp    1e033 <rte_lcore_callback_unregister+0x73>
               :   1e049:	jmpq   10839 <rte_lcore_callback_unregister.cold>
               :   1e04e:	xchg   %ax,%ax
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_eal.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
000000000001137a <verify_perms.cold>: /* verify_perms.cold total:      1 3.0e-05 */
               :   1137a:	mov    %r12,%rcx
     1 3.0e-05 :   1137d:	lea    0x35dc4(%rip),%rdx        # 47148 <__func__.11463+0x468>
               :   11384:	xor    %esi,%esi
               :   11386:	mov    $0x4,%edi
               :   1138b:	xor    %eax,%eax
               :   1138d:	callq  e810 <rte_log@plt>
               :   11392:	or     $0xffffffff,%eax
               :   11395:	jmpq   21fdc <verify_perms+0x5c>
/* 
 * Command line: opannotate --assembly ./build/run 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 3200 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_mempool.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000003e10 <__do_global_dtors_aux>: /* __do_global_dtors_aux total:      2 5.9e-05 */
               :    3e10:	endbr64 
               :    3e14:	cmpb   $0x0,0x8565(%rip)        # c380 <completed.8061>
               :    3e1b:	jne    3e48 <__do_global_dtors_aux+0x38>
               :    3e1d:	push   %rbp
               :    3e1e:	cmpq   $0x0,0x813a(%rip)        # bf60 <__cxa_finalize@GLIBC_2.2.5>
               :    3e26:	mov    %rsp,%rbp
               :    3e29:	je     3e37 <__do_global_dtors_aux+0x27>
     1 3.0e-05 :    3e2b:	mov    0x840e(%rip),%rdi        # c240 <__dso_handle>
               :    3e32:	callq  3480 <__cxa_finalize@plt>
               :    3e37:	callq  3da0 <deregister_tm_clones>
               :    3e3c:	movb   $0x1,0x853d(%rip)        # c380 <completed.8061>
               :    3e43:	pop    %rbp
               :    3e44:	retq   
               :    3e45:	nopl   (%rax)
     1 3.0e-05 :    3e48:	retq   
               :    3e49:	nopl   0x0(%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_mempool.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000003e60 <mempool_add_elem>: /* mempool_add_elem total:      2 5.9e-05 */
               :    3e60:	endbr64 
               :    3e64:	mov    %rdi,-0x10(%rdx)
               :    3e68:	mov    %rcx,-0x8(%rdx)
               :    3e6c:	movq   $0x0,-0x18(%rdx)
     1 3.0e-05 :    3e74:	lea    -0x18(%rdx),%rax
               :    3e78:	mov    0x78(%rdi),%rdx
               :    3e7c:	mov    %rax,(%rdx)
               :    3e7f:	incl   0x68(%rdi)
               :    3e82:	mov    %rax,0x78(%rdi)
               :    3e86:	retq   
               :    3e87:	nopw   0x0(%rax,%rax,1)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_mempool.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000003e50 <frame_dummy>: /* frame_dummy total:      1 3.0e-05 */
               :    3e50:	endbr64 
     1 3.0e-05 :    3e54:	jmpq   3dd0 <register_tm_clones>
               :    3e59:	nopl   0x0(%rax)
               :
               :/usr/local/lib/x86_64-linux-gnu/librte_mempool.so.23.0:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000003ea0 <mempool_info_cb>: /* mempool_info_cb total:      1 3.0e-05 */
               :    3ea0:	endbr64 
               :    3ea4:	push   %rbp
     1 3.0e-05 :    3ea5:	mov    $0x20,%edx
               :    3eaa:	mov    %rdi,%rbp
               :    3ead:	push   %rbx
               :    3eae:	mov    %rsi,%rbx
               :    3eb1:	sub    $0x8,%rsp
               :    3eb5:	mov    (%rsi),%rsi
               :    3eb8:	callq  35b0 <strncmp@plt>
               :    3ebd:	test   %eax,%eax
               :    3ebf:	je     3ed0 <mempool_info_cb+0x30>
               :    3ec1:	add    $0x8,%rsp
               :    3ec5:	pop    %rbx
               :    3ec6:	pop    %rbp
               :    3ec7:	retq   
               :    3ec8:	nopl   0x0(%rax,%rax,1)
               :    3ed0:	mov    0x8(%rbx),%rdi
               :    3ed4:	mov    %rbp,%rdx
               :    3ed7:	lea    0x417b(%rip),%rsi        # 8059 <_fini+0x3a5>
               :    3ede:	callq  36f0 <rte_tel_data_add_dict_string@plt>
               :    3ee3:	mov    0x20(%rbp),%rdx
               :    3ee7:	mov    0x8(%rbx),%rdi
               :    3eeb:	lea    0x410e(%rip),%rsi        # 8000 <_fini+0x34c>
               :    3ef2:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3ef7:	mov    0x38(%rbp),%edx
               :    3efa:	mov    0x8(%rbx),%rdi
               :    3efe:	lea    0x417f(%rip),%rsi        # 8084 <_fini+0x3d0>
               :    3f05:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3f0a:	mov    0x3c(%rbp),%edx
               :    3f0d:	mov    0x8(%rbx),%rdi
               :    3f11:	lea    0x415f(%rip),%rsi        # 8077 <_fini+0x3c3>
               :    3f18:	callq  34e0 <rte_tel_data_add_dict_int@plt>
               :    3f1d:	mov    0x40(%rbp),%edx
               :    3f20:	mov    0x8(%rbx),%rdi
               :    3f24:	lea    0x4117(%rip),%rsi        # 8042 <_fini+0x38e>
               :    3f2b:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3f30:	mov    0x44(%rbp),%edx
               :    3f33:	mov    0x8(%rbx),%rdi
               :    3f37:	lea    0x40ca(%rip),%rsi        # 8008 <_fini+0x354>
               :    3f3e:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3f43:	mov    0x48(%rbp),%edx
               :    3f46:	mov    0x8(%rbx),%rdi
               :    3f4a:	lea    0x40c2(%rip),%rsi        # 8013 <_fini+0x35f>
               :    3f51:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3f56:	mov    0x4c(%rbp),%edx
               :    3f59:	mov    0x8(%rbx),%rdi
               :    3f5d:	lea    0x40b8(%rip),%rsi        # 801c <_fini+0x368>
               :    3f64:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3f69:	mov    0x50(%rbp),%edx
               :    3f6c:	mov    0x8(%rbx),%rdi
               :    3f70:	lea    0x40b1(%rip),%rsi        # 8028 <_fini+0x374>
               :    3f77:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3f7c:	mov    0x54(%rbp),%edx
               :    3f7f:	mov    0x8(%rbx),%rdi
               :    3f83:	lea    0x40ab(%rip),%rsi        # 8035 <_fini+0x381>
               :    3f8a:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3f8f:	mov    0x58(%rbp),%edx
               :    3f92:	mov    0x8(%rbx),%rdi
               :    3f96:	lea    0x46ed(%rip),%rsi        # 868a <__func__.37323+0xaa>
               :    3f9d:	callq  34e0 <rte_tel_data_add_dict_int@plt>
               :    3fa2:	mov    0x68(%rbp),%edx
               :    3fa5:	mov    0x8(%rbx),%rdi
               :    3fa9:	lea    0x4097(%rip),%rsi        # 8047 <_fini+0x393>
               :    3fb0:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3fb5:	mov    0x30(%rbp),%rbp
               :    3fb9:	mov    0x8(%rbx),%rdi
               :    3fbd:	mov    %rbp,%rdx
               :    3fc0:	lea    0x408f(%rip),%rsi        # 8056 <_fini+0x3a2>
               :    3fc7:	callq  36f0 <rte_tel_data_add_dict_string@plt>
               :    3fcc:	mov    0x30(%rbp),%rdx
               :    3fd0:	mov    0x8(%rbx),%rdi
               :    3fd4:	lea    0x4083(%rip),%rsi        # 805e <_fini+0x3aa>
               :    3fdb:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3fe0:	mov    0x38(%rbp),%rdx
               :    3fe4:	mov    0x8(%rbx),%rdi
               :    3fe8:	lea    0x4076(%rip),%rsi        # 8065 <_fini+0x3b1>
               :    3fef:	callq  35d0 <rte_tel_data_add_dict_u64@plt>
               :    3ff4:	mov    0x40(%rbp),%edx
               :    3ff7:	mov    0x8(%rbx),%rdi
               :    3ffb:	lea    0x4072(%rip),%rsi        # 8074 <_fini+0x3c0>
               :    4002:	callq  34e0 <rte_tel_data_add_dict_int@plt>
               :    4007:	mov    0x44(%rbp),%edx
               :    400a:	mov    0x8(%rbx),%rdi
               :    400e:	add    $0x8,%rsp
               :    4012:	pop    %rbx
               :    4013:	lea    0x4067(%rip),%rsi        # 8081 <_fini+0x3cd>
               :    401a:	pop    %rbp
               :    401b:	jmpq   35d0 <rte_tel_data_add_dict_u64@plt>
